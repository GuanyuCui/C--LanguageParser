
This is an LR(1) grammar.
Begin parsing...

State stack: 0 
Symbol stack: (EOF) 
Now token: KEYWORD ( int )
Use rule: Shift 17

State stack: 0 17 
Symbol stack: (EOF) int 
Now token: IDENTIFIER ( I )
Use rule: Reduce <type-spec> -> int 
Use rule: Goto 11

State stack: 0 11 
Symbol stack: (EOF) <type-spec> 
Now token: IDENTIFIER ( I )
Use rule: Reduce <decl-spec> -> <type-spec> 
Use rule: Goto 1

State stack: 0 1 
Symbol stack: (EOF) <decl-spec> 
Now token: IDENTIFIER ( I )
Use rule: Shift 32

State stack: 0 1 32 
Symbol stack: (EOF) <decl-spec> IDENTIFIER 
Now token: OP_ASN ( = )
Use rule: Reduce <direct-declarator> -> IDENTIFIER 
Use rule: Goto 26

State stack: 0 1 26 
Symbol stack: (EOF) <decl-spec> <direct-declarator> 
Now token: OP_ASN ( = )
Use rule: Reduce <declarator> -> <direct-declarator> 
Use rule: Goto 25

State stack: 0 1 25 
Symbol stack: (EOF) <decl-spec> <declarator> 
Now token: OP_ASN ( = )
Use rule: Shift 47

State stack: 0 1 25 47 
Symbol stack: (EOF) <decl-spec> <declarator> OP_ASN 
Now token: INT_CONST ( 3 )
Use rule: Shift 134

State stack: 0 1 25 47 134 
Symbol stack: (EOF) <decl-spec> <declarator> OP_ASN INT_CONST 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <num-const> -> INT_CONST 
Use rule: Goto 118

State stack: 0 1 25 47 118 
Symbol stack: (EOF) <decl-spec> <declarator> OP_ASN <num-const> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <constant> -> <num-const> 
Use rule: Goto 104

State stack: 0 1 25 47 104 
Symbol stack: (EOF) <decl-spec> <declarator> OP_ASN <constant> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <prim-expr> -> <constant> 
Use rule: Goto 120

State stack: 0 1 25 47 120 
Symbol stack: (EOF) <decl-spec> <declarator> OP_ASN <prim-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 119

State stack: 0 1 25 47 119 
Symbol stack: (EOF) <decl-spec> <declarator> OP_ASN <postfix-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 125

State stack: 0 1 25 47 125 
Symbol stack: (EOF) <decl-spec> <declarator> OP_ASN <unary-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 101

State stack: 0 1 25 47 101 
Symbol stack: (EOF) <decl-spec> <declarator> OP_ASN <cast-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 117

State stack: 0 1 25 47 117 
Symbol stack: (EOF) <decl-spec> <declarator> OP_ASN <multiplicative-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 96

State stack: 0 1 25 47 96 
Symbol stack: (EOF) <decl-spec> <declarator> OP_ASN <additive-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 123

State stack: 0 1 25 47 123 
Symbol stack: (EOF) <decl-spec> <declarator> OP_ASN <shift-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 121

State stack: 0 1 25 47 121 
Symbol stack: (EOF) <decl-spec> <declarator> OP_ASN <rel-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 107

State stack: 0 1 25 47 107 
Symbol stack: (EOF) <decl-spec> <declarator> OP_ASN <eq-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 97

State stack: 0 1 25 47 97 
Symbol stack: (EOF) <decl-spec> <declarator> OP_ASN <and-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 108

State stack: 0 1 25 47 108 
Symbol stack: (EOF) <decl-spec> <declarator> OP_ASN <exc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 111

State stack: 0 1 25 47 111 
Symbol stack: (EOF) <decl-spec> <declarator> OP_ASN <inc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 115

State stack: 0 1 25 47 115 
Symbol stack: (EOF) <decl-spec> <declarator> OP_ASN <land-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 116

State stack: 0 1 25 47 116 
Symbol stack: (EOF) <decl-spec> <declarator> OP_ASN <lor-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 103

State stack: 0 1 25 47 103 
Symbol stack: (EOF) <decl-spec> <declarator> OP_ASN <cond-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 156

State stack: 0 1 25 47 156 
Symbol stack: (EOF) <decl-spec> <declarator> OP_ASN <asn-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <initializer> -> <asn-expr> 
Use rule: Goto 157

State stack: 0 1 25 47 157 
Symbol stack: (EOF) <decl-spec> <declarator> OP_ASN <initializer> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <init-declarator> -> <declarator> OP_ASN <initializer> 
Use rule: Goto 28

State stack: 0 1 28 
Symbol stack: (EOF) <decl-spec> <init-declarator> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <init-declarator-list> -> <init-declarator> 
Use rule: Goto 27

State stack: 0 1 27 
Symbol stack: (EOF) <decl-spec> <init-declarator-list> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Shift 51

State stack: 0 1 27 51 
Symbol stack: (EOF) <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
Now token: KEYWORD ( typedef )
Use rule: Reduce <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
Use rule: Goto 2

State stack: 0 2 
Symbol stack: (EOF) <decl> 
Now token: KEYWORD ( typedef )
Use rule: Reduce <ext-decl> -> <decl> 
Use rule: Goto 4

State stack: 0 4 
Symbol stack: (EOF) <ext-decl> 
Now token: KEYWORD ( typedef )
Use rule: Reduce <trans-unit> -> <ext-decl> 
Use rule: Goto 9

State stack: 0 9 
Symbol stack: (EOF) <trans-unit> 
Now token: KEYWORD ( typedef )
Use rule: Shift 22

State stack: 0 9 22 
Symbol stack: (EOF) <trans-unit> typedef 
Now token: KEYWORD ( struct )
Use rule: Reduce <storage-class-spec> -> typedef 
Use rule: Goto 6

State stack: 0 9 6 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> 
Now token: KEYWORD ( struct )
Use rule: Shift 21

State stack: 0 9 6 21 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> struct 
Now token: IDENTIFIER ( _Pair )
Use rule: Reduce <struct-union> -> struct 
Use rule: Goto 8

State stack: 0 9 6 8 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <struct-union> 
Now token: IDENTIFIER ( _Pair )
Use rule: Shift 36

State stack: 0 9 6 8 36 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <struct-union> IDENTIFIER 
Now token: DELIM_LCURBRACE ( { )
Use rule: Shift 81

State stack: 0 9 6 8 36 81 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <struct-union> IDENTIFIER DELIM_LCURBRACE 
Now token: KEYWORD ( int )
Use rule: Shift 75

State stack: 0 9 6 8 36 81 75 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <struct-union> IDENTIFIER DELIM_LCURBRACE int 
Now token: IDENTIFIER ( x )
Use rule: Reduce <type-spec> -> int 
Use rule: Goto 69

State stack: 0 9 6 8 36 81 69 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <struct-union> IDENTIFIER DELIM_LCURBRACE <type-spec> 
Now token: IDENTIFIER ( x )
Use rule: Reduce <spec-qual-list> -> <type-spec> 
Use rule: Goto 63

State stack: 0 9 6 8 36 81 63 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <struct-union> IDENTIFIER DELIM_LCURBRACE <spec-qual-list> 
Now token: IDENTIFIER ( x )
Use rule: Shift 232

State stack: 0 9 6 8 36 81 63 232 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <struct-union> IDENTIFIER DELIM_LCURBRACE <spec-qual-list> IDENTIFIER 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <direct-declarator> -> IDENTIFIER 
Use rule: Goto 226

State stack: 0 9 6 8 36 81 63 226 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <struct-union> IDENTIFIER DELIM_LCURBRACE <spec-qual-list> <direct-declarator> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <declarator> -> <direct-declarator> 
Use rule: Goto 225

State stack: 0 9 6 8 36 81 63 225 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <struct-union> IDENTIFIER DELIM_LCURBRACE <spec-qual-list> <declarator> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <struct-declarator> -> <declarator> 
Use rule: Goto 229

State stack: 0 9 6 8 36 81 63 229 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <struct-union> IDENTIFIER DELIM_LCURBRACE <spec-qual-list> <struct-declarator> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <struct-declarator-list> -> <struct-declarator> 
Use rule: Goto 228

State stack: 0 9 6 8 36 81 63 228 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <struct-union> IDENTIFIER DELIM_LCURBRACE <spec-qual-list> <struct-declarator-list> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Shift 519

State stack: 0 9 6 8 36 81 63 228 519 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <struct-union> IDENTIFIER DELIM_LCURBRACE <spec-qual-list> <struct-declarator-list> DELIM_SEMICOLON 
Now token: KEYWORD ( int )
Use rule: Reduce <struct-decl> -> <spec-qual-list> <struct-declarator-list> DELIM_SEMICOLON 
Use rule: Goto 65

State stack: 0 9 6 8 36 81 65 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl> 
Now token: KEYWORD ( int )
Use rule: Reduce <struct-decl-list> -> <struct-decl> 
Use rule: Goto 241

State stack: 0 9 6 8 36 81 241 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> 
Now token: KEYWORD ( int )
Use rule: Shift 75

State stack: 0 9 6 8 36 81 241 75 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> int 
Now token: IDENTIFIER ( y )
Use rule: Reduce <type-spec> -> int 
Use rule: Goto 69

State stack: 0 9 6 8 36 81 241 69 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> <type-spec> 
Now token: IDENTIFIER ( y )
Use rule: Reduce <spec-qual-list> -> <type-spec> 
Use rule: Goto 63

State stack: 0 9 6 8 36 81 241 63 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> <spec-qual-list> 
Now token: IDENTIFIER ( y )
Use rule: Shift 232

State stack: 0 9 6 8 36 81 241 63 232 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> <spec-qual-list> IDENTIFIER 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <direct-declarator> -> IDENTIFIER 
Use rule: Goto 226

State stack: 0 9 6 8 36 81 241 63 226 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> <spec-qual-list> <direct-declarator> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <declarator> -> <direct-declarator> 
Use rule: Goto 225

State stack: 0 9 6 8 36 81 241 63 225 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> <spec-qual-list> <declarator> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <struct-declarator> -> <declarator> 
Use rule: Goto 229

State stack: 0 9 6 8 36 81 241 63 229 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> <spec-qual-list> <struct-declarator> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <struct-declarator-list> -> <struct-declarator> 
Use rule: Goto 228

State stack: 0 9 6 8 36 81 241 63 228 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> <spec-qual-list> <struct-declarator-list> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Shift 519

State stack: 0 9 6 8 36 81 241 63 228 519 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> <spec-qual-list> <struct-declarator-list> DELIM_SEMICOLON 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <struct-decl> -> <spec-qual-list> <struct-declarator-list> DELIM_SEMICOLON 
Use rule: Goto 233

State stack: 0 9 6 8 36 81 241 233 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> <struct-decl> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <struct-decl-list> -> <struct-decl-list> <struct-decl> 
Use rule: Goto 241

State stack: 0 9 6 8 36 81 241 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Shift 525

State stack: 0 9 6 8 36 81 241 525 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
Now token: IDENTIFIER ( Pair )
Use rule: Reduce <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
Use rule: Goto 7

State stack: 0 9 6 7 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <struct-union-spec> 
Now token: IDENTIFIER ( Pair )
Use rule: Reduce <type-spec> -> <struct-union-spec> 
Use rule: Goto 11

State stack: 0 9 6 11 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <type-spec> 
Now token: IDENTIFIER ( Pair )
Use rule: Reduce <decl-spec> -> <type-spec> 
Use rule: Goto 34

State stack: 0 9 6 34 
Symbol stack: (EOF) <trans-unit> <storage-class-spec> <decl-spec> 
Now token: IDENTIFIER ( Pair )
Use rule: Reduce <decl-spec> -> <storage-class-spec> <decl-spec> 
Use rule: Goto 1

State stack: 0 9 1 
Symbol stack: (EOF) <trans-unit> <decl-spec> 
Now token: IDENTIFIER ( Pair )
Use rule: Shift 32

State stack: 0 9 1 32 
Symbol stack: (EOF) <trans-unit> <decl-spec> IDENTIFIER 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <direct-declarator> -> IDENTIFIER 
Use rule: Goto 26

State stack: 0 9 1 26 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <declarator> -> <direct-declarator> 
Use rule: Goto 25

State stack: 0 9 1 25 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <init-declarator> -> <declarator> 
Use rule: Goto 28

State stack: 0 9 1 28 
Symbol stack: (EOF) <trans-unit> <decl-spec> <init-declarator> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <init-declarator-list> -> <init-declarator> 
Use rule: Goto 27

State stack: 0 9 1 27 
Symbol stack: (EOF) <trans-unit> <decl-spec> <init-declarator-list> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Shift 51

State stack: 0 9 1 27 51 
Symbol stack: (EOF) <trans-unit> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
Now token: KEYWORD ( enum )
Use rule: Reduce <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
Use rule: Goto 2

State stack: 0 9 2 
Symbol stack: (EOF) <trans-unit> <decl> 
Now token: KEYWORD ( enum )
Use rule: Reduce <ext-decl> -> <decl> 
Use rule: Goto 37

State stack: 0 9 37 
Symbol stack: (EOF) <trans-unit> <ext-decl> 
Now token: KEYWORD ( enum )
Use rule: Reduce <trans-unit> -> <trans-unit> <ext-decl> 
Use rule: Goto 9

State stack: 0 9 
Symbol stack: (EOF) <trans-unit> 
Now token: KEYWORD ( enum )
Use rule: Shift 15

State stack: 0 9 15 
Symbol stack: (EOF) <trans-unit> enum 
Now token: IDENTIFIER ( Gender )
Use rule: Shift 41

State stack: 0 9 15 41 
Symbol stack: (EOF) <trans-unit> enum IDENTIFIER 
Now token: DELIM_LCURBRACE ( { )
Use rule: Shift 86

State stack: 0 9 15 41 86 
Symbol stack: (EOF) <trans-unit> enum IDENTIFIER DELIM_LCURBRACE 
Now token: IDENTIFIER ( MALE )
Use rule: Shift 85

State stack: 0 9 15 41 86 85 
Symbol stack: (EOF) <trans-unit> enum IDENTIFIER DELIM_LCURBRACE IDENTIFIER 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <enumeration-const> -> IDENTIFIER 
Use rule: Goto 82

State stack: 0 9 15 41 86 82 
Symbol stack: (EOF) <trans-unit> enum IDENTIFIER DELIM_LCURBRACE <enumeration-const> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <enumerator> -> <enumeration-const> 
Use rule: Goto 84

State stack: 0 9 15 41 86 84 
Symbol stack: (EOF) <trans-unit> enum IDENTIFIER DELIM_LCURBRACE <enumerator> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <enumerator-list> -> <enumerator> 
Use rule: Goto 245

State stack: 0 9 15 41 86 245 
Symbol stack: (EOF) <trans-unit> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> 
Now token: DELIM_COMMA ( , )
Use rule: Shift 545

State stack: 0 9 15 41 86 245 545 
Symbol stack: (EOF) <trans-unit> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA 
Now token: IDENTIFIER ( FEMALE )
Use rule: Shift 85

State stack: 0 9 15 41 86 245 545 85 
Symbol stack: (EOF) <trans-unit> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA IDENTIFIER 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <enumeration-const> -> IDENTIFIER 
Use rule: Goto 82

State stack: 0 9 15 41 86 245 545 82 
Symbol stack: (EOF) <trans-unit> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA <enumeration-const> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <enumerator> -> <enumeration-const> 
Use rule: Goto 543

State stack: 0 9 15 41 86 245 545 543 
Symbol stack: (EOF) <trans-unit> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA <enumerator> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <enumerator-list> -> <enumerator-list> DELIM_COMMA <enumerator> 
Use rule: Goto 245

State stack: 0 9 15 41 86 245 
Symbol stack: (EOF) <trans-unit> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Shift 546

State stack: 0 9 15 41 86 245 546 
Symbol stack: (EOF) <trans-unit> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
Use rule: Goto 3

State stack: 0 9 3 
Symbol stack: (EOF) <trans-unit> <enum-spec> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <type-spec> -> <enum-spec> 
Use rule: Goto 11

State stack: 0 9 11 
Symbol stack: (EOF) <trans-unit> <type-spec> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <decl-spec> -> <type-spec> 
Use rule: Goto 1

State stack: 0 9 1 
Symbol stack: (EOF) <trans-unit> <decl-spec> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Shift 31

State stack: 0 9 1 31 
Symbol stack: (EOF) <trans-unit> <decl-spec> DELIM_SEMICOLON 
Now token: KEYWORD ( int )
Use rule: Reduce <decl> -> <decl-spec> DELIM_SEMICOLON 
Use rule: Goto 2

State stack: 0 9 2 
Symbol stack: (EOF) <trans-unit> <decl> 
Now token: KEYWORD ( int )
Use rule: Reduce <ext-decl> -> <decl> 
Use rule: Goto 37

State stack: 0 9 37 
Symbol stack: (EOF) <trans-unit> <ext-decl> 
Now token: KEYWORD ( int )
Use rule: Reduce <trans-unit> -> <trans-unit> <ext-decl> 
Use rule: Goto 9

State stack: 0 9 
Symbol stack: (EOF) <trans-unit> 
Now token: KEYWORD ( int )
Use rule: Shift 17

State stack: 0 9 17 
Symbol stack: (EOF) <trans-unit> int 
Now token: IDENTIFIER ( f )
Use rule: Reduce <type-spec> -> int 
Use rule: Goto 11

State stack: 0 9 11 
Symbol stack: (EOF) <trans-unit> <type-spec> 
Now token: IDENTIFIER ( f )
Use rule: Reduce <decl-spec> -> <type-spec> 
Use rule: Goto 1

State stack: 0 9 1 
Symbol stack: (EOF) <trans-unit> <decl-spec> 
Now token: IDENTIFIER ( f )
Use rule: Shift 32

State stack: 0 9 1 32 
Symbol stack: (EOF) <trans-unit> <decl-spec> IDENTIFIER 
Now token: DELIM_LPAR ( ( )
Use rule: Reduce <direct-declarator> -> IDENTIFIER 
Use rule: Goto 26

State stack: 0 9 1 26 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> 
Now token: DELIM_LPAR ( ( )
Use rule: Shift 48

State stack: 0 9 1 26 48 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR 
Now token: KEYWORD ( const )
Use rule: Shift 174

State stack: 0 9 1 26 48 174 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR const 
Now token: KEYWORD ( int )
Use rule: Reduce <type-qual> -> const 
Use rule: Goto 169

State stack: 0 9 1 26 48 169 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <type-qual> 
Now token: KEYWORD ( int )
Use rule: Shift 178

State stack: 0 9 1 26 48 169 178 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <type-qual> int 
Now token: IDENTIFIER ( x )
Use rule: Reduce <type-spec> -> int 
Use rule: Goto 170

State stack: 0 9 1 26 48 169 170 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <type-qual> <type-spec> 
Now token: IDENTIFIER ( x )
Use rule: Reduce <decl-spec> -> <type-spec> 
Use rule: Goto 464

State stack: 0 9 1 26 48 169 464 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <type-qual> <decl-spec> 
Now token: IDENTIFIER ( x )
Use rule: Reduce <decl-spec> -> <type-qual> <decl-spec> 
Use rule: Goto 160

State stack: 0 9 1 26 48 160 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <decl-spec> 
Now token: IDENTIFIER ( x )
Use rule: Shift 455

State stack: 0 9 1 26 48 160 455 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <decl-spec> IDENTIFIER 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <direct-declarator> -> IDENTIFIER 
Use rule: Goto 451

State stack: 0 9 1 26 48 160 451 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <decl-spec> <direct-declarator> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <declarator> -> <direct-declarator> 
Use rule: Goto 449

State stack: 0 9 1 26 48 160 449 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <decl-spec> <declarator> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <param-decl> -> <decl-spec> <declarator> 
Use rule: Goto 163

State stack: 0 9 1 26 48 163 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-decl> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <param-list> -> <param-decl> 
Use rule: Goto 164

State stack: 0 9 1 26 48 164 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-list> 
Now token: DELIM_COMMA ( , )
Use rule: Shift 459

State stack: 0 9 1 26 48 164 459 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-list> DELIM_COMMA 
Now token: KEYWORD ( const )
Use rule: Shift 174

State stack: 0 9 1 26 48 164 459 174 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-list> DELIM_COMMA const 
Now token: KEYWORD ( char )
Use rule: Reduce <type-qual> -> const 
Use rule: Goto 169

State stack: 0 9 1 26 48 164 459 169 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-list> DELIM_COMMA <type-qual> 
Now token: KEYWORD ( char )
Use rule: Shift 173

State stack: 0 9 1 26 48 164 459 169 173 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-list> DELIM_COMMA <type-qual> char 
Now token: IDENTIFIER ( a )
Use rule: Reduce <type-spec> -> char 
Use rule: Goto 170

State stack: 0 9 1 26 48 164 459 169 170 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-list> DELIM_COMMA <type-qual> <type-spec> 
Now token: IDENTIFIER ( a )
Use rule: Reduce <decl-spec> -> <type-spec> 
Use rule: Goto 464

State stack: 0 9 1 26 48 164 459 169 464 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-list> DELIM_COMMA <type-qual> <decl-spec> 
Now token: IDENTIFIER ( a )
Use rule: Reduce <decl-spec> -> <type-qual> <decl-spec> 
Use rule: Goto 160

State stack: 0 9 1 26 48 164 459 160 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-list> DELIM_COMMA <decl-spec> 
Now token: IDENTIFIER ( a )
Use rule: Shift 455

State stack: 0 9 1 26 48 164 459 160 455 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-list> DELIM_COMMA <decl-spec> IDENTIFIER 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <direct-declarator> -> IDENTIFIER 
Use rule: Goto 451

State stack: 0 9 1 26 48 164 459 160 451 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-list> DELIM_COMMA <decl-spec> <direct-declarator> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <declarator> -> <direct-declarator> 
Use rule: Goto 449

State stack: 0 9 1 26 48 164 459 160 449 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-list> DELIM_COMMA <decl-spec> <declarator> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <param-decl> -> <decl-spec> <declarator> 
Use rule: Goto 847

State stack: 0 9 1 26 48 164 459 847 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-list> DELIM_COMMA <param-decl> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <param-list> -> <param-list> DELIM_COMMA <param-decl> 
Use rule: Goto 164

State stack: 0 9 1 26 48 164 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-list> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <param-type-list> -> <param-list> 
Use rule: Goto 165

State stack: 0 9 1 26 48 165 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-type-list> 
Now token: DELIM_RPAR ( ) )
Use rule: Shift 460

State stack: 0 9 1 26 48 165 460 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
Now token: DELIM_LCURBRACE ( { )
Use rule: Reduce <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
Use rule: Goto 26

State stack: 0 9 1 26 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> 
Now token: DELIM_LCURBRACE ( { )
Use rule: Reduce <declarator> -> <direct-declarator> 
Use rule: Goto 25

State stack: 0 9 1 25 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> 
Now token: DELIM_LCURBRACE ( { )
Use rule: Shift 46

State stack: 0 9 1 25 46 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE 
Now token: KEYWORD ( return )
Use rule: Shift 152

State stack: 0 9 1 25 46 152 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE return 
Now token: IDENTIFIER ( x )
Use rule: Shift 159

State stack: 0 9 1 25 46 152 159 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE return IDENTIFIER 
Now token: OP_ADD ( + )
Use rule: Reduce <prim-expr> -> IDENTIFIER 
Use rule: Goto 120

State stack: 0 9 1 25 46 152 120 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE return <prim-expr> 
Now token: OP_ADD ( + )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 119

State stack: 0 9 1 25 46 152 119 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE return <postfix-expr> 
Now token: OP_ADD ( + )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 125

State stack: 0 9 1 25 46 152 125 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE return <unary-expr> 
Now token: OP_ADD ( + )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 101

State stack: 0 9 1 25 46 152 101 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE return <cast-expr> 
Now token: OP_ADD ( + )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 117

State stack: 0 9 1 25 46 152 117 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE return <multiplicative-expr> 
Now token: OP_ADD ( + )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 96

State stack: 0 9 1 25 46 152 96 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE return <additive-expr> 
Now token: OP_ADD ( + )
Use rule: Shift 251

State stack: 0 9 1 25 46 152 96 251 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE return <additive-expr> OP_ADD 
Now token: IDENTIFIER ( a )
Use rule: Shift 564

State stack: 0 9 1 25 46 152 96 251 564 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE return <additive-expr> OP_ADD IDENTIFIER 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <prim-expr> -> IDENTIFIER 
Use rule: Goto 558

State stack: 0 9 1 25 46 152 96 251 558 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE return <additive-expr> OP_ADD <prim-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 557

State stack: 0 9 1 25 46 152 96 251 557 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE return <additive-expr> OP_ADD <postfix-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 559

State stack: 0 9 1 25 46 152 96 251 559 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE return <additive-expr> OP_ADD <unary-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 101

State stack: 0 9 1 25 46 152 96 251 101 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE return <additive-expr> OP_ADD <cast-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 555

State stack: 0 9 1 25 46 152 96 251 555 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE return <additive-expr> OP_ADD <multiplicative-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
Use rule: Goto 96

State stack: 0 9 1 25 46 152 96 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE return <additive-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 123

State stack: 0 9 1 25 46 152 123 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE return <shift-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 121

State stack: 0 9 1 25 46 152 121 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE return <rel-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 107

State stack: 0 9 1 25 46 152 107 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE return <eq-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 97

State stack: 0 9 1 25 46 152 97 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE return <and-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 108

State stack: 0 9 1 25 46 152 108 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE return <exc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 111

State stack: 0 9 1 25 46 152 111 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE return <inc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 115

State stack: 0 9 1 25 46 152 115 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE return <land-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 116

State stack: 0 9 1 25 46 152 116 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE return <lor-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 103

State stack: 0 9 1 25 46 152 103 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE return <cond-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 98

State stack: 0 9 1 25 46 152 98 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE return <asn-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <expr> -> <asn-expr> 
Use rule: Goto 406

State stack: 0 9 1 25 46 152 406 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE return <expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Shift 766

State stack: 0 9 1 25 46 152 406 766 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE return <expr> DELIM_SEMICOLON 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <jump-stmt> -> return <expr> DELIM_SEMICOLON 
Use rule: Goto 113

State stack: 0 9 1 25 46 113 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <jump-stmt> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <stmt> -> <jump-stmt> 
Use rule: Goto 124

State stack: 0 9 1 25 46 124 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <stmt> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <blk-item> -> <stmt> 
Use rule: Goto 100

State stack: 0 9 1 25 46 100 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <blk-item-list> -> <blk-item> 
Use rule: Goto 99

State stack: 0 9 1 25 46 99 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Shift 255

State stack: 0 9 1 25 46 99 255 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
Now token: KEYWORD ( int )
Use rule: Reduce <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
Use rule: Goto 42

State stack: 0 9 1 25 42 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> <comp-stmt> 
Now token: KEYWORD ( int )
Use rule: Reduce <func-def> -> <decl-spec> <declarator> <comp-stmt> 
Use rule: Goto 5

State stack: 0 9 5 
Symbol stack: (EOF) <trans-unit> <func-def> 
Now token: KEYWORD ( int )
Use rule: Reduce <ext-decl> -> <func-def> 
Use rule: Goto 37

State stack: 0 9 37 
Symbol stack: (EOF) <trans-unit> <ext-decl> 
Now token: KEYWORD ( int )
Use rule: Reduce <trans-unit> -> <trans-unit> <ext-decl> 
Use rule: Goto 9

State stack: 0 9 
Symbol stack: (EOF) <trans-unit> 
Now token: KEYWORD ( int )
Use rule: Shift 17

State stack: 0 9 17 
Symbol stack: (EOF) <trans-unit> int 
Now token: IDENTIFIER ( main )
Use rule: Reduce <type-spec> -> int 
Use rule: Goto 11

State stack: 0 9 11 
Symbol stack: (EOF) <trans-unit> <type-spec> 
Now token: IDENTIFIER ( main )
Use rule: Reduce <decl-spec> -> <type-spec> 
Use rule: Goto 1

State stack: 0 9 1 
Symbol stack: (EOF) <trans-unit> <decl-spec> 
Now token: IDENTIFIER ( main )
Use rule: Shift 32

State stack: 0 9 1 32 
Symbol stack: (EOF) <trans-unit> <decl-spec> IDENTIFIER 
Now token: DELIM_LPAR ( ( )
Use rule: Reduce <direct-declarator> -> IDENTIFIER 
Use rule: Goto 26

State stack: 0 9 1 26 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> 
Now token: DELIM_LPAR ( ( )
Use rule: Shift 48

State stack: 0 9 1 26 48 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR 
Now token: KEYWORD ( int )
Use rule: Shift 178

State stack: 0 9 1 26 48 178 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR int 
Now token: IDENTIFIER ( argc )
Use rule: Reduce <type-spec> -> int 
Use rule: Goto 170

State stack: 0 9 1 26 48 170 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <type-spec> 
Now token: IDENTIFIER ( argc )
Use rule: Reduce <decl-spec> -> <type-spec> 
Use rule: Goto 160

State stack: 0 9 1 26 48 160 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <decl-spec> 
Now token: IDENTIFIER ( argc )
Use rule: Shift 455

State stack: 0 9 1 26 48 160 455 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <decl-spec> IDENTIFIER 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <direct-declarator> -> IDENTIFIER 
Use rule: Goto 451

State stack: 0 9 1 26 48 160 451 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <decl-spec> <direct-declarator> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <declarator> -> <direct-declarator> 
Use rule: Goto 449

State stack: 0 9 1 26 48 160 449 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <decl-spec> <declarator> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <param-decl> -> <decl-spec> <declarator> 
Use rule: Goto 163

State stack: 0 9 1 26 48 163 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-decl> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <param-list> -> <param-decl> 
Use rule: Goto 164

State stack: 0 9 1 26 48 164 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-list> 
Now token: DELIM_COMMA ( , )
Use rule: Shift 459

State stack: 0 9 1 26 48 164 459 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-list> DELIM_COMMA 
Now token: KEYWORD ( char )
Use rule: Shift 173

State stack: 0 9 1 26 48 164 459 173 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-list> DELIM_COMMA char 
Now token: OP_MUL ( * )
Use rule: Reduce <type-spec> -> char 
Use rule: Goto 170

State stack: 0 9 1 26 48 164 459 170 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-list> DELIM_COMMA <type-spec> 
Now token: OP_MUL ( * )
Use rule: Reduce <decl-spec> -> <type-spec> 
Use rule: Goto 160

State stack: 0 9 1 26 48 164 459 160 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-list> DELIM_COMMA <decl-spec> 
Now token: OP_MUL ( * )
Use rule: Shift 456

State stack: 0 9 1 26 48 164 459 160 456 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-list> DELIM_COMMA <decl-spec> OP_MUL 
Now token: IDENTIFIER ( argv )
Use rule: Reduce <pointer> -> OP_MUL 
Use rule: Goto 452

State stack: 0 9 1 26 48 164 459 160 452 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-list> DELIM_COMMA <decl-spec> <pointer> 
Now token: IDENTIFIER ( argv )
Use rule: Shift 455

State stack: 0 9 1 26 48 164 459 160 452 455 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-list> DELIM_COMMA <decl-spec> <pointer> IDENTIFIER 
Now token: DELIM_LSQBRACKET ( [ )
Use rule: Reduce <direct-declarator> -> IDENTIFIER 
Use rule: Goto 833

State stack: 0 9 1 26 48 164 459 160 452 833 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-list> DELIM_COMMA <decl-spec> <pointer> <direct-declarator> 
Now token: DELIM_LSQBRACKET ( [ )
Use rule: Shift 831

State stack: 0 9 1 26 48 164 459 160 452 833 831 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-list> DELIM_COMMA <decl-spec> <pointer> <direct-declarator> DELIM_LSQBRACKET 
Now token: DELIM_RSQBRACKET ( ] )
Use rule: Shift 1183

State stack: 0 9 1 26 48 164 459 160 452 833 831 1183 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-list> DELIM_COMMA <decl-spec> <pointer> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
Use rule: Goto 833

State stack: 0 9 1 26 48 164 459 160 452 833 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-list> DELIM_COMMA <decl-spec> <pointer> <direct-declarator> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <declarator> -> <pointer> <direct-declarator> 
Use rule: Goto 449

State stack: 0 9 1 26 48 164 459 160 449 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-list> DELIM_COMMA <decl-spec> <declarator> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <param-decl> -> <decl-spec> <declarator> 
Use rule: Goto 847

State stack: 0 9 1 26 48 164 459 847 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-list> DELIM_COMMA <param-decl> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <param-list> -> <param-list> DELIM_COMMA <param-decl> 
Use rule: Goto 164

State stack: 0 9 1 26 48 164 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-list> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <param-type-list> -> <param-list> 
Use rule: Goto 165

State stack: 0 9 1 26 48 165 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-type-list> 
Now token: DELIM_RPAR ( ) )
Use rule: Shift 460

State stack: 0 9 1 26 48 165 460 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
Now token: DELIM_LCURBRACE ( { )
Use rule: Reduce <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
Use rule: Goto 26

State stack: 0 9 1 26 
Symbol stack: (EOF) <trans-unit> <decl-spec> <direct-declarator> 
Now token: DELIM_LCURBRACE ( { )
Use rule: Reduce <declarator> -> <direct-declarator> 
Use rule: Goto 25

State stack: 0 9 1 25 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> 
Now token: DELIM_LCURBRACE ( { )
Use rule: Shift 46

State stack: 0 9 1 25 46 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE 
Now token: KEYWORD ( float )
Use rule: Shift 16

State stack: 0 9 1 25 46 16 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE float 
Now token: IDENTIFIER ( b )
Use rule: Reduce <type-spec> -> float 
Use rule: Goto 11

State stack: 0 9 1 25 46 11 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <type-spec> 
Now token: IDENTIFIER ( b )
Use rule: Reduce <decl-spec> -> <type-spec> 
Use rule: Goto 105

State stack: 0 9 1 25 46 105 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl-spec> 
Now token: IDENTIFIER ( b )
Use rule: Shift 95

State stack: 0 9 1 25 46 105 95 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl-spec> IDENTIFIER 
Now token: OP_ASN ( = )
Use rule: Reduce <direct-declarator> -> IDENTIFIER 
Use rule: Goto 90

State stack: 0 9 1 25 46 105 90 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl-spec> <direct-declarator> 
Now token: OP_ASN ( = )
Use rule: Reduce <declarator> -> <direct-declarator> 
Use rule: Goto 89

State stack: 0 9 1 25 46 105 89 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl-spec> <declarator> 
Now token: OP_ASN ( = )
Use rule: Shift 47

State stack: 0 9 1 25 46 105 89 47 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl-spec> <declarator> OP_ASN 
Now token: FLOAT_CONST ( 3.5 )
Use rule: Shift 132

State stack: 0 9 1 25 46 105 89 47 132 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl-spec> <declarator> OP_ASN FLOAT_CONST 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <num-const> -> FLOAT_CONST 
Use rule: Goto 118

State stack: 0 9 1 25 46 105 89 47 118 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl-spec> <declarator> OP_ASN <num-const> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <constant> -> <num-const> 
Use rule: Goto 104

State stack: 0 9 1 25 46 105 89 47 104 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl-spec> <declarator> OP_ASN <constant> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <prim-expr> -> <constant> 
Use rule: Goto 120

State stack: 0 9 1 25 46 105 89 47 120 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl-spec> <declarator> OP_ASN <prim-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 119

State stack: 0 9 1 25 46 105 89 47 119 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl-spec> <declarator> OP_ASN <postfix-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 125

State stack: 0 9 1 25 46 105 89 47 125 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl-spec> <declarator> OP_ASN <unary-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 101

State stack: 0 9 1 25 46 105 89 47 101 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl-spec> <declarator> OP_ASN <cast-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 117

State stack: 0 9 1 25 46 105 89 47 117 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl-spec> <declarator> OP_ASN <multiplicative-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 96

State stack: 0 9 1 25 46 105 89 47 96 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl-spec> <declarator> OP_ASN <additive-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 123

State stack: 0 9 1 25 46 105 89 47 123 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl-spec> <declarator> OP_ASN <shift-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 121

State stack: 0 9 1 25 46 105 89 47 121 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl-spec> <declarator> OP_ASN <rel-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 107

State stack: 0 9 1 25 46 105 89 47 107 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl-spec> <declarator> OP_ASN <eq-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 97

State stack: 0 9 1 25 46 105 89 47 97 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl-spec> <declarator> OP_ASN <and-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 108

State stack: 0 9 1 25 46 105 89 47 108 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl-spec> <declarator> OP_ASN <exc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 111

State stack: 0 9 1 25 46 105 89 47 111 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl-spec> <declarator> OP_ASN <inc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 115

State stack: 0 9 1 25 46 105 89 47 115 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl-spec> <declarator> OP_ASN <land-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 116

State stack: 0 9 1 25 46 105 89 47 116 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl-spec> <declarator> OP_ASN <lor-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 103

State stack: 0 9 1 25 46 105 89 47 103 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl-spec> <declarator> OP_ASN <cond-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 156

State stack: 0 9 1 25 46 105 89 47 156 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl-spec> <declarator> OP_ASN <asn-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <initializer> -> <asn-expr> 
Use rule: Goto 157

State stack: 0 9 1 25 46 105 89 47 157 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl-spec> <declarator> OP_ASN <initializer> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <init-declarator> -> <declarator> OP_ASN <initializer> 
Use rule: Goto 28

State stack: 0 9 1 25 46 105 28 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl-spec> <init-declarator> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <init-declarator-list> -> <init-declarator> 
Use rule: Goto 256

State stack: 0 9 1 25 46 105 256 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl-spec> <init-declarator-list> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Shift 572

State stack: 0 9 1 25 46 105 256 572 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
Now token: KEYWORD ( char )
Use rule: Reduce <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
Use rule: Goto 106

State stack: 0 9 1 25 46 106 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <decl> 
Now token: KEYWORD ( char )
Use rule: Reduce <blk-item> -> <decl> 
Use rule: Goto 100

State stack: 0 9 1 25 46 100 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item> 
Now token: KEYWORD ( char )
Use rule: Reduce <blk-item-list> -> <blk-item> 
Use rule: Goto 99

State stack: 0 9 1 25 46 99 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> 
Now token: KEYWORD ( char )
Use rule: Shift 12

State stack: 0 9 1 25 46 99 12 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> char 
Now token: IDENTIFIER ( a )
Use rule: Reduce <type-spec> -> char 
Use rule: Goto 11

State stack: 0 9 1 25 46 99 11 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <type-spec> 
Now token: IDENTIFIER ( a )
Use rule: Reduce <decl-spec> -> <type-spec> 
Use rule: Goto 105

State stack: 0 9 1 25 46 99 105 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> 
Now token: IDENTIFIER ( a )
Use rule: Shift 95

State stack: 0 9 1 25 46 99 105 95 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> IDENTIFIER 
Now token: OP_ASN ( = )
Use rule: Reduce <direct-declarator> -> IDENTIFIER 
Use rule: Goto 90

State stack: 0 9 1 25 46 99 105 90 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <direct-declarator> 
Now token: OP_ASN ( = )
Use rule: Reduce <declarator> -> <direct-declarator> 
Use rule: Goto 89

State stack: 0 9 1 25 46 99 105 89 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> 
Now token: OP_ASN ( = )
Use rule: Shift 47

State stack: 0 9 1 25 46 99 105 89 47 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN 
Now token: CHAR_CONST ( 'a' )
Use rule: Shift 127

State stack: 0 9 1 25 46 99 105 89 47 127 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN CHAR_CONST 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <constant> -> CHAR_CONST 
Use rule: Goto 104

State stack: 0 9 1 25 46 99 105 89 47 104 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <constant> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <prim-expr> -> <constant> 
Use rule: Goto 120

State stack: 0 9 1 25 46 99 105 89 47 120 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <prim-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 119

State stack: 0 9 1 25 46 99 105 89 47 119 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 125

State stack: 0 9 1 25 46 99 105 89 47 125 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <unary-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 101

State stack: 0 9 1 25 46 99 105 89 47 101 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <cast-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 117

State stack: 0 9 1 25 46 99 105 89 47 117 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <multiplicative-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 96

State stack: 0 9 1 25 46 99 105 89 47 96 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <additive-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 123

State stack: 0 9 1 25 46 99 105 89 47 123 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <shift-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 121

State stack: 0 9 1 25 46 99 105 89 47 121 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <rel-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 107

State stack: 0 9 1 25 46 99 105 89 47 107 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <eq-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 97

State stack: 0 9 1 25 46 99 105 89 47 97 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <and-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 108

State stack: 0 9 1 25 46 99 105 89 47 108 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <exc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 111

State stack: 0 9 1 25 46 99 105 89 47 111 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <inc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 115

State stack: 0 9 1 25 46 99 105 89 47 115 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <land-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 116

State stack: 0 9 1 25 46 99 105 89 47 116 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <lor-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 103

State stack: 0 9 1 25 46 99 105 89 47 103 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <cond-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 156

State stack: 0 9 1 25 46 99 105 89 47 156 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <asn-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <initializer> -> <asn-expr> 
Use rule: Goto 157

State stack: 0 9 1 25 46 99 105 89 47 157 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <initializer> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <init-declarator> -> <declarator> OP_ASN <initializer> 
Use rule: Goto 28

State stack: 0 9 1 25 46 99 105 28 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <init-declarator> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <init-declarator-list> -> <init-declarator> 
Use rule: Goto 256

State stack: 0 9 1 25 46 99 105 256 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <init-declarator-list> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Shift 572

State stack: 0 9 1 25 46 99 105 256 572 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
Now token: IDENTIFIER ( a )
Use rule: Reduce <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
Use rule: Goto 106

State stack: 0 9 1 25 46 99 106 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl> 
Now token: IDENTIFIER ( a )
Use rule: Reduce <blk-item> -> <decl> 
Use rule: Goto 254

State stack: 0 9 1 25 46 99 254 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <blk-item> 
Now token: IDENTIFIER ( a )
Use rule: Reduce <blk-item-list> -> <blk-item-list> <blk-item> 
Use rule: Goto 99

State stack: 0 9 1 25 46 99 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> 
Now token: IDENTIFIER ( a )
Use rule: Shift 133

State stack: 0 9 1 25 46 99 133 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> IDENTIFIER 
Now token: OP_ADDASN ( += )
Use rule: Reduce <prim-expr> -> IDENTIFIER 
Use rule: Goto 120

State stack: 0 9 1 25 46 99 120 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <prim-expr> 
Now token: OP_ADDASN ( += )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 119

State stack: 0 9 1 25 46 99 119 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <postfix-expr> 
Now token: OP_ADDASN ( += )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 125

State stack: 0 9 1 25 46 99 125 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> 
Now token: OP_ADDASN ( += )
Use rule: Shift 283

State stack: 0 9 1 25 46 99 125 283 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> OP_ADDASN 
Now token: DELIM_LPAR ( ( )
Use rule: Reduce <asn-op> -> OP_ADDASN 
Use rule: Goto 282

State stack: 0 9 1 25 46 99 125 282 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> 
Now token: DELIM_LPAR ( ( )
Use rule: Shift 129

State stack: 0 9 1 25 46 99 125 282 129 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR 
Now token: INT_CONST ( 3 )
Use rule: Shift 330

State stack: 0 9 1 25 46 99 125 282 129 330 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR INT_CONST 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <num-const> -> INT_CONST 
Use rule: Goto 313

State stack: 0 9 1 25 46 99 125 282 129 313 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <num-const> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <constant> -> <num-const> 
Use rule: Goto 304

State stack: 0 9 1 25 46 99 125 282 129 304 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <constant> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <prim-expr> -> <constant> 
Use rule: Goto 315

State stack: 0 9 1 25 46 99 125 282 129 315 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <prim-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 314

State stack: 0 9 1 25 46 99 125 282 129 314 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <postfix-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 324

State stack: 0 9 1 25 46 99 125 282 129 324 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <unary-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 302

State stack: 0 9 1 25 46 99 125 282 129 302 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <cast-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 312

State stack: 0 9 1 25 46 99 125 282 129 312 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <multiplicative-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 299

State stack: 0 9 1 25 46 99 125 282 129 299 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <additive-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 317

State stack: 0 9 1 25 46 99 125 282 129 317 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <shift-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 316

State stack: 0 9 1 25 46 99 125 282 129 316 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <rel-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 306

State stack: 0 9 1 25 46 99 125 282 129 306 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <eq-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 300

State stack: 0 9 1 25 46 99 125 282 129 300 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <and-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 307

State stack: 0 9 1 25 46 99 125 282 129 307 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <exc-or-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 309

State stack: 0 9 1 25 46 99 125 282 129 309 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <inc-or-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 310

State stack: 0 9 1 25 46 99 125 282 129 310 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <land-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 311

State stack: 0 9 1 25 46 99 125 282 129 311 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <lor-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 303

State stack: 0 9 1 25 46 99 125 282 129 303 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <cond-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 301

State stack: 0 9 1 25 46 99 125 282 129 301 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <asn-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <expr> -> <asn-expr> 
Use rule: Goto 308

State stack: 0 9 1 25 46 99 125 282 129 308 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Shift 662

State stack: 0 9 1 25 46 99 125 282 129 308 662 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <expr> DELIM_RPAR 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
Use rule: Goto 120

State stack: 0 9 1 25 46 99 125 282 120 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <prim-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 119

State stack: 0 9 1 25 46 99 125 282 119 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <postfix-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 125

State stack: 0 9 1 25 46 99 125 282 125 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 101

State stack: 0 9 1 25 46 99 125 282 101 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <cast-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 117

State stack: 0 9 1 25 46 99 125 282 117 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <multiplicative-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 96

State stack: 0 9 1 25 46 99 125 282 96 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <additive-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 123

State stack: 0 9 1 25 46 99 125 282 123 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <shift-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 121

State stack: 0 9 1 25 46 99 125 282 121 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <rel-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 107

State stack: 0 9 1 25 46 99 125 282 107 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <eq-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 97

State stack: 0 9 1 25 46 99 125 282 97 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <and-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 108

State stack: 0 9 1 25 46 99 125 282 108 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <exc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 111

State stack: 0 9 1 25 46 99 125 282 111 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <inc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 115

State stack: 0 9 1 25 46 99 125 282 115 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <land-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 116

State stack: 0 9 1 25 46 99 125 282 116 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 103

State stack: 0 9 1 25 46 99 125 282 103 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <cond-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 652

State stack: 0 9 1 25 46 99 125 282 652 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <asn-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <asn-expr> -> <unary-expr> <asn-op> <asn-expr> 
Use rule: Goto 98

State stack: 0 9 1 25 46 99 98 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <asn-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <expr> -> <asn-expr> 
Use rule: Goto 110

State stack: 0 9 1 25 46 99 110 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Shift 262

State stack: 0 9 1 25 46 99 110 262 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <expr> DELIM_SEMICOLON 
Now token: KEYWORD ( for )
Use rule: Reduce <expr-stmt> -> <expr> DELIM_SEMICOLON 
Use rule: Goto 109

State stack: 0 9 1 25 46 99 109 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <expr-stmt> 
Now token: KEYWORD ( for )
Use rule: Reduce <stmt> -> <expr-stmt> 
Use rule: Goto 124

State stack: 0 9 1 25 46 99 124 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <stmt> 
Now token: KEYWORD ( for )
Use rule: Reduce <blk-item> -> <stmt> 
Use rule: Goto 254

State stack: 0 9 1 25 46 99 254 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <blk-item> 
Now token: KEYWORD ( for )
Use rule: Reduce <blk-item-list> -> <blk-item-list> <blk-item> 
Use rule: Goto 99

State stack: 0 9 1 25 46 99 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> 
Now token: KEYWORD ( for )
Use rule: Shift 149

State stack: 0 9 1 25 46 99 149 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for 
Now token: DELIM_LPAR ( ( )
Use rule: Shift 403

State stack: 0 9 1 25 46 99 149 403 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR 
Now token: KEYWORD ( int )
Use rule: Shift 17

State stack: 0 9 1 25 46 99 149 403 17 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR int 
Now token: IDENTIFIER ( i )
Use rule: Reduce <type-spec> -> int 
Use rule: Goto 11

State stack: 0 9 1 25 46 99 149 403 11 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <type-spec> 
Now token: IDENTIFIER ( i )
Use rule: Reduce <decl-spec> -> <type-spec> 
Use rule: Goto 760

State stack: 0 9 1 25 46 99 149 403 760 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl-spec> 
Now token: IDENTIFIER ( i )
Use rule: Shift 95

State stack: 0 9 1 25 46 99 149 403 760 95 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl-spec> IDENTIFIER 
Now token: OP_ASN ( = )
Use rule: Reduce <direct-declarator> -> IDENTIFIER 
Use rule: Goto 90

State stack: 0 9 1 25 46 99 149 403 760 90 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl-spec> <direct-declarator> 
Now token: OP_ASN ( = )
Use rule: Reduce <declarator> -> <direct-declarator> 
Use rule: Goto 89

State stack: 0 9 1 25 46 99 149 403 760 89 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl-spec> <declarator> 
Now token: OP_ASN ( = )
Use rule: Shift 47

State stack: 0 9 1 25 46 99 149 403 760 89 47 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl-spec> <declarator> OP_ASN 
Now token: INT_CONST ( 2 )
Use rule: Shift 134

State stack: 0 9 1 25 46 99 149 403 760 89 47 134 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl-spec> <declarator> OP_ASN INT_CONST 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <num-const> -> INT_CONST 
Use rule: Goto 118

State stack: 0 9 1 25 46 99 149 403 760 89 47 118 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl-spec> <declarator> OP_ASN <num-const> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <constant> -> <num-const> 
Use rule: Goto 104

State stack: 0 9 1 25 46 99 149 403 760 89 47 104 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl-spec> <declarator> OP_ASN <constant> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <prim-expr> -> <constant> 
Use rule: Goto 120

State stack: 0 9 1 25 46 99 149 403 760 89 47 120 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl-spec> <declarator> OP_ASN <prim-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 119

State stack: 0 9 1 25 46 99 149 403 760 89 47 119 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl-spec> <declarator> OP_ASN <postfix-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 125

State stack: 0 9 1 25 46 99 149 403 760 89 47 125 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl-spec> <declarator> OP_ASN <unary-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 101

State stack: 0 9 1 25 46 99 149 403 760 89 47 101 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl-spec> <declarator> OP_ASN <cast-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 117

State stack: 0 9 1 25 46 99 149 403 760 89 47 117 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl-spec> <declarator> OP_ASN <multiplicative-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 96

State stack: 0 9 1 25 46 99 149 403 760 89 47 96 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl-spec> <declarator> OP_ASN <additive-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 123

State stack: 0 9 1 25 46 99 149 403 760 89 47 123 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl-spec> <declarator> OP_ASN <shift-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 121

State stack: 0 9 1 25 46 99 149 403 760 89 47 121 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl-spec> <declarator> OP_ASN <rel-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 107

State stack: 0 9 1 25 46 99 149 403 760 89 47 107 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl-spec> <declarator> OP_ASN <eq-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 97

State stack: 0 9 1 25 46 99 149 403 760 89 47 97 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl-spec> <declarator> OP_ASN <and-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 108

State stack: 0 9 1 25 46 99 149 403 760 89 47 108 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl-spec> <declarator> OP_ASN <exc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 111

State stack: 0 9 1 25 46 99 149 403 760 89 47 111 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl-spec> <declarator> OP_ASN <inc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 115

State stack: 0 9 1 25 46 99 149 403 760 89 47 115 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl-spec> <declarator> OP_ASN <land-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 116

State stack: 0 9 1 25 46 99 149 403 760 89 47 116 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl-spec> <declarator> OP_ASN <lor-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 103

State stack: 0 9 1 25 46 99 149 403 760 89 47 103 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl-spec> <declarator> OP_ASN <cond-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 156

State stack: 0 9 1 25 46 99 149 403 760 89 47 156 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl-spec> <declarator> OP_ASN <asn-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <initializer> -> <asn-expr> 
Use rule: Goto 157

State stack: 0 9 1 25 46 99 149 403 760 89 47 157 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl-spec> <declarator> OP_ASN <initializer> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <init-declarator> -> <declarator> OP_ASN <initializer> 
Use rule: Goto 28

State stack: 0 9 1 25 46 99 149 403 760 28 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl-spec> <init-declarator> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <init-declarator-list> -> <init-declarator> 
Use rule: Goto 1116

State stack: 0 9 1 25 46 99 149 403 760 1116 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl-spec> <init-declarator-list> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Shift 1380

State stack: 0 9 1 25 46 99 149 403 760 1116 1380 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
Now token: IDENTIFIER ( i )
Use rule: Reduce <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
Use rule: Goto 761

State stack: 0 9 1 25 46 99 149 403 761 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> 
Now token: IDENTIFIER ( i )
Use rule: Shift 159

State stack: 0 9 1 25 46 99 149 403 761 159 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> IDENTIFIER 
Now token: OP_LT ( < )
Use rule: Reduce <prim-expr> -> IDENTIFIER 
Use rule: Goto 120

State stack: 0 9 1 25 46 99 149 403 761 120 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <prim-expr> 
Now token: OP_LT ( < )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 119

State stack: 0 9 1 25 46 99 149 403 761 119 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <postfix-expr> 
Now token: OP_LT ( < )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 125

State stack: 0 9 1 25 46 99 149 403 761 125 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <unary-expr> 
Now token: OP_LT ( < )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 101

State stack: 0 9 1 25 46 99 149 403 761 101 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <cast-expr> 
Now token: OP_LT ( < )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 117

State stack: 0 9 1 25 46 99 149 403 761 117 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <multiplicative-expr> 
Now token: OP_LT ( < )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 96

State stack: 0 9 1 25 46 99 149 403 761 96 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <additive-expr> 
Now token: OP_LT ( < )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 123

State stack: 0 9 1 25 46 99 149 403 761 123 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <shift-expr> 
Now token: OP_LT ( < )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 121

State stack: 0 9 1 25 46 99 149 403 761 121 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> 
Now token: OP_LT ( < )
Use rule: Shift 279

State stack: 0 9 1 25 46 99 149 403 761 121 279 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT 
Now token: DELIM_LPAR ( ( )
Use rule: Shift 562

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR 
Now token: INT_CONST ( 2 )
Use rule: Shift 330

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 330 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR INT_CONST 
Now token: OP_ADD ( + )
Use rule: Reduce <num-const> -> INT_CONST 
Use rule: Goto 313

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 313 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR <num-const> 
Now token: OP_ADD ( + )
Use rule: Reduce <constant> -> <num-const> 
Use rule: Goto 304

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 304 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR <constant> 
Now token: OP_ADD ( + )
Use rule: Reduce <prim-expr> -> <constant> 
Use rule: Goto 315

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 315 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR <prim-expr> 
Now token: OP_ADD ( + )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 314

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 314 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR <postfix-expr> 
Now token: OP_ADD ( + )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 324

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 324 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR <unary-expr> 
Now token: OP_ADD ( + )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 302

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 302 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR <cast-expr> 
Now token: OP_ADD ( + )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 312

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 312 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR <multiplicative-expr> 
Now token: OP_ADD ( + )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 299

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 299 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR <additive-expr> 
Now token: OP_ADD ( + )
Use rule: Shift 655

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 299 655 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR <additive-expr> OP_ADD 
Now token: IDENTIFIER ( true )
Use rule: Shift 1024

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 299 655 1024 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR <additive-expr> OP_ADD IDENTIFIER 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <prim-expr> -> IDENTIFIER 
Use rule: Goto 1018

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 299 655 1018 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR <additive-expr> OP_ADD <prim-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 1017

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 299 655 1017 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR <additive-expr> OP_ADD <postfix-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 1019

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 299 655 1019 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR <additive-expr> OP_ADD <unary-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 302

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 299 655 302 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR <additive-expr> OP_ADD <cast-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 1015

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 299 655 1015 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR <additive-expr> OP_ADD <multiplicative-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
Use rule: Goto 299

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 299 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR <additive-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 317

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 317 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR <shift-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 316

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 316 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR <rel-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 306

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 306 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR <eq-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 300

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 300 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR <and-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 307

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 307 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR <exc-or-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 309

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 309 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR <inc-or-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 310

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 310 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR <land-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 311

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 311 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR <lor-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 303

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 303 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR <cond-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 301

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 301 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR <asn-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <expr> -> <asn-expr> 
Use rule: Goto 928

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 928 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR <expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Shift 1233

State stack: 0 9 1 25 46 99 149 403 761 121 279 562 928 1233 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT DELIM_LPAR <expr> DELIM_RPAR 
Now token: OP_DIV ( / )
Use rule: Reduce <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
Use rule: Goto 558

State stack: 0 9 1 25 46 99 149 403 761 121 279 558 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT <prim-expr> 
Now token: OP_DIV ( / )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 557

State stack: 0 9 1 25 46 99 149 403 761 121 279 557 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT <postfix-expr> 
Now token: OP_DIV ( / )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 559

State stack: 0 9 1 25 46 99 149 403 761 121 279 559 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT <unary-expr> 
Now token: OP_DIV ( / )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 101

State stack: 0 9 1 25 46 99 149 403 761 121 279 101 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT <cast-expr> 
Now token: OP_DIV ( / )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 117

State stack: 0 9 1 25 46 99 149 403 761 121 279 117 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT <multiplicative-expr> 
Now token: OP_DIV ( / )
Use rule: Shift 267

State stack: 0 9 1 25 46 99 149 403 761 121 279 117 267 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT <multiplicative-expr> OP_DIV 
Now token: IDENTIFIER ( a )
Use rule: Shift 564

State stack: 0 9 1 25 46 99 149 403 761 121 279 117 267 564 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT <multiplicative-expr> OP_DIV IDENTIFIER 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <prim-expr> -> IDENTIFIER 
Use rule: Goto 558

State stack: 0 9 1 25 46 99 149 403 761 121 279 117 267 558 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT <multiplicative-expr> OP_DIV <prim-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 557

State stack: 0 9 1 25 46 99 149 403 761 121 279 117 267 557 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT <multiplicative-expr> OP_DIV <postfix-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 559

State stack: 0 9 1 25 46 99 149 403 761 121 279 117 267 559 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT <multiplicative-expr> OP_DIV <unary-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 609

State stack: 0 9 1 25 46 99 149 403 761 121 279 117 267 609 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT <multiplicative-expr> OP_DIV <cast-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
Use rule: Goto 117

State stack: 0 9 1 25 46 99 149 403 761 121 279 117 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT <multiplicative-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 96

State stack: 0 9 1 25 46 99 149 403 761 121 279 96 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT <additive-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 649

State stack: 0 9 1 25 46 99 149 403 761 121 279 649 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> OP_LT <shift-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
Use rule: Goto 121

State stack: 0 9 1 25 46 99 149 403 761 121 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <rel-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 107

State stack: 0 9 1 25 46 99 149 403 761 107 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <eq-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 97

State stack: 0 9 1 25 46 99 149 403 761 97 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <and-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 108

State stack: 0 9 1 25 46 99 149 403 761 108 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <exc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 111

State stack: 0 9 1 25 46 99 149 403 761 111 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <inc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 115

State stack: 0 9 1 25 46 99 149 403 761 115 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <land-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 116

State stack: 0 9 1 25 46 99 149 403 761 116 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <lor-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 103

State stack: 0 9 1 25 46 99 149 403 761 103 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <cond-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 98

State stack: 0 9 1 25 46 99 149 403 761 98 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <asn-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <expr> -> <asn-expr> 
Use rule: Goto 1118

State stack: 0 9 1 25 46 99 149 403 761 1118 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Shift 1381

State stack: 0 9 1 25 46 99 149 403 761 1118 1381 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> DELIM_SEMICOLON 
Now token: IDENTIFIER ( i )
Use rule: Shift 329

State stack: 0 9 1 25 46 99 149 403 761 1118 1381 329 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> DELIM_SEMICOLON IDENTIFIER 
Now token: OP_ADDASN ( += )
Use rule: Reduce <prim-expr> -> IDENTIFIER 
Use rule: Goto 315

State stack: 0 9 1 25 46 99 149 403 761 1118 1381 315 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> DELIM_SEMICOLON <prim-expr> 
Now token: OP_ADDASN ( += )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 314

State stack: 0 9 1 25 46 99 149 403 761 1118 1381 314 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> DELIM_SEMICOLON <postfix-expr> 
Now token: OP_ADDASN ( += )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 324

State stack: 0 9 1 25 46 99 149 403 761 1118 1381 324 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> DELIM_SEMICOLON <unary-expr> 
Now token: OP_ADDASN ( += )
Use rule: Shift 283

State stack: 0 9 1 25 46 99 149 403 761 1118 1381 324 283 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> DELIM_SEMICOLON <unary-expr> OP_ADDASN 
Now token: INT_CONST ( 1 )
Use rule: Reduce <asn-op> -> OP_ADDASN 
Use rule: Goto 693

State stack: 0 9 1 25 46 99 149 403 761 1118 1381 324 693 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> DELIM_SEMICOLON <unary-expr> <asn-op> 
Now token: INT_CONST ( 1 )
Use rule: Shift 330

State stack: 0 9 1 25 46 99 149 403 761 1118 1381 324 693 330 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> DELIM_SEMICOLON <unary-expr> <asn-op> INT_CONST 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <num-const> -> INT_CONST 
Use rule: Goto 313

State stack: 0 9 1 25 46 99 149 403 761 1118 1381 324 693 313 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> DELIM_SEMICOLON <unary-expr> <asn-op> <num-const> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <constant> -> <num-const> 
Use rule: Goto 304

State stack: 0 9 1 25 46 99 149 403 761 1118 1381 324 693 304 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> DELIM_SEMICOLON <unary-expr> <asn-op> <constant> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <prim-expr> -> <constant> 
Use rule: Goto 315

State stack: 0 9 1 25 46 99 149 403 761 1118 1381 324 693 315 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> DELIM_SEMICOLON <unary-expr> <asn-op> <prim-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 314

State stack: 0 9 1 25 46 99 149 403 761 1118 1381 324 693 314 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> DELIM_SEMICOLON <unary-expr> <asn-op> <postfix-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 324

State stack: 0 9 1 25 46 99 149 403 761 1118 1381 324 693 324 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> DELIM_SEMICOLON <unary-expr> <asn-op> <unary-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 302

State stack: 0 9 1 25 46 99 149 403 761 1118 1381 324 693 302 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> DELIM_SEMICOLON <unary-expr> <asn-op> <cast-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 312

State stack: 0 9 1 25 46 99 149 403 761 1118 1381 324 693 312 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> DELIM_SEMICOLON <unary-expr> <asn-op> <multiplicative-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 299

State stack: 0 9 1 25 46 99 149 403 761 1118 1381 324 693 299 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> DELIM_SEMICOLON <unary-expr> <asn-op> <additive-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 317

State stack: 0 9 1 25 46 99 149 403 761 1118 1381 324 693 317 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> DELIM_SEMICOLON <unary-expr> <asn-op> <shift-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 316

State stack: 0 9 1 25 46 99 149 403 761 1118 1381 324 693 316 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> DELIM_SEMICOLON <unary-expr> <asn-op> <rel-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 306

State stack: 0 9 1 25 46 99 149 403 761 1118 1381 324 693 306 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> DELIM_SEMICOLON <unary-expr> <asn-op> <eq-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 300

State stack: 0 9 1 25 46 99 149 403 761 1118 1381 324 693 300 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> DELIM_SEMICOLON <unary-expr> <asn-op> <and-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 307

State stack: 0 9 1 25 46 99 149 403 761 1118 1381 324 693 307 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> DELIM_SEMICOLON <unary-expr> <asn-op> <exc-or-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 309

State stack: 0 9 1 25 46 99 149 403 761 1118 1381 324 693 309 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> DELIM_SEMICOLON <unary-expr> <asn-op> <inc-or-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 310

State stack: 0 9 1 25 46 99 149 403 761 1118 1381 324 693 310 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> DELIM_SEMICOLON <unary-expr> <asn-op> <land-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 311

State stack: 0 9 1 25 46 99 149 403 761 1118 1381 324 693 311 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> DELIM_SEMICOLON <unary-expr> <asn-op> <lor-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 303

State stack: 0 9 1 25 46 99 149 403 761 1118 1381 324 693 303 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> DELIM_SEMICOLON <unary-expr> <asn-op> <cond-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 1067

State stack: 0 9 1 25 46 99 149 403 761 1118 1381 324 693 1067 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> DELIM_SEMICOLON <unary-expr> <asn-op> <asn-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <asn-expr> -> <unary-expr> <asn-op> <asn-expr> 
Use rule: Goto 301

State stack: 0 9 1 25 46 99 149 403 761 1118 1381 301 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> DELIM_SEMICOLON <asn-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <expr> -> <asn-expr> 
Use rule: Goto 1550

State stack: 0 9 1 25 46 99 149 403 761 1118 1381 1550 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <decl> <expr> DELIM_SEMICOLON <expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <for-cond> -> <decl> <expr> DELIM_SEMICOLON <expr> 
Use rule: Goto 763

State stack: 0 9 1 25 46 99 149 403 763 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> 
Now token: DELIM_RPAR ( ) )
Use rule: Shift 1121

State stack: 0 9 1 25 46 99 149 403 763 1121 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR 
Now token: DELIM_LCURBRACE ( { )
Use rule: Shift 128

State stack: 0 9 1 25 46 99 149 403 763 1121 128 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR DELIM_LCURBRACE 
Now token: IDENTIFIER ( b )
Use rule: Shift 133

State stack: 0 9 1 25 46 99 149 403 763 1121 128 133 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR DELIM_LCURBRACE IDENTIFIER 
Now token: OP_INC ( ++ )
Use rule: Reduce <prim-expr> -> IDENTIFIER 
Use rule: Goto 120

State stack: 0 9 1 25 46 99 149 403 763 1121 128 120 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR DELIM_LCURBRACE <prim-expr> 
Now token: OP_INC ( ++ )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 119

State stack: 0 9 1 25 46 99 149 403 763 1121 128 119 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR DELIM_LCURBRACE <postfix-expr> 
Now token: OP_INC ( ++ )
Use rule: Shift 275

State stack: 0 9 1 25 46 99 149 403 763 1121 128 119 275 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR DELIM_LCURBRACE <postfix-expr> OP_INC 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <postfix-expr> -> <postfix-expr> OP_INC 
Use rule: Goto 119

State stack: 0 9 1 25 46 99 149 403 763 1121 128 119 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR DELIM_LCURBRACE <postfix-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 125

State stack: 0 9 1 25 46 99 149 403 763 1121 128 125 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR DELIM_LCURBRACE <unary-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 101

State stack: 0 9 1 25 46 99 149 403 763 1121 128 101 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR DELIM_LCURBRACE <cast-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 117

State stack: 0 9 1 25 46 99 149 403 763 1121 128 117 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR DELIM_LCURBRACE <multiplicative-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 96

State stack: 0 9 1 25 46 99 149 403 763 1121 128 96 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR DELIM_LCURBRACE <additive-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 123

State stack: 0 9 1 25 46 99 149 403 763 1121 128 123 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR DELIM_LCURBRACE <shift-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 121

State stack: 0 9 1 25 46 99 149 403 763 1121 128 121 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR DELIM_LCURBRACE <rel-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 107

State stack: 0 9 1 25 46 99 149 403 763 1121 128 107 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR DELIM_LCURBRACE <eq-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 97

State stack: 0 9 1 25 46 99 149 403 763 1121 128 97 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR DELIM_LCURBRACE <and-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 108

State stack: 0 9 1 25 46 99 149 403 763 1121 128 108 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR DELIM_LCURBRACE <exc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 111

State stack: 0 9 1 25 46 99 149 403 763 1121 128 111 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR DELIM_LCURBRACE <inc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 115

State stack: 0 9 1 25 46 99 149 403 763 1121 128 115 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR DELIM_LCURBRACE <land-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 116

State stack: 0 9 1 25 46 99 149 403 763 1121 128 116 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR DELIM_LCURBRACE <lor-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 103

State stack: 0 9 1 25 46 99 149 403 763 1121 128 103 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR DELIM_LCURBRACE <cond-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 98

State stack: 0 9 1 25 46 99 149 403 763 1121 128 98 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR DELIM_LCURBRACE <asn-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <expr> -> <asn-expr> 
Use rule: Goto 110

State stack: 0 9 1 25 46 99 149 403 763 1121 128 110 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR DELIM_LCURBRACE <expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Shift 262

State stack: 0 9 1 25 46 99 149 403 763 1121 128 110 262 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR DELIM_LCURBRACE <expr> DELIM_SEMICOLON 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <expr-stmt> -> <expr> DELIM_SEMICOLON 
Use rule: Goto 109

State stack: 0 9 1 25 46 99 149 403 763 1121 128 109 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR DELIM_LCURBRACE <expr-stmt> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <stmt> -> <expr-stmt> 
Use rule: Goto 124

State stack: 0 9 1 25 46 99 149 403 763 1121 128 124 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR DELIM_LCURBRACE <stmt> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <blk-item> -> <stmt> 
Use rule: Goto 100

State stack: 0 9 1 25 46 99 149 403 763 1121 128 100 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR DELIM_LCURBRACE <blk-item> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <blk-item-list> -> <blk-item> 
Use rule: Goto 297

State stack: 0 9 1 25 46 99 149 403 763 1121 128 297 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Shift 654

State stack: 0 9 1 25 46 99 149 403 763 1121 128 297 654 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
Now token: KEYWORD ( while )
Use rule: Reduce <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
Use rule: Goto 102

State stack: 0 9 1 25 46 99 149 403 763 1121 102 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR <comp-stmt> 
Now token: KEYWORD ( while )
Use rule: Reduce <stmt> -> <comp-stmt> 
Use rule: Goto 1385

State stack: 0 9 1 25 46 99 149 403 763 1121 1385 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
Now token: KEYWORD ( while )
Use rule: Reduce <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
Use rule: Goto 112

State stack: 0 9 1 25 46 99 112 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <iter-stmt> 
Now token: KEYWORD ( while )
Use rule: Reduce <stmt> -> <iter-stmt> 
Use rule: Goto 124

State stack: 0 9 1 25 46 99 124 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <stmt> 
Now token: KEYWORD ( while )
Use rule: Reduce <blk-item> -> <stmt> 
Use rule: Goto 254

State stack: 0 9 1 25 46 99 254 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <blk-item> 
Now token: KEYWORD ( while )
Use rule: Reduce <blk-item-list> -> <blk-item-list> <blk-item> 
Use rule: Goto 99

State stack: 0 9 1 25 46 99 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> 
Now token: KEYWORD ( while )
Use rule: Shift 155

State stack: 0 9 1 25 46 99 155 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while 
Now token: DELIM_LPAR ( ( )
Use rule: Shift 411

State stack: 0 9 1 25 46 99 155 411 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR 
Now token: IDENTIFIER ( true )
Use rule: Shift 329

State stack: 0 9 1 25 46 99 155 411 329 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR IDENTIFIER 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <prim-expr> -> IDENTIFIER 
Use rule: Goto 315

State stack: 0 9 1 25 46 99 155 411 315 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <prim-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 314

State stack: 0 9 1 25 46 99 155 411 314 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <postfix-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 324

State stack: 0 9 1 25 46 99 155 411 324 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <unary-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 302

State stack: 0 9 1 25 46 99 155 411 302 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <cast-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 312

State stack: 0 9 1 25 46 99 155 411 312 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <multiplicative-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 299

State stack: 0 9 1 25 46 99 155 411 299 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <additive-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 317

State stack: 0 9 1 25 46 99 155 411 317 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <shift-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 316

State stack: 0 9 1 25 46 99 155 411 316 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <rel-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 306

State stack: 0 9 1 25 46 99 155 411 306 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <eq-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 300

State stack: 0 9 1 25 46 99 155 411 300 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <and-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 307

State stack: 0 9 1 25 46 99 155 411 307 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <exc-or-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 309

State stack: 0 9 1 25 46 99 155 411 309 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <inc-or-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 310

State stack: 0 9 1 25 46 99 155 411 310 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <land-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 311

State stack: 0 9 1 25 46 99 155 411 311 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <lor-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 303

State stack: 0 9 1 25 46 99 155 411 303 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <cond-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 301

State stack: 0 9 1 25 46 99 155 411 301 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <asn-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <expr> -> <asn-expr> 
Use rule: Goto 769

State stack: 0 9 1 25 46 99 155 411 769 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Shift 1127

State stack: 0 9 1 25 46 99 155 411 769 1127 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR 
Now token: DELIM_LCURBRACE ( { )
Use rule: Shift 128

State stack: 0 9 1 25 46 99 155 411 769 1127 128 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE 
Now token: IDENTIFIER ( a )
Use rule: Shift 133

State stack: 0 9 1 25 46 99 155 411 769 1127 128 133 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE IDENTIFIER 
Now token: OP_EQ ( == )
Use rule: Reduce <prim-expr> -> IDENTIFIER 
Use rule: Goto 120

State stack: 0 9 1 25 46 99 155 411 769 1127 128 120 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <prim-expr> 
Now token: OP_EQ ( == )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 119

State stack: 0 9 1 25 46 99 155 411 769 1127 128 119 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <postfix-expr> 
Now token: OP_EQ ( == )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 125

State stack: 0 9 1 25 46 99 155 411 769 1127 128 125 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <unary-expr> 
Now token: OP_EQ ( == )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 101

State stack: 0 9 1 25 46 99 155 411 769 1127 128 101 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <cast-expr> 
Now token: OP_EQ ( == )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 117

State stack: 0 9 1 25 46 99 155 411 769 1127 128 117 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <multiplicative-expr> 
Now token: OP_EQ ( == )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 96

State stack: 0 9 1 25 46 99 155 411 769 1127 128 96 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <additive-expr> 
Now token: OP_EQ ( == )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 123

State stack: 0 9 1 25 46 99 155 411 769 1127 128 123 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <shift-expr> 
Now token: OP_EQ ( == )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 121

State stack: 0 9 1 25 46 99 155 411 769 1127 128 121 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <rel-expr> 
Now token: OP_EQ ( == )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 107

State stack: 0 9 1 25 46 99 155 411 769 1127 128 107 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <eq-expr> 
Now token: OP_EQ ( == )
Use rule: Shift 258

State stack: 0 9 1 25 46 99 155 411 769 1127 128 107 258 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <eq-expr> OP_EQ 
Now token: INT_CONST ( 2 )
Use rule: Shift 565

State stack: 0 9 1 25 46 99 155 411 769 1127 128 107 258 565 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <eq-expr> OP_EQ INT_CONST 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <num-const> -> INT_CONST 
Use rule: Goto 556

State stack: 0 9 1 25 46 99 155 411 769 1127 128 107 258 556 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <eq-expr> OP_EQ <num-const> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <constant> -> <num-const> 
Use rule: Goto 554

State stack: 0 9 1 25 46 99 155 411 769 1127 128 107 258 554 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <eq-expr> OP_EQ <constant> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <prim-expr> -> <constant> 
Use rule: Goto 558

State stack: 0 9 1 25 46 99 155 411 769 1127 128 107 258 558 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <eq-expr> OP_EQ <prim-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 557

State stack: 0 9 1 25 46 99 155 411 769 1127 128 107 258 557 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <eq-expr> OP_EQ <postfix-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 559

State stack: 0 9 1 25 46 99 155 411 769 1127 128 107 258 559 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <eq-expr> OP_EQ <unary-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 101

State stack: 0 9 1 25 46 99 155 411 769 1127 128 107 258 101 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <eq-expr> OP_EQ <cast-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 117

State stack: 0 9 1 25 46 99 155 411 769 1127 128 107 258 117 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <eq-expr> OP_EQ <multiplicative-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 96

State stack: 0 9 1 25 46 99 155 411 769 1127 128 107 258 96 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <eq-expr> OP_EQ <additive-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 123

State stack: 0 9 1 25 46 99 155 411 769 1127 128 107 258 123 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <eq-expr> OP_EQ <shift-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 573

State stack: 0 9 1 25 46 99 155 411 769 1127 128 107 258 573 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <eq-expr> OP_EQ <rel-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
Use rule: Goto 107

State stack: 0 9 1 25 46 99 155 411 769 1127 128 107 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <eq-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 97

State stack: 0 9 1 25 46 99 155 411 769 1127 128 97 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <and-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 108

State stack: 0 9 1 25 46 99 155 411 769 1127 128 108 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <exc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 111

State stack: 0 9 1 25 46 99 155 411 769 1127 128 111 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <inc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 115

State stack: 0 9 1 25 46 99 155 411 769 1127 128 115 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <land-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 116

State stack: 0 9 1 25 46 99 155 411 769 1127 128 116 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <lor-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 103

State stack: 0 9 1 25 46 99 155 411 769 1127 128 103 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <cond-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 98

State stack: 0 9 1 25 46 99 155 411 769 1127 128 98 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <asn-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <expr> -> <asn-expr> 
Use rule: Goto 110

State stack: 0 9 1 25 46 99 155 411 769 1127 128 110 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Shift 262

State stack: 0 9 1 25 46 99 155 411 769 1127 128 110 262 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <expr> DELIM_SEMICOLON 
Now token: INT_CONST ( 3 )
Use rule: Reduce <expr-stmt> -> <expr> DELIM_SEMICOLON 
Use rule: Goto 109

State stack: 0 9 1 25 46 99 155 411 769 1127 128 109 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <expr-stmt> 
Now token: INT_CONST ( 3 )
Use rule: Reduce <stmt> -> <expr-stmt> 
Use rule: Goto 124

State stack: 0 9 1 25 46 99 155 411 769 1127 128 124 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <stmt> 
Now token: INT_CONST ( 3 )
Use rule: Reduce <blk-item> -> <stmt> 
Use rule: Goto 100

State stack: 0 9 1 25 46 99 155 411 769 1127 128 100 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item> 
Now token: INT_CONST ( 3 )
Use rule: Reduce <blk-item-list> -> <blk-item> 
Use rule: Goto 297

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> 
Now token: INT_CONST ( 3 )
Use rule: Shift 134

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 134 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> INT_CONST 
Now token: OP_ADD ( + )
Use rule: Reduce <num-const> -> INT_CONST 
Use rule: Goto 118

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 118 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <num-const> 
Now token: OP_ADD ( + )
Use rule: Reduce <constant> -> <num-const> 
Use rule: Goto 104

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 104 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <constant> 
Now token: OP_ADD ( + )
Use rule: Reduce <prim-expr> -> <constant> 
Use rule: Goto 120

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 120 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <prim-expr> 
Now token: OP_ADD ( + )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 119

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 119 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <postfix-expr> 
Now token: OP_ADD ( + )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 125

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 125 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> 
Now token: OP_ADD ( + )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 101

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 101 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <cast-expr> 
Now token: OP_ADD ( + )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 117

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 117 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <multiplicative-expr> 
Now token: OP_ADD ( + )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 96

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 96 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <additive-expr> 
Now token: OP_ADD ( + )
Use rule: Shift 251

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 96 251 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <additive-expr> OP_ADD 
Now token: FLOAT_CONST ( 5.2 )
Use rule: Shift 563

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 96 251 563 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <additive-expr> OP_ADD FLOAT_CONST 
Now token: OP_NEQ ( != )
Use rule: Reduce <num-const> -> FLOAT_CONST 
Use rule: Goto 556

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 96 251 556 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <additive-expr> OP_ADD <num-const> 
Now token: OP_NEQ ( != )
Use rule: Reduce <constant> -> <num-const> 
Use rule: Goto 554

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 96 251 554 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <additive-expr> OP_ADD <constant> 
Now token: OP_NEQ ( != )
Use rule: Reduce <prim-expr> -> <constant> 
Use rule: Goto 558

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 96 251 558 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <additive-expr> OP_ADD <prim-expr> 
Now token: OP_NEQ ( != )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 557

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 96 251 557 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <additive-expr> OP_ADD <postfix-expr> 
Now token: OP_NEQ ( != )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 559

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 96 251 559 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <additive-expr> OP_ADD <unary-expr> 
Now token: OP_NEQ ( != )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 101

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 96 251 101 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <additive-expr> OP_ADD <cast-expr> 
Now token: OP_NEQ ( != )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 555

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 96 251 555 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <additive-expr> OP_ADD <multiplicative-expr> 
Now token: OP_NEQ ( != )
Use rule: Reduce <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
Use rule: Goto 96

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 96 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <additive-expr> 
Now token: OP_NEQ ( != )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 123

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 123 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <shift-expr> 
Now token: OP_NEQ ( != )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 121

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 121 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <rel-expr> 
Now token: OP_NEQ ( != )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 107

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 107 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <eq-expr> 
Now token: OP_NEQ ( != )
Use rule: Shift 259

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 107 259 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <eq-expr> OP_NEQ 
Now token: INT_CONST ( 3 )
Use rule: Shift 565

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 107 259 565 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <eq-expr> OP_NEQ INT_CONST 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <num-const> -> INT_CONST 
Use rule: Goto 556

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 107 259 556 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <eq-expr> OP_NEQ <num-const> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <constant> -> <num-const> 
Use rule: Goto 554

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 107 259 554 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <eq-expr> OP_NEQ <constant> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <prim-expr> -> <constant> 
Use rule: Goto 558

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 107 259 558 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <eq-expr> OP_NEQ <prim-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 557

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 107 259 557 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <eq-expr> OP_NEQ <postfix-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 559

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 107 259 559 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <eq-expr> OP_NEQ <unary-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 101

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 107 259 101 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <eq-expr> OP_NEQ <cast-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 117

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 107 259 117 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <eq-expr> OP_NEQ <multiplicative-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 96

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 107 259 96 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <eq-expr> OP_NEQ <additive-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 123

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 107 259 123 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <eq-expr> OP_NEQ <shift-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 574

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 107 259 574 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <eq-expr> OP_NEQ <rel-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
Use rule: Goto 107

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 107 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <eq-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 97

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 97 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <and-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 108

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 108 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <exc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 111

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 111 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <inc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 115

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 115 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <land-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 116

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 116 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <lor-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 103

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 103 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <cond-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 98

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 98 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <asn-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <expr> -> <asn-expr> 
Use rule: Goto 110

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 110 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Shift 262

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 110 262 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <expr> DELIM_SEMICOLON 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <expr-stmt> -> <expr> DELIM_SEMICOLON 
Use rule: Goto 109

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 109 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <expr-stmt> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <stmt> -> <expr-stmt> 
Use rule: Goto 124

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 124 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <stmt> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <blk-item> -> <stmt> 
Use rule: Goto 254

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 254 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <blk-item> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <blk-item-list> -> <blk-item-list> <blk-item> 
Use rule: Goto 297

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Shift 654

State stack: 0 9 1 25 46 99 155 411 769 1127 128 297 654 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
Now token: IDENTIFIER ( s )
Use rule: Reduce <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
Use rule: Goto 102

State stack: 0 9 1 25 46 99 155 411 769 1127 102 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR <comp-stmt> 
Now token: IDENTIFIER ( s )
Use rule: Reduce <stmt> -> <comp-stmt> 
Use rule: Goto 1411

State stack: 0 9 1 25 46 99 155 411 769 1127 1411 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
Now token: IDENTIFIER ( s )
Use rule: Reduce <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
Use rule: Goto 112

State stack: 0 9 1 25 46 99 112 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <iter-stmt> 
Now token: IDENTIFIER ( s )
Use rule: Reduce <stmt> -> <iter-stmt> 
Use rule: Goto 124

State stack: 0 9 1 25 46 99 124 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <stmt> 
Now token: IDENTIFIER ( s )
Use rule: Reduce <blk-item> -> <stmt> 
Use rule: Goto 254

State stack: 0 9 1 25 46 99 254 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <blk-item> 
Now token: IDENTIFIER ( s )
Use rule: Reduce <blk-item-list> -> <blk-item-list> <blk-item> 
Use rule: Goto 99

State stack: 0 9 1 25 46 99 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> 
Now token: IDENTIFIER ( s )
Use rule: Shift 133

State stack: 0 9 1 25 46 99 133 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> IDENTIFIER 
Now token: OP_DOT ( . )
Use rule: Reduce <prim-expr> -> IDENTIFIER 
Use rule: Goto 120

State stack: 0 9 1 25 46 99 120 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <prim-expr> 
Now token: OP_DOT ( . )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 119

State stack: 0 9 1 25 46 99 119 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <postfix-expr> 
Now token: OP_DOT ( . )
Use rule: Shift 274

State stack: 0 9 1 25 46 99 119 274 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <postfix-expr> OP_DOT 
Now token: IDENTIFIER ( id )
Use rule: Shift 645

State stack: 0 9 1 25 46 99 119 274 645 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <postfix-expr> OP_DOT IDENTIFIER 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
Use rule: Goto 119

State stack: 0 9 1 25 46 99 119 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <postfix-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 125

State stack: 0 9 1 25 46 99 125 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 101

State stack: 0 9 1 25 46 99 101 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <cast-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 117

State stack: 0 9 1 25 46 99 117 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <multiplicative-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 96

State stack: 0 9 1 25 46 99 96 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <additive-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 123

State stack: 0 9 1 25 46 99 123 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <shift-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 121

State stack: 0 9 1 25 46 99 121 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <rel-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 107

State stack: 0 9 1 25 46 99 107 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <eq-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 97

State stack: 0 9 1 25 46 99 97 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <and-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 108

State stack: 0 9 1 25 46 99 108 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <exc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 111

State stack: 0 9 1 25 46 99 111 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <inc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 115

State stack: 0 9 1 25 46 99 115 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <land-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 116

State stack: 0 9 1 25 46 99 116 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <lor-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 103

State stack: 0 9 1 25 46 99 103 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <cond-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 98

State stack: 0 9 1 25 46 99 98 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <asn-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <expr> -> <asn-expr> 
Use rule: Goto 110

State stack: 0 9 1 25 46 99 110 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Shift 262

State stack: 0 9 1 25 46 99 110 262 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <expr> DELIM_SEMICOLON 
Now token: IDENTIFIER ( s )
Use rule: Reduce <expr-stmt> -> <expr> DELIM_SEMICOLON 
Use rule: Goto 109

State stack: 0 9 1 25 46 99 109 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <expr-stmt> 
Now token: IDENTIFIER ( s )
Use rule: Reduce <stmt> -> <expr-stmt> 
Use rule: Goto 124

State stack: 0 9 1 25 46 99 124 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <stmt> 
Now token: IDENTIFIER ( s )
Use rule: Reduce <blk-item> -> <stmt> 
Use rule: Goto 254

State stack: 0 9 1 25 46 99 254 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <blk-item> 
Now token: IDENTIFIER ( s )
Use rule: Reduce <blk-item-list> -> <blk-item-list> <blk-item> 
Use rule: Goto 99

State stack: 0 9 1 25 46 99 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> 
Now token: IDENTIFIER ( s )
Use rule: Shift 133

State stack: 0 9 1 25 46 99 133 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> IDENTIFIER 
Now token: OP_ARROW ( -> )
Use rule: Reduce <prim-expr> -> IDENTIFIER 
Use rule: Goto 120

State stack: 0 9 1 25 46 99 120 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <prim-expr> 
Now token: OP_ARROW ( -> )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 119

State stack: 0 9 1 25 46 99 119 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <postfix-expr> 
Now token: OP_ARROW ( -> )
Use rule: Shift 272

State stack: 0 9 1 25 46 99 119 272 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <postfix-expr> OP_ARROW 
Now token: IDENTIFIER ( pid )
Use rule: Shift 644

State stack: 0 9 1 25 46 99 119 272 644 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <postfix-expr> OP_ARROW IDENTIFIER 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
Use rule: Goto 119

State stack: 0 9 1 25 46 99 119 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <postfix-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 125

State stack: 0 9 1 25 46 99 125 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 101

State stack: 0 9 1 25 46 99 101 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <cast-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 117

State stack: 0 9 1 25 46 99 117 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <multiplicative-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 96

State stack: 0 9 1 25 46 99 96 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <additive-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 123

State stack: 0 9 1 25 46 99 123 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <shift-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 121

State stack: 0 9 1 25 46 99 121 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <rel-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 107

State stack: 0 9 1 25 46 99 107 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <eq-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 97

State stack: 0 9 1 25 46 99 97 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <and-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 108

State stack: 0 9 1 25 46 99 108 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <exc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 111

State stack: 0 9 1 25 46 99 111 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <inc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 115

State stack: 0 9 1 25 46 99 115 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <land-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 116

State stack: 0 9 1 25 46 99 116 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <lor-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 103

State stack: 0 9 1 25 46 99 103 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <cond-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 98

State stack: 0 9 1 25 46 99 98 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <asn-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <expr> -> <asn-expr> 
Use rule: Goto 110

State stack: 0 9 1 25 46 99 110 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Shift 262

State stack: 0 9 1 25 46 99 110 262 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <expr> DELIM_SEMICOLON 
Now token: KEYWORD ( int )
Use rule: Reduce <expr-stmt> -> <expr> DELIM_SEMICOLON 
Use rule: Goto 109

State stack: 0 9 1 25 46 99 109 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <expr-stmt> 
Now token: KEYWORD ( int )
Use rule: Reduce <stmt> -> <expr-stmt> 
Use rule: Goto 124

State stack: 0 9 1 25 46 99 124 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <stmt> 
Now token: KEYWORD ( int )
Use rule: Reduce <blk-item> -> <stmt> 
Use rule: Goto 254

State stack: 0 9 1 25 46 99 254 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <blk-item> 
Now token: KEYWORD ( int )
Use rule: Reduce <blk-item-list> -> <blk-item-list> <blk-item> 
Use rule: Goto 99

State stack: 0 9 1 25 46 99 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> 
Now token: KEYWORD ( int )
Use rule: Shift 17

State stack: 0 9 1 25 46 99 17 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> int 
Now token: IDENTIFIER ( y )
Use rule: Reduce <type-spec> -> int 
Use rule: Goto 11

State stack: 0 9 1 25 46 99 11 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <type-spec> 
Now token: IDENTIFIER ( y )
Use rule: Reduce <decl-spec> -> <type-spec> 
Use rule: Goto 105

State stack: 0 9 1 25 46 99 105 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> 
Now token: IDENTIFIER ( y )
Use rule: Shift 95

State stack: 0 9 1 25 46 99 105 95 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> IDENTIFIER 
Now token: OP_ASN ( = )
Use rule: Reduce <direct-declarator> -> IDENTIFIER 
Use rule: Goto 90

State stack: 0 9 1 25 46 99 105 90 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <direct-declarator> 
Now token: OP_ASN ( = )
Use rule: Reduce <declarator> -> <direct-declarator> 
Use rule: Goto 89

State stack: 0 9 1 25 46 99 105 89 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> 
Now token: OP_ASN ( = )
Use rule: Shift 47

State stack: 0 9 1 25 46 99 105 89 47 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN 
Now token: IDENTIFIER ( f )
Use rule: Shift 159

State stack: 0 9 1 25 46 99 105 89 47 159 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN IDENTIFIER 
Now token: DELIM_LPAR ( ( )
Use rule: Reduce <prim-expr> -> IDENTIFIER 
Use rule: Goto 120

State stack: 0 9 1 25 46 99 105 89 47 120 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <prim-expr> 
Now token: DELIM_LPAR ( ( )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 119

State stack: 0 9 1 25 46 99 105 89 47 119 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> 
Now token: DELIM_LPAR ( ( )
Use rule: Shift 270

State stack: 0 9 1 25 46 99 105 89 47 119 270 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR 
Now token: INT_CONST ( 2 )
Use rule: Shift 330

State stack: 0 9 1 25 46 99 105 89 47 119 270 330 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR INT_CONST 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <num-const> -> INT_CONST 
Use rule: Goto 313

State stack: 0 9 1 25 46 99 105 89 47 119 270 313 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <num-const> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <constant> -> <num-const> 
Use rule: Goto 304

State stack: 0 9 1 25 46 99 105 89 47 119 270 304 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <constant> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <prim-expr> -> <constant> 
Use rule: Goto 315

State stack: 0 9 1 25 46 99 105 89 47 119 270 315 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <prim-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 314

State stack: 0 9 1 25 46 99 105 89 47 119 270 314 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <postfix-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 324

State stack: 0 9 1 25 46 99 105 89 47 119 270 324 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <unary-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 302

State stack: 0 9 1 25 46 99 105 89 47 119 270 302 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <cast-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 312

State stack: 0 9 1 25 46 99 105 89 47 119 270 312 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <multiplicative-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 299

State stack: 0 9 1 25 46 99 105 89 47 119 270 299 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <additive-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 317

State stack: 0 9 1 25 46 99 105 89 47 119 270 317 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <shift-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 316

State stack: 0 9 1 25 46 99 105 89 47 119 270 316 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <rel-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 306

State stack: 0 9 1 25 46 99 105 89 47 119 270 306 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <eq-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 300

State stack: 0 9 1 25 46 99 105 89 47 119 270 300 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <and-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 307

State stack: 0 9 1 25 46 99 105 89 47 119 270 307 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <exc-or-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 309

State stack: 0 9 1 25 46 99 105 89 47 119 270 309 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <inc-or-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 310

State stack: 0 9 1 25 46 99 105 89 47 119 270 310 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <land-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 311

State stack: 0 9 1 25 46 99 105 89 47 119 270 311 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <lor-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 303

State stack: 0 9 1 25 46 99 105 89 47 119 270 303 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <cond-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 613

State stack: 0 9 1 25 46 99 105 89 47 119 270 613 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <asn-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <arg-expr-list> -> <asn-expr> 
Use rule: Goto 612

State stack: 0 9 1 25 46 99 105 89 47 119 270 612 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <arg-expr-list> 
Now token: DELIM_COMMA ( , )
Use rule: Shift 973

State stack: 0 9 1 25 46 99 105 89 47 119 270 612 973 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA 
Now token: INT_CONST ( 1 )
Use rule: Shift 330

State stack: 0 9 1 25 46 99 105 89 47 119 270 612 973 330 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA INT_CONST 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <num-const> -> INT_CONST 
Use rule: Goto 313

State stack: 0 9 1 25 46 99 105 89 47 119 270 612 973 313 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <num-const> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <constant> -> <num-const> 
Use rule: Goto 304

State stack: 0 9 1 25 46 99 105 89 47 119 270 612 973 304 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <constant> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <prim-expr> -> <constant> 
Use rule: Goto 315

State stack: 0 9 1 25 46 99 105 89 47 119 270 612 973 315 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <prim-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 314

State stack: 0 9 1 25 46 99 105 89 47 119 270 612 973 314 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <postfix-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 324

State stack: 0 9 1 25 46 99 105 89 47 119 270 612 973 324 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <unary-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 302

State stack: 0 9 1 25 46 99 105 89 47 119 270 612 973 302 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <cast-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 312

State stack: 0 9 1 25 46 99 105 89 47 119 270 612 973 312 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <multiplicative-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 299

State stack: 0 9 1 25 46 99 105 89 47 119 270 612 973 299 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <additive-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 317

State stack: 0 9 1 25 46 99 105 89 47 119 270 612 973 317 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <shift-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 316

State stack: 0 9 1 25 46 99 105 89 47 119 270 612 973 316 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <rel-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 306

State stack: 0 9 1 25 46 99 105 89 47 119 270 612 973 306 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <eq-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 300

State stack: 0 9 1 25 46 99 105 89 47 119 270 612 973 300 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <and-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 307

State stack: 0 9 1 25 46 99 105 89 47 119 270 612 973 307 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <exc-or-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 309

State stack: 0 9 1 25 46 99 105 89 47 119 270 612 973 309 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <inc-or-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 310

State stack: 0 9 1 25 46 99 105 89 47 119 270 612 973 310 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <land-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 311

State stack: 0 9 1 25 46 99 105 89 47 119 270 612 973 311 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <lor-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 303

State stack: 0 9 1 25 46 99 105 89 47 119 270 612 973 303 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <cond-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 1284

State stack: 0 9 1 25 46 99 105 89 47 119 270 612 973 1284 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <asn-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <arg-expr-list> -> <arg-expr-list> DELIM_COMMA <asn-expr> 
Use rule: Goto 612

State stack: 0 9 1 25 46 99 105 89 47 119 270 612 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <arg-expr-list> 
Now token: DELIM_RPAR ( ) )
Use rule: Shift 974

State stack: 0 9 1 25 46 99 105 89 47 119 270 612 974 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
Use rule: Goto 119

State stack: 0 9 1 25 46 99 105 89 47 119 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <postfix-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 125

State stack: 0 9 1 25 46 99 105 89 47 125 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <unary-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 101

State stack: 0 9 1 25 46 99 105 89 47 101 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <cast-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 117

State stack: 0 9 1 25 46 99 105 89 47 117 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <multiplicative-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 96

State stack: 0 9 1 25 46 99 105 89 47 96 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <additive-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 123

State stack: 0 9 1 25 46 99 105 89 47 123 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <shift-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 121

State stack: 0 9 1 25 46 99 105 89 47 121 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <rel-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 107

State stack: 0 9 1 25 46 99 105 89 47 107 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <eq-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 97

State stack: 0 9 1 25 46 99 105 89 47 97 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <and-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 108

State stack: 0 9 1 25 46 99 105 89 47 108 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <exc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 111

State stack: 0 9 1 25 46 99 105 89 47 111 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <inc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 115

State stack: 0 9 1 25 46 99 105 89 47 115 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <land-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 116

State stack: 0 9 1 25 46 99 105 89 47 116 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <lor-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 103

State stack: 0 9 1 25 46 99 105 89 47 103 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <cond-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 156

State stack: 0 9 1 25 46 99 105 89 47 156 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <asn-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <initializer> -> <asn-expr> 
Use rule: Goto 157

State stack: 0 9 1 25 46 99 105 89 47 157 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <declarator> OP_ASN <initializer> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <init-declarator> -> <declarator> OP_ASN <initializer> 
Use rule: Goto 28

State stack: 0 9 1 25 46 99 105 28 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <init-declarator> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <init-declarator-list> -> <init-declarator> 
Use rule: Goto 256

State stack: 0 9 1 25 46 99 105 256 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <init-declarator-list> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Shift 572

State stack: 0 9 1 25 46 99 105 256 572 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
Now token: IDENTIFIER ( x )
Use rule: Reduce <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
Use rule: Goto 106

State stack: 0 9 1 25 46 99 106 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <decl> 
Now token: IDENTIFIER ( x )
Use rule: Reduce <blk-item> -> <decl> 
Use rule: Goto 254

State stack: 0 9 1 25 46 99 254 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <blk-item> 
Now token: IDENTIFIER ( x )
Use rule: Reduce <blk-item-list> -> <blk-item-list> <blk-item> 
Use rule: Goto 99

State stack: 0 9 1 25 46 99 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> 
Now token: IDENTIFIER ( x )
Use rule: Shift 133

State stack: 0 9 1 25 46 99 133 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> IDENTIFIER 
Now token: OP_ASN ( = )
Use rule: Reduce <prim-expr> -> IDENTIFIER 
Use rule: Goto 120

State stack: 0 9 1 25 46 99 120 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <prim-expr> 
Now token: OP_ASN ( = )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 119

State stack: 0 9 1 25 46 99 119 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <postfix-expr> 
Now token: OP_ASN ( = )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 125

State stack: 0 9 1 25 46 99 125 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> 
Now token: OP_ASN ( = )
Use rule: Shift 285

State stack: 0 9 1 25 46 99 125 285 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> OP_ASN 
Now token: DELIM_LPAR ( ( )
Use rule: Reduce <asn-op> -> OP_ASN 
Use rule: Goto 282

State stack: 0 9 1 25 46 99 125 282 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> 
Now token: DELIM_LPAR ( ( )
Use rule: Shift 129

State stack: 0 9 1 25 46 99 125 282 129 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR 
Now token: INT_CONST ( 3 )
Use rule: Shift 330

State stack: 0 9 1 25 46 99 125 282 129 330 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR INT_CONST 
Now token: OP_LT ( < )
Use rule: Reduce <num-const> -> INT_CONST 
Use rule: Goto 313

State stack: 0 9 1 25 46 99 125 282 129 313 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <num-const> 
Now token: OP_LT ( < )
Use rule: Reduce <constant> -> <num-const> 
Use rule: Goto 304

State stack: 0 9 1 25 46 99 125 282 129 304 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <constant> 
Now token: OP_LT ( < )
Use rule: Reduce <prim-expr> -> <constant> 
Use rule: Goto 315

State stack: 0 9 1 25 46 99 125 282 129 315 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <prim-expr> 
Now token: OP_LT ( < )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 314

State stack: 0 9 1 25 46 99 125 282 129 314 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <postfix-expr> 
Now token: OP_LT ( < )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 324

State stack: 0 9 1 25 46 99 125 282 129 324 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <unary-expr> 
Now token: OP_LT ( < )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 302

State stack: 0 9 1 25 46 99 125 282 129 302 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <cast-expr> 
Now token: OP_LT ( < )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 312

State stack: 0 9 1 25 46 99 125 282 129 312 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <multiplicative-expr> 
Now token: OP_LT ( < )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 299

State stack: 0 9 1 25 46 99 125 282 129 299 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <additive-expr> 
Now token: OP_LT ( < )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 317

State stack: 0 9 1 25 46 99 125 282 129 317 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <shift-expr> 
Now token: OP_LT ( < )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 316

State stack: 0 9 1 25 46 99 125 282 129 316 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <rel-expr> 
Now token: OP_LT ( < )
Use rule: Shift 679

State stack: 0 9 1 25 46 99 125 282 129 316 679 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <rel-expr> OP_LT 
Now token: INT_CONST ( 2 )
Use rule: Shift 1025

State stack: 0 9 1 25 46 99 125 282 129 316 679 1025 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <rel-expr> OP_LT INT_CONST 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <num-const> -> INT_CONST 
Use rule: Goto 1016

State stack: 0 9 1 25 46 99 125 282 129 316 679 1016 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <rel-expr> OP_LT <num-const> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <constant> -> <num-const> 
Use rule: Goto 1014

State stack: 0 9 1 25 46 99 125 282 129 316 679 1014 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <rel-expr> OP_LT <constant> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <prim-expr> -> <constant> 
Use rule: Goto 1018

State stack: 0 9 1 25 46 99 125 282 129 316 679 1018 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <rel-expr> OP_LT <prim-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 1017

State stack: 0 9 1 25 46 99 125 282 129 316 679 1017 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <rel-expr> OP_LT <postfix-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 1019

State stack: 0 9 1 25 46 99 125 282 129 316 679 1019 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <rel-expr> OP_LT <unary-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 302

State stack: 0 9 1 25 46 99 125 282 129 316 679 302 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <rel-expr> OP_LT <cast-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 312

State stack: 0 9 1 25 46 99 125 282 129 316 679 312 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <rel-expr> OP_LT <multiplicative-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 299

State stack: 0 9 1 25 46 99 125 282 129 316 679 299 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <rel-expr> OP_LT <additive-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 1051

State stack: 0 9 1 25 46 99 125 282 129 316 679 1051 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <rel-expr> OP_LT <shift-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
Use rule: Goto 316

State stack: 0 9 1 25 46 99 125 282 129 316 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <rel-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 306

State stack: 0 9 1 25 46 99 125 282 129 306 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <eq-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 300

State stack: 0 9 1 25 46 99 125 282 129 300 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <and-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 307

State stack: 0 9 1 25 46 99 125 282 129 307 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <exc-or-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 309

State stack: 0 9 1 25 46 99 125 282 129 309 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <inc-or-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 310

State stack: 0 9 1 25 46 99 125 282 129 310 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <land-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 311

State stack: 0 9 1 25 46 99 125 282 129 311 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <lor-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 303

State stack: 0 9 1 25 46 99 125 282 129 303 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <cond-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 301

State stack: 0 9 1 25 46 99 125 282 129 301 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <asn-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <expr> -> <asn-expr> 
Use rule: Goto 308

State stack: 0 9 1 25 46 99 125 282 129 308 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Shift 662

State stack: 0 9 1 25 46 99 125 282 129 308 662 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> DELIM_LPAR <expr> DELIM_RPAR 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
Use rule: Goto 120

State stack: 0 9 1 25 46 99 125 282 120 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <prim-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 119

State stack: 0 9 1 25 46 99 125 282 119 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <postfix-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 125

State stack: 0 9 1 25 46 99 125 282 125 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 101

State stack: 0 9 1 25 46 99 125 282 101 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <cast-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 117

State stack: 0 9 1 25 46 99 125 282 117 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <multiplicative-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 96

State stack: 0 9 1 25 46 99 125 282 96 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <additive-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 123

State stack: 0 9 1 25 46 99 125 282 123 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <shift-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 121

State stack: 0 9 1 25 46 99 125 282 121 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <rel-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 107

State stack: 0 9 1 25 46 99 125 282 107 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <eq-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 97

State stack: 0 9 1 25 46 99 125 282 97 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <and-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 108

State stack: 0 9 1 25 46 99 125 282 108 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <exc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 111

State stack: 0 9 1 25 46 99 125 282 111 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <inc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 115

State stack: 0 9 1 25 46 99 125 282 115 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <land-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 116

State stack: 0 9 1 25 46 99 125 282 116 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 103

State stack: 0 9 1 25 46 99 125 282 103 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <cond-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 652

State stack: 0 9 1 25 46 99 125 282 652 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <asn-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <asn-expr> -> <unary-expr> <asn-op> <asn-expr> 
Use rule: Goto 98

State stack: 0 9 1 25 46 99 98 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <asn-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <expr> -> <asn-expr> 
Use rule: Goto 110

State stack: 0 9 1 25 46 99 110 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Shift 262

State stack: 0 9 1 25 46 99 110 262 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <expr> DELIM_SEMICOLON 
Now token: KEYWORD ( if )
Use rule: Reduce <expr-stmt> -> <expr> DELIM_SEMICOLON 
Use rule: Goto 109

State stack: 0 9 1 25 46 99 109 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <expr-stmt> 
Now token: KEYWORD ( if )
Use rule: Reduce <stmt> -> <expr-stmt> 
Use rule: Goto 124

State stack: 0 9 1 25 46 99 124 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <stmt> 
Now token: KEYWORD ( if )
Use rule: Reduce <blk-item> -> <stmt> 
Use rule: Goto 254

State stack: 0 9 1 25 46 99 254 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <blk-item> 
Now token: KEYWORD ( if )
Use rule: Reduce <blk-item-list> -> <blk-item-list> <blk-item> 
Use rule: Goto 99

State stack: 0 9 1 25 46 99 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> 
Now token: KEYWORD ( if )
Use rule: Shift 151

State stack: 0 9 1 25 46 99 151 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if 
Now token: DELIM_LPAR ( ( )
Use rule: Shift 405

State stack: 0 9 1 25 46 99 151 405 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR 
Now token: IDENTIFIER ( z )
Use rule: Shift 329

State stack: 0 9 1 25 46 99 151 405 329 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR IDENTIFIER 
Now token: OP_EQ ( == )
Use rule: Reduce <prim-expr> -> IDENTIFIER 
Use rule: Goto 315

State stack: 0 9 1 25 46 99 151 405 315 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <prim-expr> 
Now token: OP_EQ ( == )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 314

State stack: 0 9 1 25 46 99 151 405 314 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <postfix-expr> 
Now token: OP_EQ ( == )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 324

State stack: 0 9 1 25 46 99 151 405 324 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <unary-expr> 
Now token: OP_EQ ( == )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 302

State stack: 0 9 1 25 46 99 151 405 302 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <cast-expr> 
Now token: OP_EQ ( == )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 312

State stack: 0 9 1 25 46 99 151 405 312 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <multiplicative-expr> 
Now token: OP_EQ ( == )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 299

State stack: 0 9 1 25 46 99 151 405 299 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <additive-expr> 
Now token: OP_EQ ( == )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 317

State stack: 0 9 1 25 46 99 151 405 317 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <shift-expr> 
Now token: OP_EQ ( == )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 316

State stack: 0 9 1 25 46 99 151 405 316 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <rel-expr> 
Now token: OP_EQ ( == )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 306

State stack: 0 9 1 25 46 99 151 405 306 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <eq-expr> 
Now token: OP_EQ ( == )
Use rule: Shift 658

State stack: 0 9 1 25 46 99 151 405 306 658 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <eq-expr> OP_EQ 
Now token: INT_CONST ( 1 )
Use rule: Shift 1025

State stack: 0 9 1 25 46 99 151 405 306 658 1025 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <eq-expr> OP_EQ INT_CONST 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <num-const> -> INT_CONST 
Use rule: Goto 1016

State stack: 0 9 1 25 46 99 151 405 306 658 1016 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <eq-expr> OP_EQ <num-const> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <constant> -> <num-const> 
Use rule: Goto 1014

State stack: 0 9 1 25 46 99 151 405 306 658 1014 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <eq-expr> OP_EQ <constant> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <prim-expr> -> <constant> 
Use rule: Goto 1018

State stack: 0 9 1 25 46 99 151 405 306 658 1018 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <eq-expr> OP_EQ <prim-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 1017

State stack: 0 9 1 25 46 99 151 405 306 658 1017 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <eq-expr> OP_EQ <postfix-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 1019

State stack: 0 9 1 25 46 99 151 405 306 658 1019 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <eq-expr> OP_EQ <unary-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 302

State stack: 0 9 1 25 46 99 151 405 306 658 302 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <eq-expr> OP_EQ <cast-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 312

State stack: 0 9 1 25 46 99 151 405 306 658 312 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <eq-expr> OP_EQ <multiplicative-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 299

State stack: 0 9 1 25 46 99 151 405 306 658 299 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <eq-expr> OP_EQ <additive-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 317

State stack: 0 9 1 25 46 99 151 405 306 658 317 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <eq-expr> OP_EQ <shift-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 1032

State stack: 0 9 1 25 46 99 151 405 306 658 1032 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <eq-expr> OP_EQ <rel-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
Use rule: Goto 306

State stack: 0 9 1 25 46 99 151 405 306 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <eq-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 300

State stack: 0 9 1 25 46 99 151 405 300 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <and-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 307

State stack: 0 9 1 25 46 99 151 405 307 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <exc-or-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 309

State stack: 0 9 1 25 46 99 151 405 309 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <inc-or-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 310

State stack: 0 9 1 25 46 99 151 405 310 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <land-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 311

State stack: 0 9 1 25 46 99 151 405 311 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <lor-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 303

State stack: 0 9 1 25 46 99 151 405 303 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <cond-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 301

State stack: 0 9 1 25 46 99 151 405 301 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <asn-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <expr> -> <asn-expr> 
Use rule: Goto 765

State stack: 0 9 1 25 46 99 151 405 765 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Shift 1124

State stack: 0 9 1 25 46 99 151 405 765 1124 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR 
Now token: DELIM_LCURBRACE ( { )
Use rule: Shift 1396

State stack: 0 9 1 25 46 99 151 405 765 1124 1396 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE 
Now token: OP_DEC ( -- )
Use rule: Shift 137

State stack: 0 9 1 25 46 99 151 405 765 1124 1396 137 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE OP_DEC 
Now token: IDENTIFIER ( y )
Use rule: Shift 159

State stack: 0 9 1 25 46 99 151 405 765 1124 1396 137 159 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE OP_DEC IDENTIFIER 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <prim-expr> -> IDENTIFIER 
Use rule: Goto 120

State stack: 0 9 1 25 46 99 151 405 765 1124 1396 137 120 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE OP_DEC <prim-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 119

State stack: 0 9 1 25 46 99 151 405 765 1124 1396 137 119 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE OP_DEC <postfix-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 347

State stack: 0 9 1 25 46 99 151 405 765 1124 1396 137 347 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE OP_DEC <unary-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <unary-expr> -> OP_DEC <unary-expr> 
Use rule: Goto 125

State stack: 0 9 1 25 46 99 151 405 765 1124 1396 125 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <unary-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 101

State stack: 0 9 1 25 46 99 151 405 765 1124 1396 101 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <cast-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 117

State stack: 0 9 1 25 46 99 151 405 765 1124 1396 117 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <multiplicative-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 96

State stack: 0 9 1 25 46 99 151 405 765 1124 1396 96 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <additive-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 123

State stack: 0 9 1 25 46 99 151 405 765 1124 1396 123 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <shift-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 121

State stack: 0 9 1 25 46 99 151 405 765 1124 1396 121 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <rel-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 107

State stack: 0 9 1 25 46 99 151 405 765 1124 1396 107 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <eq-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 97

State stack: 0 9 1 25 46 99 151 405 765 1124 1396 97 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <and-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 108

State stack: 0 9 1 25 46 99 151 405 765 1124 1396 108 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <exc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 111

State stack: 0 9 1 25 46 99 151 405 765 1124 1396 111 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <inc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 115

State stack: 0 9 1 25 46 99 151 405 765 1124 1396 115 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <land-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 116

State stack: 0 9 1 25 46 99 151 405 765 1124 1396 116 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <lor-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 103

State stack: 0 9 1 25 46 99 151 405 765 1124 1396 103 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <cond-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 98

State stack: 0 9 1 25 46 99 151 405 765 1124 1396 98 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <asn-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <expr> -> <asn-expr> 
Use rule: Goto 110

State stack: 0 9 1 25 46 99 151 405 765 1124 1396 110 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Shift 262

State stack: 0 9 1 25 46 99 151 405 765 1124 1396 110 262 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <expr> DELIM_SEMICOLON 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <expr-stmt> -> <expr> DELIM_SEMICOLON 
Use rule: Goto 109

State stack: 0 9 1 25 46 99 151 405 765 1124 1396 109 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <expr-stmt> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <stmt> -> <expr-stmt> 
Use rule: Goto 124

State stack: 0 9 1 25 46 99 151 405 765 1124 1396 124 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <stmt> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <blk-item> -> <stmt> 
Use rule: Goto 100

State stack: 0 9 1 25 46 99 151 405 765 1124 1396 100 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <blk-item-list> -> <blk-item> 
Use rule: Goto 1556

State stack: 0 9 1 25 46 99 151 405 765 1124 1396 1556 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Shift 1641

State stack: 0 9 1 25 46 99 151 405 765 1124 1396 1556 1641 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
Now token: KEYWORD ( else )
Use rule: Reduce <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
Use rule: Goto 1388

State stack: 0 9 1 25 46 99 151 405 765 1124 1388 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <comp-stmt> 
Now token: KEYWORD ( else )
Use rule: Reduce <stmt> -> <comp-stmt> 
Use rule: Goto 1395

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
Now token: KEYWORD ( else )
Use rule: Shift 1555

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else 
Now token: KEYWORD ( if )
Use rule: Shift 151

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if 
Now token: DELIM_LPAR ( ( )
Use rule: Shift 405

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR 
Now token: IDENTIFIER ( j )
Use rule: Shift 329

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 329 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR IDENTIFIER 
Now token: OP_GE ( >= )
Use rule: Reduce <prim-expr> -> IDENTIFIER 
Use rule: Goto 315

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 315 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <prim-expr> 
Now token: OP_GE ( >= )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 314

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 314 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <postfix-expr> 
Now token: OP_GE ( >= )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 324

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 324 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <unary-expr> 
Now token: OP_GE ( >= )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 302

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 302 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <cast-expr> 
Now token: OP_GE ( >= )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 312

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 312 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <multiplicative-expr> 
Now token: OP_GE ( >= )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 299

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 299 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <additive-expr> 
Now token: OP_GE ( >= )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 317

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 317 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <shift-expr> 
Now token: OP_GE ( >= )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 316

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 316 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <rel-expr> 
Now token: OP_GE ( >= )
Use rule: Shift 676

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 316 676 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <rel-expr> OP_GE 
Now token: INT_CONST ( 2 )
Use rule: Shift 1025

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 316 676 1025 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <rel-expr> OP_GE INT_CONST 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <num-const> -> INT_CONST 
Use rule: Goto 1016

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 316 676 1016 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <rel-expr> OP_GE <num-const> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <constant> -> <num-const> 
Use rule: Goto 1014

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 316 676 1014 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <rel-expr> OP_GE <constant> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <prim-expr> -> <constant> 
Use rule: Goto 1018

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 316 676 1018 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <rel-expr> OP_GE <prim-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 1017

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 316 676 1017 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <rel-expr> OP_GE <postfix-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 1019

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 316 676 1019 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <rel-expr> OP_GE <unary-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 302

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 316 676 302 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <rel-expr> OP_GE <cast-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 312

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 316 676 312 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <rel-expr> OP_GE <multiplicative-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 299

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 316 676 299 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <rel-expr> OP_GE <additive-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 1048

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 316 676 1048 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <rel-expr> OP_GE <shift-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
Use rule: Goto 316

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 316 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <rel-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 306

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 306 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <eq-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 300

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 300 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <and-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 307

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 307 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <exc-or-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 309

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 309 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <inc-or-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 310

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 310 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <land-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 311

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 311 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <lor-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 303

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 303 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <cond-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 301

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 301 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <asn-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <expr> -> <asn-expr> 
Use rule: Goto 765

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Shift 1124

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR 
Now token: DELIM_LCURBRACE ( { )
Use rule: Shift 1396

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE 
Now token: IDENTIFIER ( y )
Use rule: Shift 133

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 133 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE IDENTIFIER 
Now token: OP_ADDASN ( += )
Use rule: Reduce <prim-expr> -> IDENTIFIER 
Use rule: Goto 120

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 120 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <prim-expr> 
Now token: OP_ADDASN ( += )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 119

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 119 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <postfix-expr> 
Now token: OP_ADDASN ( += )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 125

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 125 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <unary-expr> 
Now token: OP_ADDASN ( += )
Use rule: Shift 283

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 125 283 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <unary-expr> OP_ADDASN 
Now token: INT_CONST ( 2 )
Use rule: Reduce <asn-op> -> OP_ADDASN 
Use rule: Goto 282

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 125 282 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <unary-expr> <asn-op> 
Now token: INT_CONST ( 2 )
Use rule: Shift 134

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 125 282 134 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <unary-expr> <asn-op> INT_CONST 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <num-const> -> INT_CONST 
Use rule: Goto 118

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 125 282 118 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <unary-expr> <asn-op> <num-const> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <constant> -> <num-const> 
Use rule: Goto 104

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 125 282 104 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <unary-expr> <asn-op> <constant> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <prim-expr> -> <constant> 
Use rule: Goto 120

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 125 282 120 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <unary-expr> <asn-op> <prim-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 119

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 125 282 119 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <unary-expr> <asn-op> <postfix-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 125

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 125 282 125 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <unary-expr> <asn-op> <unary-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 101

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 125 282 101 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <unary-expr> <asn-op> <cast-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 117

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 125 282 117 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <unary-expr> <asn-op> <multiplicative-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 96

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 125 282 96 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <unary-expr> <asn-op> <additive-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 123

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 125 282 123 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <unary-expr> <asn-op> <shift-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 121

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 125 282 121 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <unary-expr> <asn-op> <rel-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 107

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 125 282 107 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <unary-expr> <asn-op> <eq-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 97

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 125 282 97 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <unary-expr> <asn-op> <and-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 108

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 125 282 108 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <unary-expr> <asn-op> <exc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 111

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 125 282 111 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <unary-expr> <asn-op> <inc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 115

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 125 282 115 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <unary-expr> <asn-op> <land-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 116

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 125 282 116 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <unary-expr> <asn-op> <lor-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 103

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 125 282 103 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <unary-expr> <asn-op> <cond-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 652

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 125 282 652 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <unary-expr> <asn-op> <asn-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <asn-expr> -> <unary-expr> <asn-op> <asn-expr> 
Use rule: Goto 98

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 98 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <asn-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <expr> -> <asn-expr> 
Use rule: Goto 110

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 110 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Shift 262

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 110 262 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <expr> DELIM_SEMICOLON 
Now token: IDENTIFIER ( y )
Use rule: Reduce <expr-stmt> -> <expr> DELIM_SEMICOLON 
Use rule: Goto 109

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 109 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <expr-stmt> 
Now token: IDENTIFIER ( y )
Use rule: Reduce <stmt> -> <expr-stmt> 
Use rule: Goto 124

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 124 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <stmt> 
Now token: IDENTIFIER ( y )
Use rule: Reduce <blk-item> -> <stmt> 
Use rule: Goto 100

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 100 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item> 
Now token: IDENTIFIER ( y )
Use rule: Reduce <blk-item-list> -> <blk-item> 
Use rule: Goto 1556

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> 
Now token: IDENTIFIER ( y )
Use rule: Shift 133

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 133 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> IDENTIFIER 
Now token: OP_ASN ( = )
Use rule: Reduce <prim-expr> -> IDENTIFIER 
Use rule: Goto 120

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 120 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <prim-expr> 
Now token: OP_ASN ( = )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 119

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 119 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <postfix-expr> 
Now token: OP_ASN ( = )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 125

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> 
Now token: OP_ASN ( = )
Use rule: Shift 285

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 285 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> OP_ASN 
Now token: IDENTIFIER ( t )
Use rule: Reduce <asn-op> -> OP_ASN 
Use rule: Goto 282

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> 
Now token: IDENTIFIER ( t )
Use rule: Shift 159

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 159 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> IDENTIFIER 
Now token: OP_ASN ( = )
Use rule: Reduce <prim-expr> -> IDENTIFIER 
Use rule: Goto 120

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 120 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <prim-expr> 
Now token: OP_ASN ( = )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 119

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 119 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <postfix-expr> 
Now token: OP_ASN ( = )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 125

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> 
Now token: OP_ASN ( = )
Use rule: Shift 285

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 285 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> OP_ASN 
Now token: IDENTIFIER ( t )
Use rule: Reduce <asn-op> -> OP_ASN 
Use rule: Goto 282

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 282 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> <asn-op> 
Now token: IDENTIFIER ( t )
Use rule: Shift 159

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 282 159 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> <asn-op> IDENTIFIER 
Now token: OP_ADD ( + )
Use rule: Reduce <prim-expr> -> IDENTIFIER 
Use rule: Goto 120

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 282 120 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> <asn-op> <prim-expr> 
Now token: OP_ADD ( + )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 119

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 282 119 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> <asn-op> <postfix-expr> 
Now token: OP_ADD ( + )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 125

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 282 125 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> <asn-op> <unary-expr> 
Now token: OP_ADD ( + )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 101

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 282 101 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> <asn-op> <cast-expr> 
Now token: OP_ADD ( + )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 117

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 282 117 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> <asn-op> <multiplicative-expr> 
Now token: OP_ADD ( + )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 96

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 282 96 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> <asn-op> <additive-expr> 
Now token: OP_ADD ( + )
Use rule: Shift 251

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 282 96 251 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> <asn-op> <additive-expr> OP_ADD 
Now token: INT_CONST ( 1 )
Use rule: Shift 565

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 282 96 251 565 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> <asn-op> <additive-expr> OP_ADD INT_CONST 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <num-const> -> INT_CONST 
Use rule: Goto 556

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 282 96 251 556 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> <asn-op> <additive-expr> OP_ADD <num-const> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <constant> -> <num-const> 
Use rule: Goto 554

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 282 96 251 554 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> <asn-op> <additive-expr> OP_ADD <constant> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <prim-expr> -> <constant> 
Use rule: Goto 558

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 282 96 251 558 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> <asn-op> <additive-expr> OP_ADD <prim-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 557

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 282 96 251 557 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> <asn-op> <additive-expr> OP_ADD <postfix-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 559

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 282 96 251 559 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> <asn-op> <additive-expr> OP_ADD <unary-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 101

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 282 96 251 101 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> <asn-op> <additive-expr> OP_ADD <cast-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 555

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 282 96 251 555 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> <asn-op> <additive-expr> OP_ADD <multiplicative-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
Use rule: Goto 96

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 282 96 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> <asn-op> <additive-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 123

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 282 123 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> <asn-op> <shift-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 121

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 282 121 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> <asn-op> <rel-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 107

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 282 107 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> <asn-op> <eq-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 97

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 282 97 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> <asn-op> <and-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 108

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 282 108 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> <asn-op> <exc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 111

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 282 111 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> <asn-op> <inc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 115

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 282 115 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> <asn-op> <land-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 116

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 282 116 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> <asn-op> <lor-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 103

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 282 103 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> <asn-op> <cond-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 652

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 125 282 652 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> <asn-op> <asn-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <asn-expr> -> <unary-expr> <asn-op> <asn-expr> 
Use rule: Goto 652

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 125 282 652 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <asn-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <asn-expr> -> <unary-expr> <asn-op> <asn-expr> 
Use rule: Goto 98

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 98 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <asn-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <expr> -> <asn-expr> 
Use rule: Goto 110

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 110 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Shift 262

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 110 262 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <expr> DELIM_SEMICOLON 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <expr-stmt> -> <expr> DELIM_SEMICOLON 
Use rule: Goto 109

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 109 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <expr-stmt> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <stmt> -> <expr-stmt> 
Use rule: Goto 124

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 124 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <stmt> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <blk-item> -> <stmt> 
Use rule: Goto 254

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 254 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> <blk-item> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <blk-item-list> -> <blk-item-list> <blk-item> 
Use rule: Goto 1556

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Shift 1641

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1396 1556 1641 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
Now token: IDENTIFIER ( z )
Use rule: Reduce <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
Use rule: Goto 1388

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1388 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR <comp-stmt> 
Now token: IDENTIFIER ( z )
Use rule: Reduce <stmt> -> <comp-stmt> 
Use rule: Goto 1395

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 151 405 765 1124 1395 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
Now token: IDENTIFIER ( z )
Use rule: Reduce <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
Use rule: Goto 122

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 122 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <sele-stmt> 
Now token: IDENTIFIER ( z )
Use rule: Reduce <stmt> -> <sele-stmt> 
Use rule: Goto 1640

State stack: 0 9 1 25 46 99 151 405 765 1124 1395 1555 1640 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
Now token: IDENTIFIER ( z )
Use rule: Reduce <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
Use rule: Goto 122

State stack: 0 9 1 25 46 99 122 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <sele-stmt> 
Now token: IDENTIFIER ( z )
Use rule: Reduce <stmt> -> <sele-stmt> 
Use rule: Goto 124

State stack: 0 9 1 25 46 99 124 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <stmt> 
Now token: IDENTIFIER ( z )
Use rule: Reduce <blk-item> -> <stmt> 
Use rule: Goto 254

State stack: 0 9 1 25 46 99 254 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <blk-item> 
Now token: IDENTIFIER ( z )
Use rule: Reduce <blk-item-list> -> <blk-item-list> <blk-item> 
Use rule: Goto 99

State stack: 0 9 1 25 46 99 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> 
Now token: IDENTIFIER ( z )
Use rule: Shift 133

State stack: 0 9 1 25 46 99 133 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> IDENTIFIER 
Now token: OP_ASN ( = )
Use rule: Reduce <prim-expr> -> IDENTIFIER 
Use rule: Goto 120

State stack: 0 9 1 25 46 99 120 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <prim-expr> 
Now token: OP_ASN ( = )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 119

State stack: 0 9 1 25 46 99 119 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <postfix-expr> 
Now token: OP_ASN ( = )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 125

State stack: 0 9 1 25 46 99 125 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> 
Now token: OP_ASN ( = )
Use rule: Shift 285

State stack: 0 9 1 25 46 99 125 285 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> OP_ASN 
Now token: INT_CONST ( 3 )
Use rule: Reduce <asn-op> -> OP_ASN 
Use rule: Goto 282

State stack: 0 9 1 25 46 99 125 282 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> 
Now token: INT_CONST ( 3 )
Use rule: Shift 134

State stack: 0 9 1 25 46 99 125 282 134 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> INT_CONST 
Now token: OP_GT ( > )
Use rule: Reduce <num-const> -> INT_CONST 
Use rule: Goto 118

State stack: 0 9 1 25 46 99 125 282 118 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <num-const> 
Now token: OP_GT ( > )
Use rule: Reduce <constant> -> <num-const> 
Use rule: Goto 104

State stack: 0 9 1 25 46 99 125 282 104 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <constant> 
Now token: OP_GT ( > )
Use rule: Reduce <prim-expr> -> <constant> 
Use rule: Goto 120

State stack: 0 9 1 25 46 99 125 282 120 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <prim-expr> 
Now token: OP_GT ( > )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 119

State stack: 0 9 1 25 46 99 125 282 119 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <postfix-expr> 
Now token: OP_GT ( > )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 125

State stack: 0 9 1 25 46 99 125 282 125 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <unary-expr> 
Now token: OP_GT ( > )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 101

State stack: 0 9 1 25 46 99 125 282 101 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <cast-expr> 
Now token: OP_GT ( > )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 117

State stack: 0 9 1 25 46 99 125 282 117 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <multiplicative-expr> 
Now token: OP_GT ( > )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 96

State stack: 0 9 1 25 46 99 125 282 96 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <additive-expr> 
Now token: OP_GT ( > )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 123

State stack: 0 9 1 25 46 99 125 282 123 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <shift-expr> 
Now token: OP_GT ( > )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 121

State stack: 0 9 1 25 46 99 125 282 121 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <rel-expr> 
Now token: OP_GT ( > )
Use rule: Shift 277

State stack: 0 9 1 25 46 99 125 282 121 277 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <rel-expr> OP_GT 
Now token: INT_CONST ( 2 )
Use rule: Shift 565

State stack: 0 9 1 25 46 99 125 282 121 277 565 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <rel-expr> OP_GT INT_CONST 
Now token: DELIM_QUESTION ( ? )
Use rule: Reduce <num-const> -> INT_CONST 
Use rule: Goto 556

State stack: 0 9 1 25 46 99 125 282 121 277 556 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <rel-expr> OP_GT <num-const> 
Now token: DELIM_QUESTION ( ? )
Use rule: Reduce <constant> -> <num-const> 
Use rule: Goto 554

State stack: 0 9 1 25 46 99 125 282 121 277 554 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <rel-expr> OP_GT <constant> 
Now token: DELIM_QUESTION ( ? )
Use rule: Reduce <prim-expr> -> <constant> 
Use rule: Goto 558

State stack: 0 9 1 25 46 99 125 282 121 277 558 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <rel-expr> OP_GT <prim-expr> 
Now token: DELIM_QUESTION ( ? )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 557

State stack: 0 9 1 25 46 99 125 282 121 277 557 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <rel-expr> OP_GT <postfix-expr> 
Now token: DELIM_QUESTION ( ? )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 559

State stack: 0 9 1 25 46 99 125 282 121 277 559 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <rel-expr> OP_GT <unary-expr> 
Now token: DELIM_QUESTION ( ? )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 101

State stack: 0 9 1 25 46 99 125 282 121 277 101 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <rel-expr> OP_GT <cast-expr> 
Now token: DELIM_QUESTION ( ? )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 117

State stack: 0 9 1 25 46 99 125 282 121 277 117 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <rel-expr> OP_GT <multiplicative-expr> 
Now token: DELIM_QUESTION ( ? )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 96

State stack: 0 9 1 25 46 99 125 282 121 277 96 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <rel-expr> OP_GT <additive-expr> 
Now token: DELIM_QUESTION ( ? )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 647

State stack: 0 9 1 25 46 99 125 282 121 277 647 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <rel-expr> OP_GT <shift-expr> 
Now token: DELIM_QUESTION ( ? )
Use rule: Reduce <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
Use rule: Goto 121

State stack: 0 9 1 25 46 99 125 282 121 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <rel-expr> 
Now token: DELIM_QUESTION ( ? )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 107

State stack: 0 9 1 25 46 99 125 282 107 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <eq-expr> 
Now token: DELIM_QUESTION ( ? )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 97

State stack: 0 9 1 25 46 99 125 282 97 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <and-expr> 
Now token: DELIM_QUESTION ( ? )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 108

State stack: 0 9 1 25 46 99 125 282 108 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <exc-or-expr> 
Now token: DELIM_QUESTION ( ? )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 111

State stack: 0 9 1 25 46 99 125 282 111 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <inc-or-expr> 
Now token: DELIM_QUESTION ( ? )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 115

State stack: 0 9 1 25 46 99 125 282 115 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <land-expr> 
Now token: DELIM_QUESTION ( ? )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 116

State stack: 0 9 1 25 46 99 125 282 116 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> 
Now token: DELIM_QUESTION ( ? )
Use rule: Shift 265

State stack: 0 9 1 25 46 99 125 282 116 265 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION 
Now token: INT_CONST ( 1 )
Use rule: Shift 603

State stack: 0 9 1 25 46 99 125 282 116 265 603 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION INT_CONST 
Now token: DELIM_COLON ( : )
Use rule: Reduce <num-const> -> INT_CONST 
Use rule: Goto 592

State stack: 0 9 1 25 46 99 125 282 116 265 592 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <num-const> 
Now token: DELIM_COLON ( : )
Use rule: Reduce <constant> -> <num-const> 
Use rule: Goto 584

State stack: 0 9 1 25 46 99 125 282 116 265 584 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <constant> 
Now token: DELIM_COLON ( : )
Use rule: Reduce <prim-expr> -> <constant> 
Use rule: Goto 594

State stack: 0 9 1 25 46 99 125 282 116 265 594 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <prim-expr> 
Now token: DELIM_COLON ( : )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 593

State stack: 0 9 1 25 46 99 125 282 116 265 593 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <postfix-expr> 
Now token: DELIM_COLON ( : )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 597

State stack: 0 9 1 25 46 99 125 282 116 265 597 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <unary-expr> 
Now token: DELIM_COLON ( : )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 582

State stack: 0 9 1 25 46 99 125 282 116 265 582 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <cast-expr> 
Now token: DELIM_COLON ( : )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 591

State stack: 0 9 1 25 46 99 125 282 116 265 591 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <multiplicative-expr> 
Now token: DELIM_COLON ( : )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 579

State stack: 0 9 1 25 46 99 125 282 116 265 579 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <additive-expr> 
Now token: DELIM_COLON ( : )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 596

State stack: 0 9 1 25 46 99 125 282 116 265 596 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <shift-expr> 
Now token: DELIM_COLON ( : )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 595

State stack: 0 9 1 25 46 99 125 282 116 265 595 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <rel-expr> 
Now token: DELIM_COLON ( : )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 585

State stack: 0 9 1 25 46 99 125 282 116 265 585 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <eq-expr> 
Now token: DELIM_COLON ( : )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 580

State stack: 0 9 1 25 46 99 125 282 116 265 580 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <and-expr> 
Now token: DELIM_COLON ( : )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 586

State stack: 0 9 1 25 46 99 125 282 116 265 586 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <exc-or-expr> 
Now token: DELIM_COLON ( : )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 588

State stack: 0 9 1 25 46 99 125 282 116 265 588 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <inc-or-expr> 
Now token: DELIM_COLON ( : )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 589

State stack: 0 9 1 25 46 99 125 282 116 265 589 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <land-expr> 
Now token: DELIM_COLON ( : )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 590

State stack: 0 9 1 25 46 99 125 282 116 265 590 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <lor-expr> 
Now token: DELIM_COLON ( : )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 583

State stack: 0 9 1 25 46 99 125 282 116 265 583 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <cond-expr> 
Now token: DELIM_COLON ( : )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 581

State stack: 0 9 1 25 46 99 125 282 116 265 581 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <asn-expr> 
Now token: DELIM_COLON ( : )
Use rule: Reduce <expr> -> <asn-expr> 
Use rule: Goto 587

State stack: 0 9 1 25 46 99 125 282 116 265 587 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> 
Now token: DELIM_COLON ( : )
Use rule: Shift 941

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON 
Now token: IDENTIFIER ( f )
Use rule: Shift 564

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 564 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON IDENTIFIER 
Now token: DELIM_LPAR ( ( )
Use rule: Reduce <prim-expr> -> IDENTIFIER 
Use rule: Goto 558

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 558 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <prim-expr> 
Now token: DELIM_LPAR ( ( )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 557

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> 
Now token: DELIM_LPAR ( ( )
Use rule: Shift 921

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR 
Now token: IDENTIFIER ( x )
Use rule: Shift 329

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 329 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR IDENTIFIER 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <prim-expr> -> IDENTIFIER 
Use rule: Goto 315

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 315 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <prim-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 314

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 314 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <postfix-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 324

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 324 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <unary-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 302

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 302 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <cast-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 312

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 312 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <multiplicative-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 299

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 299 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <additive-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 317

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 317 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <shift-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 316

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 316 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <rel-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 306

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 306 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <eq-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 300

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 300 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <and-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 307

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 307 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <exc-or-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 309

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 309 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <inc-or-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 310

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 310 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <land-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 311

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 311 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <lor-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 303

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 303 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <cond-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 613

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 613 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <asn-expr> 
Now token: DELIM_COMMA ( , )
Use rule: Reduce <arg-expr-list> -> <asn-expr> 
Use rule: Goto 1228

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 1228 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <arg-expr-list> 
Now token: DELIM_COMMA ( , )
Use rule: Shift 973

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 1228 973 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA 
Now token: IDENTIFIER ( a )
Use rule: Shift 329

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 1228 973 329 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA IDENTIFIER 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <prim-expr> -> IDENTIFIER 
Use rule: Goto 315

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 1228 973 315 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <prim-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <postfix-expr> -> <prim-expr> 
Use rule: Goto 314

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 1228 973 314 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <postfix-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 324

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 1228 973 324 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <unary-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 302

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 1228 973 302 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <cast-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 312

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 1228 973 312 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <multiplicative-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 299

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 1228 973 299 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <additive-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 317

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 1228 973 317 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <shift-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 316

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 1228 973 316 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <rel-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 306

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 1228 973 306 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <eq-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 300

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 1228 973 300 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <and-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 307

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 1228 973 307 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <exc-or-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 309

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 1228 973 309 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <inc-or-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 310

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 1228 973 310 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <land-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 311

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 1228 973 311 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <lor-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 303

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 1228 973 303 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <cond-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 1284

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 1228 973 1284 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_COMMA <asn-expr> 
Now token: DELIM_RPAR ( ) )
Use rule: Reduce <arg-expr-list> -> <arg-expr-list> DELIM_COMMA <asn-expr> 
Use rule: Goto 1228

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 1228 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <arg-expr-list> 
Now token: DELIM_RPAR ( ) )
Use rule: Shift 1453

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 921 1228 1453 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
Use rule: Goto 557

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 557 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <postfix-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <unary-expr> -> <postfix-expr> 
Use rule: Goto 559

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 559 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <unary-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cast-expr> -> <unary-expr> 
Use rule: Goto 101

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 101 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <cast-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <multiplicative-expr> -> <cast-expr> 
Use rule: Goto 117

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 117 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <multiplicative-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <additive-expr> -> <multiplicative-expr> 
Use rule: Goto 96

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 96 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <additive-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <shift-expr> -> <additive-expr> 
Use rule: Goto 123

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 123 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <shift-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <rel-expr> -> <shift-expr> 
Use rule: Goto 121

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 121 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <rel-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <eq-expr> -> <rel-expr> 
Use rule: Goto 107

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 107 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <eq-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <and-expr> -> <eq-expr> 
Use rule: Goto 97

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 97 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <and-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <exc-or-expr> -> <and-expr> 
Use rule: Goto 108

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 108 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <exc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <inc-or-expr> -> <exc-or-expr> 
Use rule: Goto 111

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 111 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <inc-or-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <land-expr> -> <inc-or-expr> 
Use rule: Goto 115

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 115 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <land-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <lor-expr> -> <land-expr> 
Use rule: Goto 116

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 116 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <lor-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cond-expr> -> <lor-expr> 
Use rule: Goto 1258

State stack: 0 9 1 25 46 99 125 282 116 265 587 941 1258 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <cond-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <cond-expr> -> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <cond-expr> 
Use rule: Goto 103

State stack: 0 9 1 25 46 99 125 282 103 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <cond-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <asn-expr> -> <cond-expr> 
Use rule: Goto 652

State stack: 0 9 1 25 46 99 125 282 652 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <unary-expr> <asn-op> <asn-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <asn-expr> -> <unary-expr> <asn-op> <asn-expr> 
Use rule: Goto 98

State stack: 0 9 1 25 46 99 98 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <asn-expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Reduce <expr> -> <asn-expr> 
Use rule: Goto 110

State stack: 0 9 1 25 46 99 110 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <expr> 
Now token: DELIM_SEMICOLON ( ; )
Use rule: Shift 262

State stack: 0 9 1 25 46 99 110 262 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <expr> DELIM_SEMICOLON 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <expr-stmt> -> <expr> DELIM_SEMICOLON 
Use rule: Goto 109

State stack: 0 9 1 25 46 99 109 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <expr-stmt> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <stmt> -> <expr-stmt> 
Use rule: Goto 124

State stack: 0 9 1 25 46 99 124 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <stmt> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <blk-item> -> <stmt> 
Use rule: Goto 254

State stack: 0 9 1 25 46 99 254 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> <blk-item> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Reduce <blk-item-list> -> <blk-item-list> <blk-item> 
Use rule: Goto 99

State stack: 0 9 1 25 46 99 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> 
Now token: DELIM_RCURBRACE ( } )
Use rule: Shift 255

State stack: 0 9 1 25 46 99 255 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
Now token: (EOF) 
Use rule: Reduce <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
Use rule: Goto 42

State stack: 0 9 1 25 42 
Symbol stack: (EOF) <trans-unit> <decl-spec> <declarator> <comp-stmt> 
Now token: (EOF) 
Use rule: Reduce <func-def> -> <decl-spec> <declarator> <comp-stmt> 
Use rule: Goto 5

State stack: 0 9 5 
Symbol stack: (EOF) <trans-unit> <func-def> 
Now token: (EOF) 
Use rule: Reduce <ext-decl> -> <func-def> 
Use rule: Goto 37

State stack: 0 9 37 
Symbol stack: (EOF) <trans-unit> <ext-decl> 
Now token: (EOF) 
Use rule: Reduce <trans-unit> -> <trans-unit> <ext-decl> 
Use rule: Goto 9

State stack: 0 9 
Symbol stack: (EOF) <trans-unit> 
Now token: (EOF) 
Use rule: Accept.

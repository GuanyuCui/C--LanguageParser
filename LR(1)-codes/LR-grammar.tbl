M [ 0 , <decl-spec> ] = GOTO 1
M [ 0 , <decl> ] = GOTO 2
M [ 0 , <enum-spec> ] = GOTO 3
M [ 0 , <ext-decl> ] = GOTO 4
M [ 0 , <func-def> ] = GOTO 5
M [ 0 , <storage-class-spec> ] = GOTO 6
M [ 0 , <struct-union-spec> ] = GOTO 7
M [ 0 , <struct-union> ] = GOTO 8
M [ 0 , <trans-unit> ] = GOTO 9
M [ 0 , <type-qual> ] = GOTO 10
M [ 0 , <type-spec> ] = GOTO 11
M [ 0 , char ] = SHIFT 12
M [ 0 , const ] = SHIFT 13
M [ 0 , double ] = SHIFT 14
M [ 0 , enum ] = SHIFT 15
M [ 0 , float ] = SHIFT 16
M [ 0 , int ] = SHIFT 17
M [ 0 , long ] = SHIFT 18
M [ 0 , short ] = SHIFT 19
M [ 0 , signed ] = SHIFT 20
M [ 0 , struct ] = SHIFT 21
M [ 0 , typedef ] = SHIFT 22
M [ 0 , unsigned ] = SHIFT 23
M [ 0 , void ] = SHIFT 24
M [ 1 , <declarator> ] = GOTO 25
M [ 1 , <direct-declarator> ] = GOTO 26
M [ 1 , <init-declarator-list> ] = GOTO 27
M [ 1 , <init-declarator> ] = GOTO 28
M [ 1 , <pointer> ] = GOTO 29
M [ 1 , DELIM_LPAR ] = SHIFT 30
M [ 1 , DELIM_SEMICOLON ] = SHIFT 31
M [ 1 , IDENTIFIER ] = SHIFT 32
M [ 1 , OP_MUL ] = SHIFT 33
M [ 2 , (EOF) ] = REDUCE <ext-decl> -> <decl> 
M [ 2 , char ] = REDUCE <ext-decl> -> <decl> 
M [ 2 , const ] = REDUCE <ext-decl> -> <decl> 
M [ 2 , double ] = REDUCE <ext-decl> -> <decl> 
M [ 2 , enum ] = REDUCE <ext-decl> -> <decl> 
M [ 2 , float ] = REDUCE <ext-decl> -> <decl> 
M [ 2 , int ] = REDUCE <ext-decl> -> <decl> 
M [ 2 , long ] = REDUCE <ext-decl> -> <decl> 
M [ 2 , short ] = REDUCE <ext-decl> -> <decl> 
M [ 2 , signed ] = REDUCE <ext-decl> -> <decl> 
M [ 2 , struct ] = REDUCE <ext-decl> -> <decl> 
M [ 2 , typedef ] = REDUCE <ext-decl> -> <decl> 
M [ 2 , unsigned ] = REDUCE <ext-decl> -> <decl> 
M [ 2 , void ] = REDUCE <ext-decl> -> <decl> 
M [ 3 , DELIM_LPAR ] = REDUCE <type-spec> -> <enum-spec> 
M [ 3 , DELIM_SEMICOLON ] = REDUCE <type-spec> -> <enum-spec> 
M [ 3 , IDENTIFIER ] = REDUCE <type-spec> -> <enum-spec> 
M [ 3 , OP_MUL ] = REDUCE <type-spec> -> <enum-spec> 
M [ 3 , char ] = REDUCE <type-spec> -> <enum-spec> 
M [ 3 , const ] = REDUCE <type-spec> -> <enum-spec> 
M [ 3 , double ] = REDUCE <type-spec> -> <enum-spec> 
M [ 3 , enum ] = REDUCE <type-spec> -> <enum-spec> 
M [ 3 , float ] = REDUCE <type-spec> -> <enum-spec> 
M [ 3 , int ] = REDUCE <type-spec> -> <enum-spec> 
M [ 3 , long ] = REDUCE <type-spec> -> <enum-spec> 
M [ 3 , short ] = REDUCE <type-spec> -> <enum-spec> 
M [ 3 , signed ] = REDUCE <type-spec> -> <enum-spec> 
M [ 3 , struct ] = REDUCE <type-spec> -> <enum-spec> 
M [ 3 , typedef ] = REDUCE <type-spec> -> <enum-spec> 
M [ 3 , unsigned ] = REDUCE <type-spec> -> <enum-spec> 
M [ 3 , void ] = REDUCE <type-spec> -> <enum-spec> 
M [ 4 , (EOF) ] = REDUCE <trans-unit> -> <ext-decl> 
M [ 4 , char ] = REDUCE <trans-unit> -> <ext-decl> 
M [ 4 , const ] = REDUCE <trans-unit> -> <ext-decl> 
M [ 4 , double ] = REDUCE <trans-unit> -> <ext-decl> 
M [ 4 , enum ] = REDUCE <trans-unit> -> <ext-decl> 
M [ 4 , float ] = REDUCE <trans-unit> -> <ext-decl> 
M [ 4 , int ] = REDUCE <trans-unit> -> <ext-decl> 
M [ 4 , long ] = REDUCE <trans-unit> -> <ext-decl> 
M [ 4 , short ] = REDUCE <trans-unit> -> <ext-decl> 
M [ 4 , signed ] = REDUCE <trans-unit> -> <ext-decl> 
M [ 4 , struct ] = REDUCE <trans-unit> -> <ext-decl> 
M [ 4 , typedef ] = REDUCE <trans-unit> -> <ext-decl> 
M [ 4 , unsigned ] = REDUCE <trans-unit> -> <ext-decl> 
M [ 4 , void ] = REDUCE <trans-unit> -> <ext-decl> 
M [ 5 , (EOF) ] = REDUCE <ext-decl> -> <func-def> 
M [ 5 , char ] = REDUCE <ext-decl> -> <func-def> 
M [ 5 , const ] = REDUCE <ext-decl> -> <func-def> 
M [ 5 , double ] = REDUCE <ext-decl> -> <func-def> 
M [ 5 , enum ] = REDUCE <ext-decl> -> <func-def> 
M [ 5 , float ] = REDUCE <ext-decl> -> <func-def> 
M [ 5 , int ] = REDUCE <ext-decl> -> <func-def> 
M [ 5 , long ] = REDUCE <ext-decl> -> <func-def> 
M [ 5 , short ] = REDUCE <ext-decl> -> <func-def> 
M [ 5 , signed ] = REDUCE <ext-decl> -> <func-def> 
M [ 5 , struct ] = REDUCE <ext-decl> -> <func-def> 
M [ 5 , typedef ] = REDUCE <ext-decl> -> <func-def> 
M [ 5 , unsigned ] = REDUCE <ext-decl> -> <func-def> 
M [ 5 , void ] = REDUCE <ext-decl> -> <func-def> 
M [ 6 , <decl-spec> ] = GOTO 34
M [ 6 , <enum-spec> ] = GOTO 3
M [ 6 , <storage-class-spec> ] = GOTO 6
M [ 6 , <struct-union-spec> ] = GOTO 7
M [ 6 , <struct-union> ] = GOTO 8
M [ 6 , <type-qual> ] = GOTO 10
M [ 6 , <type-spec> ] = GOTO 11
M [ 6 , DELIM_LPAR ] = REDUCE <decl-spec> -> <storage-class-spec> 
M [ 6 , DELIM_SEMICOLON ] = REDUCE <decl-spec> -> <storage-class-spec> 
M [ 6 , IDENTIFIER ] = REDUCE <decl-spec> -> <storage-class-spec> 
M [ 6 , OP_MUL ] = REDUCE <decl-spec> -> <storage-class-spec> 
M [ 6 , char ] = SHIFT 12
M [ 6 , const ] = SHIFT 13
M [ 6 , double ] = SHIFT 14
M [ 6 , enum ] = SHIFT 15
M [ 6 , float ] = SHIFT 16
M [ 6 , int ] = SHIFT 17
M [ 6 , long ] = SHIFT 18
M [ 6 , short ] = SHIFT 19
M [ 6 , signed ] = SHIFT 20
M [ 6 , struct ] = SHIFT 21
M [ 6 , typedef ] = SHIFT 22
M [ 6 , unsigned ] = SHIFT 23
M [ 6 , void ] = SHIFT 24
M [ 7 , DELIM_LPAR ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 7 , DELIM_SEMICOLON ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 7 , IDENTIFIER ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 7 , OP_MUL ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 7 , char ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 7 , const ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 7 , double ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 7 , enum ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 7 , float ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 7 , int ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 7 , long ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 7 , short ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 7 , signed ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 7 , struct ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 7 , typedef ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 7 , unsigned ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 7 , void ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 8 , DELIM_LCURBRACE ] = SHIFT 35
M [ 8 , IDENTIFIER ] = SHIFT 36
M [ 9 , (EOF) ] = ACCEPT
M [ 9 , <decl-spec> ] = GOTO 1
M [ 9 , <decl> ] = GOTO 2
M [ 9 , <enum-spec> ] = GOTO 3
M [ 9 , <ext-decl> ] = GOTO 37
M [ 9 , <func-def> ] = GOTO 5
M [ 9 , <storage-class-spec> ] = GOTO 6
M [ 9 , <struct-union-spec> ] = GOTO 7
M [ 9 , <struct-union> ] = GOTO 8
M [ 9 , <type-qual> ] = GOTO 10
M [ 9 , <type-spec> ] = GOTO 11
M [ 9 , char ] = SHIFT 12
M [ 9 , const ] = SHIFT 13
M [ 9 , double ] = SHIFT 14
M [ 9 , enum ] = SHIFT 15
M [ 9 , float ] = SHIFT 16
M [ 9 , int ] = SHIFT 17
M [ 9 , long ] = SHIFT 18
M [ 9 , short ] = SHIFT 19
M [ 9 , signed ] = SHIFT 20
M [ 9 , struct ] = SHIFT 21
M [ 9 , typedef ] = SHIFT 22
M [ 9 , unsigned ] = SHIFT 23
M [ 9 , void ] = SHIFT 24
M [ 10 , <decl-spec> ] = GOTO 38
M [ 10 , <enum-spec> ] = GOTO 3
M [ 10 , <storage-class-spec> ] = GOTO 6
M [ 10 , <struct-union-spec> ] = GOTO 7
M [ 10 , <struct-union> ] = GOTO 8
M [ 10 , <type-qual> ] = GOTO 10
M [ 10 , <type-spec> ] = GOTO 11
M [ 10 , DELIM_LPAR ] = REDUCE <decl-spec> -> <type-qual> 
M [ 10 , DELIM_SEMICOLON ] = REDUCE <decl-spec> -> <type-qual> 
M [ 10 , IDENTIFIER ] = REDUCE <decl-spec> -> <type-qual> 
M [ 10 , OP_MUL ] = REDUCE <decl-spec> -> <type-qual> 
M [ 10 , char ] = SHIFT 12
M [ 10 , const ] = SHIFT 13
M [ 10 , double ] = SHIFT 14
M [ 10 , enum ] = SHIFT 15
M [ 10 , float ] = SHIFT 16
M [ 10 , int ] = SHIFT 17
M [ 10 , long ] = SHIFT 18
M [ 10 , short ] = SHIFT 19
M [ 10 , signed ] = SHIFT 20
M [ 10 , struct ] = SHIFT 21
M [ 10 , typedef ] = SHIFT 22
M [ 10 , unsigned ] = SHIFT 23
M [ 10 , void ] = SHIFT 24
M [ 11 , <decl-spec> ] = GOTO 39
M [ 11 , <enum-spec> ] = GOTO 3
M [ 11 , <storage-class-spec> ] = GOTO 6
M [ 11 , <struct-union-spec> ] = GOTO 7
M [ 11 , <struct-union> ] = GOTO 8
M [ 11 , <type-qual> ] = GOTO 10
M [ 11 , <type-spec> ] = GOTO 11
M [ 11 , DELIM_LPAR ] = REDUCE <decl-spec> -> <type-spec> 
M [ 11 , DELIM_SEMICOLON ] = REDUCE <decl-spec> -> <type-spec> 
M [ 11 , IDENTIFIER ] = REDUCE <decl-spec> -> <type-spec> 
M [ 11 , OP_MUL ] = REDUCE <decl-spec> -> <type-spec> 
M [ 11 , char ] = SHIFT 12
M [ 11 , const ] = SHIFT 13
M [ 11 , double ] = SHIFT 14
M [ 11 , enum ] = SHIFT 15
M [ 11 , float ] = SHIFT 16
M [ 11 , int ] = SHIFT 17
M [ 11 , long ] = SHIFT 18
M [ 11 , short ] = SHIFT 19
M [ 11 , signed ] = SHIFT 20
M [ 11 , struct ] = SHIFT 21
M [ 11 , typedef ] = SHIFT 22
M [ 11 , unsigned ] = SHIFT 23
M [ 11 , void ] = SHIFT 24
M [ 12 , DELIM_LPAR ] = REDUCE <type-spec> -> char 
M [ 12 , DELIM_SEMICOLON ] = REDUCE <type-spec> -> char 
M [ 12 , IDENTIFIER ] = REDUCE <type-spec> -> char 
M [ 12 , OP_MUL ] = REDUCE <type-spec> -> char 
M [ 12 , char ] = REDUCE <type-spec> -> char 
M [ 12 , const ] = REDUCE <type-spec> -> char 
M [ 12 , double ] = REDUCE <type-spec> -> char 
M [ 12 , enum ] = REDUCE <type-spec> -> char 
M [ 12 , float ] = REDUCE <type-spec> -> char 
M [ 12 , int ] = REDUCE <type-spec> -> char 
M [ 12 , long ] = REDUCE <type-spec> -> char 
M [ 12 , short ] = REDUCE <type-spec> -> char 
M [ 12 , signed ] = REDUCE <type-spec> -> char 
M [ 12 , struct ] = REDUCE <type-spec> -> char 
M [ 12 , typedef ] = REDUCE <type-spec> -> char 
M [ 12 , unsigned ] = REDUCE <type-spec> -> char 
M [ 12 , void ] = REDUCE <type-spec> -> char 
M [ 13 , DELIM_LPAR ] = REDUCE <type-qual> -> const 
M [ 13 , DELIM_SEMICOLON ] = REDUCE <type-qual> -> const 
M [ 13 , IDENTIFIER ] = REDUCE <type-qual> -> const 
M [ 13 , OP_MUL ] = REDUCE <type-qual> -> const 
M [ 13 , char ] = REDUCE <type-qual> -> const 
M [ 13 , const ] = REDUCE <type-qual> -> const 
M [ 13 , double ] = REDUCE <type-qual> -> const 
M [ 13 , enum ] = REDUCE <type-qual> -> const 
M [ 13 , float ] = REDUCE <type-qual> -> const 
M [ 13 , int ] = REDUCE <type-qual> -> const 
M [ 13 , long ] = REDUCE <type-qual> -> const 
M [ 13 , short ] = REDUCE <type-qual> -> const 
M [ 13 , signed ] = REDUCE <type-qual> -> const 
M [ 13 , struct ] = REDUCE <type-qual> -> const 
M [ 13 , typedef ] = REDUCE <type-qual> -> const 
M [ 13 , unsigned ] = REDUCE <type-qual> -> const 
M [ 13 , void ] = REDUCE <type-qual> -> const 
M [ 14 , DELIM_LPAR ] = REDUCE <type-spec> -> double 
M [ 14 , DELIM_SEMICOLON ] = REDUCE <type-spec> -> double 
M [ 14 , IDENTIFIER ] = REDUCE <type-spec> -> double 
M [ 14 , OP_MUL ] = REDUCE <type-spec> -> double 
M [ 14 , char ] = REDUCE <type-spec> -> double 
M [ 14 , const ] = REDUCE <type-spec> -> double 
M [ 14 , double ] = REDUCE <type-spec> -> double 
M [ 14 , enum ] = REDUCE <type-spec> -> double 
M [ 14 , float ] = REDUCE <type-spec> -> double 
M [ 14 , int ] = REDUCE <type-spec> -> double 
M [ 14 , long ] = REDUCE <type-spec> -> double 
M [ 14 , short ] = REDUCE <type-spec> -> double 
M [ 14 , signed ] = REDUCE <type-spec> -> double 
M [ 14 , struct ] = REDUCE <type-spec> -> double 
M [ 14 , typedef ] = REDUCE <type-spec> -> double 
M [ 14 , unsigned ] = REDUCE <type-spec> -> double 
M [ 14 , void ] = REDUCE <type-spec> -> double 
M [ 15 , DELIM_LCURBRACE ] = SHIFT 40
M [ 15 , IDENTIFIER ] = SHIFT 41
M [ 16 , DELIM_LPAR ] = REDUCE <type-spec> -> float 
M [ 16 , DELIM_SEMICOLON ] = REDUCE <type-spec> -> float 
M [ 16 , IDENTIFIER ] = REDUCE <type-spec> -> float 
M [ 16 , OP_MUL ] = REDUCE <type-spec> -> float 
M [ 16 , char ] = REDUCE <type-spec> -> float 
M [ 16 , const ] = REDUCE <type-spec> -> float 
M [ 16 , double ] = REDUCE <type-spec> -> float 
M [ 16 , enum ] = REDUCE <type-spec> -> float 
M [ 16 , float ] = REDUCE <type-spec> -> float 
M [ 16 , int ] = REDUCE <type-spec> -> float 
M [ 16 , long ] = REDUCE <type-spec> -> float 
M [ 16 , short ] = REDUCE <type-spec> -> float 
M [ 16 , signed ] = REDUCE <type-spec> -> float 
M [ 16 , struct ] = REDUCE <type-spec> -> float 
M [ 16 , typedef ] = REDUCE <type-spec> -> float 
M [ 16 , unsigned ] = REDUCE <type-spec> -> float 
M [ 16 , void ] = REDUCE <type-spec> -> float 
M [ 17 , DELIM_LPAR ] = REDUCE <type-spec> -> int 
M [ 17 , DELIM_SEMICOLON ] = REDUCE <type-spec> -> int 
M [ 17 , IDENTIFIER ] = REDUCE <type-spec> -> int 
M [ 17 , OP_MUL ] = REDUCE <type-spec> -> int 
M [ 17 , char ] = REDUCE <type-spec> -> int 
M [ 17 , const ] = REDUCE <type-spec> -> int 
M [ 17 , double ] = REDUCE <type-spec> -> int 
M [ 17 , enum ] = REDUCE <type-spec> -> int 
M [ 17 , float ] = REDUCE <type-spec> -> int 
M [ 17 , int ] = REDUCE <type-spec> -> int 
M [ 17 , long ] = REDUCE <type-spec> -> int 
M [ 17 , short ] = REDUCE <type-spec> -> int 
M [ 17 , signed ] = REDUCE <type-spec> -> int 
M [ 17 , struct ] = REDUCE <type-spec> -> int 
M [ 17 , typedef ] = REDUCE <type-spec> -> int 
M [ 17 , unsigned ] = REDUCE <type-spec> -> int 
M [ 17 , void ] = REDUCE <type-spec> -> int 
M [ 18 , DELIM_LPAR ] = REDUCE <type-spec> -> long 
M [ 18 , DELIM_SEMICOLON ] = REDUCE <type-spec> -> long 
M [ 18 , IDENTIFIER ] = REDUCE <type-spec> -> long 
M [ 18 , OP_MUL ] = REDUCE <type-spec> -> long 
M [ 18 , char ] = REDUCE <type-spec> -> long 
M [ 18 , const ] = REDUCE <type-spec> -> long 
M [ 18 , double ] = REDUCE <type-spec> -> long 
M [ 18 , enum ] = REDUCE <type-spec> -> long 
M [ 18 , float ] = REDUCE <type-spec> -> long 
M [ 18 , int ] = REDUCE <type-spec> -> long 
M [ 18 , long ] = REDUCE <type-spec> -> long 
M [ 18 , short ] = REDUCE <type-spec> -> long 
M [ 18 , signed ] = REDUCE <type-spec> -> long 
M [ 18 , struct ] = REDUCE <type-spec> -> long 
M [ 18 , typedef ] = REDUCE <type-spec> -> long 
M [ 18 , unsigned ] = REDUCE <type-spec> -> long 
M [ 18 , void ] = REDUCE <type-spec> -> long 
M [ 19 , DELIM_LPAR ] = REDUCE <type-spec> -> short 
M [ 19 , DELIM_SEMICOLON ] = REDUCE <type-spec> -> short 
M [ 19 , IDENTIFIER ] = REDUCE <type-spec> -> short 
M [ 19 , OP_MUL ] = REDUCE <type-spec> -> short 
M [ 19 , char ] = REDUCE <type-spec> -> short 
M [ 19 , const ] = REDUCE <type-spec> -> short 
M [ 19 , double ] = REDUCE <type-spec> -> short 
M [ 19 , enum ] = REDUCE <type-spec> -> short 
M [ 19 , float ] = REDUCE <type-spec> -> short 
M [ 19 , int ] = REDUCE <type-spec> -> short 
M [ 19 , long ] = REDUCE <type-spec> -> short 
M [ 19 , short ] = REDUCE <type-spec> -> short 
M [ 19 , signed ] = REDUCE <type-spec> -> short 
M [ 19 , struct ] = REDUCE <type-spec> -> short 
M [ 19 , typedef ] = REDUCE <type-spec> -> short 
M [ 19 , unsigned ] = REDUCE <type-spec> -> short 
M [ 19 , void ] = REDUCE <type-spec> -> short 
M [ 20 , DELIM_LPAR ] = REDUCE <type-spec> -> signed 
M [ 20 , DELIM_SEMICOLON ] = REDUCE <type-spec> -> signed 
M [ 20 , IDENTIFIER ] = REDUCE <type-spec> -> signed 
M [ 20 , OP_MUL ] = REDUCE <type-spec> -> signed 
M [ 20 , char ] = REDUCE <type-spec> -> signed 
M [ 20 , const ] = REDUCE <type-spec> -> signed 
M [ 20 , double ] = REDUCE <type-spec> -> signed 
M [ 20 , enum ] = REDUCE <type-spec> -> signed 
M [ 20 , float ] = REDUCE <type-spec> -> signed 
M [ 20 , int ] = REDUCE <type-spec> -> signed 
M [ 20 , long ] = REDUCE <type-spec> -> signed 
M [ 20 , short ] = REDUCE <type-spec> -> signed 
M [ 20 , signed ] = REDUCE <type-spec> -> signed 
M [ 20 , struct ] = REDUCE <type-spec> -> signed 
M [ 20 , typedef ] = REDUCE <type-spec> -> signed 
M [ 20 , unsigned ] = REDUCE <type-spec> -> signed 
M [ 20 , void ] = REDUCE <type-spec> -> signed 
M [ 21 , DELIM_LCURBRACE ] = REDUCE <struct-union> -> struct 
M [ 21 , IDENTIFIER ] = REDUCE <struct-union> -> struct 
M [ 22 , DELIM_LPAR ] = REDUCE <storage-class-spec> -> typedef 
M [ 22 , DELIM_SEMICOLON ] = REDUCE <storage-class-spec> -> typedef 
M [ 22 , IDENTIFIER ] = REDUCE <storage-class-spec> -> typedef 
M [ 22 , OP_MUL ] = REDUCE <storage-class-spec> -> typedef 
M [ 22 , char ] = REDUCE <storage-class-spec> -> typedef 
M [ 22 , const ] = REDUCE <storage-class-spec> -> typedef 
M [ 22 , double ] = REDUCE <storage-class-spec> -> typedef 
M [ 22 , enum ] = REDUCE <storage-class-spec> -> typedef 
M [ 22 , float ] = REDUCE <storage-class-spec> -> typedef 
M [ 22 , int ] = REDUCE <storage-class-spec> -> typedef 
M [ 22 , long ] = REDUCE <storage-class-spec> -> typedef 
M [ 22 , short ] = REDUCE <storage-class-spec> -> typedef 
M [ 22 , signed ] = REDUCE <storage-class-spec> -> typedef 
M [ 22 , struct ] = REDUCE <storage-class-spec> -> typedef 
M [ 22 , typedef ] = REDUCE <storage-class-spec> -> typedef 
M [ 22 , unsigned ] = REDUCE <storage-class-spec> -> typedef 
M [ 22 , void ] = REDUCE <storage-class-spec> -> typedef 
M [ 23 , DELIM_LPAR ] = REDUCE <type-spec> -> unsigned 
M [ 23 , DELIM_SEMICOLON ] = REDUCE <type-spec> -> unsigned 
M [ 23 , IDENTIFIER ] = REDUCE <type-spec> -> unsigned 
M [ 23 , OP_MUL ] = REDUCE <type-spec> -> unsigned 
M [ 23 , char ] = REDUCE <type-spec> -> unsigned 
M [ 23 , const ] = REDUCE <type-spec> -> unsigned 
M [ 23 , double ] = REDUCE <type-spec> -> unsigned 
M [ 23 , enum ] = REDUCE <type-spec> -> unsigned 
M [ 23 , float ] = REDUCE <type-spec> -> unsigned 
M [ 23 , int ] = REDUCE <type-spec> -> unsigned 
M [ 23 , long ] = REDUCE <type-spec> -> unsigned 
M [ 23 , short ] = REDUCE <type-spec> -> unsigned 
M [ 23 , signed ] = REDUCE <type-spec> -> unsigned 
M [ 23 , struct ] = REDUCE <type-spec> -> unsigned 
M [ 23 , typedef ] = REDUCE <type-spec> -> unsigned 
M [ 23 , unsigned ] = REDUCE <type-spec> -> unsigned 
M [ 23 , void ] = REDUCE <type-spec> -> unsigned 
M [ 24 , DELIM_LPAR ] = REDUCE <type-spec> -> void 
M [ 24 , DELIM_SEMICOLON ] = REDUCE <type-spec> -> void 
M [ 24 , IDENTIFIER ] = REDUCE <type-spec> -> void 
M [ 24 , OP_MUL ] = REDUCE <type-spec> -> void 
M [ 24 , char ] = REDUCE <type-spec> -> void 
M [ 24 , const ] = REDUCE <type-spec> -> void 
M [ 24 , double ] = REDUCE <type-spec> -> void 
M [ 24 , enum ] = REDUCE <type-spec> -> void 
M [ 24 , float ] = REDUCE <type-spec> -> void 
M [ 24 , int ] = REDUCE <type-spec> -> void 
M [ 24 , long ] = REDUCE <type-spec> -> void 
M [ 24 , short ] = REDUCE <type-spec> -> void 
M [ 24 , signed ] = REDUCE <type-spec> -> void 
M [ 24 , struct ] = REDUCE <type-spec> -> void 
M [ 24 , typedef ] = REDUCE <type-spec> -> void 
M [ 24 , unsigned ] = REDUCE <type-spec> -> void 
M [ 24 , void ] = REDUCE <type-spec> -> void 
M [ 25 , <comp-stmt> ] = GOTO 42
M [ 25 , <decl-list> ] = GOTO 43
M [ 25 , <decl-spec> ] = GOTO 44
M [ 25 , <decl> ] = GOTO 45
M [ 25 , <enum-spec> ] = GOTO 3
M [ 25 , <storage-class-spec> ] = GOTO 6
M [ 25 , <struct-union-spec> ] = GOTO 7
M [ 25 , <struct-union> ] = GOTO 8
M [ 25 , <type-qual> ] = GOTO 10
M [ 25 , <type-spec> ] = GOTO 11
M [ 25 , DELIM_COMMA ] = REDUCE <init-declarator> -> <declarator> 
M [ 25 , DELIM_LCURBRACE ] = SHIFT 46
M [ 25 , DELIM_SEMICOLON ] = REDUCE <init-declarator> -> <declarator> 
M [ 25 , OP_ASN ] = SHIFT 47
M [ 25 , char ] = SHIFT 12
M [ 25 , const ] = SHIFT 13
M [ 25 , double ] = SHIFT 14
M [ 25 , enum ] = SHIFT 15
M [ 25 , float ] = SHIFT 16
M [ 25 , int ] = SHIFT 17
M [ 25 , long ] = SHIFT 18
M [ 25 , short ] = SHIFT 19
M [ 25 , signed ] = SHIFT 20
M [ 25 , struct ] = SHIFT 21
M [ 25 , typedef ] = SHIFT 22
M [ 25 , unsigned ] = SHIFT 23
M [ 25 , void ] = SHIFT 24
M [ 26 , DELIM_COMMA ] = REDUCE <declarator> -> <direct-declarator> 
M [ 26 , DELIM_LCURBRACE ] = REDUCE <declarator> -> <direct-declarator> 
M [ 26 , DELIM_LPAR ] = SHIFT 48
M [ 26 , DELIM_LSQBRACKET ] = SHIFT 49
M [ 26 , DELIM_SEMICOLON ] = REDUCE <declarator> -> <direct-declarator> 
M [ 26 , OP_ASN ] = REDUCE <declarator> -> <direct-declarator> 
M [ 26 , char ] = REDUCE <declarator> -> <direct-declarator> 
M [ 26 , const ] = REDUCE <declarator> -> <direct-declarator> 
M [ 26 , double ] = REDUCE <declarator> -> <direct-declarator> 
M [ 26 , enum ] = REDUCE <declarator> -> <direct-declarator> 
M [ 26 , float ] = REDUCE <declarator> -> <direct-declarator> 
M [ 26 , int ] = REDUCE <declarator> -> <direct-declarator> 
M [ 26 , long ] = REDUCE <declarator> -> <direct-declarator> 
M [ 26 , short ] = REDUCE <declarator> -> <direct-declarator> 
M [ 26 , signed ] = REDUCE <declarator> -> <direct-declarator> 
M [ 26 , struct ] = REDUCE <declarator> -> <direct-declarator> 
M [ 26 , typedef ] = REDUCE <declarator> -> <direct-declarator> 
M [ 26 , unsigned ] = REDUCE <declarator> -> <direct-declarator> 
M [ 26 , void ] = REDUCE <declarator> -> <direct-declarator> 
M [ 27 , DELIM_COMMA ] = SHIFT 50
M [ 27 , DELIM_SEMICOLON ] = SHIFT 51
M [ 28 , DELIM_COMMA ] = REDUCE <init-declarator-list> -> <init-declarator> 
M [ 28 , DELIM_SEMICOLON ] = REDUCE <init-declarator-list> -> <init-declarator> 
M [ 29 , <direct-declarator> ] = GOTO 52
M [ 29 , DELIM_LPAR ] = SHIFT 30
M [ 29 , IDENTIFIER ] = SHIFT 32
M [ 30 , <declarator> ] = GOTO 53
M [ 30 , <direct-declarator> ] = GOTO 54
M [ 30 , <pointer> ] = GOTO 55
M [ 30 , DELIM_LPAR ] = SHIFT 56
M [ 30 , IDENTIFIER ] = SHIFT 57
M [ 30 , OP_MUL ] = SHIFT 33
M [ 31 , (EOF) ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 31 , char ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 31 , const ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 31 , double ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 31 , enum ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 31 , float ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 31 , int ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 31 , long ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 31 , short ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 31 , signed ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 31 , struct ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 31 , typedef ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 31 , unsigned ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 31 , void ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 32 , DELIM_COMMA ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 32 , DELIM_LCURBRACE ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 32 , DELIM_LPAR ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 32 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 32 , DELIM_SEMICOLON ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 32 , OP_ASN ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 32 , char ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 32 , const ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 32 , double ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 32 , enum ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 32 , float ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 32 , int ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 32 , long ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 32 , short ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 32 , signed ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 32 , struct ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 32 , typedef ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 32 , unsigned ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 32 , void ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 33 , <pointer> ] = GOTO 58
M [ 33 , <type-qual-list> ] = GOTO 59
M [ 33 , <type-qual> ] = GOTO 60
M [ 33 , DELIM_LPAR ] = REDUCE <pointer> -> OP_MUL 
M [ 33 , IDENTIFIER ] = REDUCE <pointer> -> OP_MUL 
M [ 33 , OP_MUL ] = SHIFT 33
M [ 33 , const ] = SHIFT 61
M [ 34 , DELIM_LPAR ] = REDUCE <decl-spec> -> <storage-class-spec> <decl-spec> 
M [ 34 , DELIM_SEMICOLON ] = REDUCE <decl-spec> -> <storage-class-spec> <decl-spec> 
M [ 34 , IDENTIFIER ] = REDUCE <decl-spec> -> <storage-class-spec> <decl-spec> 
M [ 34 , OP_MUL ] = REDUCE <decl-spec> -> <storage-class-spec> <decl-spec> 
M [ 35 , <enum-spec> ] = GOTO 62
M [ 35 , <spec-qual-list> ] = GOTO 63
M [ 35 , <struct-decl-list> ] = GOTO 64
M [ 35 , <struct-decl> ] = GOTO 65
M [ 35 , <struct-union-spec> ] = GOTO 66
M [ 35 , <struct-union> ] = GOTO 67
M [ 35 , <type-qual> ] = GOTO 68
M [ 35 , <type-spec> ] = GOTO 69
M [ 35 , char ] = SHIFT 70
M [ 35 , const ] = SHIFT 71
M [ 35 , double ] = SHIFT 72
M [ 35 , enum ] = SHIFT 73
M [ 35 , float ] = SHIFT 74
M [ 35 , int ] = SHIFT 75
M [ 35 , long ] = SHIFT 76
M [ 35 , short ] = SHIFT 77
M [ 35 , signed ] = SHIFT 78
M [ 35 , struct ] = SHIFT 21
M [ 35 , unsigned ] = SHIFT 79
M [ 35 , void ] = SHIFT 80
M [ 36 , DELIM_LCURBRACE ] = SHIFT 81
M [ 36 , DELIM_LPAR ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 36 , DELIM_SEMICOLON ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 36 , IDENTIFIER ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 36 , OP_MUL ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 36 , char ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 36 , const ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 36 , double ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 36 , enum ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 36 , float ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 36 , int ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 36 , long ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 36 , short ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 36 , signed ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 36 , struct ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 36 , typedef ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 36 , unsigned ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 36 , void ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 37 , (EOF) ] = REDUCE <trans-unit> -> <trans-unit> <ext-decl> 
M [ 37 , char ] = REDUCE <trans-unit> -> <trans-unit> <ext-decl> 
M [ 37 , const ] = REDUCE <trans-unit> -> <trans-unit> <ext-decl> 
M [ 37 , double ] = REDUCE <trans-unit> -> <trans-unit> <ext-decl> 
M [ 37 , enum ] = REDUCE <trans-unit> -> <trans-unit> <ext-decl> 
M [ 37 , float ] = REDUCE <trans-unit> -> <trans-unit> <ext-decl> 
M [ 37 , int ] = REDUCE <trans-unit> -> <trans-unit> <ext-decl> 
M [ 37 , long ] = REDUCE <trans-unit> -> <trans-unit> <ext-decl> 
M [ 37 , short ] = REDUCE <trans-unit> -> <trans-unit> <ext-decl> 
M [ 37 , signed ] = REDUCE <trans-unit> -> <trans-unit> <ext-decl> 
M [ 37 , struct ] = REDUCE <trans-unit> -> <trans-unit> <ext-decl> 
M [ 37 , typedef ] = REDUCE <trans-unit> -> <trans-unit> <ext-decl> 
M [ 37 , unsigned ] = REDUCE <trans-unit> -> <trans-unit> <ext-decl> 
M [ 37 , void ] = REDUCE <trans-unit> -> <trans-unit> <ext-decl> 
M [ 38 , DELIM_LPAR ] = REDUCE <decl-spec> -> <type-qual> <decl-spec> 
M [ 38 , DELIM_SEMICOLON ] = REDUCE <decl-spec> -> <type-qual> <decl-spec> 
M [ 38 , IDENTIFIER ] = REDUCE <decl-spec> -> <type-qual> <decl-spec> 
M [ 38 , OP_MUL ] = REDUCE <decl-spec> -> <type-qual> <decl-spec> 
M [ 39 , DELIM_LPAR ] = REDUCE <decl-spec> -> <type-spec> <decl-spec> 
M [ 39 , DELIM_SEMICOLON ] = REDUCE <decl-spec> -> <type-spec> <decl-spec> 
M [ 39 , IDENTIFIER ] = REDUCE <decl-spec> -> <type-spec> <decl-spec> 
M [ 39 , OP_MUL ] = REDUCE <decl-spec> -> <type-spec> <decl-spec> 
M [ 40 , <enumeration-const> ] = GOTO 82
M [ 40 , <enumerator-list> ] = GOTO 83
M [ 40 , <enumerator> ] = GOTO 84
M [ 40 , IDENTIFIER ] = SHIFT 85
M [ 41 , DELIM_LCURBRACE ] = SHIFT 86
M [ 41 , DELIM_LPAR ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 41 , DELIM_SEMICOLON ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 41 , IDENTIFIER ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 41 , OP_MUL ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 41 , char ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 41 , const ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 41 , double ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 41 , enum ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 41 , float ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 41 , int ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 41 , long ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 41 , short ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 41 , signed ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 41 , struct ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 41 , typedef ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 41 , unsigned ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 41 , void ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 42 , (EOF) ] = REDUCE <func-def> -> <decl-spec> <declarator> <comp-stmt> 
M [ 42 , char ] = REDUCE <func-def> -> <decl-spec> <declarator> <comp-stmt> 
M [ 42 , const ] = REDUCE <func-def> -> <decl-spec> <declarator> <comp-stmt> 
M [ 42 , double ] = REDUCE <func-def> -> <decl-spec> <declarator> <comp-stmt> 
M [ 42 , enum ] = REDUCE <func-def> -> <decl-spec> <declarator> <comp-stmt> 
M [ 42 , float ] = REDUCE <func-def> -> <decl-spec> <declarator> <comp-stmt> 
M [ 42 , int ] = REDUCE <func-def> -> <decl-spec> <declarator> <comp-stmt> 
M [ 42 , long ] = REDUCE <func-def> -> <decl-spec> <declarator> <comp-stmt> 
M [ 42 , short ] = REDUCE <func-def> -> <decl-spec> <declarator> <comp-stmt> 
M [ 42 , signed ] = REDUCE <func-def> -> <decl-spec> <declarator> <comp-stmt> 
M [ 42 , struct ] = REDUCE <func-def> -> <decl-spec> <declarator> <comp-stmt> 
M [ 42 , typedef ] = REDUCE <func-def> -> <decl-spec> <declarator> <comp-stmt> 
M [ 42 , unsigned ] = REDUCE <func-def> -> <decl-spec> <declarator> <comp-stmt> 
M [ 42 , void ] = REDUCE <func-def> -> <decl-spec> <declarator> <comp-stmt> 
M [ 43 , <comp-stmt> ] = GOTO 87
M [ 43 , <decl-spec> ] = GOTO 44
M [ 43 , <decl> ] = GOTO 88
M [ 43 , <enum-spec> ] = GOTO 3
M [ 43 , <storage-class-spec> ] = GOTO 6
M [ 43 , <struct-union-spec> ] = GOTO 7
M [ 43 , <struct-union> ] = GOTO 8
M [ 43 , <type-qual> ] = GOTO 10
M [ 43 , <type-spec> ] = GOTO 11
M [ 43 , DELIM_LCURBRACE ] = SHIFT 46
M [ 43 , char ] = SHIFT 12
M [ 43 , const ] = SHIFT 13
M [ 43 , double ] = SHIFT 14
M [ 43 , enum ] = SHIFT 15
M [ 43 , float ] = SHIFT 16
M [ 43 , int ] = SHIFT 17
M [ 43 , long ] = SHIFT 18
M [ 43 , short ] = SHIFT 19
M [ 43 , signed ] = SHIFT 20
M [ 43 , struct ] = SHIFT 21
M [ 43 , typedef ] = SHIFT 22
M [ 43 , unsigned ] = SHIFT 23
M [ 43 , void ] = SHIFT 24
M [ 44 , <declarator> ] = GOTO 89
M [ 44 , <direct-declarator> ] = GOTO 90
M [ 44 , <init-declarator-list> ] = GOTO 91
M [ 44 , <init-declarator> ] = GOTO 28
M [ 44 , <pointer> ] = GOTO 92
M [ 44 , DELIM_LPAR ] = SHIFT 93
M [ 44 , DELIM_SEMICOLON ] = SHIFT 94
M [ 44 , IDENTIFIER ] = SHIFT 95
M [ 44 , OP_MUL ] = SHIFT 33
M [ 45 , DELIM_LCURBRACE ] = REDUCE <decl-list> -> <decl> 
M [ 45 , char ] = REDUCE <decl-list> -> <decl> 
M [ 45 , const ] = REDUCE <decl-list> -> <decl> 
M [ 45 , double ] = REDUCE <decl-list> -> <decl> 
M [ 45 , enum ] = REDUCE <decl-list> -> <decl> 
M [ 45 , float ] = REDUCE <decl-list> -> <decl> 
M [ 45 , int ] = REDUCE <decl-list> -> <decl> 
M [ 45 , long ] = REDUCE <decl-list> -> <decl> 
M [ 45 , short ] = REDUCE <decl-list> -> <decl> 
M [ 45 , signed ] = REDUCE <decl-list> -> <decl> 
M [ 45 , struct ] = REDUCE <decl-list> -> <decl> 
M [ 45 , typedef ] = REDUCE <decl-list> -> <decl> 
M [ 45 , unsigned ] = REDUCE <decl-list> -> <decl> 
M [ 45 , void ] = REDUCE <decl-list> -> <decl> 
M [ 46 , <additive-expr> ] = GOTO 96
M [ 46 , <and-expr> ] = GOTO 97
M [ 46 , <asn-expr> ] = GOTO 98
M [ 46 , <blk-item-list> ] = GOTO 99
M [ 46 , <blk-item> ] = GOTO 100
M [ 46 , <cast-expr> ] = GOTO 101
M [ 46 , <comp-stmt> ] = GOTO 102
M [ 46 , <cond-expr> ] = GOTO 103
M [ 46 , <constant> ] = GOTO 104
M [ 46 , <decl-spec> ] = GOTO 105
M [ 46 , <decl> ] = GOTO 106
M [ 46 , <enum-spec> ] = GOTO 3
M [ 46 , <eq-expr> ] = GOTO 107
M [ 46 , <exc-or-expr> ] = GOTO 108
M [ 46 , <expr-stmt> ] = GOTO 109
M [ 46 , <expr> ] = GOTO 110
M [ 46 , <inc-or-expr> ] = GOTO 111
M [ 46 , <iter-stmt> ] = GOTO 112
M [ 46 , <jump-stmt> ] = GOTO 113
M [ 46 , <labeled-stmt> ] = GOTO 114
M [ 46 , <land-expr> ] = GOTO 115
M [ 46 , <lor-expr> ] = GOTO 116
M [ 46 , <multiplicative-expr> ] = GOTO 117
M [ 46 , <num-const> ] = GOTO 118
M [ 46 , <postfix-expr> ] = GOTO 119
M [ 46 , <prim-expr> ] = GOTO 120
M [ 46 , <rel-expr> ] = GOTO 121
M [ 46 , <sele-stmt> ] = GOTO 122
M [ 46 , <shift-expr> ] = GOTO 123
M [ 46 , <stmt> ] = GOTO 124
M [ 46 , <storage-class-spec> ] = GOTO 6
M [ 46 , <struct-union-spec> ] = GOTO 7
M [ 46 , <struct-union> ] = GOTO 8
M [ 46 , <type-qual> ] = GOTO 10
M [ 46 , <type-spec> ] = GOTO 11
M [ 46 , <unary-expr> ] = GOTO 125
M [ 46 , <unary-op> ] = GOTO 126
M [ 46 , CHAR_CONST ] = SHIFT 127
M [ 46 , DELIM_LCURBRACE ] = SHIFT 128
M [ 46 , DELIM_LPAR ] = SHIFT 129
M [ 46 , DELIM_RCURBRACE ] = SHIFT 130
M [ 46 , DELIM_SEMICOLON ] = SHIFT 131
M [ 46 , FLOAT_CONST ] = SHIFT 132
M [ 46 , IDENTIFIER ] = SHIFT 133
M [ 46 , INT_CONST ] = SHIFT 134
M [ 46 , OP_ADD ] = SHIFT 135
M [ 46 , OP_AND ] = SHIFT 136
M [ 46 , OP_DEC ] = SHIFT 137
M [ 46 , OP_INC ] = SHIFT 138
M [ 46 , OP_LNOT ] = SHIFT 139
M [ 46 , OP_MUL ] = SHIFT 140
M [ 46 , OP_NOT ] = SHIFT 141
M [ 46 , OP_SUB ] = SHIFT 142
M [ 46 , STR_LITERAL ] = SHIFT 143
M [ 46 , break ] = SHIFT 144
M [ 46 , case ] = SHIFT 145
M [ 46 , char ] = SHIFT 12
M [ 46 , const ] = SHIFT 13
M [ 46 , continue ] = SHIFT 146
M [ 46 , default ] = SHIFT 147
M [ 46 , do ] = SHIFT 148
M [ 46 , double ] = SHIFT 14
M [ 46 , enum ] = SHIFT 15
M [ 46 , float ] = SHIFT 16
M [ 46 , for ] = SHIFT 149
M [ 46 , goto ] = SHIFT 150
M [ 46 , if ] = SHIFT 151
M [ 46 , int ] = SHIFT 17
M [ 46 , long ] = SHIFT 18
M [ 46 , return ] = SHIFT 152
M [ 46 , short ] = SHIFT 19
M [ 46 , signed ] = SHIFT 20
M [ 46 , sizeof ] = SHIFT 153
M [ 46 , struct ] = SHIFT 21
M [ 46 , switch ] = SHIFT 154
M [ 46 , typedef ] = SHIFT 22
M [ 46 , unsigned ] = SHIFT 23
M [ 46 , void ] = SHIFT 24
M [ 46 , while ] = SHIFT 155
M [ 47 , <additive-expr> ] = GOTO 96
M [ 47 , <and-expr> ] = GOTO 97
M [ 47 , <asn-expr> ] = GOTO 156
M [ 47 , <cast-expr> ] = GOTO 101
M [ 47 , <cond-expr> ] = GOTO 103
M [ 47 , <constant> ] = GOTO 104
M [ 47 , <eq-expr> ] = GOTO 107
M [ 47 , <exc-or-expr> ] = GOTO 108
M [ 47 , <inc-or-expr> ] = GOTO 111
M [ 47 , <initializer> ] = GOTO 157
M [ 47 , <land-expr> ] = GOTO 115
M [ 47 , <lor-expr> ] = GOTO 116
M [ 47 , <multiplicative-expr> ] = GOTO 117
M [ 47 , <num-const> ] = GOTO 118
M [ 47 , <postfix-expr> ] = GOTO 119
M [ 47 , <prim-expr> ] = GOTO 120
M [ 47 , <rel-expr> ] = GOTO 121
M [ 47 , <shift-expr> ] = GOTO 123
M [ 47 , <unary-expr> ] = GOTO 125
M [ 47 , <unary-op> ] = GOTO 126
M [ 47 , CHAR_CONST ] = SHIFT 127
M [ 47 , DELIM_LCURBRACE ] = SHIFT 158
M [ 47 , DELIM_LPAR ] = SHIFT 129
M [ 47 , FLOAT_CONST ] = SHIFT 132
M [ 47 , IDENTIFIER ] = SHIFT 159
M [ 47 , INT_CONST ] = SHIFT 134
M [ 47 , OP_ADD ] = SHIFT 135
M [ 47 , OP_AND ] = SHIFT 136
M [ 47 , OP_DEC ] = SHIFT 137
M [ 47 , OP_INC ] = SHIFT 138
M [ 47 , OP_LNOT ] = SHIFT 139
M [ 47 , OP_MUL ] = SHIFT 140
M [ 47 , OP_NOT ] = SHIFT 141
M [ 47 , OP_SUB ] = SHIFT 142
M [ 47 , STR_LITERAL ] = SHIFT 143
M [ 47 , sizeof ] = SHIFT 153
M [ 48 , <decl-spec> ] = GOTO 160
M [ 48 , <enum-spec> ] = GOTO 161
M [ 48 , <identifier-list> ] = GOTO 162
M [ 48 , <param-decl> ] = GOTO 163
M [ 48 , <param-list> ] = GOTO 164
M [ 48 , <param-type-list> ] = GOTO 165
M [ 48 , <storage-class-spec> ] = GOTO 166
M [ 48 , <struct-union-spec> ] = GOTO 167
M [ 48 , <struct-union> ] = GOTO 168
M [ 48 , <type-qual> ] = GOTO 169
M [ 48 , <type-spec> ] = GOTO 170
M [ 48 , DELIM_RPAR ] = SHIFT 171
M [ 48 , IDENTIFIER ] = SHIFT 172
M [ 48 , char ] = SHIFT 173
M [ 48 , const ] = SHIFT 174
M [ 48 , double ] = SHIFT 175
M [ 48 , enum ] = SHIFT 176
M [ 48 , float ] = SHIFT 177
M [ 48 , int ] = SHIFT 178
M [ 48 , long ] = SHIFT 179
M [ 48 , short ] = SHIFT 180
M [ 48 , signed ] = SHIFT 181
M [ 48 , struct ] = SHIFT 21
M [ 48 , typedef ] = SHIFT 182
M [ 48 , unsigned ] = SHIFT 183
M [ 48 , void ] = SHIFT 184
M [ 49 , <additive-expr> ] = GOTO 185
M [ 49 , <and-expr> ] = GOTO 186
M [ 49 , <asn-expr> ] = GOTO 187
M [ 49 , <cast-expr> ] = GOTO 188
M [ 49 , <cond-expr> ] = GOTO 189
M [ 49 , <constant> ] = GOTO 190
M [ 49 , <eq-expr> ] = GOTO 191
M [ 49 , <exc-or-expr> ] = GOTO 192
M [ 49 , <inc-or-expr> ] = GOTO 193
M [ 49 , <land-expr> ] = GOTO 194
M [ 49 , <lor-expr> ] = GOTO 195
M [ 49 , <multiplicative-expr> ] = GOTO 196
M [ 49 , <num-const> ] = GOTO 197
M [ 49 , <postfix-expr> ] = GOTO 198
M [ 49 , <prim-expr> ] = GOTO 199
M [ 49 , <rel-expr> ] = GOTO 200
M [ 49 , <shift-expr> ] = GOTO 201
M [ 49 , <type-qual-list> ] = GOTO 202
M [ 49 , <type-qual> ] = GOTO 203
M [ 49 , <unary-expr> ] = GOTO 204
M [ 49 , <unary-op> ] = GOTO 205
M [ 49 , CHAR_CONST ] = SHIFT 206
M [ 49 , DELIM_LPAR ] = SHIFT 207
M [ 49 , DELIM_RSQBRACKET ] = SHIFT 208
M [ 49 , FLOAT_CONST ] = SHIFT 209
M [ 49 , IDENTIFIER ] = SHIFT 210
M [ 49 , INT_CONST ] = SHIFT 211
M [ 49 , OP_ADD ] = SHIFT 135
M [ 49 , OP_AND ] = SHIFT 136
M [ 49 , OP_DEC ] = SHIFT 212
M [ 49 , OP_INC ] = SHIFT 213
M [ 49 , OP_LNOT ] = SHIFT 139
M [ 49 , OP_MUL ] = SHIFT 140
M [ 49 , OP_NOT ] = SHIFT 141
M [ 49 , OP_SUB ] = SHIFT 142
M [ 49 , STR_LITERAL ] = SHIFT 214
M [ 49 , const ] = SHIFT 215
M [ 49 , sizeof ] = SHIFT 216
M [ 50 , <declarator> ] = GOTO 89
M [ 50 , <direct-declarator> ] = GOTO 90
M [ 50 , <init-declarator> ] = GOTO 217
M [ 50 , <pointer> ] = GOTO 92
M [ 50 , DELIM_LPAR ] = SHIFT 93
M [ 50 , IDENTIFIER ] = SHIFT 95
M [ 50 , OP_MUL ] = SHIFT 33
M [ 51 , (EOF) ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 51 , char ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 51 , const ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 51 , double ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 51 , enum ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 51 , float ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 51 , int ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 51 , long ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 51 , short ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 51 , signed ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 51 , struct ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 51 , typedef ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 51 , unsigned ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 51 , void ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 52 , DELIM_COMMA ] = REDUCE <declarator> -> <pointer> <direct-declarator> 
M [ 52 , DELIM_LCURBRACE ] = REDUCE <declarator> -> <pointer> <direct-declarator> 
M [ 52 , DELIM_LPAR ] = SHIFT 48
M [ 52 , DELIM_LSQBRACKET ] = SHIFT 49
M [ 52 , DELIM_SEMICOLON ] = REDUCE <declarator> -> <pointer> <direct-declarator> 
M [ 52 , OP_ASN ] = REDUCE <declarator> -> <pointer> <direct-declarator> 
M [ 52 , char ] = REDUCE <declarator> -> <pointer> <direct-declarator> 
M [ 52 , const ] = REDUCE <declarator> -> <pointer> <direct-declarator> 
M [ 52 , double ] = REDUCE <declarator> -> <pointer> <direct-declarator> 
M [ 52 , enum ] = REDUCE <declarator> -> <pointer> <direct-declarator> 
M [ 52 , float ] = REDUCE <declarator> -> <pointer> <direct-declarator> 
M [ 52 , int ] = REDUCE <declarator> -> <pointer> <direct-declarator> 
M [ 52 , long ] = REDUCE <declarator> -> <pointer> <direct-declarator> 
M [ 52 , short ] = REDUCE <declarator> -> <pointer> <direct-declarator> 
M [ 52 , signed ] = REDUCE <declarator> -> <pointer> <direct-declarator> 
M [ 52 , struct ] = REDUCE <declarator> -> <pointer> <direct-declarator> 
M [ 52 , typedef ] = REDUCE <declarator> -> <pointer> <direct-declarator> 
M [ 52 , unsigned ] = REDUCE <declarator> -> <pointer> <direct-declarator> 
M [ 52 , void ] = REDUCE <declarator> -> <pointer> <direct-declarator> 
M [ 53 , DELIM_RPAR ] = SHIFT 218
M [ 54 , DELIM_LPAR ] = SHIFT 219
M [ 54 , DELIM_LSQBRACKET ] = SHIFT 220
M [ 54 , DELIM_RPAR ] = REDUCE <declarator> -> <direct-declarator> 
M [ 55 , <direct-declarator> ] = GOTO 221
M [ 55 , DELIM_LPAR ] = SHIFT 56
M [ 55 , IDENTIFIER ] = SHIFT 57
M [ 56 , <declarator> ] = GOTO 222
M [ 56 , <direct-declarator> ] = GOTO 54
M [ 56 , <pointer> ] = GOTO 55
M [ 56 , DELIM_LPAR ] = SHIFT 56
M [ 56 , IDENTIFIER ] = SHIFT 57
M [ 56 , OP_MUL ] = SHIFT 33
M [ 57 , DELIM_LPAR ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 57 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 57 , DELIM_RPAR ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 58 , DELIM_LPAR ] = REDUCE <pointer> -> OP_MUL <pointer> 
M [ 58 , IDENTIFIER ] = REDUCE <pointer> -> OP_MUL <pointer> 
M [ 59 , <pointer> ] = GOTO 223
M [ 59 , <type-qual> ] = GOTO 224
M [ 59 , DELIM_LPAR ] = REDUCE <pointer> -> OP_MUL <type-qual-list> 
M [ 59 , IDENTIFIER ] = REDUCE <pointer> -> OP_MUL <type-qual-list> 
M [ 59 , OP_MUL ] = SHIFT 33
M [ 59 , const ] = SHIFT 61
M [ 60 , DELIM_LPAR ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 60 , IDENTIFIER ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 60 , OP_MUL ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 60 , const ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 61 , DELIM_LPAR ] = REDUCE <type-qual> -> const 
M [ 61 , IDENTIFIER ] = REDUCE <type-qual> -> const 
M [ 61 , OP_MUL ] = REDUCE <type-qual> -> const 
M [ 61 , const ] = REDUCE <type-qual> -> const 
M [ 62 , DELIM_LPAR ] = REDUCE <type-spec> -> <enum-spec> 
M [ 62 , DELIM_SEMICOLON ] = REDUCE <type-spec> -> <enum-spec> 
M [ 62 , IDENTIFIER ] = REDUCE <type-spec> -> <enum-spec> 
M [ 62 , OP_MUL ] = REDUCE <type-spec> -> <enum-spec> 
M [ 62 , char ] = REDUCE <type-spec> -> <enum-spec> 
M [ 62 , const ] = REDUCE <type-spec> -> <enum-spec> 
M [ 62 , double ] = REDUCE <type-spec> -> <enum-spec> 
M [ 62 , enum ] = REDUCE <type-spec> -> <enum-spec> 
M [ 62 , float ] = REDUCE <type-spec> -> <enum-spec> 
M [ 62 , int ] = REDUCE <type-spec> -> <enum-spec> 
M [ 62 , long ] = REDUCE <type-spec> -> <enum-spec> 
M [ 62 , short ] = REDUCE <type-spec> -> <enum-spec> 
M [ 62 , signed ] = REDUCE <type-spec> -> <enum-spec> 
M [ 62 , struct ] = REDUCE <type-spec> -> <enum-spec> 
M [ 62 , unsigned ] = REDUCE <type-spec> -> <enum-spec> 
M [ 62 , void ] = REDUCE <type-spec> -> <enum-spec> 
M [ 63 , <declarator> ] = GOTO 225
M [ 63 , <direct-declarator> ] = GOTO 226
M [ 63 , <pointer> ] = GOTO 227
M [ 63 , <struct-declarator-list> ] = GOTO 228
M [ 63 , <struct-declarator> ] = GOTO 229
M [ 63 , DELIM_LPAR ] = SHIFT 230
M [ 63 , DELIM_SEMICOLON ] = SHIFT 231
M [ 63 , IDENTIFIER ] = SHIFT 232
M [ 63 , OP_MUL ] = SHIFT 33
M [ 64 , <enum-spec> ] = GOTO 62
M [ 64 , <spec-qual-list> ] = GOTO 63
M [ 64 , <struct-decl> ] = GOTO 233
M [ 64 , <struct-union-spec> ] = GOTO 66
M [ 64 , <struct-union> ] = GOTO 67
M [ 64 , <type-qual> ] = GOTO 68
M [ 64 , <type-spec> ] = GOTO 69
M [ 64 , DELIM_RCURBRACE ] = SHIFT 234
M [ 64 , char ] = SHIFT 70
M [ 64 , const ] = SHIFT 71
M [ 64 , double ] = SHIFT 72
M [ 64 , enum ] = SHIFT 73
M [ 64 , float ] = SHIFT 74
M [ 64 , int ] = SHIFT 75
M [ 64 , long ] = SHIFT 76
M [ 64 , short ] = SHIFT 77
M [ 64 , signed ] = SHIFT 78
M [ 64 , struct ] = SHIFT 21
M [ 64 , unsigned ] = SHIFT 79
M [ 64 , void ] = SHIFT 80
M [ 65 , DELIM_RCURBRACE ] = REDUCE <struct-decl-list> -> <struct-decl> 
M [ 65 , char ] = REDUCE <struct-decl-list> -> <struct-decl> 
M [ 65 , const ] = REDUCE <struct-decl-list> -> <struct-decl> 
M [ 65 , double ] = REDUCE <struct-decl-list> -> <struct-decl> 
M [ 65 , enum ] = REDUCE <struct-decl-list> -> <struct-decl> 
M [ 65 , float ] = REDUCE <struct-decl-list> -> <struct-decl> 
M [ 65 , int ] = REDUCE <struct-decl-list> -> <struct-decl> 
M [ 65 , long ] = REDUCE <struct-decl-list> -> <struct-decl> 
M [ 65 , short ] = REDUCE <struct-decl-list> -> <struct-decl> 
M [ 65 , signed ] = REDUCE <struct-decl-list> -> <struct-decl> 
M [ 65 , struct ] = REDUCE <struct-decl-list> -> <struct-decl> 
M [ 65 , unsigned ] = REDUCE <struct-decl-list> -> <struct-decl> 
M [ 65 , void ] = REDUCE <struct-decl-list> -> <struct-decl> 
M [ 66 , DELIM_LPAR ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 66 , DELIM_SEMICOLON ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 66 , IDENTIFIER ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 66 , OP_MUL ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 66 , char ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 66 , const ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 66 , double ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 66 , enum ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 66 , float ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 66 , int ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 66 , long ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 66 , short ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 66 , signed ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 66 , struct ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 66 , unsigned ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 66 , void ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 67 , DELIM_LCURBRACE ] = SHIFT 235
M [ 67 , IDENTIFIER ] = SHIFT 236
M [ 68 , <enum-spec> ] = GOTO 62
M [ 68 , <spec-qual-list> ] = GOTO 237
M [ 68 , <struct-union-spec> ] = GOTO 66
M [ 68 , <struct-union> ] = GOTO 67
M [ 68 , <type-qual> ] = GOTO 68
M [ 68 , <type-spec> ] = GOTO 69
M [ 68 , DELIM_LPAR ] = REDUCE <spec-qual-list> -> <type-qual> 
M [ 68 , DELIM_SEMICOLON ] = REDUCE <spec-qual-list> -> <type-qual> 
M [ 68 , IDENTIFIER ] = REDUCE <spec-qual-list> -> <type-qual> 
M [ 68 , OP_MUL ] = REDUCE <spec-qual-list> -> <type-qual> 
M [ 68 , char ] = SHIFT 70
M [ 68 , const ] = SHIFT 71
M [ 68 , double ] = SHIFT 72
M [ 68 , enum ] = SHIFT 73
M [ 68 , float ] = SHIFT 74
M [ 68 , int ] = SHIFT 75
M [ 68 , long ] = SHIFT 76
M [ 68 , short ] = SHIFT 77
M [ 68 , signed ] = SHIFT 78
M [ 68 , struct ] = SHIFT 21
M [ 68 , unsigned ] = SHIFT 79
M [ 68 , void ] = SHIFT 80
M [ 69 , <enum-spec> ] = GOTO 62
M [ 69 , <spec-qual-list> ] = GOTO 238
M [ 69 , <struct-union-spec> ] = GOTO 66
M [ 69 , <struct-union> ] = GOTO 67
M [ 69 , <type-qual> ] = GOTO 68
M [ 69 , <type-spec> ] = GOTO 69
M [ 69 , DELIM_LPAR ] = REDUCE <spec-qual-list> -> <type-spec> 
M [ 69 , DELIM_SEMICOLON ] = REDUCE <spec-qual-list> -> <type-spec> 
M [ 69 , IDENTIFIER ] = REDUCE <spec-qual-list> -> <type-spec> 
M [ 69 , OP_MUL ] = REDUCE <spec-qual-list> -> <type-spec> 
M [ 69 , char ] = SHIFT 70
M [ 69 , const ] = SHIFT 71
M [ 69 , double ] = SHIFT 72
M [ 69 , enum ] = SHIFT 73
M [ 69 , float ] = SHIFT 74
M [ 69 , int ] = SHIFT 75
M [ 69 , long ] = SHIFT 76
M [ 69 , short ] = SHIFT 77
M [ 69 , signed ] = SHIFT 78
M [ 69 , struct ] = SHIFT 21
M [ 69 , unsigned ] = SHIFT 79
M [ 69 , void ] = SHIFT 80
M [ 70 , DELIM_LPAR ] = REDUCE <type-spec> -> char 
M [ 70 , DELIM_SEMICOLON ] = REDUCE <type-spec> -> char 
M [ 70 , IDENTIFIER ] = REDUCE <type-spec> -> char 
M [ 70 , OP_MUL ] = REDUCE <type-spec> -> char 
M [ 70 , char ] = REDUCE <type-spec> -> char 
M [ 70 , const ] = REDUCE <type-spec> -> char 
M [ 70 , double ] = REDUCE <type-spec> -> char 
M [ 70 , enum ] = REDUCE <type-spec> -> char 
M [ 70 , float ] = REDUCE <type-spec> -> char 
M [ 70 , int ] = REDUCE <type-spec> -> char 
M [ 70 , long ] = REDUCE <type-spec> -> char 
M [ 70 , short ] = REDUCE <type-spec> -> char 
M [ 70 , signed ] = REDUCE <type-spec> -> char 
M [ 70 , struct ] = REDUCE <type-spec> -> char 
M [ 70 , unsigned ] = REDUCE <type-spec> -> char 
M [ 70 , void ] = REDUCE <type-spec> -> char 
M [ 71 , DELIM_LPAR ] = REDUCE <type-qual> -> const 
M [ 71 , DELIM_SEMICOLON ] = REDUCE <type-qual> -> const 
M [ 71 , IDENTIFIER ] = REDUCE <type-qual> -> const 
M [ 71 , OP_MUL ] = REDUCE <type-qual> -> const 
M [ 71 , char ] = REDUCE <type-qual> -> const 
M [ 71 , const ] = REDUCE <type-qual> -> const 
M [ 71 , double ] = REDUCE <type-qual> -> const 
M [ 71 , enum ] = REDUCE <type-qual> -> const 
M [ 71 , float ] = REDUCE <type-qual> -> const 
M [ 71 , int ] = REDUCE <type-qual> -> const 
M [ 71 , long ] = REDUCE <type-qual> -> const 
M [ 71 , short ] = REDUCE <type-qual> -> const 
M [ 71 , signed ] = REDUCE <type-qual> -> const 
M [ 71 , struct ] = REDUCE <type-qual> -> const 
M [ 71 , unsigned ] = REDUCE <type-qual> -> const 
M [ 71 , void ] = REDUCE <type-qual> -> const 
M [ 72 , DELIM_LPAR ] = REDUCE <type-spec> -> double 
M [ 72 , DELIM_SEMICOLON ] = REDUCE <type-spec> -> double 
M [ 72 , IDENTIFIER ] = REDUCE <type-spec> -> double 
M [ 72 , OP_MUL ] = REDUCE <type-spec> -> double 
M [ 72 , char ] = REDUCE <type-spec> -> double 
M [ 72 , const ] = REDUCE <type-spec> -> double 
M [ 72 , double ] = REDUCE <type-spec> -> double 
M [ 72 , enum ] = REDUCE <type-spec> -> double 
M [ 72 , float ] = REDUCE <type-spec> -> double 
M [ 72 , int ] = REDUCE <type-spec> -> double 
M [ 72 , long ] = REDUCE <type-spec> -> double 
M [ 72 , short ] = REDUCE <type-spec> -> double 
M [ 72 , signed ] = REDUCE <type-spec> -> double 
M [ 72 , struct ] = REDUCE <type-spec> -> double 
M [ 72 , unsigned ] = REDUCE <type-spec> -> double 
M [ 72 , void ] = REDUCE <type-spec> -> double 
M [ 73 , DELIM_LCURBRACE ] = SHIFT 239
M [ 73 , IDENTIFIER ] = SHIFT 240
M [ 74 , DELIM_LPAR ] = REDUCE <type-spec> -> float 
M [ 74 , DELIM_SEMICOLON ] = REDUCE <type-spec> -> float 
M [ 74 , IDENTIFIER ] = REDUCE <type-spec> -> float 
M [ 74 , OP_MUL ] = REDUCE <type-spec> -> float 
M [ 74 , char ] = REDUCE <type-spec> -> float 
M [ 74 , const ] = REDUCE <type-spec> -> float 
M [ 74 , double ] = REDUCE <type-spec> -> float 
M [ 74 , enum ] = REDUCE <type-spec> -> float 
M [ 74 , float ] = REDUCE <type-spec> -> float 
M [ 74 , int ] = REDUCE <type-spec> -> float 
M [ 74 , long ] = REDUCE <type-spec> -> float 
M [ 74 , short ] = REDUCE <type-spec> -> float 
M [ 74 , signed ] = REDUCE <type-spec> -> float 
M [ 74 , struct ] = REDUCE <type-spec> -> float 
M [ 74 , unsigned ] = REDUCE <type-spec> -> float 
M [ 74 , void ] = REDUCE <type-spec> -> float 
M [ 75 , DELIM_LPAR ] = REDUCE <type-spec> -> int 
M [ 75 , DELIM_SEMICOLON ] = REDUCE <type-spec> -> int 
M [ 75 , IDENTIFIER ] = REDUCE <type-spec> -> int 
M [ 75 , OP_MUL ] = REDUCE <type-spec> -> int 
M [ 75 , char ] = REDUCE <type-spec> -> int 
M [ 75 , const ] = REDUCE <type-spec> -> int 
M [ 75 , double ] = REDUCE <type-spec> -> int 
M [ 75 , enum ] = REDUCE <type-spec> -> int 
M [ 75 , float ] = REDUCE <type-spec> -> int 
M [ 75 , int ] = REDUCE <type-spec> -> int 
M [ 75 , long ] = REDUCE <type-spec> -> int 
M [ 75 , short ] = REDUCE <type-spec> -> int 
M [ 75 , signed ] = REDUCE <type-spec> -> int 
M [ 75 , struct ] = REDUCE <type-spec> -> int 
M [ 75 , unsigned ] = REDUCE <type-spec> -> int 
M [ 75 , void ] = REDUCE <type-spec> -> int 
M [ 76 , DELIM_LPAR ] = REDUCE <type-spec> -> long 
M [ 76 , DELIM_SEMICOLON ] = REDUCE <type-spec> -> long 
M [ 76 , IDENTIFIER ] = REDUCE <type-spec> -> long 
M [ 76 , OP_MUL ] = REDUCE <type-spec> -> long 
M [ 76 , char ] = REDUCE <type-spec> -> long 
M [ 76 , const ] = REDUCE <type-spec> -> long 
M [ 76 , double ] = REDUCE <type-spec> -> long 
M [ 76 , enum ] = REDUCE <type-spec> -> long 
M [ 76 , float ] = REDUCE <type-spec> -> long 
M [ 76 , int ] = REDUCE <type-spec> -> long 
M [ 76 , long ] = REDUCE <type-spec> -> long 
M [ 76 , short ] = REDUCE <type-spec> -> long 
M [ 76 , signed ] = REDUCE <type-spec> -> long 
M [ 76 , struct ] = REDUCE <type-spec> -> long 
M [ 76 , unsigned ] = REDUCE <type-spec> -> long 
M [ 76 , void ] = REDUCE <type-spec> -> long 
M [ 77 , DELIM_LPAR ] = REDUCE <type-spec> -> short 
M [ 77 , DELIM_SEMICOLON ] = REDUCE <type-spec> -> short 
M [ 77 , IDENTIFIER ] = REDUCE <type-spec> -> short 
M [ 77 , OP_MUL ] = REDUCE <type-spec> -> short 
M [ 77 , char ] = REDUCE <type-spec> -> short 
M [ 77 , const ] = REDUCE <type-spec> -> short 
M [ 77 , double ] = REDUCE <type-spec> -> short 
M [ 77 , enum ] = REDUCE <type-spec> -> short 
M [ 77 , float ] = REDUCE <type-spec> -> short 
M [ 77 , int ] = REDUCE <type-spec> -> short 
M [ 77 , long ] = REDUCE <type-spec> -> short 
M [ 77 , short ] = REDUCE <type-spec> -> short 
M [ 77 , signed ] = REDUCE <type-spec> -> short 
M [ 77 , struct ] = REDUCE <type-spec> -> short 
M [ 77 , unsigned ] = REDUCE <type-spec> -> short 
M [ 77 , void ] = REDUCE <type-spec> -> short 
M [ 78 , DELIM_LPAR ] = REDUCE <type-spec> -> signed 
M [ 78 , DELIM_SEMICOLON ] = REDUCE <type-spec> -> signed 
M [ 78 , IDENTIFIER ] = REDUCE <type-spec> -> signed 
M [ 78 , OP_MUL ] = REDUCE <type-spec> -> signed 
M [ 78 , char ] = REDUCE <type-spec> -> signed 
M [ 78 , const ] = REDUCE <type-spec> -> signed 
M [ 78 , double ] = REDUCE <type-spec> -> signed 
M [ 78 , enum ] = REDUCE <type-spec> -> signed 
M [ 78 , float ] = REDUCE <type-spec> -> signed 
M [ 78 , int ] = REDUCE <type-spec> -> signed 
M [ 78 , long ] = REDUCE <type-spec> -> signed 
M [ 78 , short ] = REDUCE <type-spec> -> signed 
M [ 78 , signed ] = REDUCE <type-spec> -> signed 
M [ 78 , struct ] = REDUCE <type-spec> -> signed 
M [ 78 , unsigned ] = REDUCE <type-spec> -> signed 
M [ 78 , void ] = REDUCE <type-spec> -> signed 
M [ 79 , DELIM_LPAR ] = REDUCE <type-spec> -> unsigned 
M [ 79 , DELIM_SEMICOLON ] = REDUCE <type-spec> -> unsigned 
M [ 79 , IDENTIFIER ] = REDUCE <type-spec> -> unsigned 
M [ 79 , OP_MUL ] = REDUCE <type-spec> -> unsigned 
M [ 79 , char ] = REDUCE <type-spec> -> unsigned 
M [ 79 , const ] = REDUCE <type-spec> -> unsigned 
M [ 79 , double ] = REDUCE <type-spec> -> unsigned 
M [ 79 , enum ] = REDUCE <type-spec> -> unsigned 
M [ 79 , float ] = REDUCE <type-spec> -> unsigned 
M [ 79 , int ] = REDUCE <type-spec> -> unsigned 
M [ 79 , long ] = REDUCE <type-spec> -> unsigned 
M [ 79 , short ] = REDUCE <type-spec> -> unsigned 
M [ 79 , signed ] = REDUCE <type-spec> -> unsigned 
M [ 79 , struct ] = REDUCE <type-spec> -> unsigned 
M [ 79 , unsigned ] = REDUCE <type-spec> -> unsigned 
M [ 79 , void ] = REDUCE <type-spec> -> unsigned 
M [ 80 , DELIM_LPAR ] = REDUCE <type-spec> -> void 
M [ 80 , DELIM_SEMICOLON ] = REDUCE <type-spec> -> void 
M [ 80 , IDENTIFIER ] = REDUCE <type-spec> -> void 
M [ 80 , OP_MUL ] = REDUCE <type-spec> -> void 
M [ 80 , char ] = REDUCE <type-spec> -> void 
M [ 80 , const ] = REDUCE <type-spec> -> void 
M [ 80 , double ] = REDUCE <type-spec> -> void 
M [ 80 , enum ] = REDUCE <type-spec> -> void 
M [ 80 , float ] = REDUCE <type-spec> -> void 
M [ 80 , int ] = REDUCE <type-spec> -> void 
M [ 80 , long ] = REDUCE <type-spec> -> void 
M [ 80 , short ] = REDUCE <type-spec> -> void 
M [ 80 , signed ] = REDUCE <type-spec> -> void 
M [ 80 , struct ] = REDUCE <type-spec> -> void 
M [ 80 , unsigned ] = REDUCE <type-spec> -> void 
M [ 80 , void ] = REDUCE <type-spec> -> void 
M [ 81 , <enum-spec> ] = GOTO 62
M [ 81 , <spec-qual-list> ] = GOTO 63
M [ 81 , <struct-decl-list> ] = GOTO 241
M [ 81 , <struct-decl> ] = GOTO 65
M [ 81 , <struct-union-spec> ] = GOTO 66
M [ 81 , <struct-union> ] = GOTO 67
M [ 81 , <type-qual> ] = GOTO 68
M [ 81 , <type-spec> ] = GOTO 69
M [ 81 , char ] = SHIFT 70
M [ 81 , const ] = SHIFT 71
M [ 81 , double ] = SHIFT 72
M [ 81 , enum ] = SHIFT 73
M [ 81 , float ] = SHIFT 74
M [ 81 , int ] = SHIFT 75
M [ 81 , long ] = SHIFT 76
M [ 81 , short ] = SHIFT 77
M [ 81 , signed ] = SHIFT 78
M [ 81 , struct ] = SHIFT 21
M [ 81 , unsigned ] = SHIFT 79
M [ 81 , void ] = SHIFT 80
M [ 82 , DELIM_COMMA ] = REDUCE <enumerator> -> <enumeration-const> 
M [ 82 , DELIM_RCURBRACE ] = REDUCE <enumerator> -> <enumeration-const> 
M [ 82 , OP_ASN ] = SHIFT 242
M [ 83 , DELIM_COMMA ] = SHIFT 243
M [ 83 , DELIM_RCURBRACE ] = SHIFT 244
M [ 84 , DELIM_COMMA ] = REDUCE <enumerator-list> -> <enumerator> 
M [ 84 , DELIM_RCURBRACE ] = REDUCE <enumerator-list> -> <enumerator> 
M [ 85 , DELIM_COMMA ] = REDUCE <enumeration-const> -> IDENTIFIER 
M [ 85 , DELIM_RCURBRACE ] = REDUCE <enumeration-const> -> IDENTIFIER 
M [ 85 , OP_ASN ] = REDUCE <enumeration-const> -> IDENTIFIER 
M [ 86 , <enumeration-const> ] = GOTO 82
M [ 86 , <enumerator-list> ] = GOTO 245
M [ 86 , <enumerator> ] = GOTO 84
M [ 86 , IDENTIFIER ] = SHIFT 85
M [ 87 , (EOF) ] = REDUCE <func-def> -> <decl-spec> <declarator> <decl-list> <comp-stmt> 
M [ 87 , char ] = REDUCE <func-def> -> <decl-spec> <declarator> <decl-list> <comp-stmt> 
M [ 87 , const ] = REDUCE <func-def> -> <decl-spec> <declarator> <decl-list> <comp-stmt> 
M [ 87 , double ] = REDUCE <func-def> -> <decl-spec> <declarator> <decl-list> <comp-stmt> 
M [ 87 , enum ] = REDUCE <func-def> -> <decl-spec> <declarator> <decl-list> <comp-stmt> 
M [ 87 , float ] = REDUCE <func-def> -> <decl-spec> <declarator> <decl-list> <comp-stmt> 
M [ 87 , int ] = REDUCE <func-def> -> <decl-spec> <declarator> <decl-list> <comp-stmt> 
M [ 87 , long ] = REDUCE <func-def> -> <decl-spec> <declarator> <decl-list> <comp-stmt> 
M [ 87 , short ] = REDUCE <func-def> -> <decl-spec> <declarator> <decl-list> <comp-stmt> 
M [ 87 , signed ] = REDUCE <func-def> -> <decl-spec> <declarator> <decl-list> <comp-stmt> 
M [ 87 , struct ] = REDUCE <func-def> -> <decl-spec> <declarator> <decl-list> <comp-stmt> 
M [ 87 , typedef ] = REDUCE <func-def> -> <decl-spec> <declarator> <decl-list> <comp-stmt> 
M [ 87 , unsigned ] = REDUCE <func-def> -> <decl-spec> <declarator> <decl-list> <comp-stmt> 
M [ 87 , void ] = REDUCE <func-def> -> <decl-spec> <declarator> <decl-list> <comp-stmt> 
M [ 88 , DELIM_LCURBRACE ] = REDUCE <decl-list> -> <decl-list> <decl> 
M [ 88 , char ] = REDUCE <decl-list> -> <decl-list> <decl> 
M [ 88 , const ] = REDUCE <decl-list> -> <decl-list> <decl> 
M [ 88 , double ] = REDUCE <decl-list> -> <decl-list> <decl> 
M [ 88 , enum ] = REDUCE <decl-list> -> <decl-list> <decl> 
M [ 88 , float ] = REDUCE <decl-list> -> <decl-list> <decl> 
M [ 88 , int ] = REDUCE <decl-list> -> <decl-list> <decl> 
M [ 88 , long ] = REDUCE <decl-list> -> <decl-list> <decl> 
M [ 88 , short ] = REDUCE <decl-list> -> <decl-list> <decl> 
M [ 88 , signed ] = REDUCE <decl-list> -> <decl-list> <decl> 
M [ 88 , struct ] = REDUCE <decl-list> -> <decl-list> <decl> 
M [ 88 , typedef ] = REDUCE <decl-list> -> <decl-list> <decl> 
M [ 88 , unsigned ] = REDUCE <decl-list> -> <decl-list> <decl> 
M [ 88 , void ] = REDUCE <decl-list> -> <decl-list> <decl> 
M [ 89 , DELIM_COMMA ] = REDUCE <init-declarator> -> <declarator> 
M [ 89 , DELIM_SEMICOLON ] = REDUCE <init-declarator> -> <declarator> 
M [ 89 , OP_ASN ] = SHIFT 47
M [ 90 , DELIM_COMMA ] = REDUCE <declarator> -> <direct-declarator> 
M [ 90 , DELIM_LPAR ] = SHIFT 246
M [ 90 , DELIM_LSQBRACKET ] = SHIFT 247
M [ 90 , DELIM_SEMICOLON ] = REDUCE <declarator> -> <direct-declarator> 
M [ 90 , OP_ASN ] = REDUCE <declarator> -> <direct-declarator> 
M [ 91 , DELIM_COMMA ] = SHIFT 50
M [ 91 , DELIM_SEMICOLON ] = SHIFT 248
M [ 92 , <direct-declarator> ] = GOTO 249
M [ 92 , DELIM_LPAR ] = SHIFT 93
M [ 92 , IDENTIFIER ] = SHIFT 95
M [ 93 , <declarator> ] = GOTO 250
M [ 93 , <direct-declarator> ] = GOTO 54
M [ 93 , <pointer> ] = GOTO 55
M [ 93 , DELIM_LPAR ] = SHIFT 56
M [ 93 , IDENTIFIER ] = SHIFT 57
M [ 93 , OP_MUL ] = SHIFT 33
M [ 94 , DELIM_LCURBRACE ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 94 , char ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 94 , const ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 94 , double ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 94 , enum ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 94 , float ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 94 , int ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 94 , long ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 94 , short ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 94 , signed ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 94 , struct ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 94 , typedef ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 94 , unsigned ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 94 , void ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 95 , DELIM_COMMA ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 95 , DELIM_LPAR ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 95 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 95 , DELIM_SEMICOLON ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 95 , OP_ASN ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 96 , DELIM_COMMA ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 96 , DELIM_QUESTION ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 96 , DELIM_SEMICOLON ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 96 , OP_ADD ] = SHIFT 251
M [ 96 , OP_AND ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 96 , OP_EQ ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 96 , OP_GE ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 96 , OP_GT ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 96 , OP_LAND ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 96 , OP_LE ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 96 , OP_LOR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 96 , OP_LT ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 96 , OP_NEQ ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 96 , OP_OR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 96 , OP_SHL ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 96 , OP_SHR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 96 , OP_SUB ] = SHIFT 252
M [ 96 , OP_XOR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 97 , DELIM_COMMA ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 97 , DELIM_QUESTION ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 97 , DELIM_SEMICOLON ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 97 , OP_AND ] = SHIFT 253
M [ 97 , OP_LAND ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 97 , OP_LOR ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 97 , OP_OR ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 97 , OP_XOR ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 98 , DELIM_COMMA ] = REDUCE <expr> -> <asn-expr> 
M [ 98 , DELIM_SEMICOLON ] = REDUCE <expr> -> <asn-expr> 
M [ 99 , <additive-expr> ] = GOTO 96
M [ 99 , <and-expr> ] = GOTO 97
M [ 99 , <asn-expr> ] = GOTO 98
M [ 99 , <blk-item> ] = GOTO 254
M [ 99 , <cast-expr> ] = GOTO 101
M [ 99 , <comp-stmt> ] = GOTO 102
M [ 99 , <cond-expr> ] = GOTO 103
M [ 99 , <constant> ] = GOTO 104
M [ 99 , <decl-spec> ] = GOTO 105
M [ 99 , <decl> ] = GOTO 106
M [ 99 , <enum-spec> ] = GOTO 3
M [ 99 , <eq-expr> ] = GOTO 107
M [ 99 , <exc-or-expr> ] = GOTO 108
M [ 99 , <expr-stmt> ] = GOTO 109
M [ 99 , <expr> ] = GOTO 110
M [ 99 , <inc-or-expr> ] = GOTO 111
M [ 99 , <iter-stmt> ] = GOTO 112
M [ 99 , <jump-stmt> ] = GOTO 113
M [ 99 , <labeled-stmt> ] = GOTO 114
M [ 99 , <land-expr> ] = GOTO 115
M [ 99 , <lor-expr> ] = GOTO 116
M [ 99 , <multiplicative-expr> ] = GOTO 117
M [ 99 , <num-const> ] = GOTO 118
M [ 99 , <postfix-expr> ] = GOTO 119
M [ 99 , <prim-expr> ] = GOTO 120
M [ 99 , <rel-expr> ] = GOTO 121
M [ 99 , <sele-stmt> ] = GOTO 122
M [ 99 , <shift-expr> ] = GOTO 123
M [ 99 , <stmt> ] = GOTO 124
M [ 99 , <storage-class-spec> ] = GOTO 6
M [ 99 , <struct-union-spec> ] = GOTO 7
M [ 99 , <struct-union> ] = GOTO 8
M [ 99 , <type-qual> ] = GOTO 10
M [ 99 , <type-spec> ] = GOTO 11
M [ 99 , <unary-expr> ] = GOTO 125
M [ 99 , <unary-op> ] = GOTO 126
M [ 99 , CHAR_CONST ] = SHIFT 127
M [ 99 , DELIM_LCURBRACE ] = SHIFT 128
M [ 99 , DELIM_LPAR ] = SHIFT 129
M [ 99 , DELIM_RCURBRACE ] = SHIFT 255
M [ 99 , DELIM_SEMICOLON ] = SHIFT 131
M [ 99 , FLOAT_CONST ] = SHIFT 132
M [ 99 , IDENTIFIER ] = SHIFT 133
M [ 99 , INT_CONST ] = SHIFT 134
M [ 99 , OP_ADD ] = SHIFT 135
M [ 99 , OP_AND ] = SHIFT 136
M [ 99 , OP_DEC ] = SHIFT 137
M [ 99 , OP_INC ] = SHIFT 138
M [ 99 , OP_LNOT ] = SHIFT 139
M [ 99 , OP_MUL ] = SHIFT 140
M [ 99 , OP_NOT ] = SHIFT 141
M [ 99 , OP_SUB ] = SHIFT 142
M [ 99 , STR_LITERAL ] = SHIFT 143
M [ 99 , break ] = SHIFT 144
M [ 99 , case ] = SHIFT 145
M [ 99 , char ] = SHIFT 12
M [ 99 , const ] = SHIFT 13
M [ 99 , continue ] = SHIFT 146
M [ 99 , default ] = SHIFT 147
M [ 99 , do ] = SHIFT 148
M [ 99 , double ] = SHIFT 14
M [ 99 , enum ] = SHIFT 15
M [ 99 , float ] = SHIFT 16
M [ 99 , for ] = SHIFT 149
M [ 99 , goto ] = SHIFT 150
M [ 99 , if ] = SHIFT 151
M [ 99 , int ] = SHIFT 17
M [ 99 , long ] = SHIFT 18
M [ 99 , return ] = SHIFT 152
M [ 99 , short ] = SHIFT 19
M [ 99 , signed ] = SHIFT 20
M [ 99 , sizeof ] = SHIFT 153
M [ 99 , struct ] = SHIFT 21
M [ 99 , switch ] = SHIFT 154
M [ 99 , typedef ] = SHIFT 22
M [ 99 , unsigned ] = SHIFT 23
M [ 99 , void ] = SHIFT 24
M [ 99 , while ] = SHIFT 155
M [ 100 , CHAR_CONST ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , DELIM_LCURBRACE ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , DELIM_LPAR ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , DELIM_RCURBRACE ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , DELIM_SEMICOLON ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , FLOAT_CONST ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , IDENTIFIER ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , INT_CONST ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , OP_ADD ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , OP_AND ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , OP_DEC ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , OP_INC ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , OP_LNOT ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , OP_MUL ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , OP_NOT ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , OP_SUB ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , STR_LITERAL ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , break ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , case ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , char ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , const ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , continue ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , default ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , do ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , double ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , enum ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , float ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , for ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , goto ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , if ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , int ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , long ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , return ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , short ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , signed ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , sizeof ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , struct ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , switch ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , typedef ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , unsigned ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , void ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 100 , while ] = REDUCE <blk-item-list> -> <blk-item> 
M [ 101 , DELIM_COMMA ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 101 , DELIM_QUESTION ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 101 , DELIM_SEMICOLON ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 101 , OP_ADD ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 101 , OP_AND ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 101 , OP_DIV ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 101 , OP_EQ ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 101 , OP_GE ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 101 , OP_GT ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 101 , OP_LAND ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 101 , OP_LE ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 101 , OP_LOR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 101 , OP_LT ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 101 , OP_MOD ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 101 , OP_MUL ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 101 , OP_NEQ ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 101 , OP_OR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 101 , OP_SHL ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 101 , OP_SHR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 101 , OP_SUB ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 101 , OP_XOR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 102 , CHAR_CONST ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , DELIM_LCURBRACE ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , DELIM_LPAR ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , DELIM_RCURBRACE ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , DELIM_SEMICOLON ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , FLOAT_CONST ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , IDENTIFIER ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , INT_CONST ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , OP_ADD ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , OP_AND ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , OP_DEC ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , OP_INC ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , OP_LNOT ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , OP_MUL ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , OP_NOT ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , OP_SUB ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , STR_LITERAL ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , break ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , case ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , char ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , const ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , continue ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , default ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , do ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , double ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , enum ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , float ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , for ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , goto ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , if ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , int ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , long ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , return ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , short ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , signed ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , sizeof ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , struct ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , switch ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , typedef ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , unsigned ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , void ] = REDUCE <stmt> -> <comp-stmt> 
M [ 102 , while ] = REDUCE <stmt> -> <comp-stmt> 
M [ 103 , DELIM_COMMA ] = REDUCE <asn-expr> -> <cond-expr> 
M [ 103 , DELIM_SEMICOLON ] = REDUCE <asn-expr> -> <cond-expr> 
M [ 104 , DELIM_COMMA ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , DELIM_LPAR ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , DELIM_QUESTION ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , DELIM_SEMICOLON ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_ADD ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_ADDASN ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_AND ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_ANDASN ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_ARROW ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_ASN ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_DEC ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_DIV ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_DIVASN ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_DOT ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_EQ ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_GE ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_GT ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_INC ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_LAND ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_LE ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_LOR ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_LT ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_MOD ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_MODASN ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_MUL ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_MULASN ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_NEQ ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_OR ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_ORASN ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_SHL ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_SHLASN ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_SHR ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_SHRASN ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_SUB ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_SUBASN ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_XOR ] = REDUCE <prim-expr> -> <constant> 
M [ 104 , OP_XORASN ] = REDUCE <prim-expr> -> <constant> 
M [ 105 , <declarator> ] = GOTO 89
M [ 105 , <direct-declarator> ] = GOTO 90
M [ 105 , <init-declarator-list> ] = GOTO 256
M [ 105 , <init-declarator> ] = GOTO 28
M [ 105 , <pointer> ] = GOTO 92
M [ 105 , DELIM_LPAR ] = SHIFT 93
M [ 105 , DELIM_SEMICOLON ] = SHIFT 257
M [ 105 , IDENTIFIER ] = SHIFT 95
M [ 105 , OP_MUL ] = SHIFT 33
M [ 106 , CHAR_CONST ] = REDUCE <blk-item> -> <decl> 
M [ 106 , DELIM_LCURBRACE ] = REDUCE <blk-item> -> <decl> 
M [ 106 , DELIM_LPAR ] = REDUCE <blk-item> -> <decl> 
M [ 106 , DELIM_RCURBRACE ] = REDUCE <blk-item> -> <decl> 
M [ 106 , DELIM_SEMICOLON ] = REDUCE <blk-item> -> <decl> 
M [ 106 , FLOAT_CONST ] = REDUCE <blk-item> -> <decl> 
M [ 106 , IDENTIFIER ] = REDUCE <blk-item> -> <decl> 
M [ 106 , INT_CONST ] = REDUCE <blk-item> -> <decl> 
M [ 106 , OP_ADD ] = REDUCE <blk-item> -> <decl> 
M [ 106 , OP_AND ] = REDUCE <blk-item> -> <decl> 
M [ 106 , OP_DEC ] = REDUCE <blk-item> -> <decl> 
M [ 106 , OP_INC ] = REDUCE <blk-item> -> <decl> 
M [ 106 , OP_LNOT ] = REDUCE <blk-item> -> <decl> 
M [ 106 , OP_MUL ] = REDUCE <blk-item> -> <decl> 
M [ 106 , OP_NOT ] = REDUCE <blk-item> -> <decl> 
M [ 106 , OP_SUB ] = REDUCE <blk-item> -> <decl> 
M [ 106 , STR_LITERAL ] = REDUCE <blk-item> -> <decl> 
M [ 106 , break ] = REDUCE <blk-item> -> <decl> 
M [ 106 , case ] = REDUCE <blk-item> -> <decl> 
M [ 106 , char ] = REDUCE <blk-item> -> <decl> 
M [ 106 , const ] = REDUCE <blk-item> -> <decl> 
M [ 106 , continue ] = REDUCE <blk-item> -> <decl> 
M [ 106 , default ] = REDUCE <blk-item> -> <decl> 
M [ 106 , do ] = REDUCE <blk-item> -> <decl> 
M [ 106 , double ] = REDUCE <blk-item> -> <decl> 
M [ 106 , enum ] = REDUCE <blk-item> -> <decl> 
M [ 106 , float ] = REDUCE <blk-item> -> <decl> 
M [ 106 , for ] = REDUCE <blk-item> -> <decl> 
M [ 106 , goto ] = REDUCE <blk-item> -> <decl> 
M [ 106 , if ] = REDUCE <blk-item> -> <decl> 
M [ 106 , int ] = REDUCE <blk-item> -> <decl> 
M [ 106 , long ] = REDUCE <blk-item> -> <decl> 
M [ 106 , return ] = REDUCE <blk-item> -> <decl> 
M [ 106 , short ] = REDUCE <blk-item> -> <decl> 
M [ 106 , signed ] = REDUCE <blk-item> -> <decl> 
M [ 106 , sizeof ] = REDUCE <blk-item> -> <decl> 
M [ 106 , struct ] = REDUCE <blk-item> -> <decl> 
M [ 106 , switch ] = REDUCE <blk-item> -> <decl> 
M [ 106 , typedef ] = REDUCE <blk-item> -> <decl> 
M [ 106 , unsigned ] = REDUCE <blk-item> -> <decl> 
M [ 106 , void ] = REDUCE <blk-item> -> <decl> 
M [ 106 , while ] = REDUCE <blk-item> -> <decl> 
M [ 107 , DELIM_COMMA ] = REDUCE <and-expr> -> <eq-expr> 
M [ 107 , DELIM_QUESTION ] = REDUCE <and-expr> -> <eq-expr> 
M [ 107 , DELIM_SEMICOLON ] = REDUCE <and-expr> -> <eq-expr> 
M [ 107 , OP_AND ] = REDUCE <and-expr> -> <eq-expr> 
M [ 107 , OP_EQ ] = SHIFT 258
M [ 107 , OP_LAND ] = REDUCE <and-expr> -> <eq-expr> 
M [ 107 , OP_LOR ] = REDUCE <and-expr> -> <eq-expr> 
M [ 107 , OP_NEQ ] = SHIFT 259
M [ 107 , OP_OR ] = REDUCE <and-expr> -> <eq-expr> 
M [ 107 , OP_XOR ] = REDUCE <and-expr> -> <eq-expr> 
M [ 108 , DELIM_COMMA ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 108 , DELIM_QUESTION ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 108 , DELIM_SEMICOLON ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 108 , OP_LAND ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 108 , OP_LOR ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 108 , OP_OR ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 108 , OP_XOR ] = SHIFT 260
M [ 109 , CHAR_CONST ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , DELIM_LCURBRACE ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , DELIM_LPAR ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , DELIM_RCURBRACE ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , DELIM_SEMICOLON ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , FLOAT_CONST ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , IDENTIFIER ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , INT_CONST ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , OP_ADD ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , OP_AND ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , OP_DEC ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , OP_INC ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , OP_LNOT ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , OP_MUL ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , OP_NOT ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , OP_SUB ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , STR_LITERAL ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , break ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , case ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , char ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , const ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , continue ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , default ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , do ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , double ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , enum ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , float ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , for ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , goto ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , if ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , int ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , long ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , return ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , short ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , signed ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , sizeof ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , struct ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , switch ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , typedef ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , unsigned ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , void ] = REDUCE <stmt> -> <expr-stmt> 
M [ 109 , while ] = REDUCE <stmt> -> <expr-stmt> 
M [ 110 , DELIM_COMMA ] = SHIFT 261
M [ 110 , DELIM_SEMICOLON ] = SHIFT 262
M [ 111 , DELIM_COMMA ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 111 , DELIM_QUESTION ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 111 , DELIM_SEMICOLON ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 111 , OP_LAND ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 111 , OP_LOR ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 111 , OP_OR ] = SHIFT 263
M [ 112 , CHAR_CONST ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , DELIM_LCURBRACE ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , DELIM_LPAR ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , DELIM_RCURBRACE ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , DELIM_SEMICOLON ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , FLOAT_CONST ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , IDENTIFIER ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , INT_CONST ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , OP_ADD ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , OP_AND ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , OP_DEC ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , OP_INC ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , OP_LNOT ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , OP_MUL ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , OP_NOT ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , OP_SUB ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , STR_LITERAL ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , break ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , case ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , char ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , const ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , continue ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , default ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , do ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , double ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , enum ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , float ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , for ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , goto ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , if ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , int ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , long ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , return ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , short ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , signed ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , sizeof ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , struct ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , switch ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , typedef ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , unsigned ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , void ] = REDUCE <stmt> -> <iter-stmt> 
M [ 112 , while ] = REDUCE <stmt> -> <iter-stmt> 
M [ 113 , CHAR_CONST ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , DELIM_LCURBRACE ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , DELIM_LPAR ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , DELIM_RCURBRACE ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , DELIM_SEMICOLON ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , FLOAT_CONST ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , IDENTIFIER ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , INT_CONST ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , OP_ADD ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , OP_AND ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , OP_DEC ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , OP_INC ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , OP_LNOT ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , OP_MUL ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , OP_NOT ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , OP_SUB ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , STR_LITERAL ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , break ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , case ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , char ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , const ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , continue ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , default ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , do ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , double ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , enum ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , float ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , for ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , goto ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , if ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , int ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , long ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , return ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , short ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , signed ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , sizeof ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , struct ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , switch ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , typedef ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , unsigned ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , void ] = REDUCE <stmt> -> <jump-stmt> 
M [ 113 , while ] = REDUCE <stmt> -> <jump-stmt> 
M [ 114 , CHAR_CONST ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , DELIM_LCURBRACE ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , DELIM_LPAR ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , DELIM_RCURBRACE ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , DELIM_SEMICOLON ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , FLOAT_CONST ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , IDENTIFIER ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , INT_CONST ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , OP_ADD ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , OP_AND ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , OP_DEC ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , OP_INC ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , OP_LNOT ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , OP_MUL ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , OP_NOT ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , OP_SUB ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , STR_LITERAL ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , break ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , case ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , char ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , const ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , continue ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , default ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , do ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , double ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , enum ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , float ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , for ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , goto ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , if ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , int ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , long ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , return ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , short ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , signed ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , sizeof ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , struct ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , switch ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , typedef ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , unsigned ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , void ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 114 , while ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 115 , DELIM_COMMA ] = REDUCE <lor-expr> -> <land-expr> 
M [ 115 , DELIM_QUESTION ] = REDUCE <lor-expr> -> <land-expr> 
M [ 115 , DELIM_SEMICOLON ] = REDUCE <lor-expr> -> <land-expr> 
M [ 115 , OP_LAND ] = SHIFT 264
M [ 115 , OP_LOR ] = REDUCE <lor-expr> -> <land-expr> 
M [ 116 , DELIM_COMMA ] = REDUCE <cond-expr> -> <lor-expr> 
M [ 116 , DELIM_QUESTION ] = SHIFT 265
M [ 116 , DELIM_SEMICOLON ] = REDUCE <cond-expr> -> <lor-expr> 
M [ 116 , OP_LOR ] = SHIFT 266
M [ 117 , DELIM_COMMA ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 117 , DELIM_QUESTION ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 117 , DELIM_SEMICOLON ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 117 , OP_ADD ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 117 , OP_AND ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 117 , OP_DIV ] = SHIFT 267
M [ 117 , OP_EQ ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 117 , OP_GE ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 117 , OP_GT ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 117 , OP_LAND ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 117 , OP_LE ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 117 , OP_LOR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 117 , OP_LT ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 117 , OP_MOD ] = SHIFT 268
M [ 117 , OP_MUL ] = SHIFT 269
M [ 117 , OP_NEQ ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 117 , OP_OR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 117 , OP_SHL ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 117 , OP_SHR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 117 , OP_SUB ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 117 , OP_XOR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 118 , DELIM_COMMA ] = REDUCE <constant> -> <num-const> 
M [ 118 , DELIM_LPAR ] = REDUCE <constant> -> <num-const> 
M [ 118 , DELIM_LSQBRACKET ] = REDUCE <constant> -> <num-const> 
M [ 118 , DELIM_QUESTION ] = REDUCE <constant> -> <num-const> 
M [ 118 , DELIM_SEMICOLON ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_ADD ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_ADDASN ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_AND ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_ANDASN ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_ARROW ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_ASN ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_DEC ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_DIV ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_DIVASN ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_DOT ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_EQ ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_GE ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_GT ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_INC ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_LAND ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_LE ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_LOR ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_LT ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_MOD ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_MODASN ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_MUL ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_MULASN ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_NEQ ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_OR ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_ORASN ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_SHL ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_SHLASN ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_SHR ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_SHRASN ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_SUB ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_SUBASN ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_XOR ] = REDUCE <constant> -> <num-const> 
M [ 118 , OP_XORASN ] = REDUCE <constant> -> <num-const> 
M [ 119 , DELIM_COMMA ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , DELIM_LPAR ] = SHIFT 270
M [ 119 , DELIM_LSQBRACKET ] = SHIFT 271
M [ 119 , DELIM_QUESTION ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , DELIM_SEMICOLON ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_ADD ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_ADDASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_AND ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_ANDASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_ARROW ] = SHIFT 272
M [ 119 , OP_ASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_DEC ] = SHIFT 273
M [ 119 , OP_DIV ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_DIVASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_DOT ] = SHIFT 274
M [ 119 , OP_EQ ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_GE ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_GT ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_INC ] = SHIFT 275
M [ 119 , OP_LAND ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_LE ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_LOR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_LT ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_MOD ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_MODASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_MUL ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_MULASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_NEQ ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_OR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_ORASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_SHL ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_SHLASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_SHR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_SHRASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_SUB ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_SUBASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_XOR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 119 , OP_XORASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 120 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , DELIM_SEMICOLON ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_ADD ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_ADDASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_AND ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_ANDASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_ARROW ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_ASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_DEC ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_DIV ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_DIVASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_DOT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_EQ ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_GE ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_GT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_INC ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_LAND ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_LE ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_LOR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_LT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_MOD ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_MODASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_MUL ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_MULASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_NEQ ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_OR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_ORASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_SHL ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_SHLASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_SHR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_SHRASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_SUB ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_SUBASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_XOR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 120 , OP_XORASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 121 , DELIM_COMMA ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 121 , DELIM_QUESTION ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 121 , DELIM_SEMICOLON ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 121 , OP_AND ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 121 , OP_EQ ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 121 , OP_GE ] = SHIFT 276
M [ 121 , OP_GT ] = SHIFT 277
M [ 121 , OP_LAND ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 121 , OP_LE ] = SHIFT 278
M [ 121 , OP_LOR ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 121 , OP_LT ] = SHIFT 279
M [ 121 , OP_NEQ ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 121 , OP_OR ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 121 , OP_XOR ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 122 , CHAR_CONST ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , DELIM_LCURBRACE ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , DELIM_LPAR ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , DELIM_RCURBRACE ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , DELIM_SEMICOLON ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , FLOAT_CONST ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , IDENTIFIER ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , INT_CONST ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , OP_ADD ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , OP_AND ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , OP_DEC ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , OP_INC ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , OP_LNOT ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , OP_MUL ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , OP_NOT ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , OP_SUB ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , STR_LITERAL ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , break ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , case ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , char ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , const ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , continue ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , default ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , do ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , double ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , enum ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , float ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , for ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , goto ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , if ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , int ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , long ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , return ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , short ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , signed ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , sizeof ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , struct ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , switch ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , typedef ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , unsigned ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , void ] = REDUCE <stmt> -> <sele-stmt> 
M [ 122 , while ] = REDUCE <stmt> -> <sele-stmt> 
M [ 123 , DELIM_COMMA ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 123 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 123 , DELIM_SEMICOLON ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 123 , OP_AND ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 123 , OP_EQ ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 123 , OP_GE ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 123 , OP_GT ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 123 , OP_LAND ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 123 , OP_LE ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 123 , OP_LOR ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 123 , OP_LT ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 123 , OP_NEQ ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 123 , OP_OR ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 123 , OP_SHL ] = SHIFT 280
M [ 123 , OP_SHR ] = SHIFT 281
M [ 123 , OP_XOR ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 124 , CHAR_CONST ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , DELIM_LCURBRACE ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , DELIM_LPAR ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , DELIM_RCURBRACE ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , DELIM_SEMICOLON ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , FLOAT_CONST ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , IDENTIFIER ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , INT_CONST ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , OP_ADD ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , OP_AND ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , OP_DEC ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , OP_INC ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , OP_LNOT ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , OP_MUL ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , OP_NOT ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , OP_SUB ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , STR_LITERAL ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , break ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , case ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , char ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , const ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , continue ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , default ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , do ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , double ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , enum ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , float ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , for ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , goto ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , if ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , int ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , long ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , return ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , short ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , signed ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , sizeof ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , struct ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , switch ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , typedef ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , unsigned ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , void ] = REDUCE <blk-item> -> <stmt> 
M [ 124 , while ] = REDUCE <blk-item> -> <stmt> 
M [ 125 , <asn-op> ] = GOTO 282
M [ 125 , DELIM_COMMA ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 125 , DELIM_QUESTION ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 125 , DELIM_SEMICOLON ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 125 , OP_ADD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 125 , OP_ADDASN ] = SHIFT 283
M [ 125 , OP_AND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 125 , OP_ANDASN ] = SHIFT 284
M [ 125 , OP_ASN ] = SHIFT 285
M [ 125 , OP_DIV ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 125 , OP_DIVASN ] = SHIFT 286
M [ 125 , OP_EQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 125 , OP_GE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 125 , OP_GT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 125 , OP_LAND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 125 , OP_LE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 125 , OP_LOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 125 , OP_LT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 125 , OP_MOD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 125 , OP_MODASN ] = SHIFT 287
M [ 125 , OP_MUL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 125 , OP_MULASN ] = SHIFT 288
M [ 125 , OP_NEQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 125 , OP_OR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 125 , OP_ORASN ] = SHIFT 289
M [ 125 , OP_SHL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 125 , OP_SHLASN ] = SHIFT 290
M [ 125 , OP_SHR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 125 , OP_SHRASN ] = SHIFT 291
M [ 125 , OP_SUB ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 125 , OP_SUBASN ] = SHIFT 292
M [ 125 , OP_XOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 125 , OP_XORASN ] = SHIFT 293
M [ 126 , <cast-expr> ] = GOTO 294
M [ 126 , <constant> ] = GOTO 104
M [ 126 , <num-const> ] = GOTO 118
M [ 126 , <postfix-expr> ] = GOTO 119
M [ 126 , <prim-expr> ] = GOTO 120
M [ 126 , <unary-expr> ] = GOTO 295
M [ 126 , <unary-op> ] = GOTO 126
M [ 126 , CHAR_CONST ] = SHIFT 127
M [ 126 , DELIM_LPAR ] = SHIFT 296
M [ 126 , FLOAT_CONST ] = SHIFT 132
M [ 126 , IDENTIFIER ] = SHIFT 159
M [ 126 , INT_CONST ] = SHIFT 134
M [ 126 , OP_ADD ] = SHIFT 135
M [ 126 , OP_AND ] = SHIFT 136
M [ 126 , OP_DEC ] = SHIFT 137
M [ 126 , OP_INC ] = SHIFT 138
M [ 126 , OP_LNOT ] = SHIFT 139
M [ 126 , OP_MUL ] = SHIFT 140
M [ 126 , OP_NOT ] = SHIFT 141
M [ 126 , OP_SUB ] = SHIFT 142
M [ 126 , STR_LITERAL ] = SHIFT 143
M [ 126 , sizeof ] = SHIFT 153
M [ 127 , DELIM_COMMA ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , DELIM_LPAR ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , DELIM_LSQBRACKET ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , DELIM_QUESTION ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , DELIM_SEMICOLON ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_ADD ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_ADDASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_AND ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_ANDASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_ARROW ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_ASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_DEC ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_DIV ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_DIVASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_DOT ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_EQ ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_GE ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_GT ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_INC ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_LAND ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_LE ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_LOR ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_LT ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_MOD ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_MODASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_MUL ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_MULASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_NEQ ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_OR ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_ORASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_SHL ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_SHLASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_SHR ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_SHRASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_SUB ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_SUBASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_XOR ] = REDUCE <constant> -> CHAR_CONST 
M [ 127 , OP_XORASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 128 , <additive-expr> ] = GOTO 96
M [ 128 , <and-expr> ] = GOTO 97
M [ 128 , <asn-expr> ] = GOTO 98
M [ 128 , <blk-item-list> ] = GOTO 297
M [ 128 , <blk-item> ] = GOTO 100
M [ 128 , <cast-expr> ] = GOTO 101
M [ 128 , <comp-stmt> ] = GOTO 102
M [ 128 , <cond-expr> ] = GOTO 103
M [ 128 , <constant> ] = GOTO 104
M [ 128 , <decl-spec> ] = GOTO 105
M [ 128 , <decl> ] = GOTO 106
M [ 128 , <enum-spec> ] = GOTO 3
M [ 128 , <eq-expr> ] = GOTO 107
M [ 128 , <exc-or-expr> ] = GOTO 108
M [ 128 , <expr-stmt> ] = GOTO 109
M [ 128 , <expr> ] = GOTO 110
M [ 128 , <inc-or-expr> ] = GOTO 111
M [ 128 , <iter-stmt> ] = GOTO 112
M [ 128 , <jump-stmt> ] = GOTO 113
M [ 128 , <labeled-stmt> ] = GOTO 114
M [ 128 , <land-expr> ] = GOTO 115
M [ 128 , <lor-expr> ] = GOTO 116
M [ 128 , <multiplicative-expr> ] = GOTO 117
M [ 128 , <num-const> ] = GOTO 118
M [ 128 , <postfix-expr> ] = GOTO 119
M [ 128 , <prim-expr> ] = GOTO 120
M [ 128 , <rel-expr> ] = GOTO 121
M [ 128 , <sele-stmt> ] = GOTO 122
M [ 128 , <shift-expr> ] = GOTO 123
M [ 128 , <stmt> ] = GOTO 124
M [ 128 , <storage-class-spec> ] = GOTO 6
M [ 128 , <struct-union-spec> ] = GOTO 7
M [ 128 , <struct-union> ] = GOTO 8
M [ 128 , <type-qual> ] = GOTO 10
M [ 128 , <type-spec> ] = GOTO 11
M [ 128 , <unary-expr> ] = GOTO 125
M [ 128 , <unary-op> ] = GOTO 126
M [ 128 , CHAR_CONST ] = SHIFT 127
M [ 128 , DELIM_LCURBRACE ] = SHIFT 128
M [ 128 , DELIM_LPAR ] = SHIFT 129
M [ 128 , DELIM_RCURBRACE ] = SHIFT 298
M [ 128 , DELIM_SEMICOLON ] = SHIFT 131
M [ 128 , FLOAT_CONST ] = SHIFT 132
M [ 128 , IDENTIFIER ] = SHIFT 133
M [ 128 , INT_CONST ] = SHIFT 134
M [ 128 , OP_ADD ] = SHIFT 135
M [ 128 , OP_AND ] = SHIFT 136
M [ 128 , OP_DEC ] = SHIFT 137
M [ 128 , OP_INC ] = SHIFT 138
M [ 128 , OP_LNOT ] = SHIFT 139
M [ 128 , OP_MUL ] = SHIFT 140
M [ 128 , OP_NOT ] = SHIFT 141
M [ 128 , OP_SUB ] = SHIFT 142
M [ 128 , STR_LITERAL ] = SHIFT 143
M [ 128 , break ] = SHIFT 144
M [ 128 , case ] = SHIFT 145
M [ 128 , char ] = SHIFT 12
M [ 128 , const ] = SHIFT 13
M [ 128 , continue ] = SHIFT 146
M [ 128 , default ] = SHIFT 147
M [ 128 , do ] = SHIFT 148
M [ 128 , double ] = SHIFT 14
M [ 128 , enum ] = SHIFT 15
M [ 128 , float ] = SHIFT 16
M [ 128 , for ] = SHIFT 149
M [ 128 , goto ] = SHIFT 150
M [ 128 , if ] = SHIFT 151
M [ 128 , int ] = SHIFT 17
M [ 128 , long ] = SHIFT 18
M [ 128 , return ] = SHIFT 152
M [ 128 , short ] = SHIFT 19
M [ 128 , signed ] = SHIFT 20
M [ 128 , sizeof ] = SHIFT 153
M [ 128 , struct ] = SHIFT 21
M [ 128 , switch ] = SHIFT 154
M [ 128 , typedef ] = SHIFT 22
M [ 128 , unsigned ] = SHIFT 23
M [ 128 , void ] = SHIFT 24
M [ 128 , while ] = SHIFT 155
M [ 129 , <additive-expr> ] = GOTO 299
M [ 129 , <and-expr> ] = GOTO 300
M [ 129 , <asn-expr> ] = GOTO 301
M [ 129 , <cast-expr> ] = GOTO 302
M [ 129 , <cond-expr> ] = GOTO 303
M [ 129 , <constant> ] = GOTO 304
M [ 129 , <enum-spec> ] = GOTO 305
M [ 129 , <eq-expr> ] = GOTO 306
M [ 129 , <exc-or-expr> ] = GOTO 307
M [ 129 , <expr> ] = GOTO 308
M [ 129 , <inc-or-expr> ] = GOTO 309
M [ 129 , <land-expr> ] = GOTO 310
M [ 129 , <lor-expr> ] = GOTO 311
M [ 129 , <multiplicative-expr> ] = GOTO 312
M [ 129 , <num-const> ] = GOTO 313
M [ 129 , <postfix-expr> ] = GOTO 314
M [ 129 , <prim-expr> ] = GOTO 315
M [ 129 , <rel-expr> ] = GOTO 316
M [ 129 , <shift-expr> ] = GOTO 317
M [ 129 , <spec-qual-list> ] = GOTO 318
M [ 129 , <struct-union-spec> ] = GOTO 319
M [ 129 , <struct-union> ] = GOTO 320
M [ 129 , <type-name> ] = GOTO 321
M [ 129 , <type-qual> ] = GOTO 322
M [ 129 , <type-spec> ] = GOTO 323
M [ 129 , <unary-expr> ] = GOTO 324
M [ 129 , <unary-op> ] = GOTO 325
M [ 129 , CHAR_CONST ] = SHIFT 326
M [ 129 , DELIM_LPAR ] = SHIFT 327
M [ 129 , FLOAT_CONST ] = SHIFT 328
M [ 129 , IDENTIFIER ] = SHIFT 329
M [ 129 , INT_CONST ] = SHIFT 330
M [ 129 , OP_ADD ] = SHIFT 135
M [ 129 , OP_AND ] = SHIFT 136
M [ 129 , OP_DEC ] = SHIFT 331
M [ 129 , OP_INC ] = SHIFT 332
M [ 129 , OP_LNOT ] = SHIFT 139
M [ 129 , OP_MUL ] = SHIFT 140
M [ 129 , OP_NOT ] = SHIFT 141
M [ 129 , OP_SUB ] = SHIFT 142
M [ 129 , STR_LITERAL ] = SHIFT 333
M [ 129 , char ] = SHIFT 334
M [ 129 , const ] = SHIFT 335
M [ 129 , double ] = SHIFT 336
M [ 129 , enum ] = SHIFT 337
M [ 129 , float ] = SHIFT 338
M [ 129 , int ] = SHIFT 339
M [ 129 , long ] = SHIFT 340
M [ 129 , short ] = SHIFT 341
M [ 129 , signed ] = SHIFT 342
M [ 129 , sizeof ] = SHIFT 343
M [ 129 , struct ] = SHIFT 21
M [ 129 , unsigned ] = SHIFT 344
M [ 129 , void ] = SHIFT 345
M [ 130 , (EOF) ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 130 , char ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 130 , const ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 130 , double ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 130 , enum ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 130 , float ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 130 , int ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 130 , long ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 130 , short ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 130 , signed ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 130 , struct ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 130 , typedef ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 130 , unsigned ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 130 , void ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 131 , CHAR_CONST ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , DELIM_LCURBRACE ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , DELIM_LPAR ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , DELIM_RCURBRACE ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , DELIM_SEMICOLON ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , FLOAT_CONST ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , IDENTIFIER ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , INT_CONST ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , OP_ADD ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , OP_AND ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , OP_DEC ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , OP_INC ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , OP_LNOT ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , OP_MUL ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , OP_NOT ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , OP_SUB ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , STR_LITERAL ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , break ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , case ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , char ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , const ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , continue ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , default ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , do ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , double ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , enum ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , float ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , for ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , goto ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , if ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , int ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , long ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , return ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , short ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , signed ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , sizeof ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , struct ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , switch ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , typedef ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , unsigned ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , void ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 131 , while ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 132 , DELIM_COMMA ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , DELIM_LPAR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , DELIM_LSQBRACKET ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , DELIM_QUESTION ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , DELIM_SEMICOLON ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_ADD ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_ADDASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_AND ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_ANDASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_ARROW ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_ASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_DEC ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_DIV ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_DIVASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_DOT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_EQ ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_GE ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_GT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_INC ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_LAND ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_LE ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_LOR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_LT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_MOD ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_MODASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_MUL ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_MULASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_NEQ ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_OR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_ORASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_SHL ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_SHLASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_SHR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_SHRASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_SUB ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_SUBASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_XOR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 132 , OP_XORASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 133 , DELIM_COLON ] = SHIFT 346
M [ 133 , DELIM_COMMA ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , DELIM_LPAR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , DELIM_QUESTION ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , DELIM_SEMICOLON ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_ADD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_ADDASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_AND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_ANDASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_ARROW ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_ASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_DEC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_DIV ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_DIVASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_DOT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_EQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_GE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_GT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_INC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_LAND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_LE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_LOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_LT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_MOD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_MODASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_MUL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_MULASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_NEQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_OR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_ORASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_SHL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_SHLASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_SHR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_SHRASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_SUB ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_SUBASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_XOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 133 , OP_XORASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 134 , DELIM_COMMA ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , DELIM_LPAR ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , DELIM_LSQBRACKET ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , DELIM_QUESTION ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , DELIM_SEMICOLON ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_ADD ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_ADDASN ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_AND ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_ANDASN ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_ARROW ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_ASN ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_DEC ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_DIV ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_DIVASN ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_DOT ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_EQ ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_GE ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_GT ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_INC ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_LAND ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_LE ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_LOR ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_LT ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_MOD ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_MODASN ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_MUL ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_MULASN ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_NEQ ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_OR ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_ORASN ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_SHL ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_SHLASN ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_SHR ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_SHRASN ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_SUB ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_SUBASN ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_XOR ] = REDUCE <num-const> -> INT_CONST 
M [ 134 , OP_XORASN ] = REDUCE <num-const> -> INT_CONST 
M [ 135 , CHAR_CONST ] = REDUCE <unary-op> -> OP_ADD 
M [ 135 , DELIM_LPAR ] = REDUCE <unary-op> -> OP_ADD 
M [ 135 , FLOAT_CONST ] = REDUCE <unary-op> -> OP_ADD 
M [ 135 , IDENTIFIER ] = REDUCE <unary-op> -> OP_ADD 
M [ 135 , INT_CONST ] = REDUCE <unary-op> -> OP_ADD 
M [ 135 , OP_ADD ] = REDUCE <unary-op> -> OP_ADD 
M [ 135 , OP_AND ] = REDUCE <unary-op> -> OP_ADD 
M [ 135 , OP_DEC ] = REDUCE <unary-op> -> OP_ADD 
M [ 135 , OP_INC ] = REDUCE <unary-op> -> OP_ADD 
M [ 135 , OP_LNOT ] = REDUCE <unary-op> -> OP_ADD 
M [ 135 , OP_MUL ] = REDUCE <unary-op> -> OP_ADD 
M [ 135 , OP_NOT ] = REDUCE <unary-op> -> OP_ADD 
M [ 135 , OP_SUB ] = REDUCE <unary-op> -> OP_ADD 
M [ 135 , STR_LITERAL ] = REDUCE <unary-op> -> OP_ADD 
M [ 135 , sizeof ] = REDUCE <unary-op> -> OP_ADD 
M [ 136 , CHAR_CONST ] = REDUCE <unary-op> -> OP_AND 
M [ 136 , DELIM_LPAR ] = REDUCE <unary-op> -> OP_AND 
M [ 136 , FLOAT_CONST ] = REDUCE <unary-op> -> OP_AND 
M [ 136 , IDENTIFIER ] = REDUCE <unary-op> -> OP_AND 
M [ 136 , INT_CONST ] = REDUCE <unary-op> -> OP_AND 
M [ 136 , OP_ADD ] = REDUCE <unary-op> -> OP_AND 
M [ 136 , OP_AND ] = REDUCE <unary-op> -> OP_AND 
M [ 136 , OP_DEC ] = REDUCE <unary-op> -> OP_AND 
M [ 136 , OP_INC ] = REDUCE <unary-op> -> OP_AND 
M [ 136 , OP_LNOT ] = REDUCE <unary-op> -> OP_AND 
M [ 136 , OP_MUL ] = REDUCE <unary-op> -> OP_AND 
M [ 136 , OP_NOT ] = REDUCE <unary-op> -> OP_AND 
M [ 136 , OP_SUB ] = REDUCE <unary-op> -> OP_AND 
M [ 136 , STR_LITERAL ] = REDUCE <unary-op> -> OP_AND 
M [ 136 , sizeof ] = REDUCE <unary-op> -> OP_AND 
M [ 137 , <constant> ] = GOTO 104
M [ 137 , <num-const> ] = GOTO 118
M [ 137 , <postfix-expr> ] = GOTO 119
M [ 137 , <prim-expr> ] = GOTO 120
M [ 137 , <unary-expr> ] = GOTO 347
M [ 137 , <unary-op> ] = GOTO 126
M [ 137 , CHAR_CONST ] = SHIFT 127
M [ 137 , DELIM_LPAR ] = SHIFT 348
M [ 137 , FLOAT_CONST ] = SHIFT 132
M [ 137 , IDENTIFIER ] = SHIFT 159
M [ 137 , INT_CONST ] = SHIFT 134
M [ 137 , OP_ADD ] = SHIFT 135
M [ 137 , OP_AND ] = SHIFT 136
M [ 137 , OP_DEC ] = SHIFT 137
M [ 137 , OP_INC ] = SHIFT 138
M [ 137 , OP_LNOT ] = SHIFT 139
M [ 137 , OP_MUL ] = SHIFT 140
M [ 137 , OP_NOT ] = SHIFT 141
M [ 137 , OP_SUB ] = SHIFT 142
M [ 137 , STR_LITERAL ] = SHIFT 143
M [ 137 , sizeof ] = SHIFT 153
M [ 138 , <constant> ] = GOTO 104
M [ 138 , <num-const> ] = GOTO 118
M [ 138 , <postfix-expr> ] = GOTO 119
M [ 138 , <prim-expr> ] = GOTO 120
M [ 138 , <unary-expr> ] = GOTO 349
M [ 138 , <unary-op> ] = GOTO 126
M [ 138 , CHAR_CONST ] = SHIFT 127
M [ 138 , DELIM_LPAR ] = SHIFT 348
M [ 138 , FLOAT_CONST ] = SHIFT 132
M [ 138 , IDENTIFIER ] = SHIFT 159
M [ 138 , INT_CONST ] = SHIFT 134
M [ 138 , OP_ADD ] = SHIFT 135
M [ 138 , OP_AND ] = SHIFT 136
M [ 138 , OP_DEC ] = SHIFT 137
M [ 138 , OP_INC ] = SHIFT 138
M [ 138 , OP_LNOT ] = SHIFT 139
M [ 138 , OP_MUL ] = SHIFT 140
M [ 138 , OP_NOT ] = SHIFT 141
M [ 138 , OP_SUB ] = SHIFT 142
M [ 138 , STR_LITERAL ] = SHIFT 143
M [ 138 , sizeof ] = SHIFT 153
M [ 139 , CHAR_CONST ] = REDUCE <unary-op> -> OP_LNOT 
M [ 139 , DELIM_LPAR ] = REDUCE <unary-op> -> OP_LNOT 
M [ 139 , FLOAT_CONST ] = REDUCE <unary-op> -> OP_LNOT 
M [ 139 , IDENTIFIER ] = REDUCE <unary-op> -> OP_LNOT 
M [ 139 , INT_CONST ] = REDUCE <unary-op> -> OP_LNOT 
M [ 139 , OP_ADD ] = REDUCE <unary-op> -> OP_LNOT 
M [ 139 , OP_AND ] = REDUCE <unary-op> -> OP_LNOT 
M [ 139 , OP_DEC ] = REDUCE <unary-op> -> OP_LNOT 
M [ 139 , OP_INC ] = REDUCE <unary-op> -> OP_LNOT 
M [ 139 , OP_LNOT ] = REDUCE <unary-op> -> OP_LNOT 
M [ 139 , OP_MUL ] = REDUCE <unary-op> -> OP_LNOT 
M [ 139 , OP_NOT ] = REDUCE <unary-op> -> OP_LNOT 
M [ 139 , OP_SUB ] = REDUCE <unary-op> -> OP_LNOT 
M [ 139 , STR_LITERAL ] = REDUCE <unary-op> -> OP_LNOT 
M [ 139 , sizeof ] = REDUCE <unary-op> -> OP_LNOT 
M [ 140 , CHAR_CONST ] = REDUCE <unary-op> -> OP_MUL 
M [ 140 , DELIM_LPAR ] = REDUCE <unary-op> -> OP_MUL 
M [ 140 , FLOAT_CONST ] = REDUCE <unary-op> -> OP_MUL 
M [ 140 , IDENTIFIER ] = REDUCE <unary-op> -> OP_MUL 
M [ 140 , INT_CONST ] = REDUCE <unary-op> -> OP_MUL 
M [ 140 , OP_ADD ] = REDUCE <unary-op> -> OP_MUL 
M [ 140 , OP_AND ] = REDUCE <unary-op> -> OP_MUL 
M [ 140 , OP_DEC ] = REDUCE <unary-op> -> OP_MUL 
M [ 140 , OP_INC ] = REDUCE <unary-op> -> OP_MUL 
M [ 140 , OP_LNOT ] = REDUCE <unary-op> -> OP_MUL 
M [ 140 , OP_MUL ] = REDUCE <unary-op> -> OP_MUL 
M [ 140 , OP_NOT ] = REDUCE <unary-op> -> OP_MUL 
M [ 140 , OP_SUB ] = REDUCE <unary-op> -> OP_MUL 
M [ 140 , STR_LITERAL ] = REDUCE <unary-op> -> OP_MUL 
M [ 140 , sizeof ] = REDUCE <unary-op> -> OP_MUL 
M [ 141 , CHAR_CONST ] = REDUCE <unary-op> -> OP_NOT 
M [ 141 , DELIM_LPAR ] = REDUCE <unary-op> -> OP_NOT 
M [ 141 , FLOAT_CONST ] = REDUCE <unary-op> -> OP_NOT 
M [ 141 , IDENTIFIER ] = REDUCE <unary-op> -> OP_NOT 
M [ 141 , INT_CONST ] = REDUCE <unary-op> -> OP_NOT 
M [ 141 , OP_ADD ] = REDUCE <unary-op> -> OP_NOT 
M [ 141 , OP_AND ] = REDUCE <unary-op> -> OP_NOT 
M [ 141 , OP_DEC ] = REDUCE <unary-op> -> OP_NOT 
M [ 141 , OP_INC ] = REDUCE <unary-op> -> OP_NOT 
M [ 141 , OP_LNOT ] = REDUCE <unary-op> -> OP_NOT 
M [ 141 , OP_MUL ] = REDUCE <unary-op> -> OP_NOT 
M [ 141 , OP_NOT ] = REDUCE <unary-op> -> OP_NOT 
M [ 141 , OP_SUB ] = REDUCE <unary-op> -> OP_NOT 
M [ 141 , STR_LITERAL ] = REDUCE <unary-op> -> OP_NOT 
M [ 141 , sizeof ] = REDUCE <unary-op> -> OP_NOT 
M [ 142 , CHAR_CONST ] = REDUCE <unary-op> -> OP_SUB 
M [ 142 , DELIM_LPAR ] = REDUCE <unary-op> -> OP_SUB 
M [ 142 , FLOAT_CONST ] = REDUCE <unary-op> -> OP_SUB 
M [ 142 , IDENTIFIER ] = REDUCE <unary-op> -> OP_SUB 
M [ 142 , INT_CONST ] = REDUCE <unary-op> -> OP_SUB 
M [ 142 , OP_ADD ] = REDUCE <unary-op> -> OP_SUB 
M [ 142 , OP_AND ] = REDUCE <unary-op> -> OP_SUB 
M [ 142 , OP_DEC ] = REDUCE <unary-op> -> OP_SUB 
M [ 142 , OP_INC ] = REDUCE <unary-op> -> OP_SUB 
M [ 142 , OP_LNOT ] = REDUCE <unary-op> -> OP_SUB 
M [ 142 , OP_MUL ] = REDUCE <unary-op> -> OP_SUB 
M [ 142 , OP_NOT ] = REDUCE <unary-op> -> OP_SUB 
M [ 142 , OP_SUB ] = REDUCE <unary-op> -> OP_SUB 
M [ 142 , STR_LITERAL ] = REDUCE <unary-op> -> OP_SUB 
M [ 142 , sizeof ] = REDUCE <unary-op> -> OP_SUB 
M [ 143 , DELIM_COMMA ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , DELIM_LPAR ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , DELIM_LSQBRACKET ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , DELIM_QUESTION ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , DELIM_SEMICOLON ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_ADD ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_ADDASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_AND ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_ANDASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_ARROW ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_ASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_DEC ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_DIV ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_DIVASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_DOT ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_EQ ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_GE ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_GT ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_INC ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_LAND ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_LE ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_LOR ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_LT ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_MOD ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_MODASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_MUL ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_MULASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_NEQ ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_OR ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_ORASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_SHL ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_SHLASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_SHR ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_SHRASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_SUB ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_SUBASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_XOR ] = REDUCE <constant> -> STR_LITERAL 
M [ 143 , OP_XORASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 144 , DELIM_SEMICOLON ] = SHIFT 350
M [ 145 , <additive-expr> ] = GOTO 351
M [ 145 , <and-expr> ] = GOTO 352
M [ 145 , <cast-expr> ] = GOTO 353
M [ 145 , <cond-expr> ] = GOTO 354
M [ 145 , <const-expr> ] = GOTO 355
M [ 145 , <constant> ] = GOTO 356
M [ 145 , <eq-expr> ] = GOTO 357
M [ 145 , <exc-or-expr> ] = GOTO 358
M [ 145 , <inc-or-expr> ] = GOTO 359
M [ 145 , <land-expr> ] = GOTO 360
M [ 145 , <lor-expr> ] = GOTO 361
M [ 145 , <multiplicative-expr> ] = GOTO 362
M [ 145 , <num-const> ] = GOTO 363
M [ 145 , <postfix-expr> ] = GOTO 364
M [ 145 , <prim-expr> ] = GOTO 365
M [ 145 , <rel-expr> ] = GOTO 366
M [ 145 , <shift-expr> ] = GOTO 367
M [ 145 , <unary-expr> ] = GOTO 368
M [ 145 , <unary-op> ] = GOTO 369
M [ 145 , CHAR_CONST ] = SHIFT 370
M [ 145 , DELIM_LPAR ] = SHIFT 371
M [ 145 , FLOAT_CONST ] = SHIFT 372
M [ 145 , IDENTIFIER ] = SHIFT 373
M [ 145 , INT_CONST ] = SHIFT 374
M [ 145 , OP_ADD ] = SHIFT 135
M [ 145 , OP_AND ] = SHIFT 136
M [ 145 , OP_DEC ] = SHIFT 375
M [ 145 , OP_INC ] = SHIFT 376
M [ 145 , OP_LNOT ] = SHIFT 139
M [ 145 , OP_MUL ] = SHIFT 140
M [ 145 , OP_NOT ] = SHIFT 141
M [ 145 , OP_SUB ] = SHIFT 142
M [ 145 , STR_LITERAL ] = SHIFT 377
M [ 145 , sizeof ] = SHIFT 378
M [ 146 , DELIM_SEMICOLON ] = SHIFT 379
M [ 147 , DELIM_COLON ] = SHIFT 380
M [ 148 , <additive-expr> ] = GOTO 96
M [ 148 , <and-expr> ] = GOTO 97
M [ 148 , <asn-expr> ] = GOTO 98
M [ 148 , <cast-expr> ] = GOTO 101
M [ 148 , <comp-stmt> ] = GOTO 381
M [ 148 , <cond-expr> ] = GOTO 103
M [ 148 , <constant> ] = GOTO 104
M [ 148 , <eq-expr> ] = GOTO 107
M [ 148 , <exc-or-expr> ] = GOTO 108
M [ 148 , <expr-stmt> ] = GOTO 382
M [ 148 , <expr> ] = GOTO 383
M [ 148 , <inc-or-expr> ] = GOTO 111
M [ 148 , <iter-stmt> ] = GOTO 384
M [ 148 , <jump-stmt> ] = GOTO 385
M [ 148 , <labeled-stmt> ] = GOTO 386
M [ 148 , <land-expr> ] = GOTO 115
M [ 148 , <lor-expr> ] = GOTO 116
M [ 148 , <multiplicative-expr> ] = GOTO 117
M [ 148 , <num-const> ] = GOTO 118
M [ 148 , <postfix-expr> ] = GOTO 119
M [ 148 , <prim-expr> ] = GOTO 120
M [ 148 , <rel-expr> ] = GOTO 121
M [ 148 , <sele-stmt> ] = GOTO 387
M [ 148 , <shift-expr> ] = GOTO 123
M [ 148 , <stmt> ] = GOTO 388
M [ 148 , <unary-expr> ] = GOTO 125
M [ 148 , <unary-op> ] = GOTO 126
M [ 148 , CHAR_CONST ] = SHIFT 127
M [ 148 , DELIM_LCURBRACE ] = SHIFT 389
M [ 148 , DELIM_LPAR ] = SHIFT 129
M [ 148 , DELIM_SEMICOLON ] = SHIFT 390
M [ 148 , FLOAT_CONST ] = SHIFT 132
M [ 148 , IDENTIFIER ] = SHIFT 391
M [ 148 , INT_CONST ] = SHIFT 134
M [ 148 , OP_ADD ] = SHIFT 135
M [ 148 , OP_AND ] = SHIFT 136
M [ 148 , OP_DEC ] = SHIFT 137
M [ 148 , OP_INC ] = SHIFT 138
M [ 148 , OP_LNOT ] = SHIFT 139
M [ 148 , OP_MUL ] = SHIFT 140
M [ 148 , OP_NOT ] = SHIFT 141
M [ 148 , OP_SUB ] = SHIFT 142
M [ 148 , STR_LITERAL ] = SHIFT 143
M [ 148 , break ] = SHIFT 392
M [ 148 , case ] = SHIFT 393
M [ 148 , continue ] = SHIFT 394
M [ 148 , default ] = SHIFT 395
M [ 148 , do ] = SHIFT 396
M [ 148 , for ] = SHIFT 397
M [ 148 , goto ] = SHIFT 398
M [ 148 , if ] = SHIFT 399
M [ 148 , return ] = SHIFT 400
M [ 148 , sizeof ] = SHIFT 153
M [ 148 , switch ] = SHIFT 401
M [ 148 , while ] = SHIFT 402
M [ 149 , DELIM_LPAR ] = SHIFT 403
M [ 150 , DELIM_SEMICOLON ] = SHIFT 404
M [ 151 , DELIM_LPAR ] = SHIFT 405
M [ 152 , <additive-expr> ] = GOTO 96
M [ 152 , <and-expr> ] = GOTO 97
M [ 152 , <asn-expr> ] = GOTO 98
M [ 152 , <cast-expr> ] = GOTO 101
M [ 152 , <cond-expr> ] = GOTO 103
M [ 152 , <constant> ] = GOTO 104
M [ 152 , <eq-expr> ] = GOTO 107
M [ 152 , <exc-or-expr> ] = GOTO 108
M [ 152 , <expr> ] = GOTO 406
M [ 152 , <inc-or-expr> ] = GOTO 111
M [ 152 , <land-expr> ] = GOTO 115
M [ 152 , <lor-expr> ] = GOTO 116
M [ 152 , <multiplicative-expr> ] = GOTO 117
M [ 152 , <num-const> ] = GOTO 118
M [ 152 , <postfix-expr> ] = GOTO 119
M [ 152 , <prim-expr> ] = GOTO 120
M [ 152 , <rel-expr> ] = GOTO 121
M [ 152 , <shift-expr> ] = GOTO 123
M [ 152 , <unary-expr> ] = GOTO 125
M [ 152 , <unary-op> ] = GOTO 126
M [ 152 , CHAR_CONST ] = SHIFT 127
M [ 152 , DELIM_LPAR ] = SHIFT 129
M [ 152 , DELIM_SEMICOLON ] = SHIFT 407
M [ 152 , FLOAT_CONST ] = SHIFT 132
M [ 152 , IDENTIFIER ] = SHIFT 159
M [ 152 , INT_CONST ] = SHIFT 134
M [ 152 , OP_ADD ] = SHIFT 135
M [ 152 , OP_AND ] = SHIFT 136
M [ 152 , OP_DEC ] = SHIFT 137
M [ 152 , OP_INC ] = SHIFT 138
M [ 152 , OP_LNOT ] = SHIFT 139
M [ 152 , OP_MUL ] = SHIFT 140
M [ 152 , OP_NOT ] = SHIFT 141
M [ 152 , OP_SUB ] = SHIFT 142
M [ 152 , STR_LITERAL ] = SHIFT 143
M [ 152 , sizeof ] = SHIFT 153
M [ 153 , <constant> ] = GOTO 104
M [ 153 , <num-const> ] = GOTO 118
M [ 153 , <postfix-expr> ] = GOTO 119
M [ 153 , <prim-expr> ] = GOTO 120
M [ 153 , <unary-expr> ] = GOTO 408
M [ 153 , <unary-op> ] = GOTO 126
M [ 153 , CHAR_CONST ] = SHIFT 127
M [ 153 , DELIM_LPAR ] = SHIFT 409
M [ 153 , FLOAT_CONST ] = SHIFT 132
M [ 153 , IDENTIFIER ] = SHIFT 159
M [ 153 , INT_CONST ] = SHIFT 134
M [ 153 , OP_ADD ] = SHIFT 135
M [ 153 , OP_AND ] = SHIFT 136
M [ 153 , OP_DEC ] = SHIFT 137
M [ 153 , OP_INC ] = SHIFT 138
M [ 153 , OP_LNOT ] = SHIFT 139
M [ 153 , OP_MUL ] = SHIFT 140
M [ 153 , OP_NOT ] = SHIFT 141
M [ 153 , OP_SUB ] = SHIFT 142
M [ 153 , STR_LITERAL ] = SHIFT 143
M [ 153 , sizeof ] = SHIFT 153
M [ 154 , DELIM_LPAR ] = SHIFT 410
M [ 155 , DELIM_LPAR ] = SHIFT 411
M [ 156 , DELIM_COMMA ] = REDUCE <initializer> -> <asn-expr> 
M [ 156 , DELIM_SEMICOLON ] = REDUCE <initializer> -> <asn-expr> 
M [ 157 , DELIM_COMMA ] = REDUCE <init-declarator> -> <declarator> OP_ASN <initializer> 
M [ 157 , DELIM_SEMICOLON ] = REDUCE <init-declarator> -> <declarator> OP_ASN <initializer> 
M [ 158 , <additive-expr> ] = GOTO 412
M [ 158 , <and-expr> ] = GOTO 413
M [ 158 , <asn-expr> ] = GOTO 414
M [ 158 , <cast-expr> ] = GOTO 415
M [ 158 , <cond-expr> ] = GOTO 416
M [ 158 , <constant> ] = GOTO 417
M [ 158 , <designation> ] = GOTO 418
M [ 158 , <designator-list> ] = GOTO 419
M [ 158 , <designator> ] = GOTO 420
M [ 158 , <eq-expr> ] = GOTO 421
M [ 158 , <exc-or-expr> ] = GOTO 422
M [ 158 , <inc-or-expr> ] = GOTO 423
M [ 158 , <initializer-list> ] = GOTO 424
M [ 158 , <initializer> ] = GOTO 425
M [ 158 , <land-expr> ] = GOTO 426
M [ 158 , <lor-expr> ] = GOTO 427
M [ 158 , <multiplicative-expr> ] = GOTO 428
M [ 158 , <num-const> ] = GOTO 429
M [ 158 , <postfix-expr> ] = GOTO 430
M [ 158 , <prim-expr> ] = GOTO 431
M [ 158 , <rel-expr> ] = GOTO 432
M [ 158 , <shift-expr> ] = GOTO 433
M [ 158 , <unary-expr> ] = GOTO 434
M [ 158 , <unary-op> ] = GOTO 435
M [ 158 , CHAR_CONST ] = SHIFT 436
M [ 158 , DELIM_LCURBRACE ] = SHIFT 437
M [ 158 , DELIM_LPAR ] = SHIFT 438
M [ 158 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 158 , FLOAT_CONST ] = SHIFT 440
M [ 158 , IDENTIFIER ] = SHIFT 441
M [ 158 , INT_CONST ] = SHIFT 442
M [ 158 , OP_ADD ] = SHIFT 135
M [ 158 , OP_AND ] = SHIFT 136
M [ 158 , OP_DEC ] = SHIFT 443
M [ 158 , OP_DOT ] = SHIFT 444
M [ 158 , OP_INC ] = SHIFT 445
M [ 158 , OP_LNOT ] = SHIFT 139
M [ 158 , OP_MUL ] = SHIFT 140
M [ 158 , OP_NOT ] = SHIFT 141
M [ 158 , OP_SUB ] = SHIFT 142
M [ 158 , STR_LITERAL ] = SHIFT 446
M [ 158 , sizeof ] = SHIFT 447
M [ 159 , DELIM_COMMA ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , DELIM_LPAR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , DELIM_QUESTION ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , DELIM_SEMICOLON ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_ADD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_ADDASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_AND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_ANDASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_ARROW ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_ASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_DEC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_DIV ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_DIVASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_DOT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_EQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_GE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_GT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_INC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_LAND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_LE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_LOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_LT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_MOD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_MODASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_MUL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_MULASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_NEQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_OR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_ORASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_SHL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_SHLASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_SHR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_SHRASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_SUB ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_SUBASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_XOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 159 , OP_XORASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 160 , <abstract-declarator> ] = GOTO 448
M [ 160 , <declarator> ] = GOTO 449
M [ 160 , <direct-abstract-declarator> ] = GOTO 450
M [ 160 , <direct-declarator> ] = GOTO 451
M [ 160 , <pointer> ] = GOTO 452
M [ 160 , DELIM_COMMA ] = REDUCE <param-decl> -> <decl-spec> 
M [ 160 , DELIM_LPAR ] = SHIFT 453
M [ 160 , DELIM_LSQBRACKET ] = SHIFT 454
M [ 160 , DELIM_RPAR ] = REDUCE <param-decl> -> <decl-spec> 
M [ 160 , IDENTIFIER ] = SHIFT 455
M [ 160 , OP_MUL ] = SHIFT 456
M [ 161 , DELIM_COMMA ] = REDUCE <type-spec> -> <enum-spec> 
M [ 161 , DELIM_LPAR ] = REDUCE <type-spec> -> <enum-spec> 
M [ 161 , DELIM_LSQBRACKET ] = REDUCE <type-spec> -> <enum-spec> 
M [ 161 , DELIM_RPAR ] = REDUCE <type-spec> -> <enum-spec> 
M [ 161 , IDENTIFIER ] = REDUCE <type-spec> -> <enum-spec> 
M [ 161 , OP_MUL ] = REDUCE <type-spec> -> <enum-spec> 
M [ 161 , char ] = REDUCE <type-spec> -> <enum-spec> 
M [ 161 , const ] = REDUCE <type-spec> -> <enum-spec> 
M [ 161 , double ] = REDUCE <type-spec> -> <enum-spec> 
M [ 161 , enum ] = REDUCE <type-spec> -> <enum-spec> 
M [ 161 , float ] = REDUCE <type-spec> -> <enum-spec> 
M [ 161 , int ] = REDUCE <type-spec> -> <enum-spec> 
M [ 161 , long ] = REDUCE <type-spec> -> <enum-spec> 
M [ 161 , short ] = REDUCE <type-spec> -> <enum-spec> 
M [ 161 , signed ] = REDUCE <type-spec> -> <enum-spec> 
M [ 161 , struct ] = REDUCE <type-spec> -> <enum-spec> 
M [ 161 , typedef ] = REDUCE <type-spec> -> <enum-spec> 
M [ 161 , unsigned ] = REDUCE <type-spec> -> <enum-spec> 
M [ 161 , void ] = REDUCE <type-spec> -> <enum-spec> 
M [ 162 , DELIM_COMMA ] = SHIFT 457
M [ 162 , DELIM_RPAR ] = SHIFT 458
M [ 163 , DELIM_COMMA ] = REDUCE <param-list> -> <param-decl> 
M [ 163 , DELIM_RPAR ] = REDUCE <param-list> -> <param-decl> 
M [ 164 , DELIM_COMMA ] = SHIFT 459
M [ 164 , DELIM_RPAR ] = REDUCE <param-type-list> -> <param-list> 
M [ 165 , DELIM_RPAR ] = SHIFT 460
M [ 166 , <decl-spec> ] = GOTO 461
M [ 166 , <enum-spec> ] = GOTO 161
M [ 166 , <storage-class-spec> ] = GOTO 166
M [ 166 , <struct-union-spec> ] = GOTO 167
M [ 166 , <struct-union> ] = GOTO 168
M [ 166 , <type-qual> ] = GOTO 169
M [ 166 , <type-spec> ] = GOTO 170
M [ 166 , DELIM_COMMA ] = REDUCE <decl-spec> -> <storage-class-spec> 
M [ 166 , DELIM_LPAR ] = REDUCE <decl-spec> -> <storage-class-spec> 
M [ 166 , DELIM_LSQBRACKET ] = REDUCE <decl-spec> -> <storage-class-spec> 
M [ 166 , DELIM_RPAR ] = REDUCE <decl-spec> -> <storage-class-spec> 
M [ 166 , IDENTIFIER ] = REDUCE <decl-spec> -> <storage-class-spec> 
M [ 166 , OP_MUL ] = REDUCE <decl-spec> -> <storage-class-spec> 
M [ 166 , char ] = SHIFT 173
M [ 166 , const ] = SHIFT 174
M [ 166 , double ] = SHIFT 175
M [ 166 , enum ] = SHIFT 176
M [ 166 , float ] = SHIFT 177
M [ 166 , int ] = SHIFT 178
M [ 166 , long ] = SHIFT 179
M [ 166 , short ] = SHIFT 180
M [ 166 , signed ] = SHIFT 181
M [ 166 , struct ] = SHIFT 21
M [ 166 , typedef ] = SHIFT 182
M [ 166 , unsigned ] = SHIFT 183
M [ 166 , void ] = SHIFT 184
M [ 167 , DELIM_COMMA ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 167 , DELIM_LPAR ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 167 , DELIM_LSQBRACKET ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 167 , DELIM_RPAR ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 167 , IDENTIFIER ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 167 , OP_MUL ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 167 , char ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 167 , const ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 167 , double ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 167 , enum ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 167 , float ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 167 , int ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 167 , long ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 167 , short ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 167 , signed ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 167 , struct ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 167 , typedef ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 167 , unsigned ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 167 , void ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 168 , DELIM_LCURBRACE ] = SHIFT 462
M [ 168 , IDENTIFIER ] = SHIFT 463
M [ 169 , <decl-spec> ] = GOTO 464
M [ 169 , <enum-spec> ] = GOTO 161
M [ 169 , <storage-class-spec> ] = GOTO 166
M [ 169 , <struct-union-spec> ] = GOTO 167
M [ 169 , <struct-union> ] = GOTO 168
M [ 169 , <type-qual> ] = GOTO 169
M [ 169 , <type-spec> ] = GOTO 170
M [ 169 , DELIM_COMMA ] = REDUCE <decl-spec> -> <type-qual> 
M [ 169 , DELIM_LPAR ] = REDUCE <decl-spec> -> <type-qual> 
M [ 169 , DELIM_LSQBRACKET ] = REDUCE <decl-spec> -> <type-qual> 
M [ 169 , DELIM_RPAR ] = REDUCE <decl-spec> -> <type-qual> 
M [ 169 , IDENTIFIER ] = REDUCE <decl-spec> -> <type-qual> 
M [ 169 , OP_MUL ] = REDUCE <decl-spec> -> <type-qual> 
M [ 169 , char ] = SHIFT 173
M [ 169 , const ] = SHIFT 174
M [ 169 , double ] = SHIFT 175
M [ 169 , enum ] = SHIFT 176
M [ 169 , float ] = SHIFT 177
M [ 169 , int ] = SHIFT 178
M [ 169 , long ] = SHIFT 179
M [ 169 , short ] = SHIFT 180
M [ 169 , signed ] = SHIFT 181
M [ 169 , struct ] = SHIFT 21
M [ 169 , typedef ] = SHIFT 182
M [ 169 , unsigned ] = SHIFT 183
M [ 169 , void ] = SHIFT 184
M [ 170 , <decl-spec> ] = GOTO 465
M [ 170 , <enum-spec> ] = GOTO 161
M [ 170 , <storage-class-spec> ] = GOTO 166
M [ 170 , <struct-union-spec> ] = GOTO 167
M [ 170 , <struct-union> ] = GOTO 168
M [ 170 , <type-qual> ] = GOTO 169
M [ 170 , <type-spec> ] = GOTO 170
M [ 170 , DELIM_COMMA ] = REDUCE <decl-spec> -> <type-spec> 
M [ 170 , DELIM_LPAR ] = REDUCE <decl-spec> -> <type-spec> 
M [ 170 , DELIM_LSQBRACKET ] = REDUCE <decl-spec> -> <type-spec> 
M [ 170 , DELIM_RPAR ] = REDUCE <decl-spec> -> <type-spec> 
M [ 170 , IDENTIFIER ] = REDUCE <decl-spec> -> <type-spec> 
M [ 170 , OP_MUL ] = REDUCE <decl-spec> -> <type-spec> 
M [ 170 , char ] = SHIFT 173
M [ 170 , const ] = SHIFT 174
M [ 170 , double ] = SHIFT 175
M [ 170 , enum ] = SHIFT 176
M [ 170 , float ] = SHIFT 177
M [ 170 , int ] = SHIFT 178
M [ 170 , long ] = SHIFT 179
M [ 170 , short ] = SHIFT 180
M [ 170 , signed ] = SHIFT 181
M [ 170 , struct ] = SHIFT 21
M [ 170 , typedef ] = SHIFT 182
M [ 170 , unsigned ] = SHIFT 183
M [ 170 , void ] = SHIFT 184
M [ 171 , DELIM_COMMA ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 171 , DELIM_LCURBRACE ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 171 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 171 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 171 , DELIM_SEMICOLON ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 171 , OP_ASN ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 171 , char ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 171 , const ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 171 , double ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 171 , enum ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 171 , float ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 171 , int ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 171 , long ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 171 , short ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 171 , signed ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 171 , struct ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 171 , typedef ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 171 , unsigned ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 171 , void ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 172 , DELIM_COMMA ] = REDUCE <identifier-list> -> IDENTIFIER 
M [ 172 , DELIM_RPAR ] = REDUCE <identifier-list> -> IDENTIFIER 
M [ 173 , DELIM_COMMA ] = REDUCE <type-spec> -> char 
M [ 173 , DELIM_LPAR ] = REDUCE <type-spec> -> char 
M [ 173 , DELIM_LSQBRACKET ] = REDUCE <type-spec> -> char 
M [ 173 , DELIM_RPAR ] = REDUCE <type-spec> -> char 
M [ 173 , IDENTIFIER ] = REDUCE <type-spec> -> char 
M [ 173 , OP_MUL ] = REDUCE <type-spec> -> char 
M [ 173 , char ] = REDUCE <type-spec> -> char 
M [ 173 , const ] = REDUCE <type-spec> -> char 
M [ 173 , double ] = REDUCE <type-spec> -> char 
M [ 173 , enum ] = REDUCE <type-spec> -> char 
M [ 173 , float ] = REDUCE <type-spec> -> char 
M [ 173 , int ] = REDUCE <type-spec> -> char 
M [ 173 , long ] = REDUCE <type-spec> -> char 
M [ 173 , short ] = REDUCE <type-spec> -> char 
M [ 173 , signed ] = REDUCE <type-spec> -> char 
M [ 173 , struct ] = REDUCE <type-spec> -> char 
M [ 173 , typedef ] = REDUCE <type-spec> -> char 
M [ 173 , unsigned ] = REDUCE <type-spec> -> char 
M [ 173 , void ] = REDUCE <type-spec> -> char 
M [ 174 , DELIM_COMMA ] = REDUCE <type-qual> -> const 
M [ 174 , DELIM_LPAR ] = REDUCE <type-qual> -> const 
M [ 174 , DELIM_LSQBRACKET ] = REDUCE <type-qual> -> const 
M [ 174 , DELIM_RPAR ] = REDUCE <type-qual> -> const 
M [ 174 , IDENTIFIER ] = REDUCE <type-qual> -> const 
M [ 174 , OP_MUL ] = REDUCE <type-qual> -> const 
M [ 174 , char ] = REDUCE <type-qual> -> const 
M [ 174 , const ] = REDUCE <type-qual> -> const 
M [ 174 , double ] = REDUCE <type-qual> -> const 
M [ 174 , enum ] = REDUCE <type-qual> -> const 
M [ 174 , float ] = REDUCE <type-qual> -> const 
M [ 174 , int ] = REDUCE <type-qual> -> const 
M [ 174 , long ] = REDUCE <type-qual> -> const 
M [ 174 , short ] = REDUCE <type-qual> -> const 
M [ 174 , signed ] = REDUCE <type-qual> -> const 
M [ 174 , struct ] = REDUCE <type-qual> -> const 
M [ 174 , typedef ] = REDUCE <type-qual> -> const 
M [ 174 , unsigned ] = REDUCE <type-qual> -> const 
M [ 174 , void ] = REDUCE <type-qual> -> const 
M [ 175 , DELIM_COMMA ] = REDUCE <type-spec> -> double 
M [ 175 , DELIM_LPAR ] = REDUCE <type-spec> -> double 
M [ 175 , DELIM_LSQBRACKET ] = REDUCE <type-spec> -> double 
M [ 175 , DELIM_RPAR ] = REDUCE <type-spec> -> double 
M [ 175 , IDENTIFIER ] = REDUCE <type-spec> -> double 
M [ 175 , OP_MUL ] = REDUCE <type-spec> -> double 
M [ 175 , char ] = REDUCE <type-spec> -> double 
M [ 175 , const ] = REDUCE <type-spec> -> double 
M [ 175 , double ] = REDUCE <type-spec> -> double 
M [ 175 , enum ] = REDUCE <type-spec> -> double 
M [ 175 , float ] = REDUCE <type-spec> -> double 
M [ 175 , int ] = REDUCE <type-spec> -> double 
M [ 175 , long ] = REDUCE <type-spec> -> double 
M [ 175 , short ] = REDUCE <type-spec> -> double 
M [ 175 , signed ] = REDUCE <type-spec> -> double 
M [ 175 , struct ] = REDUCE <type-spec> -> double 
M [ 175 , typedef ] = REDUCE <type-spec> -> double 
M [ 175 , unsigned ] = REDUCE <type-spec> -> double 
M [ 175 , void ] = REDUCE <type-spec> -> double 
M [ 176 , DELIM_LCURBRACE ] = SHIFT 466
M [ 176 , IDENTIFIER ] = SHIFT 467
M [ 177 , DELIM_COMMA ] = REDUCE <type-spec> -> float 
M [ 177 , DELIM_LPAR ] = REDUCE <type-spec> -> float 
M [ 177 , DELIM_LSQBRACKET ] = REDUCE <type-spec> -> float 
M [ 177 , DELIM_RPAR ] = REDUCE <type-spec> -> float 
M [ 177 , IDENTIFIER ] = REDUCE <type-spec> -> float 
M [ 177 , OP_MUL ] = REDUCE <type-spec> -> float 
M [ 177 , char ] = REDUCE <type-spec> -> float 
M [ 177 , const ] = REDUCE <type-spec> -> float 
M [ 177 , double ] = REDUCE <type-spec> -> float 
M [ 177 , enum ] = REDUCE <type-spec> -> float 
M [ 177 , float ] = REDUCE <type-spec> -> float 
M [ 177 , int ] = REDUCE <type-spec> -> float 
M [ 177 , long ] = REDUCE <type-spec> -> float 
M [ 177 , short ] = REDUCE <type-spec> -> float 
M [ 177 , signed ] = REDUCE <type-spec> -> float 
M [ 177 , struct ] = REDUCE <type-spec> -> float 
M [ 177 , typedef ] = REDUCE <type-spec> -> float 
M [ 177 , unsigned ] = REDUCE <type-spec> -> float 
M [ 177 , void ] = REDUCE <type-spec> -> float 
M [ 178 , DELIM_COMMA ] = REDUCE <type-spec> -> int 
M [ 178 , DELIM_LPAR ] = REDUCE <type-spec> -> int 
M [ 178 , DELIM_LSQBRACKET ] = REDUCE <type-spec> -> int 
M [ 178 , DELIM_RPAR ] = REDUCE <type-spec> -> int 
M [ 178 , IDENTIFIER ] = REDUCE <type-spec> -> int 
M [ 178 , OP_MUL ] = REDUCE <type-spec> -> int 
M [ 178 , char ] = REDUCE <type-spec> -> int 
M [ 178 , const ] = REDUCE <type-spec> -> int 
M [ 178 , double ] = REDUCE <type-spec> -> int 
M [ 178 , enum ] = REDUCE <type-spec> -> int 
M [ 178 , float ] = REDUCE <type-spec> -> int 
M [ 178 , int ] = REDUCE <type-spec> -> int 
M [ 178 , long ] = REDUCE <type-spec> -> int 
M [ 178 , short ] = REDUCE <type-spec> -> int 
M [ 178 , signed ] = REDUCE <type-spec> -> int 
M [ 178 , struct ] = REDUCE <type-spec> -> int 
M [ 178 , typedef ] = REDUCE <type-spec> -> int 
M [ 178 , unsigned ] = REDUCE <type-spec> -> int 
M [ 178 , void ] = REDUCE <type-spec> -> int 
M [ 179 , DELIM_COMMA ] = REDUCE <type-spec> -> long 
M [ 179 , DELIM_LPAR ] = REDUCE <type-spec> -> long 
M [ 179 , DELIM_LSQBRACKET ] = REDUCE <type-spec> -> long 
M [ 179 , DELIM_RPAR ] = REDUCE <type-spec> -> long 
M [ 179 , IDENTIFIER ] = REDUCE <type-spec> -> long 
M [ 179 , OP_MUL ] = REDUCE <type-spec> -> long 
M [ 179 , char ] = REDUCE <type-spec> -> long 
M [ 179 , const ] = REDUCE <type-spec> -> long 
M [ 179 , double ] = REDUCE <type-spec> -> long 
M [ 179 , enum ] = REDUCE <type-spec> -> long 
M [ 179 , float ] = REDUCE <type-spec> -> long 
M [ 179 , int ] = REDUCE <type-spec> -> long 
M [ 179 , long ] = REDUCE <type-spec> -> long 
M [ 179 , short ] = REDUCE <type-spec> -> long 
M [ 179 , signed ] = REDUCE <type-spec> -> long 
M [ 179 , struct ] = REDUCE <type-spec> -> long 
M [ 179 , typedef ] = REDUCE <type-spec> -> long 
M [ 179 , unsigned ] = REDUCE <type-spec> -> long 
M [ 179 , void ] = REDUCE <type-spec> -> long 
M [ 180 , DELIM_COMMA ] = REDUCE <type-spec> -> short 
M [ 180 , DELIM_LPAR ] = REDUCE <type-spec> -> short 
M [ 180 , DELIM_LSQBRACKET ] = REDUCE <type-spec> -> short 
M [ 180 , DELIM_RPAR ] = REDUCE <type-spec> -> short 
M [ 180 , IDENTIFIER ] = REDUCE <type-spec> -> short 
M [ 180 , OP_MUL ] = REDUCE <type-spec> -> short 
M [ 180 , char ] = REDUCE <type-spec> -> short 
M [ 180 , const ] = REDUCE <type-spec> -> short 
M [ 180 , double ] = REDUCE <type-spec> -> short 
M [ 180 , enum ] = REDUCE <type-spec> -> short 
M [ 180 , float ] = REDUCE <type-spec> -> short 
M [ 180 , int ] = REDUCE <type-spec> -> short 
M [ 180 , long ] = REDUCE <type-spec> -> short 
M [ 180 , short ] = REDUCE <type-spec> -> short 
M [ 180 , signed ] = REDUCE <type-spec> -> short 
M [ 180 , struct ] = REDUCE <type-spec> -> short 
M [ 180 , typedef ] = REDUCE <type-spec> -> short 
M [ 180 , unsigned ] = REDUCE <type-spec> -> short 
M [ 180 , void ] = REDUCE <type-spec> -> short 
M [ 181 , DELIM_COMMA ] = REDUCE <type-spec> -> signed 
M [ 181 , DELIM_LPAR ] = REDUCE <type-spec> -> signed 
M [ 181 , DELIM_LSQBRACKET ] = REDUCE <type-spec> -> signed 
M [ 181 , DELIM_RPAR ] = REDUCE <type-spec> -> signed 
M [ 181 , IDENTIFIER ] = REDUCE <type-spec> -> signed 
M [ 181 , OP_MUL ] = REDUCE <type-spec> -> signed 
M [ 181 , char ] = REDUCE <type-spec> -> signed 
M [ 181 , const ] = REDUCE <type-spec> -> signed 
M [ 181 , double ] = REDUCE <type-spec> -> signed 
M [ 181 , enum ] = REDUCE <type-spec> -> signed 
M [ 181 , float ] = REDUCE <type-spec> -> signed 
M [ 181 , int ] = REDUCE <type-spec> -> signed 
M [ 181 , long ] = REDUCE <type-spec> -> signed 
M [ 181 , short ] = REDUCE <type-spec> -> signed 
M [ 181 , signed ] = REDUCE <type-spec> -> signed 
M [ 181 , struct ] = REDUCE <type-spec> -> signed 
M [ 181 , typedef ] = REDUCE <type-spec> -> signed 
M [ 181 , unsigned ] = REDUCE <type-spec> -> signed 
M [ 181 , void ] = REDUCE <type-spec> -> signed 
M [ 182 , DELIM_COMMA ] = REDUCE <storage-class-spec> -> typedef 
M [ 182 , DELIM_LPAR ] = REDUCE <storage-class-spec> -> typedef 
M [ 182 , DELIM_LSQBRACKET ] = REDUCE <storage-class-spec> -> typedef 
M [ 182 , DELIM_RPAR ] = REDUCE <storage-class-spec> -> typedef 
M [ 182 , IDENTIFIER ] = REDUCE <storage-class-spec> -> typedef 
M [ 182 , OP_MUL ] = REDUCE <storage-class-spec> -> typedef 
M [ 182 , char ] = REDUCE <storage-class-spec> -> typedef 
M [ 182 , const ] = REDUCE <storage-class-spec> -> typedef 
M [ 182 , double ] = REDUCE <storage-class-spec> -> typedef 
M [ 182 , enum ] = REDUCE <storage-class-spec> -> typedef 
M [ 182 , float ] = REDUCE <storage-class-spec> -> typedef 
M [ 182 , int ] = REDUCE <storage-class-spec> -> typedef 
M [ 182 , long ] = REDUCE <storage-class-spec> -> typedef 
M [ 182 , short ] = REDUCE <storage-class-spec> -> typedef 
M [ 182 , signed ] = REDUCE <storage-class-spec> -> typedef 
M [ 182 , struct ] = REDUCE <storage-class-spec> -> typedef 
M [ 182 , typedef ] = REDUCE <storage-class-spec> -> typedef 
M [ 182 , unsigned ] = REDUCE <storage-class-spec> -> typedef 
M [ 182 , void ] = REDUCE <storage-class-spec> -> typedef 
M [ 183 , DELIM_COMMA ] = REDUCE <type-spec> -> unsigned 
M [ 183 , DELIM_LPAR ] = REDUCE <type-spec> -> unsigned 
M [ 183 , DELIM_LSQBRACKET ] = REDUCE <type-spec> -> unsigned 
M [ 183 , DELIM_RPAR ] = REDUCE <type-spec> -> unsigned 
M [ 183 , IDENTIFIER ] = REDUCE <type-spec> -> unsigned 
M [ 183 , OP_MUL ] = REDUCE <type-spec> -> unsigned 
M [ 183 , char ] = REDUCE <type-spec> -> unsigned 
M [ 183 , const ] = REDUCE <type-spec> -> unsigned 
M [ 183 , double ] = REDUCE <type-spec> -> unsigned 
M [ 183 , enum ] = REDUCE <type-spec> -> unsigned 
M [ 183 , float ] = REDUCE <type-spec> -> unsigned 
M [ 183 , int ] = REDUCE <type-spec> -> unsigned 
M [ 183 , long ] = REDUCE <type-spec> -> unsigned 
M [ 183 , short ] = REDUCE <type-spec> -> unsigned 
M [ 183 , signed ] = REDUCE <type-spec> -> unsigned 
M [ 183 , struct ] = REDUCE <type-spec> -> unsigned 
M [ 183 , typedef ] = REDUCE <type-spec> -> unsigned 
M [ 183 , unsigned ] = REDUCE <type-spec> -> unsigned 
M [ 183 , void ] = REDUCE <type-spec> -> unsigned 
M [ 184 , DELIM_COMMA ] = REDUCE <type-spec> -> void 
M [ 184 , DELIM_LPAR ] = REDUCE <type-spec> -> void 
M [ 184 , DELIM_LSQBRACKET ] = REDUCE <type-spec> -> void 
M [ 184 , DELIM_RPAR ] = REDUCE <type-spec> -> void 
M [ 184 , IDENTIFIER ] = REDUCE <type-spec> -> void 
M [ 184 , OP_MUL ] = REDUCE <type-spec> -> void 
M [ 184 , char ] = REDUCE <type-spec> -> void 
M [ 184 , const ] = REDUCE <type-spec> -> void 
M [ 184 , double ] = REDUCE <type-spec> -> void 
M [ 184 , enum ] = REDUCE <type-spec> -> void 
M [ 184 , float ] = REDUCE <type-spec> -> void 
M [ 184 , int ] = REDUCE <type-spec> -> void 
M [ 184 , long ] = REDUCE <type-spec> -> void 
M [ 184 , short ] = REDUCE <type-spec> -> void 
M [ 184 , signed ] = REDUCE <type-spec> -> void 
M [ 184 , struct ] = REDUCE <type-spec> -> void 
M [ 184 , typedef ] = REDUCE <type-spec> -> void 
M [ 184 , unsigned ] = REDUCE <type-spec> -> void 
M [ 184 , void ] = REDUCE <type-spec> -> void 
M [ 185 , DELIM_QUESTION ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 185 , DELIM_RSQBRACKET ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 185 , OP_ADD ] = SHIFT 468
M [ 185 , OP_AND ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 185 , OP_EQ ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 185 , OP_GE ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 185 , OP_GT ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 185 , OP_LAND ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 185 , OP_LE ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 185 , OP_LOR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 185 , OP_LT ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 185 , OP_NEQ ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 185 , OP_OR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 185 , OP_SHL ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 185 , OP_SHR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 185 , OP_SUB ] = SHIFT 469
M [ 185 , OP_XOR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 186 , DELIM_QUESTION ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 186 , DELIM_RSQBRACKET ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 186 , OP_AND ] = SHIFT 470
M [ 186 , OP_LAND ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 186 , OP_LOR ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 186 , OP_OR ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 186 , OP_XOR ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 187 , DELIM_RSQBRACKET ] = SHIFT 471
M [ 188 , DELIM_QUESTION ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 188 , DELIM_RSQBRACKET ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 188 , OP_ADD ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 188 , OP_AND ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 188 , OP_DIV ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 188 , OP_EQ ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 188 , OP_GE ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 188 , OP_GT ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 188 , OP_LAND ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 188 , OP_LE ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 188 , OP_LOR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 188 , OP_LT ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 188 , OP_MOD ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 188 , OP_MUL ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 188 , OP_NEQ ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 188 , OP_OR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 188 , OP_SHL ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 188 , OP_SHR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 188 , OP_SUB ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 188 , OP_XOR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 189 , DELIM_RSQBRACKET ] = REDUCE <asn-expr> -> <cond-expr> 
M [ 190 , DELIM_LPAR ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , DELIM_QUESTION ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , DELIM_RSQBRACKET ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_ADD ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_ADDASN ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_AND ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_ANDASN ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_ARROW ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_ASN ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_DEC ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_DIV ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_DIVASN ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_DOT ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_EQ ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_GE ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_GT ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_INC ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_LAND ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_LE ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_LOR ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_LT ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_MOD ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_MODASN ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_MUL ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_MULASN ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_NEQ ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_OR ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_ORASN ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_SHL ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_SHLASN ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_SHR ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_SHRASN ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_SUB ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_SUBASN ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_XOR ] = REDUCE <prim-expr> -> <constant> 
M [ 190 , OP_XORASN ] = REDUCE <prim-expr> -> <constant> 
M [ 191 , DELIM_QUESTION ] = REDUCE <and-expr> -> <eq-expr> 
M [ 191 , DELIM_RSQBRACKET ] = REDUCE <and-expr> -> <eq-expr> 
M [ 191 , OP_AND ] = REDUCE <and-expr> -> <eq-expr> 
M [ 191 , OP_EQ ] = SHIFT 472
M [ 191 , OP_LAND ] = REDUCE <and-expr> -> <eq-expr> 
M [ 191 , OP_LOR ] = REDUCE <and-expr> -> <eq-expr> 
M [ 191 , OP_NEQ ] = SHIFT 473
M [ 191 , OP_OR ] = REDUCE <and-expr> -> <eq-expr> 
M [ 191 , OP_XOR ] = REDUCE <and-expr> -> <eq-expr> 
M [ 192 , DELIM_QUESTION ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 192 , DELIM_RSQBRACKET ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 192 , OP_LAND ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 192 , OP_LOR ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 192 , OP_OR ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 192 , OP_XOR ] = SHIFT 474
M [ 193 , DELIM_QUESTION ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 193 , DELIM_RSQBRACKET ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 193 , OP_LAND ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 193 , OP_LOR ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 193 , OP_OR ] = SHIFT 475
M [ 194 , DELIM_QUESTION ] = REDUCE <lor-expr> -> <land-expr> 
M [ 194 , DELIM_RSQBRACKET ] = REDUCE <lor-expr> -> <land-expr> 
M [ 194 , OP_LAND ] = SHIFT 476
M [ 194 , OP_LOR ] = REDUCE <lor-expr> -> <land-expr> 
M [ 195 , DELIM_QUESTION ] = SHIFT 477
M [ 195 , DELIM_RSQBRACKET ] = REDUCE <cond-expr> -> <lor-expr> 
M [ 195 , OP_LOR ] = SHIFT 478
M [ 196 , DELIM_QUESTION ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 196 , DELIM_RSQBRACKET ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 196 , OP_ADD ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 196 , OP_AND ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 196 , OP_DIV ] = SHIFT 479
M [ 196 , OP_EQ ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 196 , OP_GE ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 196 , OP_GT ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 196 , OP_LAND ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 196 , OP_LE ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 196 , OP_LOR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 196 , OP_LT ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 196 , OP_MOD ] = SHIFT 480
M [ 196 , OP_MUL ] = SHIFT 481
M [ 196 , OP_NEQ ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 196 , OP_OR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 196 , OP_SHL ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 196 , OP_SHR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 196 , OP_SUB ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 196 , OP_XOR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 197 , DELIM_LPAR ] = REDUCE <constant> -> <num-const> 
M [ 197 , DELIM_LSQBRACKET ] = REDUCE <constant> -> <num-const> 
M [ 197 , DELIM_QUESTION ] = REDUCE <constant> -> <num-const> 
M [ 197 , DELIM_RSQBRACKET ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_ADD ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_ADDASN ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_AND ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_ANDASN ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_ARROW ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_ASN ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_DEC ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_DIV ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_DIVASN ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_DOT ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_EQ ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_GE ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_GT ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_INC ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_LAND ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_LE ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_LOR ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_LT ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_MOD ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_MODASN ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_MUL ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_MULASN ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_NEQ ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_OR ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_ORASN ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_SHL ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_SHLASN ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_SHR ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_SHRASN ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_SUB ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_SUBASN ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_XOR ] = REDUCE <constant> -> <num-const> 
M [ 197 , OP_XORASN ] = REDUCE <constant> -> <num-const> 
M [ 198 , DELIM_LPAR ] = SHIFT 482
M [ 198 , DELIM_LSQBRACKET ] = SHIFT 483
M [ 198 , DELIM_QUESTION ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , DELIM_RSQBRACKET ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_ADD ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_ADDASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_AND ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_ANDASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_ARROW ] = SHIFT 484
M [ 198 , OP_ASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_DEC ] = SHIFT 485
M [ 198 , OP_DIV ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_DIVASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_DOT ] = SHIFT 486
M [ 198 , OP_EQ ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_GE ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_GT ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_INC ] = SHIFT 487
M [ 198 , OP_LAND ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_LE ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_LOR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_LT ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_MOD ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_MODASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_MUL ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_MULASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_NEQ ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_OR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_ORASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_SHL ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_SHLASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_SHR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_SHRASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_SUB ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_SUBASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_XOR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 198 , OP_XORASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 199 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_ADD ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_ADDASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_AND ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_ANDASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_ARROW ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_ASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_DEC ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_DIV ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_DIVASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_DOT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_EQ ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_GE ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_GT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_INC ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_LAND ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_LE ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_LOR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_LT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_MOD ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_MODASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_MUL ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_MULASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_NEQ ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_OR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_ORASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_SHL ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_SHLASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_SHR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_SHRASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_SUB ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_SUBASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_XOR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 199 , OP_XORASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 200 , DELIM_QUESTION ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 200 , DELIM_RSQBRACKET ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 200 , OP_AND ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 200 , OP_EQ ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 200 , OP_GE ] = SHIFT 488
M [ 200 , OP_GT ] = SHIFT 489
M [ 200 , OP_LAND ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 200 , OP_LE ] = SHIFT 490
M [ 200 , OP_LOR ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 200 , OP_LT ] = SHIFT 491
M [ 200 , OP_NEQ ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 200 , OP_OR ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 200 , OP_XOR ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 201 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 201 , DELIM_RSQBRACKET ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 201 , OP_AND ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 201 , OP_EQ ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 201 , OP_GE ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 201 , OP_GT ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 201 , OP_LAND ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 201 , OP_LE ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 201 , OP_LOR ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 201 , OP_LT ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 201 , OP_NEQ ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 201 , OP_OR ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 201 , OP_SHL ] = SHIFT 492
M [ 201 , OP_SHR ] = SHIFT 493
M [ 201 , OP_XOR ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 202 , <additive-expr> ] = GOTO 185
M [ 202 , <and-expr> ] = GOTO 186
M [ 202 , <asn-expr> ] = GOTO 494
M [ 202 , <cast-expr> ] = GOTO 188
M [ 202 , <cond-expr> ] = GOTO 189
M [ 202 , <constant> ] = GOTO 190
M [ 202 , <eq-expr> ] = GOTO 191
M [ 202 , <exc-or-expr> ] = GOTO 192
M [ 202 , <inc-or-expr> ] = GOTO 193
M [ 202 , <land-expr> ] = GOTO 194
M [ 202 , <lor-expr> ] = GOTO 195
M [ 202 , <multiplicative-expr> ] = GOTO 196
M [ 202 , <num-const> ] = GOTO 197
M [ 202 , <postfix-expr> ] = GOTO 198
M [ 202 , <prim-expr> ] = GOTO 199
M [ 202 , <rel-expr> ] = GOTO 200
M [ 202 , <shift-expr> ] = GOTO 201
M [ 202 , <type-qual> ] = GOTO 495
M [ 202 , <unary-expr> ] = GOTO 204
M [ 202 , <unary-op> ] = GOTO 205
M [ 202 , CHAR_CONST ] = SHIFT 206
M [ 202 , DELIM_LPAR ] = SHIFT 207
M [ 202 , DELIM_RSQBRACKET ] = SHIFT 496
M [ 202 , FLOAT_CONST ] = SHIFT 209
M [ 202 , IDENTIFIER ] = SHIFT 210
M [ 202 , INT_CONST ] = SHIFT 211
M [ 202 , OP_ADD ] = SHIFT 135
M [ 202 , OP_AND ] = SHIFT 136
M [ 202 , OP_DEC ] = SHIFT 212
M [ 202 , OP_INC ] = SHIFT 213
M [ 202 , OP_LNOT ] = SHIFT 139
M [ 202 , OP_MUL ] = SHIFT 140
M [ 202 , OP_NOT ] = SHIFT 141
M [ 202 , OP_SUB ] = SHIFT 142
M [ 202 , STR_LITERAL ] = SHIFT 214
M [ 202 , const ] = SHIFT 215
M [ 202 , sizeof ] = SHIFT 216
M [ 203 , CHAR_CONST ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 203 , DELIM_LPAR ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 203 , DELIM_RSQBRACKET ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 203 , FLOAT_CONST ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 203 , IDENTIFIER ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 203 , INT_CONST ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 203 , OP_ADD ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 203 , OP_AND ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 203 , OP_DEC ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 203 , OP_INC ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 203 , OP_LNOT ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 203 , OP_MUL ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 203 , OP_NOT ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 203 , OP_SUB ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 203 , STR_LITERAL ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 203 , const ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 203 , sizeof ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 204 , <asn-op> ] = GOTO 497
M [ 204 , DELIM_QUESTION ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 204 , DELIM_RSQBRACKET ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 204 , OP_ADD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 204 , OP_ADDASN ] = SHIFT 283
M [ 204 , OP_AND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 204 , OP_ANDASN ] = SHIFT 284
M [ 204 , OP_ASN ] = SHIFT 285
M [ 204 , OP_DIV ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 204 , OP_DIVASN ] = SHIFT 286
M [ 204 , OP_EQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 204 , OP_GE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 204 , OP_GT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 204 , OP_LAND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 204 , OP_LE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 204 , OP_LOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 204 , OP_LT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 204 , OP_MOD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 204 , OP_MODASN ] = SHIFT 287
M [ 204 , OP_MUL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 204 , OP_MULASN ] = SHIFT 288
M [ 204 , OP_NEQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 204 , OP_OR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 204 , OP_ORASN ] = SHIFT 289
M [ 204 , OP_SHL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 204 , OP_SHLASN ] = SHIFT 290
M [ 204 , OP_SHR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 204 , OP_SHRASN ] = SHIFT 291
M [ 204 , OP_SUB ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 204 , OP_SUBASN ] = SHIFT 292
M [ 204 , OP_XOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 204 , OP_XORASN ] = SHIFT 293
M [ 205 , <cast-expr> ] = GOTO 498
M [ 205 , <constant> ] = GOTO 190
M [ 205 , <num-const> ] = GOTO 197
M [ 205 , <postfix-expr> ] = GOTO 198
M [ 205 , <prim-expr> ] = GOTO 199
M [ 205 , <unary-expr> ] = GOTO 499
M [ 205 , <unary-op> ] = GOTO 205
M [ 205 , CHAR_CONST ] = SHIFT 206
M [ 205 , DELIM_LPAR ] = SHIFT 500
M [ 205 , FLOAT_CONST ] = SHIFT 209
M [ 205 , IDENTIFIER ] = SHIFT 210
M [ 205 , INT_CONST ] = SHIFT 211
M [ 205 , OP_ADD ] = SHIFT 135
M [ 205 , OP_AND ] = SHIFT 136
M [ 205 , OP_DEC ] = SHIFT 212
M [ 205 , OP_INC ] = SHIFT 213
M [ 205 , OP_LNOT ] = SHIFT 139
M [ 205 , OP_MUL ] = SHIFT 140
M [ 205 , OP_NOT ] = SHIFT 141
M [ 205 , OP_SUB ] = SHIFT 142
M [ 205 , STR_LITERAL ] = SHIFT 214
M [ 205 , sizeof ] = SHIFT 216
M [ 206 , DELIM_LPAR ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , DELIM_LSQBRACKET ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , DELIM_QUESTION ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , DELIM_RSQBRACKET ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_ADD ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_ADDASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_AND ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_ANDASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_ARROW ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_ASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_DEC ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_DIV ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_DIVASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_DOT ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_EQ ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_GE ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_GT ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_INC ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_LAND ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_LE ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_LOR ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_LT ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_MOD ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_MODASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_MUL ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_MULASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_NEQ ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_OR ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_ORASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_SHL ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_SHLASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_SHR ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_SHRASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_SUB ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_SUBASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_XOR ] = REDUCE <constant> -> CHAR_CONST 
M [ 206 , OP_XORASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 207 , <additive-expr> ] = GOTO 299
M [ 207 , <and-expr> ] = GOTO 300
M [ 207 , <asn-expr> ] = GOTO 301
M [ 207 , <cast-expr> ] = GOTO 302
M [ 207 , <cond-expr> ] = GOTO 303
M [ 207 , <constant> ] = GOTO 304
M [ 207 , <enum-spec> ] = GOTO 305
M [ 207 , <eq-expr> ] = GOTO 306
M [ 207 , <exc-or-expr> ] = GOTO 307
M [ 207 , <expr> ] = GOTO 501
M [ 207 , <inc-or-expr> ] = GOTO 309
M [ 207 , <land-expr> ] = GOTO 310
M [ 207 , <lor-expr> ] = GOTO 311
M [ 207 , <multiplicative-expr> ] = GOTO 312
M [ 207 , <num-const> ] = GOTO 313
M [ 207 , <postfix-expr> ] = GOTO 314
M [ 207 , <prim-expr> ] = GOTO 315
M [ 207 , <rel-expr> ] = GOTO 316
M [ 207 , <shift-expr> ] = GOTO 317
M [ 207 , <spec-qual-list> ] = GOTO 318
M [ 207 , <struct-union-spec> ] = GOTO 319
M [ 207 , <struct-union> ] = GOTO 320
M [ 207 , <type-name> ] = GOTO 502
M [ 207 , <type-qual> ] = GOTO 322
M [ 207 , <type-spec> ] = GOTO 323
M [ 207 , <unary-expr> ] = GOTO 324
M [ 207 , <unary-op> ] = GOTO 325
M [ 207 , CHAR_CONST ] = SHIFT 326
M [ 207 , DELIM_LPAR ] = SHIFT 327
M [ 207 , FLOAT_CONST ] = SHIFT 328
M [ 207 , IDENTIFIER ] = SHIFT 329
M [ 207 , INT_CONST ] = SHIFT 330
M [ 207 , OP_ADD ] = SHIFT 135
M [ 207 , OP_AND ] = SHIFT 136
M [ 207 , OP_DEC ] = SHIFT 331
M [ 207 , OP_INC ] = SHIFT 332
M [ 207 , OP_LNOT ] = SHIFT 139
M [ 207 , OP_MUL ] = SHIFT 140
M [ 207 , OP_NOT ] = SHIFT 141
M [ 207 , OP_SUB ] = SHIFT 142
M [ 207 , STR_LITERAL ] = SHIFT 333
M [ 207 , char ] = SHIFT 334
M [ 207 , const ] = SHIFT 335
M [ 207 , double ] = SHIFT 336
M [ 207 , enum ] = SHIFT 337
M [ 207 , float ] = SHIFT 338
M [ 207 , int ] = SHIFT 339
M [ 207 , long ] = SHIFT 340
M [ 207 , short ] = SHIFT 341
M [ 207 , signed ] = SHIFT 342
M [ 207 , sizeof ] = SHIFT 343
M [ 207 , struct ] = SHIFT 21
M [ 207 , unsigned ] = SHIFT 344
M [ 207 , void ] = SHIFT 345
M [ 208 , DELIM_COMMA ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 208 , DELIM_LCURBRACE ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 208 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 208 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 208 , DELIM_SEMICOLON ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 208 , OP_ASN ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 208 , char ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 208 , const ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 208 , double ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 208 , enum ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 208 , float ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 208 , int ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 208 , long ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 208 , short ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 208 , signed ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 208 , struct ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 208 , typedef ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 208 , unsigned ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 208 , void ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 209 , DELIM_LPAR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , DELIM_LSQBRACKET ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , DELIM_QUESTION ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , DELIM_RSQBRACKET ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_ADD ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_ADDASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_AND ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_ANDASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_ARROW ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_ASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_DEC ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_DIV ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_DIVASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_DOT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_EQ ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_GE ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_GT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_INC ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_LAND ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_LE ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_LOR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_LT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_MOD ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_MODASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_MUL ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_MULASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_NEQ ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_OR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_ORASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_SHL ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_SHLASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_SHR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_SHRASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_SUB ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_SUBASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_XOR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 209 , OP_XORASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 210 , DELIM_LPAR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , DELIM_QUESTION ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , DELIM_RSQBRACKET ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_ADD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_ADDASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_AND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_ANDASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_ARROW ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_ASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_DEC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_DIV ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_DIVASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_DOT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_EQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_GE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_GT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_INC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_LAND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_LE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_LOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_LT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_MOD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_MODASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_MUL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_MULASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_NEQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_OR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_ORASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_SHL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_SHLASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_SHR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_SHRASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_SUB ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_SUBASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_XOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 210 , OP_XORASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 211 , DELIM_LPAR ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , DELIM_LSQBRACKET ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , DELIM_QUESTION ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , DELIM_RSQBRACKET ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_ADD ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_ADDASN ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_AND ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_ANDASN ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_ARROW ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_ASN ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_DEC ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_DIV ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_DIVASN ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_DOT ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_EQ ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_GE ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_GT ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_INC ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_LAND ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_LE ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_LOR ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_LT ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_MOD ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_MODASN ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_MUL ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_MULASN ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_NEQ ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_OR ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_ORASN ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_SHL ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_SHLASN ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_SHR ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_SHRASN ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_SUB ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_SUBASN ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_XOR ] = REDUCE <num-const> -> INT_CONST 
M [ 211 , OP_XORASN ] = REDUCE <num-const> -> INT_CONST 
M [ 212 , <constant> ] = GOTO 190
M [ 212 , <num-const> ] = GOTO 197
M [ 212 , <postfix-expr> ] = GOTO 198
M [ 212 , <prim-expr> ] = GOTO 199
M [ 212 , <unary-expr> ] = GOTO 503
M [ 212 , <unary-op> ] = GOTO 205
M [ 212 , CHAR_CONST ] = SHIFT 206
M [ 212 , DELIM_LPAR ] = SHIFT 504
M [ 212 , FLOAT_CONST ] = SHIFT 209
M [ 212 , IDENTIFIER ] = SHIFT 210
M [ 212 , INT_CONST ] = SHIFT 211
M [ 212 , OP_ADD ] = SHIFT 135
M [ 212 , OP_AND ] = SHIFT 136
M [ 212 , OP_DEC ] = SHIFT 212
M [ 212 , OP_INC ] = SHIFT 213
M [ 212 , OP_LNOT ] = SHIFT 139
M [ 212 , OP_MUL ] = SHIFT 140
M [ 212 , OP_NOT ] = SHIFT 141
M [ 212 , OP_SUB ] = SHIFT 142
M [ 212 , STR_LITERAL ] = SHIFT 214
M [ 212 , sizeof ] = SHIFT 216
M [ 213 , <constant> ] = GOTO 190
M [ 213 , <num-const> ] = GOTO 197
M [ 213 , <postfix-expr> ] = GOTO 198
M [ 213 , <prim-expr> ] = GOTO 199
M [ 213 , <unary-expr> ] = GOTO 505
M [ 213 , <unary-op> ] = GOTO 205
M [ 213 , CHAR_CONST ] = SHIFT 206
M [ 213 , DELIM_LPAR ] = SHIFT 504
M [ 213 , FLOAT_CONST ] = SHIFT 209
M [ 213 , IDENTIFIER ] = SHIFT 210
M [ 213 , INT_CONST ] = SHIFT 211
M [ 213 , OP_ADD ] = SHIFT 135
M [ 213 , OP_AND ] = SHIFT 136
M [ 213 , OP_DEC ] = SHIFT 212
M [ 213 , OP_INC ] = SHIFT 213
M [ 213 , OP_LNOT ] = SHIFT 139
M [ 213 , OP_MUL ] = SHIFT 140
M [ 213 , OP_NOT ] = SHIFT 141
M [ 213 , OP_SUB ] = SHIFT 142
M [ 213 , STR_LITERAL ] = SHIFT 214
M [ 213 , sizeof ] = SHIFT 216
M [ 214 , DELIM_LPAR ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , DELIM_LSQBRACKET ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , DELIM_QUESTION ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , DELIM_RSQBRACKET ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_ADD ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_ADDASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_AND ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_ANDASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_ARROW ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_ASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_DEC ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_DIV ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_DIVASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_DOT ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_EQ ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_GE ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_GT ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_INC ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_LAND ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_LE ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_LOR ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_LT ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_MOD ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_MODASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_MUL ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_MULASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_NEQ ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_OR ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_ORASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_SHL ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_SHLASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_SHR ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_SHRASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_SUB ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_SUBASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_XOR ] = REDUCE <constant> -> STR_LITERAL 
M [ 214 , OP_XORASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 215 , CHAR_CONST ] = REDUCE <type-qual> -> const 
M [ 215 , DELIM_LPAR ] = REDUCE <type-qual> -> const 
M [ 215 , DELIM_RSQBRACKET ] = REDUCE <type-qual> -> const 
M [ 215 , FLOAT_CONST ] = REDUCE <type-qual> -> const 
M [ 215 , IDENTIFIER ] = REDUCE <type-qual> -> const 
M [ 215 , INT_CONST ] = REDUCE <type-qual> -> const 
M [ 215 , OP_ADD ] = REDUCE <type-qual> -> const 
M [ 215 , OP_AND ] = REDUCE <type-qual> -> const 
M [ 215 , OP_DEC ] = REDUCE <type-qual> -> const 
M [ 215 , OP_INC ] = REDUCE <type-qual> -> const 
M [ 215 , OP_LNOT ] = REDUCE <type-qual> -> const 
M [ 215 , OP_MUL ] = REDUCE <type-qual> -> const 
M [ 215 , OP_NOT ] = REDUCE <type-qual> -> const 
M [ 215 , OP_SUB ] = REDUCE <type-qual> -> const 
M [ 215 , STR_LITERAL ] = REDUCE <type-qual> -> const 
M [ 215 , const ] = REDUCE <type-qual> -> const 
M [ 215 , sizeof ] = REDUCE <type-qual> -> const 
M [ 216 , <constant> ] = GOTO 190
M [ 216 , <num-const> ] = GOTO 197
M [ 216 , <postfix-expr> ] = GOTO 198
M [ 216 , <prim-expr> ] = GOTO 199
M [ 216 , <unary-expr> ] = GOTO 506
M [ 216 , <unary-op> ] = GOTO 205
M [ 216 , CHAR_CONST ] = SHIFT 206
M [ 216 , DELIM_LPAR ] = SHIFT 507
M [ 216 , FLOAT_CONST ] = SHIFT 209
M [ 216 , IDENTIFIER ] = SHIFT 210
M [ 216 , INT_CONST ] = SHIFT 211
M [ 216 , OP_ADD ] = SHIFT 135
M [ 216 , OP_AND ] = SHIFT 136
M [ 216 , OP_DEC ] = SHIFT 212
M [ 216 , OP_INC ] = SHIFT 213
M [ 216 , OP_LNOT ] = SHIFT 139
M [ 216 , OP_MUL ] = SHIFT 140
M [ 216 , OP_NOT ] = SHIFT 141
M [ 216 , OP_SUB ] = SHIFT 142
M [ 216 , STR_LITERAL ] = SHIFT 214
M [ 216 , sizeof ] = SHIFT 216
M [ 217 , DELIM_COMMA ] = REDUCE <init-declarator-list> -> <init-declarator-list> DELIM_COMMA <init-declarator> 
M [ 217 , DELIM_SEMICOLON ] = REDUCE <init-declarator-list> -> <init-declarator-list> DELIM_COMMA <init-declarator> 
M [ 218 , DELIM_COMMA ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 218 , DELIM_LCURBRACE ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 218 , DELIM_LPAR ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 218 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 218 , DELIM_SEMICOLON ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 218 , OP_ASN ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 218 , char ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 218 , const ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 218 , double ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 218 , enum ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 218 , float ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 218 , int ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 218 , long ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 218 , short ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 218 , signed ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 218 , struct ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 218 , typedef ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 218 , unsigned ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 218 , void ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 219 , <decl-spec> ] = GOTO 160
M [ 219 , <enum-spec> ] = GOTO 161
M [ 219 , <identifier-list> ] = GOTO 508
M [ 219 , <param-decl> ] = GOTO 163
M [ 219 , <param-list> ] = GOTO 164
M [ 219 , <param-type-list> ] = GOTO 509
M [ 219 , <storage-class-spec> ] = GOTO 166
M [ 219 , <struct-union-spec> ] = GOTO 167
M [ 219 , <struct-union> ] = GOTO 168
M [ 219 , <type-qual> ] = GOTO 169
M [ 219 , <type-spec> ] = GOTO 170
M [ 219 , DELIM_RPAR ] = SHIFT 510
M [ 219 , IDENTIFIER ] = SHIFT 172
M [ 219 , char ] = SHIFT 173
M [ 219 , const ] = SHIFT 174
M [ 219 , double ] = SHIFT 175
M [ 219 , enum ] = SHIFT 176
M [ 219 , float ] = SHIFT 177
M [ 219 , int ] = SHIFT 178
M [ 219 , long ] = SHIFT 179
M [ 219 , short ] = SHIFT 180
M [ 219 , signed ] = SHIFT 181
M [ 219 , struct ] = SHIFT 21
M [ 219 , typedef ] = SHIFT 182
M [ 219 , unsigned ] = SHIFT 183
M [ 219 , void ] = SHIFT 184
M [ 220 , <additive-expr> ] = GOTO 185
M [ 220 , <and-expr> ] = GOTO 186
M [ 220 , <asn-expr> ] = GOTO 511
M [ 220 , <cast-expr> ] = GOTO 188
M [ 220 , <cond-expr> ] = GOTO 189
M [ 220 , <constant> ] = GOTO 190
M [ 220 , <eq-expr> ] = GOTO 191
M [ 220 , <exc-or-expr> ] = GOTO 192
M [ 220 , <inc-or-expr> ] = GOTO 193
M [ 220 , <land-expr> ] = GOTO 194
M [ 220 , <lor-expr> ] = GOTO 195
M [ 220 , <multiplicative-expr> ] = GOTO 196
M [ 220 , <num-const> ] = GOTO 197
M [ 220 , <postfix-expr> ] = GOTO 198
M [ 220 , <prim-expr> ] = GOTO 199
M [ 220 , <rel-expr> ] = GOTO 200
M [ 220 , <shift-expr> ] = GOTO 201
M [ 220 , <type-qual-list> ] = GOTO 512
M [ 220 , <type-qual> ] = GOTO 203
M [ 220 , <unary-expr> ] = GOTO 204
M [ 220 , <unary-op> ] = GOTO 205
M [ 220 , CHAR_CONST ] = SHIFT 206
M [ 220 , DELIM_LPAR ] = SHIFT 207
M [ 220 , DELIM_RSQBRACKET ] = SHIFT 513
M [ 220 , FLOAT_CONST ] = SHIFT 209
M [ 220 , IDENTIFIER ] = SHIFT 210
M [ 220 , INT_CONST ] = SHIFT 211
M [ 220 , OP_ADD ] = SHIFT 135
M [ 220 , OP_AND ] = SHIFT 136
M [ 220 , OP_DEC ] = SHIFT 212
M [ 220 , OP_INC ] = SHIFT 213
M [ 220 , OP_LNOT ] = SHIFT 139
M [ 220 , OP_MUL ] = SHIFT 140
M [ 220 , OP_NOT ] = SHIFT 141
M [ 220 , OP_SUB ] = SHIFT 142
M [ 220 , STR_LITERAL ] = SHIFT 214
M [ 220 , const ] = SHIFT 215
M [ 220 , sizeof ] = SHIFT 216
M [ 221 , DELIM_LPAR ] = SHIFT 219
M [ 221 , DELIM_LSQBRACKET ] = SHIFT 220
M [ 221 , DELIM_RPAR ] = REDUCE <declarator> -> <pointer> <direct-declarator> 
M [ 222 , DELIM_RPAR ] = SHIFT 514
M [ 223 , DELIM_LPAR ] = REDUCE <pointer> -> OP_MUL <type-qual-list> <pointer> 
M [ 223 , IDENTIFIER ] = REDUCE <pointer> -> OP_MUL <type-qual-list> <pointer> 
M [ 224 , DELIM_LPAR ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 224 , IDENTIFIER ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 224 , OP_MUL ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 224 , const ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 225 , DELIM_COMMA ] = REDUCE <struct-declarator> -> <declarator> 
M [ 225 , DELIM_SEMICOLON ] = REDUCE <struct-declarator> -> <declarator> 
M [ 226 , DELIM_COMMA ] = REDUCE <declarator> -> <direct-declarator> 
M [ 226 , DELIM_LPAR ] = SHIFT 515
M [ 226 , DELIM_LSQBRACKET ] = SHIFT 516
M [ 226 , DELIM_SEMICOLON ] = REDUCE <declarator> -> <direct-declarator> 
M [ 227 , <direct-declarator> ] = GOTO 517
M [ 227 , DELIM_LPAR ] = SHIFT 230
M [ 227 , IDENTIFIER ] = SHIFT 232
M [ 228 , DELIM_COMMA ] = SHIFT 518
M [ 228 , DELIM_SEMICOLON ] = SHIFT 519
M [ 229 , DELIM_COMMA ] = REDUCE <struct-declarator-list> -> <struct-declarator> 
M [ 229 , DELIM_SEMICOLON ] = REDUCE <struct-declarator-list> -> <struct-declarator> 
M [ 230 , <declarator> ] = GOTO 520
M [ 230 , <direct-declarator> ] = GOTO 54
M [ 230 , <pointer> ] = GOTO 55
M [ 230 , DELIM_LPAR ] = SHIFT 56
M [ 230 , IDENTIFIER ] = SHIFT 57
M [ 230 , OP_MUL ] = SHIFT 33
M [ 231 , DELIM_RCURBRACE ] = REDUCE <struct-decl> -> <spec-qual-list> DELIM_SEMICOLON 
M [ 231 , char ] = REDUCE <struct-decl> -> <spec-qual-list> DELIM_SEMICOLON 
M [ 231 , const ] = REDUCE <struct-decl> -> <spec-qual-list> DELIM_SEMICOLON 
M [ 231 , double ] = REDUCE <struct-decl> -> <spec-qual-list> DELIM_SEMICOLON 
M [ 231 , enum ] = REDUCE <struct-decl> -> <spec-qual-list> DELIM_SEMICOLON 
M [ 231 , float ] = REDUCE <struct-decl> -> <spec-qual-list> DELIM_SEMICOLON 
M [ 231 , int ] = REDUCE <struct-decl> -> <spec-qual-list> DELIM_SEMICOLON 
M [ 231 , long ] = REDUCE <struct-decl> -> <spec-qual-list> DELIM_SEMICOLON 
M [ 231 , short ] = REDUCE <struct-decl> -> <spec-qual-list> DELIM_SEMICOLON 
M [ 231 , signed ] = REDUCE <struct-decl> -> <spec-qual-list> DELIM_SEMICOLON 
M [ 231 , struct ] = REDUCE <struct-decl> -> <spec-qual-list> DELIM_SEMICOLON 
M [ 231 , unsigned ] = REDUCE <struct-decl> -> <spec-qual-list> DELIM_SEMICOLON 
M [ 231 , void ] = REDUCE <struct-decl> -> <spec-qual-list> DELIM_SEMICOLON 
M [ 232 , DELIM_COMMA ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 232 , DELIM_LPAR ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 232 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 232 , DELIM_SEMICOLON ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 233 , DELIM_RCURBRACE ] = REDUCE <struct-decl-list> -> <struct-decl-list> <struct-decl> 
M [ 233 , char ] = REDUCE <struct-decl-list> -> <struct-decl-list> <struct-decl> 
M [ 233 , const ] = REDUCE <struct-decl-list> -> <struct-decl-list> <struct-decl> 
M [ 233 , double ] = REDUCE <struct-decl-list> -> <struct-decl-list> <struct-decl> 
M [ 233 , enum ] = REDUCE <struct-decl-list> -> <struct-decl-list> <struct-decl> 
M [ 233 , float ] = REDUCE <struct-decl-list> -> <struct-decl-list> <struct-decl> 
M [ 233 , int ] = REDUCE <struct-decl-list> -> <struct-decl-list> <struct-decl> 
M [ 233 , long ] = REDUCE <struct-decl-list> -> <struct-decl-list> <struct-decl> 
M [ 233 , short ] = REDUCE <struct-decl-list> -> <struct-decl-list> <struct-decl> 
M [ 233 , signed ] = REDUCE <struct-decl-list> -> <struct-decl-list> <struct-decl> 
M [ 233 , struct ] = REDUCE <struct-decl-list> -> <struct-decl-list> <struct-decl> 
M [ 233 , unsigned ] = REDUCE <struct-decl-list> -> <struct-decl-list> <struct-decl> 
M [ 233 , void ] = REDUCE <struct-decl-list> -> <struct-decl-list> <struct-decl> 
M [ 234 , DELIM_LPAR ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 234 , DELIM_SEMICOLON ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 234 , IDENTIFIER ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 234 , OP_MUL ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 234 , char ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 234 , const ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 234 , double ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 234 , enum ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 234 , float ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 234 , int ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 234 , long ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 234 , short ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 234 , signed ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 234 , struct ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 234 , typedef ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 234 , unsigned ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 234 , void ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 235 , <enum-spec> ] = GOTO 62
M [ 235 , <spec-qual-list> ] = GOTO 63
M [ 235 , <struct-decl-list> ] = GOTO 521
M [ 235 , <struct-decl> ] = GOTO 65
M [ 235 , <struct-union-spec> ] = GOTO 66
M [ 235 , <struct-union> ] = GOTO 67
M [ 235 , <type-qual> ] = GOTO 68
M [ 235 , <type-spec> ] = GOTO 69
M [ 235 , char ] = SHIFT 70
M [ 235 , const ] = SHIFT 71
M [ 235 , double ] = SHIFT 72
M [ 235 , enum ] = SHIFT 73
M [ 235 , float ] = SHIFT 74
M [ 235 , int ] = SHIFT 75
M [ 235 , long ] = SHIFT 76
M [ 235 , short ] = SHIFT 77
M [ 235 , signed ] = SHIFT 78
M [ 235 , struct ] = SHIFT 21
M [ 235 , unsigned ] = SHIFT 79
M [ 235 , void ] = SHIFT 80
M [ 236 , DELIM_LCURBRACE ] = SHIFT 522
M [ 236 , DELIM_LPAR ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 236 , DELIM_SEMICOLON ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 236 , IDENTIFIER ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 236 , OP_MUL ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 236 , char ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 236 , const ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 236 , double ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 236 , enum ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 236 , float ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 236 , int ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 236 , long ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 236 , short ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 236 , signed ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 236 , struct ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 236 , unsigned ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 236 , void ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 237 , DELIM_LPAR ] = REDUCE <spec-qual-list> -> <type-qual> <spec-qual-list> 
M [ 237 , DELIM_SEMICOLON ] = REDUCE <spec-qual-list> -> <type-qual> <spec-qual-list> 
M [ 237 , IDENTIFIER ] = REDUCE <spec-qual-list> -> <type-qual> <spec-qual-list> 
M [ 237 , OP_MUL ] = REDUCE <spec-qual-list> -> <type-qual> <spec-qual-list> 
M [ 238 , DELIM_LPAR ] = REDUCE <spec-qual-list> -> <type-spec> <spec-qual-list> 
M [ 238 , DELIM_SEMICOLON ] = REDUCE <spec-qual-list> -> <type-spec> <spec-qual-list> 
M [ 238 , IDENTIFIER ] = REDUCE <spec-qual-list> -> <type-spec> <spec-qual-list> 
M [ 238 , OP_MUL ] = REDUCE <spec-qual-list> -> <type-spec> <spec-qual-list> 
M [ 239 , <enumeration-const> ] = GOTO 82
M [ 239 , <enumerator-list> ] = GOTO 523
M [ 239 , <enumerator> ] = GOTO 84
M [ 239 , IDENTIFIER ] = SHIFT 85
M [ 240 , DELIM_LCURBRACE ] = SHIFT 524
M [ 240 , DELIM_LPAR ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 240 , DELIM_SEMICOLON ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 240 , IDENTIFIER ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 240 , OP_MUL ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 240 , char ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 240 , const ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 240 , double ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 240 , enum ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 240 , float ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 240 , int ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 240 , long ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 240 , short ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 240 , signed ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 240 , struct ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 240 , unsigned ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 240 , void ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 241 , <enum-spec> ] = GOTO 62
M [ 241 , <spec-qual-list> ] = GOTO 63
M [ 241 , <struct-decl> ] = GOTO 233
M [ 241 , <struct-union-spec> ] = GOTO 66
M [ 241 , <struct-union> ] = GOTO 67
M [ 241 , <type-qual> ] = GOTO 68
M [ 241 , <type-spec> ] = GOTO 69
M [ 241 , DELIM_RCURBRACE ] = SHIFT 525
M [ 241 , char ] = SHIFT 70
M [ 241 , const ] = SHIFT 71
M [ 241 , double ] = SHIFT 72
M [ 241 , enum ] = SHIFT 73
M [ 241 , float ] = SHIFT 74
M [ 241 , int ] = SHIFT 75
M [ 241 , long ] = SHIFT 76
M [ 241 , short ] = SHIFT 77
M [ 241 , signed ] = SHIFT 78
M [ 241 , struct ] = SHIFT 21
M [ 241 , unsigned ] = SHIFT 79
M [ 241 , void ] = SHIFT 80
M [ 242 , <additive-expr> ] = GOTO 412
M [ 242 , <and-expr> ] = GOTO 413
M [ 242 , <cast-expr> ] = GOTO 415
M [ 242 , <cond-expr> ] = GOTO 526
M [ 242 , <const-expr> ] = GOTO 527
M [ 242 , <constant> ] = GOTO 528
M [ 242 , <eq-expr> ] = GOTO 421
M [ 242 , <exc-or-expr> ] = GOTO 422
M [ 242 , <inc-or-expr> ] = GOTO 423
M [ 242 , <land-expr> ] = GOTO 426
M [ 242 , <lor-expr> ] = GOTO 427
M [ 242 , <multiplicative-expr> ] = GOTO 428
M [ 242 , <num-const> ] = GOTO 529
M [ 242 , <postfix-expr> ] = GOTO 530
M [ 242 , <prim-expr> ] = GOTO 531
M [ 242 , <rel-expr> ] = GOTO 432
M [ 242 , <shift-expr> ] = GOTO 433
M [ 242 , <unary-expr> ] = GOTO 532
M [ 242 , <unary-op> ] = GOTO 533
M [ 242 , CHAR_CONST ] = SHIFT 534
M [ 242 , DELIM_LPAR ] = SHIFT 535
M [ 242 , FLOAT_CONST ] = SHIFT 536
M [ 242 , IDENTIFIER ] = SHIFT 537
M [ 242 , INT_CONST ] = SHIFT 538
M [ 242 , OP_ADD ] = SHIFT 135
M [ 242 , OP_AND ] = SHIFT 136
M [ 242 , OP_DEC ] = SHIFT 539
M [ 242 , OP_INC ] = SHIFT 540
M [ 242 , OP_LNOT ] = SHIFT 139
M [ 242 , OP_MUL ] = SHIFT 140
M [ 242 , OP_NOT ] = SHIFT 141
M [ 242 , OP_SUB ] = SHIFT 142
M [ 242 , STR_LITERAL ] = SHIFT 541
M [ 242 , sizeof ] = SHIFT 542
M [ 243 , <enumeration-const> ] = GOTO 82
M [ 243 , <enumerator> ] = GOTO 543
M [ 243 , DELIM_RCURBRACE ] = SHIFT 544
M [ 243 , IDENTIFIER ] = SHIFT 85
M [ 244 , DELIM_LPAR ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 244 , DELIM_SEMICOLON ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 244 , IDENTIFIER ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 244 , OP_MUL ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 244 , char ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 244 , const ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 244 , double ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 244 , enum ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 244 , float ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 244 , int ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 244 , long ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 244 , short ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 244 , signed ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 244 , struct ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 244 , typedef ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 244 , unsigned ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 244 , void ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 245 , DELIM_COMMA ] = SHIFT 545
M [ 245 , DELIM_RCURBRACE ] = SHIFT 546
M [ 246 , <decl-spec> ] = GOTO 160
M [ 246 , <enum-spec> ] = GOTO 161
M [ 246 , <identifier-list> ] = GOTO 547
M [ 246 , <param-decl> ] = GOTO 163
M [ 246 , <param-list> ] = GOTO 164
M [ 246 , <param-type-list> ] = GOTO 548
M [ 246 , <storage-class-spec> ] = GOTO 166
M [ 246 , <struct-union-spec> ] = GOTO 167
M [ 246 , <struct-union> ] = GOTO 168
M [ 246 , <type-qual> ] = GOTO 169
M [ 246 , <type-spec> ] = GOTO 170
M [ 246 , DELIM_RPAR ] = SHIFT 549
M [ 246 , IDENTIFIER ] = SHIFT 172
M [ 246 , char ] = SHIFT 173
M [ 246 , const ] = SHIFT 174
M [ 246 , double ] = SHIFT 175
M [ 246 , enum ] = SHIFT 176
M [ 246 , float ] = SHIFT 177
M [ 246 , int ] = SHIFT 178
M [ 246 , long ] = SHIFT 179
M [ 246 , short ] = SHIFT 180
M [ 246 , signed ] = SHIFT 181
M [ 246 , struct ] = SHIFT 21
M [ 246 , typedef ] = SHIFT 182
M [ 246 , unsigned ] = SHIFT 183
M [ 246 , void ] = SHIFT 184
M [ 247 , <additive-expr> ] = GOTO 185
M [ 247 , <and-expr> ] = GOTO 186
M [ 247 , <asn-expr> ] = GOTO 550
M [ 247 , <cast-expr> ] = GOTO 188
M [ 247 , <cond-expr> ] = GOTO 189
M [ 247 , <constant> ] = GOTO 190
M [ 247 , <eq-expr> ] = GOTO 191
M [ 247 , <exc-or-expr> ] = GOTO 192
M [ 247 , <inc-or-expr> ] = GOTO 193
M [ 247 , <land-expr> ] = GOTO 194
M [ 247 , <lor-expr> ] = GOTO 195
M [ 247 , <multiplicative-expr> ] = GOTO 196
M [ 247 , <num-const> ] = GOTO 197
M [ 247 , <postfix-expr> ] = GOTO 198
M [ 247 , <prim-expr> ] = GOTO 199
M [ 247 , <rel-expr> ] = GOTO 200
M [ 247 , <shift-expr> ] = GOTO 201
M [ 247 , <type-qual-list> ] = GOTO 551
M [ 247 , <type-qual> ] = GOTO 203
M [ 247 , <unary-expr> ] = GOTO 204
M [ 247 , <unary-op> ] = GOTO 205
M [ 247 , CHAR_CONST ] = SHIFT 206
M [ 247 , DELIM_LPAR ] = SHIFT 207
M [ 247 , DELIM_RSQBRACKET ] = SHIFT 552
M [ 247 , FLOAT_CONST ] = SHIFT 209
M [ 247 , IDENTIFIER ] = SHIFT 210
M [ 247 , INT_CONST ] = SHIFT 211
M [ 247 , OP_ADD ] = SHIFT 135
M [ 247 , OP_AND ] = SHIFT 136
M [ 247 , OP_DEC ] = SHIFT 212
M [ 247 , OP_INC ] = SHIFT 213
M [ 247 , OP_LNOT ] = SHIFT 139
M [ 247 , OP_MUL ] = SHIFT 140
M [ 247 , OP_NOT ] = SHIFT 141
M [ 247 , OP_SUB ] = SHIFT 142
M [ 247 , STR_LITERAL ] = SHIFT 214
M [ 247 , const ] = SHIFT 215
M [ 247 , sizeof ] = SHIFT 216
M [ 248 , DELIM_LCURBRACE ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 248 , char ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 248 , const ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 248 , double ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 248 , enum ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 248 , float ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 248 , int ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 248 , long ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 248 , short ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 248 , signed ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 248 , struct ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 248 , typedef ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 248 , unsigned ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 248 , void ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 249 , DELIM_COMMA ] = REDUCE <declarator> -> <pointer> <direct-declarator> 
M [ 249 , DELIM_LPAR ] = SHIFT 246
M [ 249 , DELIM_LSQBRACKET ] = SHIFT 247
M [ 249 , DELIM_SEMICOLON ] = REDUCE <declarator> -> <pointer> <direct-declarator> 
M [ 249 , OP_ASN ] = REDUCE <declarator> -> <pointer> <direct-declarator> 
M [ 250 , DELIM_RPAR ] = SHIFT 553
M [ 251 , <cast-expr> ] = GOTO 101
M [ 251 , <constant> ] = GOTO 554
M [ 251 , <multiplicative-expr> ] = GOTO 555
M [ 251 , <num-const> ] = GOTO 556
M [ 251 , <postfix-expr> ] = GOTO 557
M [ 251 , <prim-expr> ] = GOTO 558
M [ 251 , <unary-expr> ] = GOTO 559
M [ 251 , <unary-op> ] = GOTO 560
M [ 251 , CHAR_CONST ] = SHIFT 561
M [ 251 , DELIM_LPAR ] = SHIFT 562
M [ 251 , FLOAT_CONST ] = SHIFT 563
M [ 251 , IDENTIFIER ] = SHIFT 564
M [ 251 , INT_CONST ] = SHIFT 565
M [ 251 , OP_ADD ] = SHIFT 135
M [ 251 , OP_AND ] = SHIFT 136
M [ 251 , OP_DEC ] = SHIFT 566
M [ 251 , OP_INC ] = SHIFT 567
M [ 251 , OP_LNOT ] = SHIFT 139
M [ 251 , OP_MUL ] = SHIFT 140
M [ 251 , OP_NOT ] = SHIFT 141
M [ 251 , OP_SUB ] = SHIFT 142
M [ 251 , STR_LITERAL ] = SHIFT 568
M [ 251 , sizeof ] = SHIFT 569
M [ 252 , <cast-expr> ] = GOTO 101
M [ 252 , <constant> ] = GOTO 554
M [ 252 , <multiplicative-expr> ] = GOTO 570
M [ 252 , <num-const> ] = GOTO 556
M [ 252 , <postfix-expr> ] = GOTO 557
M [ 252 , <prim-expr> ] = GOTO 558
M [ 252 , <unary-expr> ] = GOTO 559
M [ 252 , <unary-op> ] = GOTO 560
M [ 252 , CHAR_CONST ] = SHIFT 561
M [ 252 , DELIM_LPAR ] = SHIFT 562
M [ 252 , FLOAT_CONST ] = SHIFT 563
M [ 252 , IDENTIFIER ] = SHIFT 564
M [ 252 , INT_CONST ] = SHIFT 565
M [ 252 , OP_ADD ] = SHIFT 135
M [ 252 , OP_AND ] = SHIFT 136
M [ 252 , OP_DEC ] = SHIFT 566
M [ 252 , OP_INC ] = SHIFT 567
M [ 252 , OP_LNOT ] = SHIFT 139
M [ 252 , OP_MUL ] = SHIFT 140
M [ 252 , OP_NOT ] = SHIFT 141
M [ 252 , OP_SUB ] = SHIFT 142
M [ 252 , STR_LITERAL ] = SHIFT 568
M [ 252 , sizeof ] = SHIFT 569
M [ 253 , <additive-expr> ] = GOTO 96
M [ 253 , <cast-expr> ] = GOTO 101
M [ 253 , <constant> ] = GOTO 554
M [ 253 , <eq-expr> ] = GOTO 571
M [ 253 , <multiplicative-expr> ] = GOTO 117
M [ 253 , <num-const> ] = GOTO 556
M [ 253 , <postfix-expr> ] = GOTO 557
M [ 253 , <prim-expr> ] = GOTO 558
M [ 253 , <rel-expr> ] = GOTO 121
M [ 253 , <shift-expr> ] = GOTO 123
M [ 253 , <unary-expr> ] = GOTO 559
M [ 253 , <unary-op> ] = GOTO 560
M [ 253 , CHAR_CONST ] = SHIFT 561
M [ 253 , DELIM_LPAR ] = SHIFT 562
M [ 253 , FLOAT_CONST ] = SHIFT 563
M [ 253 , IDENTIFIER ] = SHIFT 564
M [ 253 , INT_CONST ] = SHIFT 565
M [ 253 , OP_ADD ] = SHIFT 135
M [ 253 , OP_AND ] = SHIFT 136
M [ 253 , OP_DEC ] = SHIFT 566
M [ 253 , OP_INC ] = SHIFT 567
M [ 253 , OP_LNOT ] = SHIFT 139
M [ 253 , OP_MUL ] = SHIFT 140
M [ 253 , OP_NOT ] = SHIFT 141
M [ 253 , OP_SUB ] = SHIFT 142
M [ 253 , STR_LITERAL ] = SHIFT 568
M [ 253 , sizeof ] = SHIFT 569
M [ 254 , CHAR_CONST ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , DELIM_LCURBRACE ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , DELIM_LPAR ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , DELIM_RCURBRACE ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , DELIM_SEMICOLON ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , FLOAT_CONST ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , IDENTIFIER ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , INT_CONST ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , OP_ADD ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , OP_AND ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , OP_DEC ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , OP_INC ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , OP_LNOT ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , OP_MUL ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , OP_NOT ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , OP_SUB ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , STR_LITERAL ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , break ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , case ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , char ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , const ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , continue ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , default ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , do ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , double ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , enum ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , float ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , for ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , goto ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , if ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , int ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , long ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , return ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , short ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , signed ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , sizeof ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , struct ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , switch ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , typedef ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , unsigned ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , void ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 254 , while ] = REDUCE <blk-item-list> -> <blk-item-list> <blk-item> 
M [ 255 , (EOF) ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 255 , char ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 255 , const ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 255 , double ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 255 , enum ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 255 , float ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 255 , int ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 255 , long ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 255 , short ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 255 , signed ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 255 , struct ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 255 , typedef ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 255 , unsigned ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 255 , void ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 256 , DELIM_COMMA ] = SHIFT 50
M [ 256 , DELIM_SEMICOLON ] = SHIFT 572
M [ 257 , CHAR_CONST ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , DELIM_LCURBRACE ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , DELIM_LPAR ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , DELIM_RCURBRACE ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , DELIM_SEMICOLON ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , FLOAT_CONST ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , IDENTIFIER ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , INT_CONST ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , OP_ADD ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , OP_AND ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , OP_DEC ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , OP_INC ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , OP_LNOT ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , OP_MUL ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , OP_NOT ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , OP_SUB ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , STR_LITERAL ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , break ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , case ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , char ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , const ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , continue ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , default ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , do ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , double ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , enum ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , float ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , for ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , goto ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , if ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , int ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , long ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , return ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , short ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , signed ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , sizeof ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , struct ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , switch ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , typedef ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , unsigned ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , void ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 257 , while ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 258 , <additive-expr> ] = GOTO 96
M [ 258 , <cast-expr> ] = GOTO 101
M [ 258 , <constant> ] = GOTO 554
M [ 258 , <multiplicative-expr> ] = GOTO 117
M [ 258 , <num-const> ] = GOTO 556
M [ 258 , <postfix-expr> ] = GOTO 557
M [ 258 , <prim-expr> ] = GOTO 558
M [ 258 , <rel-expr> ] = GOTO 573
M [ 258 , <shift-expr> ] = GOTO 123
M [ 258 , <unary-expr> ] = GOTO 559
M [ 258 , <unary-op> ] = GOTO 560
M [ 258 , CHAR_CONST ] = SHIFT 561
M [ 258 , DELIM_LPAR ] = SHIFT 562
M [ 258 , FLOAT_CONST ] = SHIFT 563
M [ 258 , IDENTIFIER ] = SHIFT 564
M [ 258 , INT_CONST ] = SHIFT 565
M [ 258 , OP_ADD ] = SHIFT 135
M [ 258 , OP_AND ] = SHIFT 136
M [ 258 , OP_DEC ] = SHIFT 566
M [ 258 , OP_INC ] = SHIFT 567
M [ 258 , OP_LNOT ] = SHIFT 139
M [ 258 , OP_MUL ] = SHIFT 140
M [ 258 , OP_NOT ] = SHIFT 141
M [ 258 , OP_SUB ] = SHIFT 142
M [ 258 , STR_LITERAL ] = SHIFT 568
M [ 258 , sizeof ] = SHIFT 569
M [ 259 , <additive-expr> ] = GOTO 96
M [ 259 , <cast-expr> ] = GOTO 101
M [ 259 , <constant> ] = GOTO 554
M [ 259 , <multiplicative-expr> ] = GOTO 117
M [ 259 , <num-const> ] = GOTO 556
M [ 259 , <postfix-expr> ] = GOTO 557
M [ 259 , <prim-expr> ] = GOTO 558
M [ 259 , <rel-expr> ] = GOTO 574
M [ 259 , <shift-expr> ] = GOTO 123
M [ 259 , <unary-expr> ] = GOTO 559
M [ 259 , <unary-op> ] = GOTO 560
M [ 259 , CHAR_CONST ] = SHIFT 561
M [ 259 , DELIM_LPAR ] = SHIFT 562
M [ 259 , FLOAT_CONST ] = SHIFT 563
M [ 259 , IDENTIFIER ] = SHIFT 564
M [ 259 , INT_CONST ] = SHIFT 565
M [ 259 , OP_ADD ] = SHIFT 135
M [ 259 , OP_AND ] = SHIFT 136
M [ 259 , OP_DEC ] = SHIFT 566
M [ 259 , OP_INC ] = SHIFT 567
M [ 259 , OP_LNOT ] = SHIFT 139
M [ 259 , OP_MUL ] = SHIFT 140
M [ 259 , OP_NOT ] = SHIFT 141
M [ 259 , OP_SUB ] = SHIFT 142
M [ 259 , STR_LITERAL ] = SHIFT 568
M [ 259 , sizeof ] = SHIFT 569
M [ 260 , <additive-expr> ] = GOTO 96
M [ 260 , <and-expr> ] = GOTO 575
M [ 260 , <cast-expr> ] = GOTO 101
M [ 260 , <constant> ] = GOTO 554
M [ 260 , <eq-expr> ] = GOTO 107
M [ 260 , <multiplicative-expr> ] = GOTO 117
M [ 260 , <num-const> ] = GOTO 556
M [ 260 , <postfix-expr> ] = GOTO 557
M [ 260 , <prim-expr> ] = GOTO 558
M [ 260 , <rel-expr> ] = GOTO 121
M [ 260 , <shift-expr> ] = GOTO 123
M [ 260 , <unary-expr> ] = GOTO 559
M [ 260 , <unary-op> ] = GOTO 560
M [ 260 , CHAR_CONST ] = SHIFT 561
M [ 260 , DELIM_LPAR ] = SHIFT 562
M [ 260 , FLOAT_CONST ] = SHIFT 563
M [ 260 , IDENTIFIER ] = SHIFT 564
M [ 260 , INT_CONST ] = SHIFT 565
M [ 260 , OP_ADD ] = SHIFT 135
M [ 260 , OP_AND ] = SHIFT 136
M [ 260 , OP_DEC ] = SHIFT 566
M [ 260 , OP_INC ] = SHIFT 567
M [ 260 , OP_LNOT ] = SHIFT 139
M [ 260 , OP_MUL ] = SHIFT 140
M [ 260 , OP_NOT ] = SHIFT 141
M [ 260 , OP_SUB ] = SHIFT 142
M [ 260 , STR_LITERAL ] = SHIFT 568
M [ 260 , sizeof ] = SHIFT 569
M [ 261 , <additive-expr> ] = GOTO 96
M [ 261 , <and-expr> ] = GOTO 97
M [ 261 , <asn-expr> ] = GOTO 576
M [ 261 , <cast-expr> ] = GOTO 101
M [ 261 , <cond-expr> ] = GOTO 103
M [ 261 , <constant> ] = GOTO 104
M [ 261 , <eq-expr> ] = GOTO 107
M [ 261 , <exc-or-expr> ] = GOTO 108
M [ 261 , <inc-or-expr> ] = GOTO 111
M [ 261 , <land-expr> ] = GOTO 115
M [ 261 , <lor-expr> ] = GOTO 116
M [ 261 , <multiplicative-expr> ] = GOTO 117
M [ 261 , <num-const> ] = GOTO 118
M [ 261 , <postfix-expr> ] = GOTO 119
M [ 261 , <prim-expr> ] = GOTO 120
M [ 261 , <rel-expr> ] = GOTO 121
M [ 261 , <shift-expr> ] = GOTO 123
M [ 261 , <unary-expr> ] = GOTO 125
M [ 261 , <unary-op> ] = GOTO 126
M [ 261 , CHAR_CONST ] = SHIFT 127
M [ 261 , DELIM_LPAR ] = SHIFT 129
M [ 261 , FLOAT_CONST ] = SHIFT 132
M [ 261 , IDENTIFIER ] = SHIFT 159
M [ 261 , INT_CONST ] = SHIFT 134
M [ 261 , OP_ADD ] = SHIFT 135
M [ 261 , OP_AND ] = SHIFT 136
M [ 261 , OP_DEC ] = SHIFT 137
M [ 261 , OP_INC ] = SHIFT 138
M [ 261 , OP_LNOT ] = SHIFT 139
M [ 261 , OP_MUL ] = SHIFT 140
M [ 261 , OP_NOT ] = SHIFT 141
M [ 261 , OP_SUB ] = SHIFT 142
M [ 261 , STR_LITERAL ] = SHIFT 143
M [ 261 , sizeof ] = SHIFT 153
M [ 262 , CHAR_CONST ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , DELIM_LCURBRACE ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , DELIM_LPAR ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , DELIM_RCURBRACE ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , DELIM_SEMICOLON ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , FLOAT_CONST ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , IDENTIFIER ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , INT_CONST ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , OP_ADD ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , OP_AND ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , OP_DEC ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , OP_INC ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , OP_LNOT ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , OP_MUL ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , OP_NOT ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , OP_SUB ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , STR_LITERAL ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , break ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , case ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , char ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , const ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , continue ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , default ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , do ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , double ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , enum ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , float ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , for ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , goto ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , if ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , int ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , long ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , return ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , short ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , signed ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , sizeof ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , struct ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , switch ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , typedef ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , unsigned ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , void ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 262 , while ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 263 , <additive-expr> ] = GOTO 96
M [ 263 , <and-expr> ] = GOTO 97
M [ 263 , <cast-expr> ] = GOTO 101
M [ 263 , <constant> ] = GOTO 554
M [ 263 , <eq-expr> ] = GOTO 107
M [ 263 , <exc-or-expr> ] = GOTO 577
M [ 263 , <multiplicative-expr> ] = GOTO 117
M [ 263 , <num-const> ] = GOTO 556
M [ 263 , <postfix-expr> ] = GOTO 557
M [ 263 , <prim-expr> ] = GOTO 558
M [ 263 , <rel-expr> ] = GOTO 121
M [ 263 , <shift-expr> ] = GOTO 123
M [ 263 , <unary-expr> ] = GOTO 559
M [ 263 , <unary-op> ] = GOTO 560
M [ 263 , CHAR_CONST ] = SHIFT 561
M [ 263 , DELIM_LPAR ] = SHIFT 562
M [ 263 , FLOAT_CONST ] = SHIFT 563
M [ 263 , IDENTIFIER ] = SHIFT 564
M [ 263 , INT_CONST ] = SHIFT 565
M [ 263 , OP_ADD ] = SHIFT 135
M [ 263 , OP_AND ] = SHIFT 136
M [ 263 , OP_DEC ] = SHIFT 566
M [ 263 , OP_INC ] = SHIFT 567
M [ 263 , OP_LNOT ] = SHIFT 139
M [ 263 , OP_MUL ] = SHIFT 140
M [ 263 , OP_NOT ] = SHIFT 141
M [ 263 , OP_SUB ] = SHIFT 142
M [ 263 , STR_LITERAL ] = SHIFT 568
M [ 263 , sizeof ] = SHIFT 569
M [ 264 , <additive-expr> ] = GOTO 96
M [ 264 , <and-expr> ] = GOTO 97
M [ 264 , <cast-expr> ] = GOTO 101
M [ 264 , <constant> ] = GOTO 554
M [ 264 , <eq-expr> ] = GOTO 107
M [ 264 , <exc-or-expr> ] = GOTO 108
M [ 264 , <inc-or-expr> ] = GOTO 578
M [ 264 , <multiplicative-expr> ] = GOTO 117
M [ 264 , <num-const> ] = GOTO 556
M [ 264 , <postfix-expr> ] = GOTO 557
M [ 264 , <prim-expr> ] = GOTO 558
M [ 264 , <rel-expr> ] = GOTO 121
M [ 264 , <shift-expr> ] = GOTO 123
M [ 264 , <unary-expr> ] = GOTO 559
M [ 264 , <unary-op> ] = GOTO 560
M [ 264 , CHAR_CONST ] = SHIFT 561
M [ 264 , DELIM_LPAR ] = SHIFT 562
M [ 264 , FLOAT_CONST ] = SHIFT 563
M [ 264 , IDENTIFIER ] = SHIFT 564
M [ 264 , INT_CONST ] = SHIFT 565
M [ 264 , OP_ADD ] = SHIFT 135
M [ 264 , OP_AND ] = SHIFT 136
M [ 264 , OP_DEC ] = SHIFT 566
M [ 264 , OP_INC ] = SHIFT 567
M [ 264 , OP_LNOT ] = SHIFT 139
M [ 264 , OP_MUL ] = SHIFT 140
M [ 264 , OP_NOT ] = SHIFT 141
M [ 264 , OP_SUB ] = SHIFT 142
M [ 264 , STR_LITERAL ] = SHIFT 568
M [ 264 , sizeof ] = SHIFT 569
M [ 265 , <additive-expr> ] = GOTO 579
M [ 265 , <and-expr> ] = GOTO 580
M [ 265 , <asn-expr> ] = GOTO 581
M [ 265 , <cast-expr> ] = GOTO 582
M [ 265 , <cond-expr> ] = GOTO 583
M [ 265 , <constant> ] = GOTO 584
M [ 265 , <eq-expr> ] = GOTO 585
M [ 265 , <exc-or-expr> ] = GOTO 586
M [ 265 , <expr> ] = GOTO 587
M [ 265 , <inc-or-expr> ] = GOTO 588
M [ 265 , <land-expr> ] = GOTO 589
M [ 265 , <lor-expr> ] = GOTO 590
M [ 265 , <multiplicative-expr> ] = GOTO 591
M [ 265 , <num-const> ] = GOTO 592
M [ 265 , <postfix-expr> ] = GOTO 593
M [ 265 , <prim-expr> ] = GOTO 594
M [ 265 , <rel-expr> ] = GOTO 595
M [ 265 , <shift-expr> ] = GOTO 596
M [ 265 , <unary-expr> ] = GOTO 597
M [ 265 , <unary-op> ] = GOTO 598
M [ 265 , CHAR_CONST ] = SHIFT 599
M [ 265 , DELIM_LPAR ] = SHIFT 600
M [ 265 , FLOAT_CONST ] = SHIFT 601
M [ 265 , IDENTIFIER ] = SHIFT 602
M [ 265 , INT_CONST ] = SHIFT 603
M [ 265 , OP_ADD ] = SHIFT 135
M [ 265 , OP_AND ] = SHIFT 136
M [ 265 , OP_DEC ] = SHIFT 604
M [ 265 , OP_INC ] = SHIFT 605
M [ 265 , OP_LNOT ] = SHIFT 139
M [ 265 , OP_MUL ] = SHIFT 140
M [ 265 , OP_NOT ] = SHIFT 141
M [ 265 , OP_SUB ] = SHIFT 142
M [ 265 , STR_LITERAL ] = SHIFT 606
M [ 265 , sizeof ] = SHIFT 607
M [ 266 , <additive-expr> ] = GOTO 96
M [ 266 , <and-expr> ] = GOTO 97
M [ 266 , <cast-expr> ] = GOTO 101
M [ 266 , <constant> ] = GOTO 554
M [ 266 , <eq-expr> ] = GOTO 107
M [ 266 , <exc-or-expr> ] = GOTO 108
M [ 266 , <inc-or-expr> ] = GOTO 111
M [ 266 , <land-expr> ] = GOTO 608
M [ 266 , <multiplicative-expr> ] = GOTO 117
M [ 266 , <num-const> ] = GOTO 556
M [ 266 , <postfix-expr> ] = GOTO 557
M [ 266 , <prim-expr> ] = GOTO 558
M [ 266 , <rel-expr> ] = GOTO 121
M [ 266 , <shift-expr> ] = GOTO 123
M [ 266 , <unary-expr> ] = GOTO 559
M [ 266 , <unary-op> ] = GOTO 560
M [ 266 , CHAR_CONST ] = SHIFT 561
M [ 266 , DELIM_LPAR ] = SHIFT 562
M [ 266 , FLOAT_CONST ] = SHIFT 563
M [ 266 , IDENTIFIER ] = SHIFT 564
M [ 266 , INT_CONST ] = SHIFT 565
M [ 266 , OP_ADD ] = SHIFT 135
M [ 266 , OP_AND ] = SHIFT 136
M [ 266 , OP_DEC ] = SHIFT 566
M [ 266 , OP_INC ] = SHIFT 567
M [ 266 , OP_LNOT ] = SHIFT 139
M [ 266 , OP_MUL ] = SHIFT 140
M [ 266 , OP_NOT ] = SHIFT 141
M [ 266 , OP_SUB ] = SHIFT 142
M [ 266 , STR_LITERAL ] = SHIFT 568
M [ 266 , sizeof ] = SHIFT 569
M [ 267 , <cast-expr> ] = GOTO 609
M [ 267 , <constant> ] = GOTO 554
M [ 267 , <num-const> ] = GOTO 556
M [ 267 , <postfix-expr> ] = GOTO 557
M [ 267 , <prim-expr> ] = GOTO 558
M [ 267 , <unary-expr> ] = GOTO 559
M [ 267 , <unary-op> ] = GOTO 560
M [ 267 , CHAR_CONST ] = SHIFT 561
M [ 267 , DELIM_LPAR ] = SHIFT 562
M [ 267 , FLOAT_CONST ] = SHIFT 563
M [ 267 , IDENTIFIER ] = SHIFT 564
M [ 267 , INT_CONST ] = SHIFT 565
M [ 267 , OP_ADD ] = SHIFT 135
M [ 267 , OP_AND ] = SHIFT 136
M [ 267 , OP_DEC ] = SHIFT 566
M [ 267 , OP_INC ] = SHIFT 567
M [ 267 , OP_LNOT ] = SHIFT 139
M [ 267 , OP_MUL ] = SHIFT 140
M [ 267 , OP_NOT ] = SHIFT 141
M [ 267 , OP_SUB ] = SHIFT 142
M [ 267 , STR_LITERAL ] = SHIFT 568
M [ 267 , sizeof ] = SHIFT 569
M [ 268 , <cast-expr> ] = GOTO 610
M [ 268 , <constant> ] = GOTO 554
M [ 268 , <num-const> ] = GOTO 556
M [ 268 , <postfix-expr> ] = GOTO 557
M [ 268 , <prim-expr> ] = GOTO 558
M [ 268 , <unary-expr> ] = GOTO 559
M [ 268 , <unary-op> ] = GOTO 560
M [ 268 , CHAR_CONST ] = SHIFT 561
M [ 268 , DELIM_LPAR ] = SHIFT 562
M [ 268 , FLOAT_CONST ] = SHIFT 563
M [ 268 , IDENTIFIER ] = SHIFT 564
M [ 268 , INT_CONST ] = SHIFT 565
M [ 268 , OP_ADD ] = SHIFT 135
M [ 268 , OP_AND ] = SHIFT 136
M [ 268 , OP_DEC ] = SHIFT 566
M [ 268 , OP_INC ] = SHIFT 567
M [ 268 , OP_LNOT ] = SHIFT 139
M [ 268 , OP_MUL ] = SHIFT 140
M [ 268 , OP_NOT ] = SHIFT 141
M [ 268 , OP_SUB ] = SHIFT 142
M [ 268 , STR_LITERAL ] = SHIFT 568
M [ 268 , sizeof ] = SHIFT 569
M [ 269 , <cast-expr> ] = GOTO 611
M [ 269 , <constant> ] = GOTO 554
M [ 269 , <num-const> ] = GOTO 556
M [ 269 , <postfix-expr> ] = GOTO 557
M [ 269 , <prim-expr> ] = GOTO 558
M [ 269 , <unary-expr> ] = GOTO 559
M [ 269 , <unary-op> ] = GOTO 560
M [ 269 , CHAR_CONST ] = SHIFT 561
M [ 269 , DELIM_LPAR ] = SHIFT 562
M [ 269 , FLOAT_CONST ] = SHIFT 563
M [ 269 , IDENTIFIER ] = SHIFT 564
M [ 269 , INT_CONST ] = SHIFT 565
M [ 269 , OP_ADD ] = SHIFT 135
M [ 269 , OP_AND ] = SHIFT 136
M [ 269 , OP_DEC ] = SHIFT 566
M [ 269 , OP_INC ] = SHIFT 567
M [ 269 , OP_LNOT ] = SHIFT 139
M [ 269 , OP_MUL ] = SHIFT 140
M [ 269 , OP_NOT ] = SHIFT 141
M [ 269 , OP_SUB ] = SHIFT 142
M [ 269 , STR_LITERAL ] = SHIFT 568
M [ 269 , sizeof ] = SHIFT 569
M [ 270 , <additive-expr> ] = GOTO 299
M [ 270 , <and-expr> ] = GOTO 300
M [ 270 , <arg-expr-list> ] = GOTO 612
M [ 270 , <asn-expr> ] = GOTO 613
M [ 270 , <cast-expr> ] = GOTO 302
M [ 270 , <cond-expr> ] = GOTO 303
M [ 270 , <constant> ] = GOTO 304
M [ 270 , <eq-expr> ] = GOTO 306
M [ 270 , <exc-or-expr> ] = GOTO 307
M [ 270 , <inc-or-expr> ] = GOTO 309
M [ 270 , <land-expr> ] = GOTO 310
M [ 270 , <lor-expr> ] = GOTO 311
M [ 270 , <multiplicative-expr> ] = GOTO 312
M [ 270 , <num-const> ] = GOTO 313
M [ 270 , <postfix-expr> ] = GOTO 314
M [ 270 , <prim-expr> ] = GOTO 315
M [ 270 , <rel-expr> ] = GOTO 316
M [ 270 , <shift-expr> ] = GOTO 317
M [ 270 , <unary-expr> ] = GOTO 324
M [ 270 , <unary-op> ] = GOTO 325
M [ 270 , CHAR_CONST ] = SHIFT 326
M [ 270 , DELIM_LPAR ] = SHIFT 327
M [ 270 , DELIM_RPAR ] = SHIFT 614
M [ 270 , FLOAT_CONST ] = SHIFT 328
M [ 270 , IDENTIFIER ] = SHIFT 329
M [ 270 , INT_CONST ] = SHIFT 330
M [ 270 , OP_ADD ] = SHIFT 135
M [ 270 , OP_AND ] = SHIFT 136
M [ 270 , OP_DEC ] = SHIFT 331
M [ 270 , OP_INC ] = SHIFT 332
M [ 270 , OP_LNOT ] = SHIFT 139
M [ 270 , OP_MUL ] = SHIFT 140
M [ 270 , OP_NOT ] = SHIFT 141
M [ 270 , OP_SUB ] = SHIFT 142
M [ 270 , STR_LITERAL ] = SHIFT 333
M [ 270 , sizeof ] = SHIFT 343
M [ 271 , <additive-expr> ] = GOTO 615
M [ 271 , <and-expr> ] = GOTO 616
M [ 271 , <asn-expr> ] = GOTO 617
M [ 271 , <cast-expr> ] = GOTO 618
M [ 271 , <cond-expr> ] = GOTO 619
M [ 271 , <constant> ] = GOTO 620
M [ 271 , <eq-expr> ] = GOTO 621
M [ 271 , <exc-or-expr> ] = GOTO 622
M [ 271 , <expr> ] = GOTO 623
M [ 271 , <inc-or-expr> ] = GOTO 624
M [ 271 , <land-expr> ] = GOTO 625
M [ 271 , <lor-expr> ] = GOTO 626
M [ 271 , <multiplicative-expr> ] = GOTO 627
M [ 271 , <num-const> ] = GOTO 628
M [ 271 , <postfix-expr> ] = GOTO 629
M [ 271 , <prim-expr> ] = GOTO 630
M [ 271 , <rel-expr> ] = GOTO 631
M [ 271 , <shift-expr> ] = GOTO 632
M [ 271 , <unary-expr> ] = GOTO 633
M [ 271 , <unary-op> ] = GOTO 634
M [ 271 , CHAR_CONST ] = SHIFT 635
M [ 271 , DELIM_LPAR ] = SHIFT 636
M [ 271 , FLOAT_CONST ] = SHIFT 637
M [ 271 , IDENTIFIER ] = SHIFT 638
M [ 271 , INT_CONST ] = SHIFT 639
M [ 271 , OP_ADD ] = SHIFT 135
M [ 271 , OP_AND ] = SHIFT 136
M [ 271 , OP_DEC ] = SHIFT 640
M [ 271 , OP_INC ] = SHIFT 641
M [ 271 , OP_LNOT ] = SHIFT 139
M [ 271 , OP_MUL ] = SHIFT 140
M [ 271 , OP_NOT ] = SHIFT 141
M [ 271 , OP_SUB ] = SHIFT 142
M [ 271 , STR_LITERAL ] = SHIFT 642
M [ 271 , sizeof ] = SHIFT 643
M [ 272 , IDENTIFIER ] = SHIFT 644
M [ 273 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , DELIM_SEMICOLON ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 273 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 274 , IDENTIFIER ] = SHIFT 645
M [ 275 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , DELIM_SEMICOLON ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 275 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 276 , <additive-expr> ] = GOTO 96
M [ 276 , <cast-expr> ] = GOTO 101
M [ 276 , <constant> ] = GOTO 554
M [ 276 , <multiplicative-expr> ] = GOTO 117
M [ 276 , <num-const> ] = GOTO 556
M [ 276 , <postfix-expr> ] = GOTO 557
M [ 276 , <prim-expr> ] = GOTO 558
M [ 276 , <shift-expr> ] = GOTO 646
M [ 276 , <unary-expr> ] = GOTO 559
M [ 276 , <unary-op> ] = GOTO 560
M [ 276 , CHAR_CONST ] = SHIFT 561
M [ 276 , DELIM_LPAR ] = SHIFT 562
M [ 276 , FLOAT_CONST ] = SHIFT 563
M [ 276 , IDENTIFIER ] = SHIFT 564
M [ 276 , INT_CONST ] = SHIFT 565
M [ 276 , OP_ADD ] = SHIFT 135
M [ 276 , OP_AND ] = SHIFT 136
M [ 276 , OP_DEC ] = SHIFT 566
M [ 276 , OP_INC ] = SHIFT 567
M [ 276 , OP_LNOT ] = SHIFT 139
M [ 276 , OP_MUL ] = SHIFT 140
M [ 276 , OP_NOT ] = SHIFT 141
M [ 276 , OP_SUB ] = SHIFT 142
M [ 276 , STR_LITERAL ] = SHIFT 568
M [ 276 , sizeof ] = SHIFT 569
M [ 277 , <additive-expr> ] = GOTO 96
M [ 277 , <cast-expr> ] = GOTO 101
M [ 277 , <constant> ] = GOTO 554
M [ 277 , <multiplicative-expr> ] = GOTO 117
M [ 277 , <num-const> ] = GOTO 556
M [ 277 , <postfix-expr> ] = GOTO 557
M [ 277 , <prim-expr> ] = GOTO 558
M [ 277 , <shift-expr> ] = GOTO 647
M [ 277 , <unary-expr> ] = GOTO 559
M [ 277 , <unary-op> ] = GOTO 560
M [ 277 , CHAR_CONST ] = SHIFT 561
M [ 277 , DELIM_LPAR ] = SHIFT 562
M [ 277 , FLOAT_CONST ] = SHIFT 563
M [ 277 , IDENTIFIER ] = SHIFT 564
M [ 277 , INT_CONST ] = SHIFT 565
M [ 277 , OP_ADD ] = SHIFT 135
M [ 277 , OP_AND ] = SHIFT 136
M [ 277 , OP_DEC ] = SHIFT 566
M [ 277 , OP_INC ] = SHIFT 567
M [ 277 , OP_LNOT ] = SHIFT 139
M [ 277 , OP_MUL ] = SHIFT 140
M [ 277 , OP_NOT ] = SHIFT 141
M [ 277 , OP_SUB ] = SHIFT 142
M [ 277 , STR_LITERAL ] = SHIFT 568
M [ 277 , sizeof ] = SHIFT 569
M [ 278 , <additive-expr> ] = GOTO 96
M [ 278 , <cast-expr> ] = GOTO 101
M [ 278 , <constant> ] = GOTO 554
M [ 278 , <multiplicative-expr> ] = GOTO 117
M [ 278 , <num-const> ] = GOTO 556
M [ 278 , <postfix-expr> ] = GOTO 557
M [ 278 , <prim-expr> ] = GOTO 558
M [ 278 , <shift-expr> ] = GOTO 648
M [ 278 , <unary-expr> ] = GOTO 559
M [ 278 , <unary-op> ] = GOTO 560
M [ 278 , CHAR_CONST ] = SHIFT 561
M [ 278 , DELIM_LPAR ] = SHIFT 562
M [ 278 , FLOAT_CONST ] = SHIFT 563
M [ 278 , IDENTIFIER ] = SHIFT 564
M [ 278 , INT_CONST ] = SHIFT 565
M [ 278 , OP_ADD ] = SHIFT 135
M [ 278 , OP_AND ] = SHIFT 136
M [ 278 , OP_DEC ] = SHIFT 566
M [ 278 , OP_INC ] = SHIFT 567
M [ 278 , OP_LNOT ] = SHIFT 139
M [ 278 , OP_MUL ] = SHIFT 140
M [ 278 , OP_NOT ] = SHIFT 141
M [ 278 , OP_SUB ] = SHIFT 142
M [ 278 , STR_LITERAL ] = SHIFT 568
M [ 278 , sizeof ] = SHIFT 569
M [ 279 , <additive-expr> ] = GOTO 96
M [ 279 , <cast-expr> ] = GOTO 101
M [ 279 , <constant> ] = GOTO 554
M [ 279 , <multiplicative-expr> ] = GOTO 117
M [ 279 , <num-const> ] = GOTO 556
M [ 279 , <postfix-expr> ] = GOTO 557
M [ 279 , <prim-expr> ] = GOTO 558
M [ 279 , <shift-expr> ] = GOTO 649
M [ 279 , <unary-expr> ] = GOTO 559
M [ 279 , <unary-op> ] = GOTO 560
M [ 279 , CHAR_CONST ] = SHIFT 561
M [ 279 , DELIM_LPAR ] = SHIFT 562
M [ 279 , FLOAT_CONST ] = SHIFT 563
M [ 279 , IDENTIFIER ] = SHIFT 564
M [ 279 , INT_CONST ] = SHIFT 565
M [ 279 , OP_ADD ] = SHIFT 135
M [ 279 , OP_AND ] = SHIFT 136
M [ 279 , OP_DEC ] = SHIFT 566
M [ 279 , OP_INC ] = SHIFT 567
M [ 279 , OP_LNOT ] = SHIFT 139
M [ 279 , OP_MUL ] = SHIFT 140
M [ 279 , OP_NOT ] = SHIFT 141
M [ 279 , OP_SUB ] = SHIFT 142
M [ 279 , STR_LITERAL ] = SHIFT 568
M [ 279 , sizeof ] = SHIFT 569
M [ 280 , <additive-expr> ] = GOTO 650
M [ 280 , <cast-expr> ] = GOTO 101
M [ 280 , <constant> ] = GOTO 554
M [ 280 , <multiplicative-expr> ] = GOTO 117
M [ 280 , <num-const> ] = GOTO 556
M [ 280 , <postfix-expr> ] = GOTO 557
M [ 280 , <prim-expr> ] = GOTO 558
M [ 280 , <unary-expr> ] = GOTO 559
M [ 280 , <unary-op> ] = GOTO 560
M [ 280 , CHAR_CONST ] = SHIFT 561
M [ 280 , DELIM_LPAR ] = SHIFT 562
M [ 280 , FLOAT_CONST ] = SHIFT 563
M [ 280 , IDENTIFIER ] = SHIFT 564
M [ 280 , INT_CONST ] = SHIFT 565
M [ 280 , OP_ADD ] = SHIFT 135
M [ 280 , OP_AND ] = SHIFT 136
M [ 280 , OP_DEC ] = SHIFT 566
M [ 280 , OP_INC ] = SHIFT 567
M [ 280 , OP_LNOT ] = SHIFT 139
M [ 280 , OP_MUL ] = SHIFT 140
M [ 280 , OP_NOT ] = SHIFT 141
M [ 280 , OP_SUB ] = SHIFT 142
M [ 280 , STR_LITERAL ] = SHIFT 568
M [ 280 , sizeof ] = SHIFT 569
M [ 281 , <additive-expr> ] = GOTO 651
M [ 281 , <cast-expr> ] = GOTO 101
M [ 281 , <constant> ] = GOTO 554
M [ 281 , <multiplicative-expr> ] = GOTO 117
M [ 281 , <num-const> ] = GOTO 556
M [ 281 , <postfix-expr> ] = GOTO 557
M [ 281 , <prim-expr> ] = GOTO 558
M [ 281 , <unary-expr> ] = GOTO 559
M [ 281 , <unary-op> ] = GOTO 560
M [ 281 , CHAR_CONST ] = SHIFT 561
M [ 281 , DELIM_LPAR ] = SHIFT 562
M [ 281 , FLOAT_CONST ] = SHIFT 563
M [ 281 , IDENTIFIER ] = SHIFT 564
M [ 281 , INT_CONST ] = SHIFT 565
M [ 281 , OP_ADD ] = SHIFT 135
M [ 281 , OP_AND ] = SHIFT 136
M [ 281 , OP_DEC ] = SHIFT 566
M [ 281 , OP_INC ] = SHIFT 567
M [ 281 , OP_LNOT ] = SHIFT 139
M [ 281 , OP_MUL ] = SHIFT 140
M [ 281 , OP_NOT ] = SHIFT 141
M [ 281 , OP_SUB ] = SHIFT 142
M [ 281 , STR_LITERAL ] = SHIFT 568
M [ 281 , sizeof ] = SHIFT 569
M [ 282 , <additive-expr> ] = GOTO 96
M [ 282 , <and-expr> ] = GOTO 97
M [ 282 , <asn-expr> ] = GOTO 652
M [ 282 , <cast-expr> ] = GOTO 101
M [ 282 , <cond-expr> ] = GOTO 103
M [ 282 , <constant> ] = GOTO 104
M [ 282 , <eq-expr> ] = GOTO 107
M [ 282 , <exc-or-expr> ] = GOTO 108
M [ 282 , <inc-or-expr> ] = GOTO 111
M [ 282 , <land-expr> ] = GOTO 115
M [ 282 , <lor-expr> ] = GOTO 116
M [ 282 , <multiplicative-expr> ] = GOTO 117
M [ 282 , <num-const> ] = GOTO 118
M [ 282 , <postfix-expr> ] = GOTO 119
M [ 282 , <prim-expr> ] = GOTO 120
M [ 282 , <rel-expr> ] = GOTO 121
M [ 282 , <shift-expr> ] = GOTO 123
M [ 282 , <unary-expr> ] = GOTO 125
M [ 282 , <unary-op> ] = GOTO 126
M [ 282 , CHAR_CONST ] = SHIFT 127
M [ 282 , DELIM_LPAR ] = SHIFT 129
M [ 282 , FLOAT_CONST ] = SHIFT 132
M [ 282 , IDENTIFIER ] = SHIFT 159
M [ 282 , INT_CONST ] = SHIFT 134
M [ 282 , OP_ADD ] = SHIFT 135
M [ 282 , OP_AND ] = SHIFT 136
M [ 282 , OP_DEC ] = SHIFT 137
M [ 282 , OP_INC ] = SHIFT 138
M [ 282 , OP_LNOT ] = SHIFT 139
M [ 282 , OP_MUL ] = SHIFT 140
M [ 282 , OP_NOT ] = SHIFT 141
M [ 282 , OP_SUB ] = SHIFT 142
M [ 282 , STR_LITERAL ] = SHIFT 143
M [ 282 , sizeof ] = SHIFT 153
M [ 283 , CHAR_CONST ] = REDUCE <asn-op> -> OP_ADDASN 
M [ 283 , DELIM_LPAR ] = REDUCE <asn-op> -> OP_ADDASN 
M [ 283 , FLOAT_CONST ] = REDUCE <asn-op> -> OP_ADDASN 
M [ 283 , IDENTIFIER ] = REDUCE <asn-op> -> OP_ADDASN 
M [ 283 , INT_CONST ] = REDUCE <asn-op> -> OP_ADDASN 
M [ 283 , OP_ADD ] = REDUCE <asn-op> -> OP_ADDASN 
M [ 283 , OP_AND ] = REDUCE <asn-op> -> OP_ADDASN 
M [ 283 , OP_DEC ] = REDUCE <asn-op> -> OP_ADDASN 
M [ 283 , OP_INC ] = REDUCE <asn-op> -> OP_ADDASN 
M [ 283 , OP_LNOT ] = REDUCE <asn-op> -> OP_ADDASN 
M [ 283 , OP_MUL ] = REDUCE <asn-op> -> OP_ADDASN 
M [ 283 , OP_NOT ] = REDUCE <asn-op> -> OP_ADDASN 
M [ 283 , OP_SUB ] = REDUCE <asn-op> -> OP_ADDASN 
M [ 283 , STR_LITERAL ] = REDUCE <asn-op> -> OP_ADDASN 
M [ 283 , sizeof ] = REDUCE <asn-op> -> OP_ADDASN 
M [ 284 , CHAR_CONST ] = REDUCE <asn-op> -> OP_ANDASN 
M [ 284 , DELIM_LPAR ] = REDUCE <asn-op> -> OP_ANDASN 
M [ 284 , FLOAT_CONST ] = REDUCE <asn-op> -> OP_ANDASN 
M [ 284 , IDENTIFIER ] = REDUCE <asn-op> -> OP_ANDASN 
M [ 284 , INT_CONST ] = REDUCE <asn-op> -> OP_ANDASN 
M [ 284 , OP_ADD ] = REDUCE <asn-op> -> OP_ANDASN 
M [ 284 , OP_AND ] = REDUCE <asn-op> -> OP_ANDASN 
M [ 284 , OP_DEC ] = REDUCE <asn-op> -> OP_ANDASN 
M [ 284 , OP_INC ] = REDUCE <asn-op> -> OP_ANDASN 
M [ 284 , OP_LNOT ] = REDUCE <asn-op> -> OP_ANDASN 
M [ 284 , OP_MUL ] = REDUCE <asn-op> -> OP_ANDASN 
M [ 284 , OP_NOT ] = REDUCE <asn-op> -> OP_ANDASN 
M [ 284 , OP_SUB ] = REDUCE <asn-op> -> OP_ANDASN 
M [ 284 , STR_LITERAL ] = REDUCE <asn-op> -> OP_ANDASN 
M [ 284 , sizeof ] = REDUCE <asn-op> -> OP_ANDASN 
M [ 285 , CHAR_CONST ] = REDUCE <asn-op> -> OP_ASN 
M [ 285 , DELIM_LPAR ] = REDUCE <asn-op> -> OP_ASN 
M [ 285 , FLOAT_CONST ] = REDUCE <asn-op> -> OP_ASN 
M [ 285 , IDENTIFIER ] = REDUCE <asn-op> -> OP_ASN 
M [ 285 , INT_CONST ] = REDUCE <asn-op> -> OP_ASN 
M [ 285 , OP_ADD ] = REDUCE <asn-op> -> OP_ASN 
M [ 285 , OP_AND ] = REDUCE <asn-op> -> OP_ASN 
M [ 285 , OP_DEC ] = REDUCE <asn-op> -> OP_ASN 
M [ 285 , OP_INC ] = REDUCE <asn-op> -> OP_ASN 
M [ 285 , OP_LNOT ] = REDUCE <asn-op> -> OP_ASN 
M [ 285 , OP_MUL ] = REDUCE <asn-op> -> OP_ASN 
M [ 285 , OP_NOT ] = REDUCE <asn-op> -> OP_ASN 
M [ 285 , OP_SUB ] = REDUCE <asn-op> -> OP_ASN 
M [ 285 , STR_LITERAL ] = REDUCE <asn-op> -> OP_ASN 
M [ 285 , sizeof ] = REDUCE <asn-op> -> OP_ASN 
M [ 286 , CHAR_CONST ] = REDUCE <asn-op> -> OP_DIVASN 
M [ 286 , DELIM_LPAR ] = REDUCE <asn-op> -> OP_DIVASN 
M [ 286 , FLOAT_CONST ] = REDUCE <asn-op> -> OP_DIVASN 
M [ 286 , IDENTIFIER ] = REDUCE <asn-op> -> OP_DIVASN 
M [ 286 , INT_CONST ] = REDUCE <asn-op> -> OP_DIVASN 
M [ 286 , OP_ADD ] = REDUCE <asn-op> -> OP_DIVASN 
M [ 286 , OP_AND ] = REDUCE <asn-op> -> OP_DIVASN 
M [ 286 , OP_DEC ] = REDUCE <asn-op> -> OP_DIVASN 
M [ 286 , OP_INC ] = REDUCE <asn-op> -> OP_DIVASN 
M [ 286 , OP_LNOT ] = REDUCE <asn-op> -> OP_DIVASN 
M [ 286 , OP_MUL ] = REDUCE <asn-op> -> OP_DIVASN 
M [ 286 , OP_NOT ] = REDUCE <asn-op> -> OP_DIVASN 
M [ 286 , OP_SUB ] = REDUCE <asn-op> -> OP_DIVASN 
M [ 286 , STR_LITERAL ] = REDUCE <asn-op> -> OP_DIVASN 
M [ 286 , sizeof ] = REDUCE <asn-op> -> OP_DIVASN 
M [ 287 , CHAR_CONST ] = REDUCE <asn-op> -> OP_MODASN 
M [ 287 , DELIM_LPAR ] = REDUCE <asn-op> -> OP_MODASN 
M [ 287 , FLOAT_CONST ] = REDUCE <asn-op> -> OP_MODASN 
M [ 287 , IDENTIFIER ] = REDUCE <asn-op> -> OP_MODASN 
M [ 287 , INT_CONST ] = REDUCE <asn-op> -> OP_MODASN 
M [ 287 , OP_ADD ] = REDUCE <asn-op> -> OP_MODASN 
M [ 287 , OP_AND ] = REDUCE <asn-op> -> OP_MODASN 
M [ 287 , OP_DEC ] = REDUCE <asn-op> -> OP_MODASN 
M [ 287 , OP_INC ] = REDUCE <asn-op> -> OP_MODASN 
M [ 287 , OP_LNOT ] = REDUCE <asn-op> -> OP_MODASN 
M [ 287 , OP_MUL ] = REDUCE <asn-op> -> OP_MODASN 
M [ 287 , OP_NOT ] = REDUCE <asn-op> -> OP_MODASN 
M [ 287 , OP_SUB ] = REDUCE <asn-op> -> OP_MODASN 
M [ 287 , STR_LITERAL ] = REDUCE <asn-op> -> OP_MODASN 
M [ 287 , sizeof ] = REDUCE <asn-op> -> OP_MODASN 
M [ 288 , CHAR_CONST ] = REDUCE <asn-op> -> OP_MULASN 
M [ 288 , DELIM_LPAR ] = REDUCE <asn-op> -> OP_MULASN 
M [ 288 , FLOAT_CONST ] = REDUCE <asn-op> -> OP_MULASN 
M [ 288 , IDENTIFIER ] = REDUCE <asn-op> -> OP_MULASN 
M [ 288 , INT_CONST ] = REDUCE <asn-op> -> OP_MULASN 
M [ 288 , OP_ADD ] = REDUCE <asn-op> -> OP_MULASN 
M [ 288 , OP_AND ] = REDUCE <asn-op> -> OP_MULASN 
M [ 288 , OP_DEC ] = REDUCE <asn-op> -> OP_MULASN 
M [ 288 , OP_INC ] = REDUCE <asn-op> -> OP_MULASN 
M [ 288 , OP_LNOT ] = REDUCE <asn-op> -> OP_MULASN 
M [ 288 , OP_MUL ] = REDUCE <asn-op> -> OP_MULASN 
M [ 288 , OP_NOT ] = REDUCE <asn-op> -> OP_MULASN 
M [ 288 , OP_SUB ] = REDUCE <asn-op> -> OP_MULASN 
M [ 288 , STR_LITERAL ] = REDUCE <asn-op> -> OP_MULASN 
M [ 288 , sizeof ] = REDUCE <asn-op> -> OP_MULASN 
M [ 289 , CHAR_CONST ] = REDUCE <asn-op> -> OP_ORASN 
M [ 289 , DELIM_LPAR ] = REDUCE <asn-op> -> OP_ORASN 
M [ 289 , FLOAT_CONST ] = REDUCE <asn-op> -> OP_ORASN 
M [ 289 , IDENTIFIER ] = REDUCE <asn-op> -> OP_ORASN 
M [ 289 , INT_CONST ] = REDUCE <asn-op> -> OP_ORASN 
M [ 289 , OP_ADD ] = REDUCE <asn-op> -> OP_ORASN 
M [ 289 , OP_AND ] = REDUCE <asn-op> -> OP_ORASN 
M [ 289 , OP_DEC ] = REDUCE <asn-op> -> OP_ORASN 
M [ 289 , OP_INC ] = REDUCE <asn-op> -> OP_ORASN 
M [ 289 , OP_LNOT ] = REDUCE <asn-op> -> OP_ORASN 
M [ 289 , OP_MUL ] = REDUCE <asn-op> -> OP_ORASN 
M [ 289 , OP_NOT ] = REDUCE <asn-op> -> OP_ORASN 
M [ 289 , OP_SUB ] = REDUCE <asn-op> -> OP_ORASN 
M [ 289 , STR_LITERAL ] = REDUCE <asn-op> -> OP_ORASN 
M [ 289 , sizeof ] = REDUCE <asn-op> -> OP_ORASN 
M [ 290 , CHAR_CONST ] = REDUCE <asn-op> -> OP_SHLASN 
M [ 290 , DELIM_LPAR ] = REDUCE <asn-op> -> OP_SHLASN 
M [ 290 , FLOAT_CONST ] = REDUCE <asn-op> -> OP_SHLASN 
M [ 290 , IDENTIFIER ] = REDUCE <asn-op> -> OP_SHLASN 
M [ 290 , INT_CONST ] = REDUCE <asn-op> -> OP_SHLASN 
M [ 290 , OP_ADD ] = REDUCE <asn-op> -> OP_SHLASN 
M [ 290 , OP_AND ] = REDUCE <asn-op> -> OP_SHLASN 
M [ 290 , OP_DEC ] = REDUCE <asn-op> -> OP_SHLASN 
M [ 290 , OP_INC ] = REDUCE <asn-op> -> OP_SHLASN 
M [ 290 , OP_LNOT ] = REDUCE <asn-op> -> OP_SHLASN 
M [ 290 , OP_MUL ] = REDUCE <asn-op> -> OP_SHLASN 
M [ 290 , OP_NOT ] = REDUCE <asn-op> -> OP_SHLASN 
M [ 290 , OP_SUB ] = REDUCE <asn-op> -> OP_SHLASN 
M [ 290 , STR_LITERAL ] = REDUCE <asn-op> -> OP_SHLASN 
M [ 290 , sizeof ] = REDUCE <asn-op> -> OP_SHLASN 
M [ 291 , CHAR_CONST ] = REDUCE <asn-op> -> OP_SHRASN 
M [ 291 , DELIM_LPAR ] = REDUCE <asn-op> -> OP_SHRASN 
M [ 291 , FLOAT_CONST ] = REDUCE <asn-op> -> OP_SHRASN 
M [ 291 , IDENTIFIER ] = REDUCE <asn-op> -> OP_SHRASN 
M [ 291 , INT_CONST ] = REDUCE <asn-op> -> OP_SHRASN 
M [ 291 , OP_ADD ] = REDUCE <asn-op> -> OP_SHRASN 
M [ 291 , OP_AND ] = REDUCE <asn-op> -> OP_SHRASN 
M [ 291 , OP_DEC ] = REDUCE <asn-op> -> OP_SHRASN 
M [ 291 , OP_INC ] = REDUCE <asn-op> -> OP_SHRASN 
M [ 291 , OP_LNOT ] = REDUCE <asn-op> -> OP_SHRASN 
M [ 291 , OP_MUL ] = REDUCE <asn-op> -> OP_SHRASN 
M [ 291 , OP_NOT ] = REDUCE <asn-op> -> OP_SHRASN 
M [ 291 , OP_SUB ] = REDUCE <asn-op> -> OP_SHRASN 
M [ 291 , STR_LITERAL ] = REDUCE <asn-op> -> OP_SHRASN 
M [ 291 , sizeof ] = REDUCE <asn-op> -> OP_SHRASN 
M [ 292 , CHAR_CONST ] = REDUCE <asn-op> -> OP_SUBASN 
M [ 292 , DELIM_LPAR ] = REDUCE <asn-op> -> OP_SUBASN 
M [ 292 , FLOAT_CONST ] = REDUCE <asn-op> -> OP_SUBASN 
M [ 292 , IDENTIFIER ] = REDUCE <asn-op> -> OP_SUBASN 
M [ 292 , INT_CONST ] = REDUCE <asn-op> -> OP_SUBASN 
M [ 292 , OP_ADD ] = REDUCE <asn-op> -> OP_SUBASN 
M [ 292 , OP_AND ] = REDUCE <asn-op> -> OP_SUBASN 
M [ 292 , OP_DEC ] = REDUCE <asn-op> -> OP_SUBASN 
M [ 292 , OP_INC ] = REDUCE <asn-op> -> OP_SUBASN 
M [ 292 , OP_LNOT ] = REDUCE <asn-op> -> OP_SUBASN 
M [ 292 , OP_MUL ] = REDUCE <asn-op> -> OP_SUBASN 
M [ 292 , OP_NOT ] = REDUCE <asn-op> -> OP_SUBASN 
M [ 292 , OP_SUB ] = REDUCE <asn-op> -> OP_SUBASN 
M [ 292 , STR_LITERAL ] = REDUCE <asn-op> -> OP_SUBASN 
M [ 292 , sizeof ] = REDUCE <asn-op> -> OP_SUBASN 
M [ 293 , CHAR_CONST ] = REDUCE <asn-op> -> OP_XORASN 
M [ 293 , DELIM_LPAR ] = REDUCE <asn-op> -> OP_XORASN 
M [ 293 , FLOAT_CONST ] = REDUCE <asn-op> -> OP_XORASN 
M [ 293 , IDENTIFIER ] = REDUCE <asn-op> -> OP_XORASN 
M [ 293 , INT_CONST ] = REDUCE <asn-op> -> OP_XORASN 
M [ 293 , OP_ADD ] = REDUCE <asn-op> -> OP_XORASN 
M [ 293 , OP_AND ] = REDUCE <asn-op> -> OP_XORASN 
M [ 293 , OP_DEC ] = REDUCE <asn-op> -> OP_XORASN 
M [ 293 , OP_INC ] = REDUCE <asn-op> -> OP_XORASN 
M [ 293 , OP_LNOT ] = REDUCE <asn-op> -> OP_XORASN 
M [ 293 , OP_MUL ] = REDUCE <asn-op> -> OP_XORASN 
M [ 293 , OP_NOT ] = REDUCE <asn-op> -> OP_XORASN 
M [ 293 , OP_SUB ] = REDUCE <asn-op> -> OP_XORASN 
M [ 293 , STR_LITERAL ] = REDUCE <asn-op> -> OP_XORASN 
M [ 293 , sizeof ] = REDUCE <asn-op> -> OP_XORASN 
M [ 294 , DELIM_COMMA ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , DELIM_QUESTION ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , DELIM_SEMICOLON ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_ADD ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_ADDASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_AND ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_ANDASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_ASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_DIV ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_DIVASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_EQ ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_GE ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_GT ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_LAND ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_LE ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_LOR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_LT ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_MOD ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_MODASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_MUL ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_MULASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_NEQ ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_OR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_ORASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_SHL ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_SHLASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_SHR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_SHRASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_SUB ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_SUBASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_XOR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 294 , OP_XORASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 295 , DELIM_COMMA ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , DELIM_QUESTION ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , DELIM_SEMICOLON ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_ADD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_ADDASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_AND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_ANDASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_ASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_DIV ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_DIVASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_EQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_GE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_GT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_LAND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_LE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_LOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_LT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_MOD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_MODASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_MUL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_MULASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_NEQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_OR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_ORASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_SHL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_SHLASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_SHR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_SHRASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_SUB ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_SUBASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_XOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 295 , OP_XORASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 296 , <additive-expr> ] = GOTO 299
M [ 296 , <and-expr> ] = GOTO 300
M [ 296 , <asn-expr> ] = GOTO 301
M [ 296 , <cast-expr> ] = GOTO 302
M [ 296 , <cond-expr> ] = GOTO 303
M [ 296 , <constant> ] = GOTO 304
M [ 296 , <enum-spec> ] = GOTO 305
M [ 296 , <eq-expr> ] = GOTO 306
M [ 296 , <exc-or-expr> ] = GOTO 307
M [ 296 , <expr> ] = GOTO 308
M [ 296 , <inc-or-expr> ] = GOTO 309
M [ 296 , <land-expr> ] = GOTO 310
M [ 296 , <lor-expr> ] = GOTO 311
M [ 296 , <multiplicative-expr> ] = GOTO 312
M [ 296 , <num-const> ] = GOTO 313
M [ 296 , <postfix-expr> ] = GOTO 314
M [ 296 , <prim-expr> ] = GOTO 315
M [ 296 , <rel-expr> ] = GOTO 316
M [ 296 , <shift-expr> ] = GOTO 317
M [ 296 , <spec-qual-list> ] = GOTO 318
M [ 296 , <struct-union-spec> ] = GOTO 319
M [ 296 , <struct-union> ] = GOTO 320
M [ 296 , <type-name> ] = GOTO 653
M [ 296 , <type-qual> ] = GOTO 322
M [ 296 , <type-spec> ] = GOTO 323
M [ 296 , <unary-expr> ] = GOTO 324
M [ 296 , <unary-op> ] = GOTO 325
M [ 296 , CHAR_CONST ] = SHIFT 326
M [ 296 , DELIM_LPAR ] = SHIFT 327
M [ 296 , FLOAT_CONST ] = SHIFT 328
M [ 296 , IDENTIFIER ] = SHIFT 329
M [ 296 , INT_CONST ] = SHIFT 330
M [ 296 , OP_ADD ] = SHIFT 135
M [ 296 , OP_AND ] = SHIFT 136
M [ 296 , OP_DEC ] = SHIFT 331
M [ 296 , OP_INC ] = SHIFT 332
M [ 296 , OP_LNOT ] = SHIFT 139
M [ 296 , OP_MUL ] = SHIFT 140
M [ 296 , OP_NOT ] = SHIFT 141
M [ 296 , OP_SUB ] = SHIFT 142
M [ 296 , STR_LITERAL ] = SHIFT 333
M [ 296 , char ] = SHIFT 334
M [ 296 , const ] = SHIFT 335
M [ 296 , double ] = SHIFT 336
M [ 296 , enum ] = SHIFT 337
M [ 296 , float ] = SHIFT 338
M [ 296 , int ] = SHIFT 339
M [ 296 , long ] = SHIFT 340
M [ 296 , short ] = SHIFT 341
M [ 296 , signed ] = SHIFT 342
M [ 296 , sizeof ] = SHIFT 343
M [ 296 , struct ] = SHIFT 21
M [ 296 , unsigned ] = SHIFT 344
M [ 296 , void ] = SHIFT 345
M [ 297 , <additive-expr> ] = GOTO 96
M [ 297 , <and-expr> ] = GOTO 97
M [ 297 , <asn-expr> ] = GOTO 98
M [ 297 , <blk-item> ] = GOTO 254
M [ 297 , <cast-expr> ] = GOTO 101
M [ 297 , <comp-stmt> ] = GOTO 102
M [ 297 , <cond-expr> ] = GOTO 103
M [ 297 , <constant> ] = GOTO 104
M [ 297 , <decl-spec> ] = GOTO 105
M [ 297 , <decl> ] = GOTO 106
M [ 297 , <enum-spec> ] = GOTO 3
M [ 297 , <eq-expr> ] = GOTO 107
M [ 297 , <exc-or-expr> ] = GOTO 108
M [ 297 , <expr-stmt> ] = GOTO 109
M [ 297 , <expr> ] = GOTO 110
M [ 297 , <inc-or-expr> ] = GOTO 111
M [ 297 , <iter-stmt> ] = GOTO 112
M [ 297 , <jump-stmt> ] = GOTO 113
M [ 297 , <labeled-stmt> ] = GOTO 114
M [ 297 , <land-expr> ] = GOTO 115
M [ 297 , <lor-expr> ] = GOTO 116
M [ 297 , <multiplicative-expr> ] = GOTO 117
M [ 297 , <num-const> ] = GOTO 118
M [ 297 , <postfix-expr> ] = GOTO 119
M [ 297 , <prim-expr> ] = GOTO 120
M [ 297 , <rel-expr> ] = GOTO 121
M [ 297 , <sele-stmt> ] = GOTO 122
M [ 297 , <shift-expr> ] = GOTO 123
M [ 297 , <stmt> ] = GOTO 124
M [ 297 , <storage-class-spec> ] = GOTO 6
M [ 297 , <struct-union-spec> ] = GOTO 7
M [ 297 , <struct-union> ] = GOTO 8
M [ 297 , <type-qual> ] = GOTO 10
M [ 297 , <type-spec> ] = GOTO 11
M [ 297 , <unary-expr> ] = GOTO 125
M [ 297 , <unary-op> ] = GOTO 126
M [ 297 , CHAR_CONST ] = SHIFT 127
M [ 297 , DELIM_LCURBRACE ] = SHIFT 128
M [ 297 , DELIM_LPAR ] = SHIFT 129
M [ 297 , DELIM_RCURBRACE ] = SHIFT 654
M [ 297 , DELIM_SEMICOLON ] = SHIFT 131
M [ 297 , FLOAT_CONST ] = SHIFT 132
M [ 297 , IDENTIFIER ] = SHIFT 133
M [ 297 , INT_CONST ] = SHIFT 134
M [ 297 , OP_ADD ] = SHIFT 135
M [ 297 , OP_AND ] = SHIFT 136
M [ 297 , OP_DEC ] = SHIFT 137
M [ 297 , OP_INC ] = SHIFT 138
M [ 297 , OP_LNOT ] = SHIFT 139
M [ 297 , OP_MUL ] = SHIFT 140
M [ 297 , OP_NOT ] = SHIFT 141
M [ 297 , OP_SUB ] = SHIFT 142
M [ 297 , STR_LITERAL ] = SHIFT 143
M [ 297 , break ] = SHIFT 144
M [ 297 , case ] = SHIFT 145
M [ 297 , char ] = SHIFT 12
M [ 297 , const ] = SHIFT 13
M [ 297 , continue ] = SHIFT 146
M [ 297 , default ] = SHIFT 147
M [ 297 , do ] = SHIFT 148
M [ 297 , double ] = SHIFT 14
M [ 297 , enum ] = SHIFT 15
M [ 297 , float ] = SHIFT 16
M [ 297 , for ] = SHIFT 149
M [ 297 , goto ] = SHIFT 150
M [ 297 , if ] = SHIFT 151
M [ 297 , int ] = SHIFT 17
M [ 297 , long ] = SHIFT 18
M [ 297 , return ] = SHIFT 152
M [ 297 , short ] = SHIFT 19
M [ 297 , signed ] = SHIFT 20
M [ 297 , sizeof ] = SHIFT 153
M [ 297 , struct ] = SHIFT 21
M [ 297 , switch ] = SHIFT 154
M [ 297 , typedef ] = SHIFT 22
M [ 297 , unsigned ] = SHIFT 23
M [ 297 , void ] = SHIFT 24
M [ 297 , while ] = SHIFT 155
M [ 298 , CHAR_CONST ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , DELIM_LCURBRACE ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , DELIM_LPAR ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , DELIM_RCURBRACE ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , DELIM_SEMICOLON ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , FLOAT_CONST ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , IDENTIFIER ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , INT_CONST ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , OP_ADD ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , OP_AND ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , OP_DEC ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , OP_INC ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , OP_LNOT ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , OP_MUL ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , OP_NOT ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , OP_SUB ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , STR_LITERAL ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , break ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , case ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , char ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , const ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , continue ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , default ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , do ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , double ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , enum ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , float ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , for ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , goto ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , if ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , int ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , long ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , return ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , short ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , signed ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , sizeof ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , struct ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , switch ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , typedef ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , unsigned ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , void ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 298 , while ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 299 , DELIM_COMMA ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 299 , DELIM_QUESTION ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 299 , DELIM_RPAR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 299 , OP_ADD ] = SHIFT 655
M [ 299 , OP_AND ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 299 , OP_EQ ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 299 , OP_GE ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 299 , OP_GT ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 299 , OP_LAND ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 299 , OP_LE ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 299 , OP_LOR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 299 , OP_LT ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 299 , OP_NEQ ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 299 , OP_OR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 299 , OP_SHL ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 299 , OP_SHR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 299 , OP_SUB ] = SHIFT 656
M [ 299 , OP_XOR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 300 , DELIM_COMMA ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 300 , DELIM_QUESTION ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 300 , DELIM_RPAR ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 300 , OP_AND ] = SHIFT 657
M [ 300 , OP_LAND ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 300 , OP_LOR ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 300 , OP_OR ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 300 , OP_XOR ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 301 , DELIM_COMMA ] = REDUCE <expr> -> <asn-expr> 
M [ 301 , DELIM_RPAR ] = REDUCE <expr> -> <asn-expr> 
M [ 302 , DELIM_COMMA ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 302 , DELIM_QUESTION ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 302 , DELIM_RPAR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 302 , OP_ADD ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 302 , OP_AND ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 302 , OP_DIV ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 302 , OP_EQ ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 302 , OP_GE ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 302 , OP_GT ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 302 , OP_LAND ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 302 , OP_LE ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 302 , OP_LOR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 302 , OP_LT ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 302 , OP_MOD ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 302 , OP_MUL ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 302 , OP_NEQ ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 302 , OP_OR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 302 , OP_SHL ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 302 , OP_SHR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 302 , OP_SUB ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 302 , OP_XOR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 303 , DELIM_COMMA ] = REDUCE <asn-expr> -> <cond-expr> 
M [ 303 , DELIM_RPAR ] = REDUCE <asn-expr> -> <cond-expr> 
M [ 304 , DELIM_COMMA ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , DELIM_LPAR ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , DELIM_QUESTION ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , DELIM_RPAR ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_ADD ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_ADDASN ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_AND ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_ANDASN ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_ARROW ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_ASN ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_DEC ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_DIV ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_DIVASN ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_DOT ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_EQ ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_GE ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_GT ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_INC ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_LAND ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_LE ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_LOR ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_LT ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_MOD ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_MODASN ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_MUL ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_MULASN ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_NEQ ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_OR ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_ORASN ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_SHL ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_SHLASN ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_SHR ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_SHRASN ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_SUB ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_SUBASN ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_XOR ] = REDUCE <prim-expr> -> <constant> 
M [ 304 , OP_XORASN ] = REDUCE <prim-expr> -> <constant> 
M [ 305 , DELIM_LPAR ] = REDUCE <type-spec> -> <enum-spec> 
M [ 305 , DELIM_LSQBRACKET ] = REDUCE <type-spec> -> <enum-spec> 
M [ 305 , DELIM_RPAR ] = REDUCE <type-spec> -> <enum-spec> 
M [ 305 , OP_MUL ] = REDUCE <type-spec> -> <enum-spec> 
M [ 305 , char ] = REDUCE <type-spec> -> <enum-spec> 
M [ 305 , const ] = REDUCE <type-spec> -> <enum-spec> 
M [ 305 , double ] = REDUCE <type-spec> -> <enum-spec> 
M [ 305 , enum ] = REDUCE <type-spec> -> <enum-spec> 
M [ 305 , float ] = REDUCE <type-spec> -> <enum-spec> 
M [ 305 , int ] = REDUCE <type-spec> -> <enum-spec> 
M [ 305 , long ] = REDUCE <type-spec> -> <enum-spec> 
M [ 305 , short ] = REDUCE <type-spec> -> <enum-spec> 
M [ 305 , signed ] = REDUCE <type-spec> -> <enum-spec> 
M [ 305 , struct ] = REDUCE <type-spec> -> <enum-spec> 
M [ 305 , unsigned ] = REDUCE <type-spec> -> <enum-spec> 
M [ 305 , void ] = REDUCE <type-spec> -> <enum-spec> 
M [ 306 , DELIM_COMMA ] = REDUCE <and-expr> -> <eq-expr> 
M [ 306 , DELIM_QUESTION ] = REDUCE <and-expr> -> <eq-expr> 
M [ 306 , DELIM_RPAR ] = REDUCE <and-expr> -> <eq-expr> 
M [ 306 , OP_AND ] = REDUCE <and-expr> -> <eq-expr> 
M [ 306 , OP_EQ ] = SHIFT 658
M [ 306 , OP_LAND ] = REDUCE <and-expr> -> <eq-expr> 
M [ 306 , OP_LOR ] = REDUCE <and-expr> -> <eq-expr> 
M [ 306 , OP_NEQ ] = SHIFT 659
M [ 306 , OP_OR ] = REDUCE <and-expr> -> <eq-expr> 
M [ 306 , OP_XOR ] = REDUCE <and-expr> -> <eq-expr> 
M [ 307 , DELIM_COMMA ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 307 , DELIM_QUESTION ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 307 , DELIM_RPAR ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 307 , OP_LAND ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 307 , OP_LOR ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 307 , OP_OR ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 307 , OP_XOR ] = SHIFT 660
M [ 308 , DELIM_COMMA ] = SHIFT 661
M [ 308 , DELIM_RPAR ] = SHIFT 662
M [ 309 , DELIM_COMMA ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 309 , DELIM_QUESTION ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 309 , DELIM_RPAR ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 309 , OP_LAND ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 309 , OP_LOR ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 309 , OP_OR ] = SHIFT 663
M [ 310 , DELIM_COMMA ] = REDUCE <lor-expr> -> <land-expr> 
M [ 310 , DELIM_QUESTION ] = REDUCE <lor-expr> -> <land-expr> 
M [ 310 , DELIM_RPAR ] = REDUCE <lor-expr> -> <land-expr> 
M [ 310 , OP_LAND ] = SHIFT 664
M [ 310 , OP_LOR ] = REDUCE <lor-expr> -> <land-expr> 
M [ 311 , DELIM_COMMA ] = REDUCE <cond-expr> -> <lor-expr> 
M [ 311 , DELIM_QUESTION ] = SHIFT 665
M [ 311 , DELIM_RPAR ] = REDUCE <cond-expr> -> <lor-expr> 
M [ 311 , OP_LOR ] = SHIFT 666
M [ 312 , DELIM_COMMA ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 312 , DELIM_QUESTION ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 312 , DELIM_RPAR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 312 , OP_ADD ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 312 , OP_AND ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 312 , OP_DIV ] = SHIFT 667
M [ 312 , OP_EQ ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 312 , OP_GE ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 312 , OP_GT ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 312 , OP_LAND ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 312 , OP_LE ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 312 , OP_LOR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 312 , OP_LT ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 312 , OP_MOD ] = SHIFT 668
M [ 312 , OP_MUL ] = SHIFT 669
M [ 312 , OP_NEQ ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 312 , OP_OR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 312 , OP_SHL ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 312 , OP_SHR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 312 , OP_SUB ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 312 , OP_XOR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 313 , DELIM_COMMA ] = REDUCE <constant> -> <num-const> 
M [ 313 , DELIM_LPAR ] = REDUCE <constant> -> <num-const> 
M [ 313 , DELIM_LSQBRACKET ] = REDUCE <constant> -> <num-const> 
M [ 313 , DELIM_QUESTION ] = REDUCE <constant> -> <num-const> 
M [ 313 , DELIM_RPAR ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_ADD ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_ADDASN ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_AND ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_ANDASN ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_ARROW ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_ASN ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_DEC ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_DIV ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_DIVASN ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_DOT ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_EQ ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_GE ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_GT ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_INC ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_LAND ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_LE ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_LOR ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_LT ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_MOD ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_MODASN ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_MUL ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_MULASN ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_NEQ ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_OR ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_ORASN ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_SHL ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_SHLASN ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_SHR ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_SHRASN ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_SUB ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_SUBASN ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_XOR ] = REDUCE <constant> -> <num-const> 
M [ 313 , OP_XORASN ] = REDUCE <constant> -> <num-const> 
M [ 314 , DELIM_COMMA ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , DELIM_LPAR ] = SHIFT 670
M [ 314 , DELIM_LSQBRACKET ] = SHIFT 671
M [ 314 , DELIM_QUESTION ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , DELIM_RPAR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_ADD ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_ADDASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_AND ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_ANDASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_ARROW ] = SHIFT 672
M [ 314 , OP_ASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_DEC ] = SHIFT 673
M [ 314 , OP_DIV ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_DIVASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_DOT ] = SHIFT 674
M [ 314 , OP_EQ ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_GE ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_GT ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_INC ] = SHIFT 675
M [ 314 , OP_LAND ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_LE ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_LOR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_LT ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_MOD ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_MODASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_MUL ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_MULASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_NEQ ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_OR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_ORASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_SHL ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_SHLASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_SHR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_SHRASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_SUB ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_SUBASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_XOR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 314 , OP_XORASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 315 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , DELIM_RPAR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_ADD ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_ADDASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_AND ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_ANDASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_ARROW ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_ASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_DEC ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_DIV ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_DIVASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_DOT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_EQ ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_GE ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_GT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_INC ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_LAND ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_LE ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_LOR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_LT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_MOD ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_MODASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_MUL ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_MULASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_NEQ ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_OR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_ORASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_SHL ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_SHLASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_SHR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_SHRASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_SUB ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_SUBASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_XOR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 315 , OP_XORASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 316 , DELIM_COMMA ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 316 , DELIM_QUESTION ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 316 , DELIM_RPAR ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 316 , OP_AND ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 316 , OP_EQ ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 316 , OP_GE ] = SHIFT 676
M [ 316 , OP_GT ] = SHIFT 677
M [ 316 , OP_LAND ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 316 , OP_LE ] = SHIFT 678
M [ 316 , OP_LOR ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 316 , OP_LT ] = SHIFT 679
M [ 316 , OP_NEQ ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 316 , OP_OR ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 316 , OP_XOR ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 317 , DELIM_COMMA ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 317 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 317 , DELIM_RPAR ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 317 , OP_AND ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 317 , OP_EQ ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 317 , OP_GE ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 317 , OP_GT ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 317 , OP_LAND ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 317 , OP_LE ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 317 , OP_LOR ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 317 , OP_LT ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 317 , OP_NEQ ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 317 , OP_OR ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 317 , OP_SHL ] = SHIFT 680
M [ 317 , OP_SHR ] = SHIFT 681
M [ 317 , OP_XOR ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 318 , <abstract-declarator> ] = GOTO 682
M [ 318 , <direct-abstract-declarator> ] = GOTO 683
M [ 318 , <pointer> ] = GOTO 684
M [ 318 , DELIM_LPAR ] = SHIFT 685
M [ 318 , DELIM_LSQBRACKET ] = SHIFT 686
M [ 318 , DELIM_RPAR ] = REDUCE <type-name> -> <spec-qual-list> 
M [ 318 , OP_MUL ] = SHIFT 687
M [ 319 , DELIM_LPAR ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 319 , DELIM_LSQBRACKET ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 319 , DELIM_RPAR ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 319 , OP_MUL ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 319 , char ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 319 , const ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 319 , double ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 319 , enum ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 319 , float ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 319 , int ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 319 , long ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 319 , short ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 319 , signed ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 319 , struct ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 319 , unsigned ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 319 , void ] = REDUCE <type-spec> -> <struct-union-spec> 
M [ 320 , DELIM_LCURBRACE ] = SHIFT 688
M [ 320 , IDENTIFIER ] = SHIFT 689
M [ 321 , DELIM_RPAR ] = SHIFT 690
M [ 322 , <enum-spec> ] = GOTO 305
M [ 322 , <spec-qual-list> ] = GOTO 691
M [ 322 , <struct-union-spec> ] = GOTO 319
M [ 322 , <struct-union> ] = GOTO 320
M [ 322 , <type-qual> ] = GOTO 322
M [ 322 , <type-spec> ] = GOTO 323
M [ 322 , DELIM_LPAR ] = REDUCE <spec-qual-list> -> <type-qual> 
M [ 322 , DELIM_LSQBRACKET ] = REDUCE <spec-qual-list> -> <type-qual> 
M [ 322 , DELIM_RPAR ] = REDUCE <spec-qual-list> -> <type-qual> 
M [ 322 , OP_MUL ] = REDUCE <spec-qual-list> -> <type-qual> 
M [ 322 , char ] = SHIFT 334
M [ 322 , const ] = SHIFT 335
M [ 322 , double ] = SHIFT 336
M [ 322 , enum ] = SHIFT 337
M [ 322 , float ] = SHIFT 338
M [ 322 , int ] = SHIFT 339
M [ 322 , long ] = SHIFT 340
M [ 322 , short ] = SHIFT 341
M [ 322 , signed ] = SHIFT 342
M [ 322 , struct ] = SHIFT 21
M [ 322 , unsigned ] = SHIFT 344
M [ 322 , void ] = SHIFT 345
M [ 323 , <enum-spec> ] = GOTO 305
M [ 323 , <spec-qual-list> ] = GOTO 692
M [ 323 , <struct-union-spec> ] = GOTO 319
M [ 323 , <struct-union> ] = GOTO 320
M [ 323 , <type-qual> ] = GOTO 322
M [ 323 , <type-spec> ] = GOTO 323
M [ 323 , DELIM_LPAR ] = REDUCE <spec-qual-list> -> <type-spec> 
M [ 323 , DELIM_LSQBRACKET ] = REDUCE <spec-qual-list> -> <type-spec> 
M [ 323 , DELIM_RPAR ] = REDUCE <spec-qual-list> -> <type-spec> 
M [ 323 , OP_MUL ] = REDUCE <spec-qual-list> -> <type-spec> 
M [ 323 , char ] = SHIFT 334
M [ 323 , const ] = SHIFT 335
M [ 323 , double ] = SHIFT 336
M [ 323 , enum ] = SHIFT 337
M [ 323 , float ] = SHIFT 338
M [ 323 , int ] = SHIFT 339
M [ 323 , long ] = SHIFT 340
M [ 323 , short ] = SHIFT 341
M [ 323 , signed ] = SHIFT 342
M [ 323 , struct ] = SHIFT 21
M [ 323 , unsigned ] = SHIFT 344
M [ 323 , void ] = SHIFT 345
M [ 324 , <asn-op> ] = GOTO 693
M [ 324 , DELIM_COMMA ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 324 , DELIM_QUESTION ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 324 , DELIM_RPAR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 324 , OP_ADD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 324 , OP_ADDASN ] = SHIFT 283
M [ 324 , OP_AND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 324 , OP_ANDASN ] = SHIFT 284
M [ 324 , OP_ASN ] = SHIFT 285
M [ 324 , OP_DIV ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 324 , OP_DIVASN ] = SHIFT 286
M [ 324 , OP_EQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 324 , OP_GE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 324 , OP_GT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 324 , OP_LAND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 324 , OP_LE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 324 , OP_LOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 324 , OP_LT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 324 , OP_MOD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 324 , OP_MODASN ] = SHIFT 287
M [ 324 , OP_MUL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 324 , OP_MULASN ] = SHIFT 288
M [ 324 , OP_NEQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 324 , OP_OR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 324 , OP_ORASN ] = SHIFT 289
M [ 324 , OP_SHL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 324 , OP_SHLASN ] = SHIFT 290
M [ 324 , OP_SHR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 324 , OP_SHRASN ] = SHIFT 291
M [ 324 , OP_SUB ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 324 , OP_SUBASN ] = SHIFT 292
M [ 324 , OP_XOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 324 , OP_XORASN ] = SHIFT 293
M [ 325 , <cast-expr> ] = GOTO 694
M [ 325 , <constant> ] = GOTO 304
M [ 325 , <num-const> ] = GOTO 313
M [ 325 , <postfix-expr> ] = GOTO 314
M [ 325 , <prim-expr> ] = GOTO 315
M [ 325 , <unary-expr> ] = GOTO 695
M [ 325 , <unary-op> ] = GOTO 325
M [ 325 , CHAR_CONST ] = SHIFT 326
M [ 325 , DELIM_LPAR ] = SHIFT 696
M [ 325 , FLOAT_CONST ] = SHIFT 328
M [ 325 , IDENTIFIER ] = SHIFT 329
M [ 325 , INT_CONST ] = SHIFT 330
M [ 325 , OP_ADD ] = SHIFT 135
M [ 325 , OP_AND ] = SHIFT 136
M [ 325 , OP_DEC ] = SHIFT 331
M [ 325 , OP_INC ] = SHIFT 332
M [ 325 , OP_LNOT ] = SHIFT 139
M [ 325 , OP_MUL ] = SHIFT 140
M [ 325 , OP_NOT ] = SHIFT 141
M [ 325 , OP_SUB ] = SHIFT 142
M [ 325 , STR_LITERAL ] = SHIFT 333
M [ 325 , sizeof ] = SHIFT 343
M [ 326 , DELIM_COMMA ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , DELIM_LPAR ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , DELIM_LSQBRACKET ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , DELIM_QUESTION ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , DELIM_RPAR ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_ADD ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_ADDASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_AND ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_ANDASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_ARROW ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_ASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_DEC ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_DIV ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_DIVASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_DOT ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_EQ ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_GE ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_GT ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_INC ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_LAND ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_LE ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_LOR ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_LT ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_MOD ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_MODASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_MUL ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_MULASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_NEQ ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_OR ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_ORASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_SHL ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_SHLASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_SHR ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_SHRASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_SUB ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_SUBASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_XOR ] = REDUCE <constant> -> CHAR_CONST 
M [ 326 , OP_XORASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 327 , <additive-expr> ] = GOTO 299
M [ 327 , <and-expr> ] = GOTO 300
M [ 327 , <asn-expr> ] = GOTO 301
M [ 327 , <cast-expr> ] = GOTO 302
M [ 327 , <cond-expr> ] = GOTO 303
M [ 327 , <constant> ] = GOTO 304
M [ 327 , <enum-spec> ] = GOTO 305
M [ 327 , <eq-expr> ] = GOTO 306
M [ 327 , <exc-or-expr> ] = GOTO 307
M [ 327 , <expr> ] = GOTO 697
M [ 327 , <inc-or-expr> ] = GOTO 309
M [ 327 , <land-expr> ] = GOTO 310
M [ 327 , <lor-expr> ] = GOTO 311
M [ 327 , <multiplicative-expr> ] = GOTO 312
M [ 327 , <num-const> ] = GOTO 313
M [ 327 , <postfix-expr> ] = GOTO 314
M [ 327 , <prim-expr> ] = GOTO 315
M [ 327 , <rel-expr> ] = GOTO 316
M [ 327 , <shift-expr> ] = GOTO 317
M [ 327 , <spec-qual-list> ] = GOTO 318
M [ 327 , <struct-union-spec> ] = GOTO 319
M [ 327 , <struct-union> ] = GOTO 320
M [ 327 , <type-name> ] = GOTO 698
M [ 327 , <type-qual> ] = GOTO 322
M [ 327 , <type-spec> ] = GOTO 323
M [ 327 , <unary-expr> ] = GOTO 324
M [ 327 , <unary-op> ] = GOTO 325
M [ 327 , CHAR_CONST ] = SHIFT 326
M [ 327 , DELIM_LPAR ] = SHIFT 327
M [ 327 , FLOAT_CONST ] = SHIFT 328
M [ 327 , IDENTIFIER ] = SHIFT 329
M [ 327 , INT_CONST ] = SHIFT 330
M [ 327 , OP_ADD ] = SHIFT 135
M [ 327 , OP_AND ] = SHIFT 136
M [ 327 , OP_DEC ] = SHIFT 331
M [ 327 , OP_INC ] = SHIFT 332
M [ 327 , OP_LNOT ] = SHIFT 139
M [ 327 , OP_MUL ] = SHIFT 140
M [ 327 , OP_NOT ] = SHIFT 141
M [ 327 , OP_SUB ] = SHIFT 142
M [ 327 , STR_LITERAL ] = SHIFT 333
M [ 327 , char ] = SHIFT 334
M [ 327 , const ] = SHIFT 335
M [ 327 , double ] = SHIFT 336
M [ 327 , enum ] = SHIFT 337
M [ 327 , float ] = SHIFT 338
M [ 327 , int ] = SHIFT 339
M [ 327 , long ] = SHIFT 340
M [ 327 , short ] = SHIFT 341
M [ 327 , signed ] = SHIFT 342
M [ 327 , sizeof ] = SHIFT 343
M [ 327 , struct ] = SHIFT 21
M [ 327 , unsigned ] = SHIFT 344
M [ 327 , void ] = SHIFT 345
M [ 328 , DELIM_COMMA ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , DELIM_LPAR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , DELIM_LSQBRACKET ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , DELIM_QUESTION ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , DELIM_RPAR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_ADD ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_ADDASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_AND ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_ANDASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_ARROW ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_ASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_DEC ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_DIV ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_DIVASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_DOT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_EQ ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_GE ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_GT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_INC ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_LAND ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_LE ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_LOR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_LT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_MOD ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_MODASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_MUL ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_MULASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_NEQ ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_OR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_ORASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_SHL ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_SHLASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_SHR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_SHRASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_SUB ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_SUBASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_XOR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 328 , OP_XORASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 329 , DELIM_COMMA ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , DELIM_LPAR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , DELIM_QUESTION ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , DELIM_RPAR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_ADD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_ADDASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_AND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_ANDASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_ARROW ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_ASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_DEC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_DIV ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_DIVASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_DOT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_EQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_GE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_GT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_INC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_LAND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_LE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_LOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_LT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_MOD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_MODASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_MUL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_MULASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_NEQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_OR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_ORASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_SHL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_SHLASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_SHR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_SHRASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_SUB ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_SUBASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_XOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 329 , OP_XORASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 330 , DELIM_COMMA ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , DELIM_LPAR ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , DELIM_LSQBRACKET ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , DELIM_QUESTION ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , DELIM_RPAR ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_ADD ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_ADDASN ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_AND ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_ANDASN ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_ARROW ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_ASN ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_DEC ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_DIV ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_DIVASN ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_DOT ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_EQ ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_GE ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_GT ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_INC ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_LAND ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_LE ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_LOR ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_LT ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_MOD ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_MODASN ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_MUL ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_MULASN ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_NEQ ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_OR ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_ORASN ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_SHL ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_SHLASN ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_SHR ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_SHRASN ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_SUB ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_SUBASN ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_XOR ] = REDUCE <num-const> -> INT_CONST 
M [ 330 , OP_XORASN ] = REDUCE <num-const> -> INT_CONST 
M [ 331 , <constant> ] = GOTO 304
M [ 331 , <num-const> ] = GOTO 313
M [ 331 , <postfix-expr> ] = GOTO 314
M [ 331 , <prim-expr> ] = GOTO 315
M [ 331 , <unary-expr> ] = GOTO 699
M [ 331 , <unary-op> ] = GOTO 325
M [ 331 , CHAR_CONST ] = SHIFT 326
M [ 331 , DELIM_LPAR ] = SHIFT 700
M [ 331 , FLOAT_CONST ] = SHIFT 328
M [ 331 , IDENTIFIER ] = SHIFT 329
M [ 331 , INT_CONST ] = SHIFT 330
M [ 331 , OP_ADD ] = SHIFT 135
M [ 331 , OP_AND ] = SHIFT 136
M [ 331 , OP_DEC ] = SHIFT 331
M [ 331 , OP_INC ] = SHIFT 332
M [ 331 , OP_LNOT ] = SHIFT 139
M [ 331 , OP_MUL ] = SHIFT 140
M [ 331 , OP_NOT ] = SHIFT 141
M [ 331 , OP_SUB ] = SHIFT 142
M [ 331 , STR_LITERAL ] = SHIFT 333
M [ 331 , sizeof ] = SHIFT 343
M [ 332 , <constant> ] = GOTO 304
M [ 332 , <num-const> ] = GOTO 313
M [ 332 , <postfix-expr> ] = GOTO 314
M [ 332 , <prim-expr> ] = GOTO 315
M [ 332 , <unary-expr> ] = GOTO 701
M [ 332 , <unary-op> ] = GOTO 325
M [ 332 , CHAR_CONST ] = SHIFT 326
M [ 332 , DELIM_LPAR ] = SHIFT 700
M [ 332 , FLOAT_CONST ] = SHIFT 328
M [ 332 , IDENTIFIER ] = SHIFT 329
M [ 332 , INT_CONST ] = SHIFT 330
M [ 332 , OP_ADD ] = SHIFT 135
M [ 332 , OP_AND ] = SHIFT 136
M [ 332 , OP_DEC ] = SHIFT 331
M [ 332 , OP_INC ] = SHIFT 332
M [ 332 , OP_LNOT ] = SHIFT 139
M [ 332 , OP_MUL ] = SHIFT 140
M [ 332 , OP_NOT ] = SHIFT 141
M [ 332 , OP_SUB ] = SHIFT 142
M [ 332 , STR_LITERAL ] = SHIFT 333
M [ 332 , sizeof ] = SHIFT 343
M [ 333 , DELIM_COMMA ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , DELIM_LPAR ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , DELIM_LSQBRACKET ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , DELIM_QUESTION ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , DELIM_RPAR ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_ADD ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_ADDASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_AND ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_ANDASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_ARROW ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_ASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_DEC ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_DIV ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_DIVASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_DOT ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_EQ ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_GE ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_GT ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_INC ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_LAND ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_LE ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_LOR ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_LT ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_MOD ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_MODASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_MUL ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_MULASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_NEQ ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_OR ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_ORASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_SHL ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_SHLASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_SHR ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_SHRASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_SUB ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_SUBASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_XOR ] = REDUCE <constant> -> STR_LITERAL 
M [ 333 , OP_XORASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 334 , DELIM_LPAR ] = REDUCE <type-spec> -> char 
M [ 334 , DELIM_LSQBRACKET ] = REDUCE <type-spec> -> char 
M [ 334 , DELIM_RPAR ] = REDUCE <type-spec> -> char 
M [ 334 , OP_MUL ] = REDUCE <type-spec> -> char 
M [ 334 , char ] = REDUCE <type-spec> -> char 
M [ 334 , const ] = REDUCE <type-spec> -> char 
M [ 334 , double ] = REDUCE <type-spec> -> char 
M [ 334 , enum ] = REDUCE <type-spec> -> char 
M [ 334 , float ] = REDUCE <type-spec> -> char 
M [ 334 , int ] = REDUCE <type-spec> -> char 
M [ 334 , long ] = REDUCE <type-spec> -> char 
M [ 334 , short ] = REDUCE <type-spec> -> char 
M [ 334 , signed ] = REDUCE <type-spec> -> char 
M [ 334 , struct ] = REDUCE <type-spec> -> char 
M [ 334 , unsigned ] = REDUCE <type-spec> -> char 
M [ 334 , void ] = REDUCE <type-spec> -> char 
M [ 335 , DELIM_LPAR ] = REDUCE <type-qual> -> const 
M [ 335 , DELIM_LSQBRACKET ] = REDUCE <type-qual> -> const 
M [ 335 , DELIM_RPAR ] = REDUCE <type-qual> -> const 
M [ 335 , OP_MUL ] = REDUCE <type-qual> -> const 
M [ 335 , char ] = REDUCE <type-qual> -> const 
M [ 335 , const ] = REDUCE <type-qual> -> const 
M [ 335 , double ] = REDUCE <type-qual> -> const 
M [ 335 , enum ] = REDUCE <type-qual> -> const 
M [ 335 , float ] = REDUCE <type-qual> -> const 
M [ 335 , int ] = REDUCE <type-qual> -> const 
M [ 335 , long ] = REDUCE <type-qual> -> const 
M [ 335 , short ] = REDUCE <type-qual> -> const 
M [ 335 , signed ] = REDUCE <type-qual> -> const 
M [ 335 , struct ] = REDUCE <type-qual> -> const 
M [ 335 , unsigned ] = REDUCE <type-qual> -> const 
M [ 335 , void ] = REDUCE <type-qual> -> const 
M [ 336 , DELIM_LPAR ] = REDUCE <type-spec> -> double 
M [ 336 , DELIM_LSQBRACKET ] = REDUCE <type-spec> -> double 
M [ 336 , DELIM_RPAR ] = REDUCE <type-spec> -> double 
M [ 336 , OP_MUL ] = REDUCE <type-spec> -> double 
M [ 336 , char ] = REDUCE <type-spec> -> double 
M [ 336 , const ] = REDUCE <type-spec> -> double 
M [ 336 , double ] = REDUCE <type-spec> -> double 
M [ 336 , enum ] = REDUCE <type-spec> -> double 
M [ 336 , float ] = REDUCE <type-spec> -> double 
M [ 336 , int ] = REDUCE <type-spec> -> double 
M [ 336 , long ] = REDUCE <type-spec> -> double 
M [ 336 , short ] = REDUCE <type-spec> -> double 
M [ 336 , signed ] = REDUCE <type-spec> -> double 
M [ 336 , struct ] = REDUCE <type-spec> -> double 
M [ 336 , unsigned ] = REDUCE <type-spec> -> double 
M [ 336 , void ] = REDUCE <type-spec> -> double 
M [ 337 , DELIM_LCURBRACE ] = SHIFT 702
M [ 337 , IDENTIFIER ] = SHIFT 703
M [ 338 , DELIM_LPAR ] = REDUCE <type-spec> -> float 
M [ 338 , DELIM_LSQBRACKET ] = REDUCE <type-spec> -> float 
M [ 338 , DELIM_RPAR ] = REDUCE <type-spec> -> float 
M [ 338 , OP_MUL ] = REDUCE <type-spec> -> float 
M [ 338 , char ] = REDUCE <type-spec> -> float 
M [ 338 , const ] = REDUCE <type-spec> -> float 
M [ 338 , double ] = REDUCE <type-spec> -> float 
M [ 338 , enum ] = REDUCE <type-spec> -> float 
M [ 338 , float ] = REDUCE <type-spec> -> float 
M [ 338 , int ] = REDUCE <type-spec> -> float 
M [ 338 , long ] = REDUCE <type-spec> -> float 
M [ 338 , short ] = REDUCE <type-spec> -> float 
M [ 338 , signed ] = REDUCE <type-spec> -> float 
M [ 338 , struct ] = REDUCE <type-spec> -> float 
M [ 338 , unsigned ] = REDUCE <type-spec> -> float 
M [ 338 , void ] = REDUCE <type-spec> -> float 
M [ 339 , DELIM_LPAR ] = REDUCE <type-spec> -> int 
M [ 339 , DELIM_LSQBRACKET ] = REDUCE <type-spec> -> int 
M [ 339 , DELIM_RPAR ] = REDUCE <type-spec> -> int 
M [ 339 , OP_MUL ] = REDUCE <type-spec> -> int 
M [ 339 , char ] = REDUCE <type-spec> -> int 
M [ 339 , const ] = REDUCE <type-spec> -> int 
M [ 339 , double ] = REDUCE <type-spec> -> int 
M [ 339 , enum ] = REDUCE <type-spec> -> int 
M [ 339 , float ] = REDUCE <type-spec> -> int 
M [ 339 , int ] = REDUCE <type-spec> -> int 
M [ 339 , long ] = REDUCE <type-spec> -> int 
M [ 339 , short ] = REDUCE <type-spec> -> int 
M [ 339 , signed ] = REDUCE <type-spec> -> int 
M [ 339 , struct ] = REDUCE <type-spec> -> int 
M [ 339 , unsigned ] = REDUCE <type-spec> -> int 
M [ 339 , void ] = REDUCE <type-spec> -> int 
M [ 340 , DELIM_LPAR ] = REDUCE <type-spec> -> long 
M [ 340 , DELIM_LSQBRACKET ] = REDUCE <type-spec> -> long 
M [ 340 , DELIM_RPAR ] = REDUCE <type-spec> -> long 
M [ 340 , OP_MUL ] = REDUCE <type-spec> -> long 
M [ 340 , char ] = REDUCE <type-spec> -> long 
M [ 340 , const ] = REDUCE <type-spec> -> long 
M [ 340 , double ] = REDUCE <type-spec> -> long 
M [ 340 , enum ] = REDUCE <type-spec> -> long 
M [ 340 , float ] = REDUCE <type-spec> -> long 
M [ 340 , int ] = REDUCE <type-spec> -> long 
M [ 340 , long ] = REDUCE <type-spec> -> long 
M [ 340 , short ] = REDUCE <type-spec> -> long 
M [ 340 , signed ] = REDUCE <type-spec> -> long 
M [ 340 , struct ] = REDUCE <type-spec> -> long 
M [ 340 , unsigned ] = REDUCE <type-spec> -> long 
M [ 340 , void ] = REDUCE <type-spec> -> long 
M [ 341 , DELIM_LPAR ] = REDUCE <type-spec> -> short 
M [ 341 , DELIM_LSQBRACKET ] = REDUCE <type-spec> -> short 
M [ 341 , DELIM_RPAR ] = REDUCE <type-spec> -> short 
M [ 341 , OP_MUL ] = REDUCE <type-spec> -> short 
M [ 341 , char ] = REDUCE <type-spec> -> short 
M [ 341 , const ] = REDUCE <type-spec> -> short 
M [ 341 , double ] = REDUCE <type-spec> -> short 
M [ 341 , enum ] = REDUCE <type-spec> -> short 
M [ 341 , float ] = REDUCE <type-spec> -> short 
M [ 341 , int ] = REDUCE <type-spec> -> short 
M [ 341 , long ] = REDUCE <type-spec> -> short 
M [ 341 , short ] = REDUCE <type-spec> -> short 
M [ 341 , signed ] = REDUCE <type-spec> -> short 
M [ 341 , struct ] = REDUCE <type-spec> -> short 
M [ 341 , unsigned ] = REDUCE <type-spec> -> short 
M [ 341 , void ] = REDUCE <type-spec> -> short 
M [ 342 , DELIM_LPAR ] = REDUCE <type-spec> -> signed 
M [ 342 , DELIM_LSQBRACKET ] = REDUCE <type-spec> -> signed 
M [ 342 , DELIM_RPAR ] = REDUCE <type-spec> -> signed 
M [ 342 , OP_MUL ] = REDUCE <type-spec> -> signed 
M [ 342 , char ] = REDUCE <type-spec> -> signed 
M [ 342 , const ] = REDUCE <type-spec> -> signed 
M [ 342 , double ] = REDUCE <type-spec> -> signed 
M [ 342 , enum ] = REDUCE <type-spec> -> signed 
M [ 342 , float ] = REDUCE <type-spec> -> signed 
M [ 342 , int ] = REDUCE <type-spec> -> signed 
M [ 342 , long ] = REDUCE <type-spec> -> signed 
M [ 342 , short ] = REDUCE <type-spec> -> signed 
M [ 342 , signed ] = REDUCE <type-spec> -> signed 
M [ 342 , struct ] = REDUCE <type-spec> -> signed 
M [ 342 , unsigned ] = REDUCE <type-spec> -> signed 
M [ 342 , void ] = REDUCE <type-spec> -> signed 
M [ 343 , <constant> ] = GOTO 304
M [ 343 , <num-const> ] = GOTO 313
M [ 343 , <postfix-expr> ] = GOTO 314
M [ 343 , <prim-expr> ] = GOTO 315
M [ 343 , <unary-expr> ] = GOTO 704
M [ 343 , <unary-op> ] = GOTO 325
M [ 343 , CHAR_CONST ] = SHIFT 326
M [ 343 , DELIM_LPAR ] = SHIFT 705
M [ 343 , FLOAT_CONST ] = SHIFT 328
M [ 343 , IDENTIFIER ] = SHIFT 329
M [ 343 , INT_CONST ] = SHIFT 330
M [ 343 , OP_ADD ] = SHIFT 135
M [ 343 , OP_AND ] = SHIFT 136
M [ 343 , OP_DEC ] = SHIFT 331
M [ 343 , OP_INC ] = SHIFT 332
M [ 343 , OP_LNOT ] = SHIFT 139
M [ 343 , OP_MUL ] = SHIFT 140
M [ 343 , OP_NOT ] = SHIFT 141
M [ 343 , OP_SUB ] = SHIFT 142
M [ 343 , STR_LITERAL ] = SHIFT 333
M [ 343 , sizeof ] = SHIFT 343
M [ 344 , DELIM_LPAR ] = REDUCE <type-spec> -> unsigned 
M [ 344 , DELIM_LSQBRACKET ] = REDUCE <type-spec> -> unsigned 
M [ 344 , DELIM_RPAR ] = REDUCE <type-spec> -> unsigned 
M [ 344 , OP_MUL ] = REDUCE <type-spec> -> unsigned 
M [ 344 , char ] = REDUCE <type-spec> -> unsigned 
M [ 344 , const ] = REDUCE <type-spec> -> unsigned 
M [ 344 , double ] = REDUCE <type-spec> -> unsigned 
M [ 344 , enum ] = REDUCE <type-spec> -> unsigned 
M [ 344 , float ] = REDUCE <type-spec> -> unsigned 
M [ 344 , int ] = REDUCE <type-spec> -> unsigned 
M [ 344 , long ] = REDUCE <type-spec> -> unsigned 
M [ 344 , short ] = REDUCE <type-spec> -> unsigned 
M [ 344 , signed ] = REDUCE <type-spec> -> unsigned 
M [ 344 , struct ] = REDUCE <type-spec> -> unsigned 
M [ 344 , unsigned ] = REDUCE <type-spec> -> unsigned 
M [ 344 , void ] = REDUCE <type-spec> -> unsigned 
M [ 345 , DELIM_LPAR ] = REDUCE <type-spec> -> void 
M [ 345 , DELIM_LSQBRACKET ] = REDUCE <type-spec> -> void 
M [ 345 , DELIM_RPAR ] = REDUCE <type-spec> -> void 
M [ 345 , OP_MUL ] = REDUCE <type-spec> -> void 
M [ 345 , char ] = REDUCE <type-spec> -> void 
M [ 345 , const ] = REDUCE <type-spec> -> void 
M [ 345 , double ] = REDUCE <type-spec> -> void 
M [ 345 , enum ] = REDUCE <type-spec> -> void 
M [ 345 , float ] = REDUCE <type-spec> -> void 
M [ 345 , int ] = REDUCE <type-spec> -> void 
M [ 345 , long ] = REDUCE <type-spec> -> void 
M [ 345 , short ] = REDUCE <type-spec> -> void 
M [ 345 , signed ] = REDUCE <type-spec> -> void 
M [ 345 , struct ] = REDUCE <type-spec> -> void 
M [ 345 , unsigned ] = REDUCE <type-spec> -> void 
M [ 345 , void ] = REDUCE <type-spec> -> void 
M [ 346 , <additive-expr> ] = GOTO 96
M [ 346 , <and-expr> ] = GOTO 97
M [ 346 , <asn-expr> ] = GOTO 98
M [ 346 , <cast-expr> ] = GOTO 101
M [ 346 , <comp-stmt> ] = GOTO 102
M [ 346 , <cond-expr> ] = GOTO 103
M [ 346 , <constant> ] = GOTO 104
M [ 346 , <eq-expr> ] = GOTO 107
M [ 346 , <exc-or-expr> ] = GOTO 108
M [ 346 , <expr-stmt> ] = GOTO 109
M [ 346 , <expr> ] = GOTO 110
M [ 346 , <inc-or-expr> ] = GOTO 111
M [ 346 , <iter-stmt> ] = GOTO 112
M [ 346 , <jump-stmt> ] = GOTO 113
M [ 346 , <labeled-stmt> ] = GOTO 114
M [ 346 , <land-expr> ] = GOTO 115
M [ 346 , <lor-expr> ] = GOTO 116
M [ 346 , <multiplicative-expr> ] = GOTO 117
M [ 346 , <num-const> ] = GOTO 118
M [ 346 , <postfix-expr> ] = GOTO 119
M [ 346 , <prim-expr> ] = GOTO 120
M [ 346 , <rel-expr> ] = GOTO 121
M [ 346 , <sele-stmt> ] = GOTO 122
M [ 346 , <shift-expr> ] = GOTO 123
M [ 346 , <stmt> ] = GOTO 706
M [ 346 , <unary-expr> ] = GOTO 125
M [ 346 , <unary-op> ] = GOTO 126
M [ 346 , CHAR_CONST ] = SHIFT 127
M [ 346 , DELIM_LCURBRACE ] = SHIFT 128
M [ 346 , DELIM_LPAR ] = SHIFT 129
M [ 346 , DELIM_SEMICOLON ] = SHIFT 131
M [ 346 , FLOAT_CONST ] = SHIFT 132
M [ 346 , IDENTIFIER ] = SHIFT 133
M [ 346 , INT_CONST ] = SHIFT 134
M [ 346 , OP_ADD ] = SHIFT 135
M [ 346 , OP_AND ] = SHIFT 136
M [ 346 , OP_DEC ] = SHIFT 137
M [ 346 , OP_INC ] = SHIFT 138
M [ 346 , OP_LNOT ] = SHIFT 139
M [ 346 , OP_MUL ] = SHIFT 140
M [ 346 , OP_NOT ] = SHIFT 141
M [ 346 , OP_SUB ] = SHIFT 142
M [ 346 , STR_LITERAL ] = SHIFT 143
M [ 346 , break ] = SHIFT 144
M [ 346 , case ] = SHIFT 145
M [ 346 , continue ] = SHIFT 146
M [ 346 , default ] = SHIFT 147
M [ 346 , do ] = SHIFT 148
M [ 346 , for ] = SHIFT 149
M [ 346 , goto ] = SHIFT 150
M [ 346 , if ] = SHIFT 151
M [ 346 , return ] = SHIFT 152
M [ 346 , sizeof ] = SHIFT 153
M [ 346 , switch ] = SHIFT 154
M [ 346 , while ] = SHIFT 155
M [ 347 , DELIM_COMMA ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , DELIM_QUESTION ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , DELIM_SEMICOLON ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_ADD ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_ADDASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_AND ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_ANDASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_ASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_DIV ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_DIVASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_EQ ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_GE ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_GT ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_LAND ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_LE ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_LOR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_LT ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_MOD ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_MODASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_MUL ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_MULASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_NEQ ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_OR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_ORASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_SHL ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_SHLASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_SHR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_SHRASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_SUB ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_SUBASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_XOR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 347 , OP_XORASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 348 , <additive-expr> ] = GOTO 299
M [ 348 , <and-expr> ] = GOTO 300
M [ 348 , <asn-expr> ] = GOTO 301
M [ 348 , <cast-expr> ] = GOTO 302
M [ 348 , <cond-expr> ] = GOTO 303
M [ 348 , <constant> ] = GOTO 304
M [ 348 , <enum-spec> ] = GOTO 305
M [ 348 , <eq-expr> ] = GOTO 306
M [ 348 , <exc-or-expr> ] = GOTO 307
M [ 348 , <expr> ] = GOTO 308
M [ 348 , <inc-or-expr> ] = GOTO 309
M [ 348 , <land-expr> ] = GOTO 310
M [ 348 , <lor-expr> ] = GOTO 311
M [ 348 , <multiplicative-expr> ] = GOTO 312
M [ 348 , <num-const> ] = GOTO 313
M [ 348 , <postfix-expr> ] = GOTO 314
M [ 348 , <prim-expr> ] = GOTO 315
M [ 348 , <rel-expr> ] = GOTO 316
M [ 348 , <shift-expr> ] = GOTO 317
M [ 348 , <spec-qual-list> ] = GOTO 318
M [ 348 , <struct-union-spec> ] = GOTO 319
M [ 348 , <struct-union> ] = GOTO 320
M [ 348 , <type-name> ] = GOTO 707
M [ 348 , <type-qual> ] = GOTO 322
M [ 348 , <type-spec> ] = GOTO 323
M [ 348 , <unary-expr> ] = GOTO 324
M [ 348 , <unary-op> ] = GOTO 325
M [ 348 , CHAR_CONST ] = SHIFT 326
M [ 348 , DELIM_LPAR ] = SHIFT 327
M [ 348 , FLOAT_CONST ] = SHIFT 328
M [ 348 , IDENTIFIER ] = SHIFT 329
M [ 348 , INT_CONST ] = SHIFT 330
M [ 348 , OP_ADD ] = SHIFT 135
M [ 348 , OP_AND ] = SHIFT 136
M [ 348 , OP_DEC ] = SHIFT 331
M [ 348 , OP_INC ] = SHIFT 332
M [ 348 , OP_LNOT ] = SHIFT 139
M [ 348 , OP_MUL ] = SHIFT 140
M [ 348 , OP_NOT ] = SHIFT 141
M [ 348 , OP_SUB ] = SHIFT 142
M [ 348 , STR_LITERAL ] = SHIFT 333
M [ 348 , char ] = SHIFT 334
M [ 348 , const ] = SHIFT 335
M [ 348 , double ] = SHIFT 336
M [ 348 , enum ] = SHIFT 337
M [ 348 , float ] = SHIFT 338
M [ 348 , int ] = SHIFT 339
M [ 348 , long ] = SHIFT 340
M [ 348 , short ] = SHIFT 341
M [ 348 , signed ] = SHIFT 342
M [ 348 , sizeof ] = SHIFT 343
M [ 348 , struct ] = SHIFT 21
M [ 348 , unsigned ] = SHIFT 344
M [ 348 , void ] = SHIFT 345
M [ 349 , DELIM_COMMA ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , DELIM_QUESTION ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , DELIM_SEMICOLON ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_ADD ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_ADDASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_AND ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_ANDASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_ASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_DIV ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_DIVASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_EQ ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_GE ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_GT ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_LAND ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_LE ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_LOR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_LT ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_MOD ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_MODASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_MUL ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_MULASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_NEQ ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_OR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_ORASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_SHL ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_SHLASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_SHR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_SHRASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_SUB ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_SUBASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_XOR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 349 , OP_XORASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 350 , CHAR_CONST ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , DELIM_LCURBRACE ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , DELIM_LPAR ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , DELIM_RCURBRACE ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , DELIM_SEMICOLON ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , FLOAT_CONST ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , IDENTIFIER ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , INT_CONST ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , OP_ADD ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , OP_AND ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , OP_DEC ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , OP_INC ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , OP_LNOT ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , OP_MUL ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , OP_NOT ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , OP_SUB ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , STR_LITERAL ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , break ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , case ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , char ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , const ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , continue ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , default ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , do ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , double ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , enum ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , float ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , for ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , goto ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , if ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , int ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , long ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , return ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , short ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , signed ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , sizeof ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , struct ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , switch ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , typedef ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , unsigned ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , void ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 350 , while ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 351 , DELIM_COLON ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 351 , DELIM_QUESTION ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 351 , OP_ADD ] = SHIFT 708
M [ 351 , OP_AND ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 351 , OP_EQ ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 351 , OP_GE ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 351 , OP_GT ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 351 , OP_LAND ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 351 , OP_LE ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 351 , OP_LOR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 351 , OP_LT ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 351 , OP_NEQ ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 351 , OP_OR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 351 , OP_SHL ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 351 , OP_SHR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 351 , OP_SUB ] = SHIFT 709
M [ 351 , OP_XOR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 352 , DELIM_COLON ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 352 , DELIM_QUESTION ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 352 , OP_AND ] = SHIFT 710
M [ 352 , OP_LAND ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 352 , OP_LOR ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 352 , OP_OR ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 352 , OP_XOR ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 353 , DELIM_COLON ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 353 , DELIM_QUESTION ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 353 , OP_ADD ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 353 , OP_AND ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 353 , OP_DIV ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 353 , OP_EQ ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 353 , OP_GE ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 353 , OP_GT ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 353 , OP_LAND ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 353 , OP_LE ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 353 , OP_LOR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 353 , OP_LT ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 353 , OP_MOD ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 353 , OP_MUL ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 353 , OP_NEQ ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 353 , OP_OR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 353 , OP_SHL ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 353 , OP_SHR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 353 , OP_SUB ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 353 , OP_XOR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 354 , DELIM_COLON ] = REDUCE <const-expr> -> <cond-expr> 
M [ 355 , DELIM_COLON ] = SHIFT 711
M [ 356 , DELIM_COLON ] = REDUCE <prim-expr> -> <constant> 
M [ 356 , DELIM_LPAR ] = REDUCE <prim-expr> -> <constant> 
M [ 356 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> <constant> 
M [ 356 , DELIM_QUESTION ] = REDUCE <prim-expr> -> <constant> 
M [ 356 , OP_ADD ] = REDUCE <prim-expr> -> <constant> 
M [ 356 , OP_AND ] = REDUCE <prim-expr> -> <constant> 
M [ 356 , OP_ARROW ] = REDUCE <prim-expr> -> <constant> 
M [ 356 , OP_DEC ] = REDUCE <prim-expr> -> <constant> 
M [ 356 , OP_DIV ] = REDUCE <prim-expr> -> <constant> 
M [ 356 , OP_DOT ] = REDUCE <prim-expr> -> <constant> 
M [ 356 , OP_EQ ] = REDUCE <prim-expr> -> <constant> 
M [ 356 , OP_GE ] = REDUCE <prim-expr> -> <constant> 
M [ 356 , OP_GT ] = REDUCE <prim-expr> -> <constant> 
M [ 356 , OP_INC ] = REDUCE <prim-expr> -> <constant> 
M [ 356 , OP_LAND ] = REDUCE <prim-expr> -> <constant> 
M [ 356 , OP_LE ] = REDUCE <prim-expr> -> <constant> 
M [ 356 , OP_LOR ] = REDUCE <prim-expr> -> <constant> 
M [ 356 , OP_LT ] = REDUCE <prim-expr> -> <constant> 
M [ 356 , OP_MOD ] = REDUCE <prim-expr> -> <constant> 
M [ 356 , OP_MUL ] = REDUCE <prim-expr> -> <constant> 
M [ 356 , OP_NEQ ] = REDUCE <prim-expr> -> <constant> 
M [ 356 , OP_OR ] = REDUCE <prim-expr> -> <constant> 
M [ 356 , OP_SHL ] = REDUCE <prim-expr> -> <constant> 
M [ 356 , OP_SHR ] = REDUCE <prim-expr> -> <constant> 
M [ 356 , OP_SUB ] = REDUCE <prim-expr> -> <constant> 
M [ 356 , OP_XOR ] = REDUCE <prim-expr> -> <constant> 
M [ 357 , DELIM_COLON ] = REDUCE <and-expr> -> <eq-expr> 
M [ 357 , DELIM_QUESTION ] = REDUCE <and-expr> -> <eq-expr> 
M [ 357 , OP_AND ] = REDUCE <and-expr> -> <eq-expr> 
M [ 357 , OP_EQ ] = SHIFT 712
M [ 357 , OP_LAND ] = REDUCE <and-expr> -> <eq-expr> 
M [ 357 , OP_LOR ] = REDUCE <and-expr> -> <eq-expr> 
M [ 357 , OP_NEQ ] = SHIFT 713
M [ 357 , OP_OR ] = REDUCE <and-expr> -> <eq-expr> 
M [ 357 , OP_XOR ] = REDUCE <and-expr> -> <eq-expr> 
M [ 358 , DELIM_COLON ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 358 , DELIM_QUESTION ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 358 , OP_LAND ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 358 , OP_LOR ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 358 , OP_OR ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 358 , OP_XOR ] = SHIFT 714
M [ 359 , DELIM_COLON ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 359 , DELIM_QUESTION ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 359 , OP_LAND ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 359 , OP_LOR ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 359 , OP_OR ] = SHIFT 715
M [ 360 , DELIM_COLON ] = REDUCE <lor-expr> -> <land-expr> 
M [ 360 , DELIM_QUESTION ] = REDUCE <lor-expr> -> <land-expr> 
M [ 360 , OP_LAND ] = SHIFT 716
M [ 360 , OP_LOR ] = REDUCE <lor-expr> -> <land-expr> 
M [ 361 , DELIM_COLON ] = REDUCE <cond-expr> -> <lor-expr> 
M [ 361 , DELIM_QUESTION ] = SHIFT 717
M [ 361 , OP_LOR ] = SHIFT 718
M [ 362 , DELIM_COLON ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 362 , DELIM_QUESTION ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 362 , OP_ADD ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 362 , OP_AND ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 362 , OP_DIV ] = SHIFT 719
M [ 362 , OP_EQ ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 362 , OP_GE ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 362 , OP_GT ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 362 , OP_LAND ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 362 , OP_LE ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 362 , OP_LOR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 362 , OP_LT ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 362 , OP_MOD ] = SHIFT 720
M [ 362 , OP_MUL ] = SHIFT 721
M [ 362 , OP_NEQ ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 362 , OP_OR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 362 , OP_SHL ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 362 , OP_SHR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 362 , OP_SUB ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 362 , OP_XOR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 363 , DELIM_COLON ] = REDUCE <constant> -> <num-const> 
M [ 363 , DELIM_LPAR ] = REDUCE <constant> -> <num-const> 
M [ 363 , DELIM_LSQBRACKET ] = REDUCE <constant> -> <num-const> 
M [ 363 , DELIM_QUESTION ] = REDUCE <constant> -> <num-const> 
M [ 363 , OP_ADD ] = REDUCE <constant> -> <num-const> 
M [ 363 , OP_AND ] = REDUCE <constant> -> <num-const> 
M [ 363 , OP_ARROW ] = REDUCE <constant> -> <num-const> 
M [ 363 , OP_DEC ] = REDUCE <constant> -> <num-const> 
M [ 363 , OP_DIV ] = REDUCE <constant> -> <num-const> 
M [ 363 , OP_DOT ] = REDUCE <constant> -> <num-const> 
M [ 363 , OP_EQ ] = REDUCE <constant> -> <num-const> 
M [ 363 , OP_GE ] = REDUCE <constant> -> <num-const> 
M [ 363 , OP_GT ] = REDUCE <constant> -> <num-const> 
M [ 363 , OP_INC ] = REDUCE <constant> -> <num-const> 
M [ 363 , OP_LAND ] = REDUCE <constant> -> <num-const> 
M [ 363 , OP_LE ] = REDUCE <constant> -> <num-const> 
M [ 363 , OP_LOR ] = REDUCE <constant> -> <num-const> 
M [ 363 , OP_LT ] = REDUCE <constant> -> <num-const> 
M [ 363 , OP_MOD ] = REDUCE <constant> -> <num-const> 
M [ 363 , OP_MUL ] = REDUCE <constant> -> <num-const> 
M [ 363 , OP_NEQ ] = REDUCE <constant> -> <num-const> 
M [ 363 , OP_OR ] = REDUCE <constant> -> <num-const> 
M [ 363 , OP_SHL ] = REDUCE <constant> -> <num-const> 
M [ 363 , OP_SHR ] = REDUCE <constant> -> <num-const> 
M [ 363 , OP_SUB ] = REDUCE <constant> -> <num-const> 
M [ 363 , OP_XOR ] = REDUCE <constant> -> <num-const> 
M [ 364 , DELIM_COLON ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 364 , DELIM_LPAR ] = SHIFT 722
M [ 364 , DELIM_LSQBRACKET ] = SHIFT 723
M [ 364 , DELIM_QUESTION ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 364 , OP_ADD ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 364 , OP_AND ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 364 , OP_ARROW ] = SHIFT 724
M [ 364 , OP_DEC ] = SHIFT 725
M [ 364 , OP_DIV ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 364 , OP_DOT ] = SHIFT 726
M [ 364 , OP_EQ ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 364 , OP_GE ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 364 , OP_GT ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 364 , OP_INC ] = SHIFT 727
M [ 364 , OP_LAND ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 364 , OP_LE ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 364 , OP_LOR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 364 , OP_LT ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 364 , OP_MOD ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 364 , OP_MUL ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 364 , OP_NEQ ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 364 , OP_OR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 364 , OP_SHL ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 364 , OP_SHR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 364 , OP_SUB ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 364 , OP_XOR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 365 , DELIM_COLON ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 365 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 365 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 365 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 365 , OP_ADD ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 365 , OP_AND ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 365 , OP_ARROW ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 365 , OP_DEC ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 365 , OP_DIV ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 365 , OP_DOT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 365 , OP_EQ ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 365 , OP_GE ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 365 , OP_GT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 365 , OP_INC ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 365 , OP_LAND ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 365 , OP_LE ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 365 , OP_LOR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 365 , OP_LT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 365 , OP_MOD ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 365 , OP_MUL ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 365 , OP_NEQ ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 365 , OP_OR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 365 , OP_SHL ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 365 , OP_SHR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 365 , OP_SUB ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 365 , OP_XOR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 366 , DELIM_COLON ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 366 , DELIM_QUESTION ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 366 , OP_AND ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 366 , OP_EQ ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 366 , OP_GE ] = SHIFT 728
M [ 366 , OP_GT ] = SHIFT 729
M [ 366 , OP_LAND ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 366 , OP_LE ] = SHIFT 730
M [ 366 , OP_LOR ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 366 , OP_LT ] = SHIFT 731
M [ 366 , OP_NEQ ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 366 , OP_OR ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 366 , OP_XOR ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 367 , DELIM_COLON ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 367 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 367 , OP_AND ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 367 , OP_EQ ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 367 , OP_GE ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 367 , OP_GT ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 367 , OP_LAND ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 367 , OP_LE ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 367 , OP_LOR ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 367 , OP_LT ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 367 , OP_NEQ ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 367 , OP_OR ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 367 , OP_SHL ] = SHIFT 732
M [ 367 , OP_SHR ] = SHIFT 733
M [ 367 , OP_XOR ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 368 , DELIM_COLON ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 368 , DELIM_QUESTION ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 368 , OP_ADD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 368 , OP_AND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 368 , OP_DIV ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 368 , OP_EQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 368 , OP_GE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 368 , OP_GT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 368 , OP_LAND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 368 , OP_LE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 368 , OP_LOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 368 , OP_LT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 368 , OP_MOD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 368 , OP_MUL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 368 , OP_NEQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 368 , OP_OR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 368 , OP_SHL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 368 , OP_SHR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 368 , OP_SUB ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 368 , OP_XOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 369 , <cast-expr> ] = GOTO 734
M [ 369 , <constant> ] = GOTO 356
M [ 369 , <num-const> ] = GOTO 363
M [ 369 , <postfix-expr> ] = GOTO 364
M [ 369 , <prim-expr> ] = GOTO 365
M [ 369 , <unary-expr> ] = GOTO 368
M [ 369 , <unary-op> ] = GOTO 369
M [ 369 , CHAR_CONST ] = SHIFT 370
M [ 369 , DELIM_LPAR ] = SHIFT 371
M [ 369 , FLOAT_CONST ] = SHIFT 372
M [ 369 , IDENTIFIER ] = SHIFT 373
M [ 369 , INT_CONST ] = SHIFT 374
M [ 369 , OP_ADD ] = SHIFT 135
M [ 369 , OP_AND ] = SHIFT 136
M [ 369 , OP_DEC ] = SHIFT 375
M [ 369 , OP_INC ] = SHIFT 376
M [ 369 , OP_LNOT ] = SHIFT 139
M [ 369 , OP_MUL ] = SHIFT 140
M [ 369 , OP_NOT ] = SHIFT 141
M [ 369 , OP_SUB ] = SHIFT 142
M [ 369 , STR_LITERAL ] = SHIFT 377
M [ 369 , sizeof ] = SHIFT 378
M [ 370 , DELIM_COLON ] = REDUCE <constant> -> CHAR_CONST 
M [ 370 , DELIM_LPAR ] = REDUCE <constant> -> CHAR_CONST 
M [ 370 , DELIM_LSQBRACKET ] = REDUCE <constant> -> CHAR_CONST 
M [ 370 , DELIM_QUESTION ] = REDUCE <constant> -> CHAR_CONST 
M [ 370 , OP_ADD ] = REDUCE <constant> -> CHAR_CONST 
M [ 370 , OP_AND ] = REDUCE <constant> -> CHAR_CONST 
M [ 370 , OP_ARROW ] = REDUCE <constant> -> CHAR_CONST 
M [ 370 , OP_DEC ] = REDUCE <constant> -> CHAR_CONST 
M [ 370 , OP_DIV ] = REDUCE <constant> -> CHAR_CONST 
M [ 370 , OP_DOT ] = REDUCE <constant> -> CHAR_CONST 
M [ 370 , OP_EQ ] = REDUCE <constant> -> CHAR_CONST 
M [ 370 , OP_GE ] = REDUCE <constant> -> CHAR_CONST 
M [ 370 , OP_GT ] = REDUCE <constant> -> CHAR_CONST 
M [ 370 , OP_INC ] = REDUCE <constant> -> CHAR_CONST 
M [ 370 , OP_LAND ] = REDUCE <constant> -> CHAR_CONST 
M [ 370 , OP_LE ] = REDUCE <constant> -> CHAR_CONST 
M [ 370 , OP_LOR ] = REDUCE <constant> -> CHAR_CONST 
M [ 370 , OP_LT ] = REDUCE <constant> -> CHAR_CONST 
M [ 370 , OP_MOD ] = REDUCE <constant> -> CHAR_CONST 
M [ 370 , OP_MUL ] = REDUCE <constant> -> CHAR_CONST 
M [ 370 , OP_NEQ ] = REDUCE <constant> -> CHAR_CONST 
M [ 370 , OP_OR ] = REDUCE <constant> -> CHAR_CONST 
M [ 370 , OP_SHL ] = REDUCE <constant> -> CHAR_CONST 
M [ 370 , OP_SHR ] = REDUCE <constant> -> CHAR_CONST 
M [ 370 , OP_SUB ] = REDUCE <constant> -> CHAR_CONST 
M [ 370 , OP_XOR ] = REDUCE <constant> -> CHAR_CONST 
M [ 371 , <additive-expr> ] = GOTO 299
M [ 371 , <and-expr> ] = GOTO 300
M [ 371 , <asn-expr> ] = GOTO 301
M [ 371 , <cast-expr> ] = GOTO 302
M [ 371 , <cond-expr> ] = GOTO 303
M [ 371 , <constant> ] = GOTO 304
M [ 371 , <enum-spec> ] = GOTO 305
M [ 371 , <eq-expr> ] = GOTO 306
M [ 371 , <exc-or-expr> ] = GOTO 307
M [ 371 , <expr> ] = GOTO 735
M [ 371 , <inc-or-expr> ] = GOTO 309
M [ 371 , <land-expr> ] = GOTO 310
M [ 371 , <lor-expr> ] = GOTO 311
M [ 371 , <multiplicative-expr> ] = GOTO 312
M [ 371 , <num-const> ] = GOTO 313
M [ 371 , <postfix-expr> ] = GOTO 314
M [ 371 , <prim-expr> ] = GOTO 315
M [ 371 , <rel-expr> ] = GOTO 316
M [ 371 , <shift-expr> ] = GOTO 317
M [ 371 , <spec-qual-list> ] = GOTO 318
M [ 371 , <struct-union-spec> ] = GOTO 319
M [ 371 , <struct-union> ] = GOTO 320
M [ 371 , <type-name> ] = GOTO 736
M [ 371 , <type-qual> ] = GOTO 322
M [ 371 , <type-spec> ] = GOTO 323
M [ 371 , <unary-expr> ] = GOTO 324
M [ 371 , <unary-op> ] = GOTO 325
M [ 371 , CHAR_CONST ] = SHIFT 326
M [ 371 , DELIM_LPAR ] = SHIFT 327
M [ 371 , FLOAT_CONST ] = SHIFT 328
M [ 371 , IDENTIFIER ] = SHIFT 329
M [ 371 , INT_CONST ] = SHIFT 330
M [ 371 , OP_ADD ] = SHIFT 135
M [ 371 , OP_AND ] = SHIFT 136
M [ 371 , OP_DEC ] = SHIFT 331
M [ 371 , OP_INC ] = SHIFT 332
M [ 371 , OP_LNOT ] = SHIFT 139
M [ 371 , OP_MUL ] = SHIFT 140
M [ 371 , OP_NOT ] = SHIFT 141
M [ 371 , OP_SUB ] = SHIFT 142
M [ 371 , STR_LITERAL ] = SHIFT 333
M [ 371 , char ] = SHIFT 334
M [ 371 , const ] = SHIFT 335
M [ 371 , double ] = SHIFT 336
M [ 371 , enum ] = SHIFT 337
M [ 371 , float ] = SHIFT 338
M [ 371 , int ] = SHIFT 339
M [ 371 , long ] = SHIFT 340
M [ 371 , short ] = SHIFT 341
M [ 371 , signed ] = SHIFT 342
M [ 371 , sizeof ] = SHIFT 343
M [ 371 , struct ] = SHIFT 21
M [ 371 , unsigned ] = SHIFT 344
M [ 371 , void ] = SHIFT 345
M [ 372 , DELIM_COLON ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 372 , DELIM_LPAR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 372 , DELIM_LSQBRACKET ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 372 , DELIM_QUESTION ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 372 , OP_ADD ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 372 , OP_AND ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 372 , OP_ARROW ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 372 , OP_DEC ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 372 , OP_DIV ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 372 , OP_DOT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 372 , OP_EQ ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 372 , OP_GE ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 372 , OP_GT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 372 , OP_INC ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 372 , OP_LAND ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 372 , OP_LE ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 372 , OP_LOR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 372 , OP_LT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 372 , OP_MOD ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 372 , OP_MUL ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 372 , OP_NEQ ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 372 , OP_OR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 372 , OP_SHL ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 372 , OP_SHR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 372 , OP_SUB ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 372 , OP_XOR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 373 , DELIM_COLON ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 373 , DELIM_LPAR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 373 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 373 , DELIM_QUESTION ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 373 , OP_ADD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 373 , OP_AND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 373 , OP_ARROW ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 373 , OP_DEC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 373 , OP_DIV ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 373 , OP_DOT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 373 , OP_EQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 373 , OP_GE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 373 , OP_GT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 373 , OP_INC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 373 , OP_LAND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 373 , OP_LE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 373 , OP_LOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 373 , OP_LT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 373 , OP_MOD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 373 , OP_MUL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 373 , OP_NEQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 373 , OP_OR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 373 , OP_SHL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 373 , OP_SHR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 373 , OP_SUB ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 373 , OP_XOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 374 , DELIM_COLON ] = REDUCE <num-const> -> INT_CONST 
M [ 374 , DELIM_LPAR ] = REDUCE <num-const> -> INT_CONST 
M [ 374 , DELIM_LSQBRACKET ] = REDUCE <num-const> -> INT_CONST 
M [ 374 , DELIM_QUESTION ] = REDUCE <num-const> -> INT_CONST 
M [ 374 , OP_ADD ] = REDUCE <num-const> -> INT_CONST 
M [ 374 , OP_AND ] = REDUCE <num-const> -> INT_CONST 
M [ 374 , OP_ARROW ] = REDUCE <num-const> -> INT_CONST 
M [ 374 , OP_DEC ] = REDUCE <num-const> -> INT_CONST 
M [ 374 , OP_DIV ] = REDUCE <num-const> -> INT_CONST 
M [ 374 , OP_DOT ] = REDUCE <num-const> -> INT_CONST 
M [ 374 , OP_EQ ] = REDUCE <num-const> -> INT_CONST 
M [ 374 , OP_GE ] = REDUCE <num-const> -> INT_CONST 
M [ 374 , OP_GT ] = REDUCE <num-const> -> INT_CONST 
M [ 374 , OP_INC ] = REDUCE <num-const> -> INT_CONST 
M [ 374 , OP_LAND ] = REDUCE <num-const> -> INT_CONST 
M [ 374 , OP_LE ] = REDUCE <num-const> -> INT_CONST 
M [ 374 , OP_LOR ] = REDUCE <num-const> -> INT_CONST 
M [ 374 , OP_LT ] = REDUCE <num-const> -> INT_CONST 
M [ 374 , OP_MOD ] = REDUCE <num-const> -> INT_CONST 
M [ 374 , OP_MUL ] = REDUCE <num-const> -> INT_CONST 
M [ 374 , OP_NEQ ] = REDUCE <num-const> -> INT_CONST 
M [ 374 , OP_OR ] = REDUCE <num-const> -> INT_CONST 
M [ 374 , OP_SHL ] = REDUCE <num-const> -> INT_CONST 
M [ 374 , OP_SHR ] = REDUCE <num-const> -> INT_CONST 
M [ 374 , OP_SUB ] = REDUCE <num-const> -> INT_CONST 
M [ 374 , OP_XOR ] = REDUCE <num-const> -> INT_CONST 
M [ 375 , <constant> ] = GOTO 356
M [ 375 , <num-const> ] = GOTO 363
M [ 375 , <postfix-expr> ] = GOTO 364
M [ 375 , <prim-expr> ] = GOTO 365
M [ 375 , <unary-expr> ] = GOTO 737
M [ 375 , <unary-op> ] = GOTO 369
M [ 375 , CHAR_CONST ] = SHIFT 370
M [ 375 , DELIM_LPAR ] = SHIFT 738
M [ 375 , FLOAT_CONST ] = SHIFT 372
M [ 375 , IDENTIFIER ] = SHIFT 373
M [ 375 , INT_CONST ] = SHIFT 374
M [ 375 , OP_ADD ] = SHIFT 135
M [ 375 , OP_AND ] = SHIFT 136
M [ 375 , OP_DEC ] = SHIFT 375
M [ 375 , OP_INC ] = SHIFT 376
M [ 375 , OP_LNOT ] = SHIFT 139
M [ 375 , OP_MUL ] = SHIFT 140
M [ 375 , OP_NOT ] = SHIFT 141
M [ 375 , OP_SUB ] = SHIFT 142
M [ 375 , STR_LITERAL ] = SHIFT 377
M [ 375 , sizeof ] = SHIFT 378
M [ 376 , <constant> ] = GOTO 356
M [ 376 , <num-const> ] = GOTO 363
M [ 376 , <postfix-expr> ] = GOTO 364
M [ 376 , <prim-expr> ] = GOTO 365
M [ 376 , <unary-expr> ] = GOTO 739
M [ 376 , <unary-op> ] = GOTO 369
M [ 376 , CHAR_CONST ] = SHIFT 370
M [ 376 , DELIM_LPAR ] = SHIFT 738
M [ 376 , FLOAT_CONST ] = SHIFT 372
M [ 376 , IDENTIFIER ] = SHIFT 373
M [ 376 , INT_CONST ] = SHIFT 374
M [ 376 , OP_ADD ] = SHIFT 135
M [ 376 , OP_AND ] = SHIFT 136
M [ 376 , OP_DEC ] = SHIFT 375
M [ 376 , OP_INC ] = SHIFT 376
M [ 376 , OP_LNOT ] = SHIFT 139
M [ 376 , OP_MUL ] = SHIFT 140
M [ 376 , OP_NOT ] = SHIFT 141
M [ 376 , OP_SUB ] = SHIFT 142
M [ 376 , STR_LITERAL ] = SHIFT 377
M [ 376 , sizeof ] = SHIFT 378
M [ 377 , DELIM_COLON ] = REDUCE <constant> -> STR_LITERAL 
M [ 377 , DELIM_LPAR ] = REDUCE <constant> -> STR_LITERAL 
M [ 377 , DELIM_LSQBRACKET ] = REDUCE <constant> -> STR_LITERAL 
M [ 377 , DELIM_QUESTION ] = REDUCE <constant> -> STR_LITERAL 
M [ 377 , OP_ADD ] = REDUCE <constant> -> STR_LITERAL 
M [ 377 , OP_AND ] = REDUCE <constant> -> STR_LITERAL 
M [ 377 , OP_ARROW ] = REDUCE <constant> -> STR_LITERAL 
M [ 377 , OP_DEC ] = REDUCE <constant> -> STR_LITERAL 
M [ 377 , OP_DIV ] = REDUCE <constant> -> STR_LITERAL 
M [ 377 , OP_DOT ] = REDUCE <constant> -> STR_LITERAL 
M [ 377 , OP_EQ ] = REDUCE <constant> -> STR_LITERAL 
M [ 377 , OP_GE ] = REDUCE <constant> -> STR_LITERAL 
M [ 377 , OP_GT ] = REDUCE <constant> -> STR_LITERAL 
M [ 377 , OP_INC ] = REDUCE <constant> -> STR_LITERAL 
M [ 377 , OP_LAND ] = REDUCE <constant> -> STR_LITERAL 
M [ 377 , OP_LE ] = REDUCE <constant> -> STR_LITERAL 
M [ 377 , OP_LOR ] = REDUCE <constant> -> STR_LITERAL 
M [ 377 , OP_LT ] = REDUCE <constant> -> STR_LITERAL 
M [ 377 , OP_MOD ] = REDUCE <constant> -> STR_LITERAL 
M [ 377 , OP_MUL ] = REDUCE <constant> -> STR_LITERAL 
M [ 377 , OP_NEQ ] = REDUCE <constant> -> STR_LITERAL 
M [ 377 , OP_OR ] = REDUCE <constant> -> STR_LITERAL 
M [ 377 , OP_SHL ] = REDUCE <constant> -> STR_LITERAL 
M [ 377 , OP_SHR ] = REDUCE <constant> -> STR_LITERAL 
M [ 377 , OP_SUB ] = REDUCE <constant> -> STR_LITERAL 
M [ 377 , OP_XOR ] = REDUCE <constant> -> STR_LITERAL 
M [ 378 , <constant> ] = GOTO 356
M [ 378 , <num-const> ] = GOTO 363
M [ 378 , <postfix-expr> ] = GOTO 364
M [ 378 , <prim-expr> ] = GOTO 365
M [ 378 , <unary-expr> ] = GOTO 740
M [ 378 , <unary-op> ] = GOTO 369
M [ 378 , CHAR_CONST ] = SHIFT 370
M [ 378 , DELIM_LPAR ] = SHIFT 741
M [ 378 , FLOAT_CONST ] = SHIFT 372
M [ 378 , IDENTIFIER ] = SHIFT 373
M [ 378 , INT_CONST ] = SHIFT 374
M [ 378 , OP_ADD ] = SHIFT 135
M [ 378 , OP_AND ] = SHIFT 136
M [ 378 , OP_DEC ] = SHIFT 375
M [ 378 , OP_INC ] = SHIFT 376
M [ 378 , OP_LNOT ] = SHIFT 139
M [ 378 , OP_MUL ] = SHIFT 140
M [ 378 , OP_NOT ] = SHIFT 141
M [ 378 , OP_SUB ] = SHIFT 142
M [ 378 , STR_LITERAL ] = SHIFT 377
M [ 378 , sizeof ] = SHIFT 378
M [ 379 , CHAR_CONST ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , DELIM_LCURBRACE ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , DELIM_LPAR ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , DELIM_RCURBRACE ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , DELIM_SEMICOLON ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , FLOAT_CONST ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , IDENTIFIER ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , INT_CONST ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , OP_ADD ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , OP_AND ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , OP_DEC ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , OP_INC ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , OP_LNOT ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , OP_MUL ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , OP_NOT ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , OP_SUB ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , STR_LITERAL ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , break ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , case ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , char ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , const ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , continue ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , default ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , do ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , double ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , enum ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , float ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , for ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , goto ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , if ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , int ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , long ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , return ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , short ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , signed ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , sizeof ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , struct ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , switch ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , typedef ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , unsigned ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , void ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 379 , while ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 380 , <additive-expr> ] = GOTO 96
M [ 380 , <and-expr> ] = GOTO 97
M [ 380 , <asn-expr> ] = GOTO 98
M [ 380 , <cast-expr> ] = GOTO 101
M [ 380 , <comp-stmt> ] = GOTO 102
M [ 380 , <cond-expr> ] = GOTO 103
M [ 380 , <constant> ] = GOTO 104
M [ 380 , <eq-expr> ] = GOTO 107
M [ 380 , <exc-or-expr> ] = GOTO 108
M [ 380 , <expr-stmt> ] = GOTO 109
M [ 380 , <expr> ] = GOTO 110
M [ 380 , <inc-or-expr> ] = GOTO 111
M [ 380 , <iter-stmt> ] = GOTO 112
M [ 380 , <jump-stmt> ] = GOTO 113
M [ 380 , <labeled-stmt> ] = GOTO 114
M [ 380 , <land-expr> ] = GOTO 115
M [ 380 , <lor-expr> ] = GOTO 116
M [ 380 , <multiplicative-expr> ] = GOTO 117
M [ 380 , <num-const> ] = GOTO 118
M [ 380 , <postfix-expr> ] = GOTO 119
M [ 380 , <prim-expr> ] = GOTO 120
M [ 380 , <rel-expr> ] = GOTO 121
M [ 380 , <sele-stmt> ] = GOTO 122
M [ 380 , <shift-expr> ] = GOTO 123
M [ 380 , <stmt> ] = GOTO 742
M [ 380 , <unary-expr> ] = GOTO 125
M [ 380 , <unary-op> ] = GOTO 126
M [ 380 , CHAR_CONST ] = SHIFT 127
M [ 380 , DELIM_LCURBRACE ] = SHIFT 128
M [ 380 , DELIM_LPAR ] = SHIFT 129
M [ 380 , DELIM_SEMICOLON ] = SHIFT 131
M [ 380 , FLOAT_CONST ] = SHIFT 132
M [ 380 , IDENTIFIER ] = SHIFT 133
M [ 380 , INT_CONST ] = SHIFT 134
M [ 380 , OP_ADD ] = SHIFT 135
M [ 380 , OP_AND ] = SHIFT 136
M [ 380 , OP_DEC ] = SHIFT 137
M [ 380 , OP_INC ] = SHIFT 138
M [ 380 , OP_LNOT ] = SHIFT 139
M [ 380 , OP_MUL ] = SHIFT 140
M [ 380 , OP_NOT ] = SHIFT 141
M [ 380 , OP_SUB ] = SHIFT 142
M [ 380 , STR_LITERAL ] = SHIFT 143
M [ 380 , break ] = SHIFT 144
M [ 380 , case ] = SHIFT 145
M [ 380 , continue ] = SHIFT 146
M [ 380 , default ] = SHIFT 147
M [ 380 , do ] = SHIFT 148
M [ 380 , for ] = SHIFT 149
M [ 380 , goto ] = SHIFT 150
M [ 380 , if ] = SHIFT 151
M [ 380 , return ] = SHIFT 152
M [ 380 , sizeof ] = SHIFT 153
M [ 380 , switch ] = SHIFT 154
M [ 380 , while ] = SHIFT 155
M [ 381 , while ] = REDUCE <stmt> -> <comp-stmt> 
M [ 382 , while ] = REDUCE <stmt> -> <expr-stmt> 
M [ 383 , DELIM_COMMA ] = SHIFT 261
M [ 383 , DELIM_SEMICOLON ] = SHIFT 743
M [ 384 , while ] = REDUCE <stmt> -> <iter-stmt> 
M [ 385 , while ] = REDUCE <stmt> -> <jump-stmt> 
M [ 386 , while ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 387 , while ] = REDUCE <stmt> -> <sele-stmt> 
M [ 388 , while ] = SHIFT 744
M [ 389 , <additive-expr> ] = GOTO 96
M [ 389 , <and-expr> ] = GOTO 97
M [ 389 , <asn-expr> ] = GOTO 98
M [ 389 , <blk-item-list> ] = GOTO 745
M [ 389 , <blk-item> ] = GOTO 100
M [ 389 , <cast-expr> ] = GOTO 101
M [ 389 , <comp-stmt> ] = GOTO 102
M [ 389 , <cond-expr> ] = GOTO 103
M [ 389 , <constant> ] = GOTO 104
M [ 389 , <decl-spec> ] = GOTO 105
M [ 389 , <decl> ] = GOTO 106
M [ 389 , <enum-spec> ] = GOTO 3
M [ 389 , <eq-expr> ] = GOTO 107
M [ 389 , <exc-or-expr> ] = GOTO 108
M [ 389 , <expr-stmt> ] = GOTO 109
M [ 389 , <expr> ] = GOTO 110
M [ 389 , <inc-or-expr> ] = GOTO 111
M [ 389 , <iter-stmt> ] = GOTO 112
M [ 389 , <jump-stmt> ] = GOTO 113
M [ 389 , <labeled-stmt> ] = GOTO 114
M [ 389 , <land-expr> ] = GOTO 115
M [ 389 , <lor-expr> ] = GOTO 116
M [ 389 , <multiplicative-expr> ] = GOTO 117
M [ 389 , <num-const> ] = GOTO 118
M [ 389 , <postfix-expr> ] = GOTO 119
M [ 389 , <prim-expr> ] = GOTO 120
M [ 389 , <rel-expr> ] = GOTO 121
M [ 389 , <sele-stmt> ] = GOTO 122
M [ 389 , <shift-expr> ] = GOTO 123
M [ 389 , <stmt> ] = GOTO 124
M [ 389 , <storage-class-spec> ] = GOTO 6
M [ 389 , <struct-union-spec> ] = GOTO 7
M [ 389 , <struct-union> ] = GOTO 8
M [ 389 , <type-qual> ] = GOTO 10
M [ 389 , <type-spec> ] = GOTO 11
M [ 389 , <unary-expr> ] = GOTO 125
M [ 389 , <unary-op> ] = GOTO 126
M [ 389 , CHAR_CONST ] = SHIFT 127
M [ 389 , DELIM_LCURBRACE ] = SHIFT 128
M [ 389 , DELIM_LPAR ] = SHIFT 129
M [ 389 , DELIM_RCURBRACE ] = SHIFT 746
M [ 389 , DELIM_SEMICOLON ] = SHIFT 131
M [ 389 , FLOAT_CONST ] = SHIFT 132
M [ 389 , IDENTIFIER ] = SHIFT 133
M [ 389 , INT_CONST ] = SHIFT 134
M [ 389 , OP_ADD ] = SHIFT 135
M [ 389 , OP_AND ] = SHIFT 136
M [ 389 , OP_DEC ] = SHIFT 137
M [ 389 , OP_INC ] = SHIFT 138
M [ 389 , OP_LNOT ] = SHIFT 139
M [ 389 , OP_MUL ] = SHIFT 140
M [ 389 , OP_NOT ] = SHIFT 141
M [ 389 , OP_SUB ] = SHIFT 142
M [ 389 , STR_LITERAL ] = SHIFT 143
M [ 389 , break ] = SHIFT 144
M [ 389 , case ] = SHIFT 145
M [ 389 , char ] = SHIFT 12
M [ 389 , const ] = SHIFT 13
M [ 389 , continue ] = SHIFT 146
M [ 389 , default ] = SHIFT 147
M [ 389 , do ] = SHIFT 148
M [ 389 , double ] = SHIFT 14
M [ 389 , enum ] = SHIFT 15
M [ 389 , float ] = SHIFT 16
M [ 389 , for ] = SHIFT 149
M [ 389 , goto ] = SHIFT 150
M [ 389 , if ] = SHIFT 151
M [ 389 , int ] = SHIFT 17
M [ 389 , long ] = SHIFT 18
M [ 389 , return ] = SHIFT 152
M [ 389 , short ] = SHIFT 19
M [ 389 , signed ] = SHIFT 20
M [ 389 , sizeof ] = SHIFT 153
M [ 389 , struct ] = SHIFT 21
M [ 389 , switch ] = SHIFT 154
M [ 389 , typedef ] = SHIFT 22
M [ 389 , unsigned ] = SHIFT 23
M [ 389 , void ] = SHIFT 24
M [ 389 , while ] = SHIFT 155
M [ 390 , while ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 391 , DELIM_COLON ] = SHIFT 747
M [ 391 , DELIM_COMMA ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , DELIM_LPAR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , DELIM_QUESTION ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , DELIM_SEMICOLON ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_ADD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_ADDASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_AND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_ANDASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_ARROW ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_ASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_DEC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_DIV ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_DIVASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_DOT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_EQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_GE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_GT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_INC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_LAND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_LE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_LOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_LT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_MOD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_MODASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_MUL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_MULASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_NEQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_OR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_ORASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_SHL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_SHLASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_SHR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_SHRASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_SUB ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_SUBASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_XOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 391 , OP_XORASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 392 , DELIM_SEMICOLON ] = SHIFT 748
M [ 393 , <additive-expr> ] = GOTO 351
M [ 393 , <and-expr> ] = GOTO 352
M [ 393 , <cast-expr> ] = GOTO 353
M [ 393 , <cond-expr> ] = GOTO 354
M [ 393 , <const-expr> ] = GOTO 749
M [ 393 , <constant> ] = GOTO 356
M [ 393 , <eq-expr> ] = GOTO 357
M [ 393 , <exc-or-expr> ] = GOTO 358
M [ 393 , <inc-or-expr> ] = GOTO 359
M [ 393 , <land-expr> ] = GOTO 360
M [ 393 , <lor-expr> ] = GOTO 361
M [ 393 , <multiplicative-expr> ] = GOTO 362
M [ 393 , <num-const> ] = GOTO 363
M [ 393 , <postfix-expr> ] = GOTO 364
M [ 393 , <prim-expr> ] = GOTO 365
M [ 393 , <rel-expr> ] = GOTO 366
M [ 393 , <shift-expr> ] = GOTO 367
M [ 393 , <unary-expr> ] = GOTO 368
M [ 393 , <unary-op> ] = GOTO 369
M [ 393 , CHAR_CONST ] = SHIFT 370
M [ 393 , DELIM_LPAR ] = SHIFT 371
M [ 393 , FLOAT_CONST ] = SHIFT 372
M [ 393 , IDENTIFIER ] = SHIFT 373
M [ 393 , INT_CONST ] = SHIFT 374
M [ 393 , OP_ADD ] = SHIFT 135
M [ 393 , OP_AND ] = SHIFT 136
M [ 393 , OP_DEC ] = SHIFT 375
M [ 393 , OP_INC ] = SHIFT 376
M [ 393 , OP_LNOT ] = SHIFT 139
M [ 393 , OP_MUL ] = SHIFT 140
M [ 393 , OP_NOT ] = SHIFT 141
M [ 393 , OP_SUB ] = SHIFT 142
M [ 393 , STR_LITERAL ] = SHIFT 377
M [ 393 , sizeof ] = SHIFT 378
M [ 394 , DELIM_SEMICOLON ] = SHIFT 750
M [ 395 , DELIM_COLON ] = SHIFT 751
M [ 396 , <additive-expr> ] = GOTO 96
M [ 396 , <and-expr> ] = GOTO 97
M [ 396 , <asn-expr> ] = GOTO 98
M [ 396 , <cast-expr> ] = GOTO 101
M [ 396 , <comp-stmt> ] = GOTO 381
M [ 396 , <cond-expr> ] = GOTO 103
M [ 396 , <constant> ] = GOTO 104
M [ 396 , <eq-expr> ] = GOTO 107
M [ 396 , <exc-or-expr> ] = GOTO 108
M [ 396 , <expr-stmt> ] = GOTO 382
M [ 396 , <expr> ] = GOTO 383
M [ 396 , <inc-or-expr> ] = GOTO 111
M [ 396 , <iter-stmt> ] = GOTO 384
M [ 396 , <jump-stmt> ] = GOTO 385
M [ 396 , <labeled-stmt> ] = GOTO 386
M [ 396 , <land-expr> ] = GOTO 115
M [ 396 , <lor-expr> ] = GOTO 116
M [ 396 , <multiplicative-expr> ] = GOTO 117
M [ 396 , <num-const> ] = GOTO 118
M [ 396 , <postfix-expr> ] = GOTO 119
M [ 396 , <prim-expr> ] = GOTO 120
M [ 396 , <rel-expr> ] = GOTO 121
M [ 396 , <sele-stmt> ] = GOTO 387
M [ 396 , <shift-expr> ] = GOTO 123
M [ 396 , <stmt> ] = GOTO 752
M [ 396 , <unary-expr> ] = GOTO 125
M [ 396 , <unary-op> ] = GOTO 126
M [ 396 , CHAR_CONST ] = SHIFT 127
M [ 396 , DELIM_LCURBRACE ] = SHIFT 389
M [ 396 , DELIM_LPAR ] = SHIFT 129
M [ 396 , DELIM_SEMICOLON ] = SHIFT 390
M [ 396 , FLOAT_CONST ] = SHIFT 132
M [ 396 , IDENTIFIER ] = SHIFT 391
M [ 396 , INT_CONST ] = SHIFT 134
M [ 396 , OP_ADD ] = SHIFT 135
M [ 396 , OP_AND ] = SHIFT 136
M [ 396 , OP_DEC ] = SHIFT 137
M [ 396 , OP_INC ] = SHIFT 138
M [ 396 , OP_LNOT ] = SHIFT 139
M [ 396 , OP_MUL ] = SHIFT 140
M [ 396 , OP_NOT ] = SHIFT 141
M [ 396 , OP_SUB ] = SHIFT 142
M [ 396 , STR_LITERAL ] = SHIFT 143
M [ 396 , break ] = SHIFT 392
M [ 396 , case ] = SHIFT 393
M [ 396 , continue ] = SHIFT 394
M [ 396 , default ] = SHIFT 395
M [ 396 , do ] = SHIFT 396
M [ 396 , for ] = SHIFT 397
M [ 396 , goto ] = SHIFT 398
M [ 396 , if ] = SHIFT 399
M [ 396 , return ] = SHIFT 400
M [ 396 , sizeof ] = SHIFT 153
M [ 396 , switch ] = SHIFT 401
M [ 396 , while ] = SHIFT 402
M [ 397 , DELIM_LPAR ] = SHIFT 753
M [ 398 , DELIM_SEMICOLON ] = SHIFT 754
M [ 399 , DELIM_LPAR ] = SHIFT 755
M [ 400 , <additive-expr> ] = GOTO 96
M [ 400 , <and-expr> ] = GOTO 97
M [ 400 , <asn-expr> ] = GOTO 98
M [ 400 , <cast-expr> ] = GOTO 101
M [ 400 , <cond-expr> ] = GOTO 103
M [ 400 , <constant> ] = GOTO 104
M [ 400 , <eq-expr> ] = GOTO 107
M [ 400 , <exc-or-expr> ] = GOTO 108
M [ 400 , <expr> ] = GOTO 756
M [ 400 , <inc-or-expr> ] = GOTO 111
M [ 400 , <land-expr> ] = GOTO 115
M [ 400 , <lor-expr> ] = GOTO 116
M [ 400 , <multiplicative-expr> ] = GOTO 117
M [ 400 , <num-const> ] = GOTO 118
M [ 400 , <postfix-expr> ] = GOTO 119
M [ 400 , <prim-expr> ] = GOTO 120
M [ 400 , <rel-expr> ] = GOTO 121
M [ 400 , <shift-expr> ] = GOTO 123
M [ 400 , <unary-expr> ] = GOTO 125
M [ 400 , <unary-op> ] = GOTO 126
M [ 400 , CHAR_CONST ] = SHIFT 127
M [ 400 , DELIM_LPAR ] = SHIFT 129
M [ 400 , DELIM_SEMICOLON ] = SHIFT 757
M [ 400 , FLOAT_CONST ] = SHIFT 132
M [ 400 , IDENTIFIER ] = SHIFT 159
M [ 400 , INT_CONST ] = SHIFT 134
M [ 400 , OP_ADD ] = SHIFT 135
M [ 400 , OP_AND ] = SHIFT 136
M [ 400 , OP_DEC ] = SHIFT 137
M [ 400 , OP_INC ] = SHIFT 138
M [ 400 , OP_LNOT ] = SHIFT 139
M [ 400 , OP_MUL ] = SHIFT 140
M [ 400 , OP_NOT ] = SHIFT 141
M [ 400 , OP_SUB ] = SHIFT 142
M [ 400 , STR_LITERAL ] = SHIFT 143
M [ 400 , sizeof ] = SHIFT 153
M [ 401 , DELIM_LPAR ] = SHIFT 758
M [ 402 , DELIM_LPAR ] = SHIFT 759
M [ 403 , <additive-expr> ] = GOTO 96
M [ 403 , <and-expr> ] = GOTO 97
M [ 403 , <asn-expr> ] = GOTO 98
M [ 403 , <cast-expr> ] = GOTO 101
M [ 403 , <cond-expr> ] = GOTO 103
M [ 403 , <constant> ] = GOTO 104
M [ 403 , <decl-spec> ] = GOTO 760
M [ 403 , <decl> ] = GOTO 761
M [ 403 , <enum-spec> ] = GOTO 3
M [ 403 , <eq-expr> ] = GOTO 107
M [ 403 , <exc-or-expr> ] = GOTO 108
M [ 403 , <expr> ] = GOTO 762
M [ 403 , <for-cond> ] = GOTO 763
M [ 403 , <inc-or-expr> ] = GOTO 111
M [ 403 , <land-expr> ] = GOTO 115
M [ 403 , <lor-expr> ] = GOTO 116
M [ 403 , <multiplicative-expr> ] = GOTO 117
M [ 403 , <num-const> ] = GOTO 118
M [ 403 , <postfix-expr> ] = GOTO 119
M [ 403 , <prim-expr> ] = GOTO 120
M [ 403 , <rel-expr> ] = GOTO 121
M [ 403 , <shift-expr> ] = GOTO 123
M [ 403 , <storage-class-spec> ] = GOTO 6
M [ 403 , <struct-union-spec> ] = GOTO 7
M [ 403 , <struct-union> ] = GOTO 8
M [ 403 , <type-qual> ] = GOTO 10
M [ 403 , <type-spec> ] = GOTO 11
M [ 403 , <unary-expr> ] = GOTO 125
M [ 403 , <unary-op> ] = GOTO 126
M [ 403 , CHAR_CONST ] = SHIFT 127
M [ 403 , DELIM_LPAR ] = SHIFT 129
M [ 403 , DELIM_SEMICOLON ] = SHIFT 764
M [ 403 , FLOAT_CONST ] = SHIFT 132
M [ 403 , IDENTIFIER ] = SHIFT 159
M [ 403 , INT_CONST ] = SHIFT 134
M [ 403 , OP_ADD ] = SHIFT 135
M [ 403 , OP_AND ] = SHIFT 136
M [ 403 , OP_DEC ] = SHIFT 137
M [ 403 , OP_INC ] = SHIFT 138
M [ 403 , OP_LNOT ] = SHIFT 139
M [ 403 , OP_MUL ] = SHIFT 140
M [ 403 , OP_NOT ] = SHIFT 141
M [ 403 , OP_SUB ] = SHIFT 142
M [ 403 , STR_LITERAL ] = SHIFT 143
M [ 403 , char ] = SHIFT 12
M [ 403 , const ] = SHIFT 13
M [ 403 , double ] = SHIFT 14
M [ 403 , enum ] = SHIFT 15
M [ 403 , float ] = SHIFT 16
M [ 403 , int ] = SHIFT 17
M [ 403 , long ] = SHIFT 18
M [ 403 , short ] = SHIFT 19
M [ 403 , signed ] = SHIFT 20
M [ 403 , sizeof ] = SHIFT 153
M [ 403 , struct ] = SHIFT 21
M [ 403 , typedef ] = SHIFT 22
M [ 403 , unsigned ] = SHIFT 23
M [ 403 , void ] = SHIFT 24
M [ 404 , CHAR_CONST ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , DELIM_LCURBRACE ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , DELIM_LPAR ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , DELIM_RCURBRACE ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , DELIM_SEMICOLON ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , FLOAT_CONST ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , IDENTIFIER ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , INT_CONST ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , OP_ADD ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , OP_AND ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , OP_DEC ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , OP_INC ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , OP_LNOT ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , OP_MUL ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , OP_NOT ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , OP_SUB ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , STR_LITERAL ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , break ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , case ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , char ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , const ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , continue ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , default ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , do ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , double ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , enum ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , float ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , for ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , goto ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , if ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , int ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , long ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , return ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , short ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , signed ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , sizeof ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , struct ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , switch ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , typedef ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , unsigned ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , void ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 404 , while ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 405 , <additive-expr> ] = GOTO 299
M [ 405 , <and-expr> ] = GOTO 300
M [ 405 , <asn-expr> ] = GOTO 301
M [ 405 , <cast-expr> ] = GOTO 302
M [ 405 , <cond-expr> ] = GOTO 303
M [ 405 , <constant> ] = GOTO 304
M [ 405 , <eq-expr> ] = GOTO 306
M [ 405 , <exc-or-expr> ] = GOTO 307
M [ 405 , <expr> ] = GOTO 765
M [ 405 , <inc-or-expr> ] = GOTO 309
M [ 405 , <land-expr> ] = GOTO 310
M [ 405 , <lor-expr> ] = GOTO 311
M [ 405 , <multiplicative-expr> ] = GOTO 312
M [ 405 , <num-const> ] = GOTO 313
M [ 405 , <postfix-expr> ] = GOTO 314
M [ 405 , <prim-expr> ] = GOTO 315
M [ 405 , <rel-expr> ] = GOTO 316
M [ 405 , <shift-expr> ] = GOTO 317
M [ 405 , <unary-expr> ] = GOTO 324
M [ 405 , <unary-op> ] = GOTO 325
M [ 405 , CHAR_CONST ] = SHIFT 326
M [ 405 , DELIM_LPAR ] = SHIFT 327
M [ 405 , FLOAT_CONST ] = SHIFT 328
M [ 405 , IDENTIFIER ] = SHIFT 329
M [ 405 , INT_CONST ] = SHIFT 330
M [ 405 , OP_ADD ] = SHIFT 135
M [ 405 , OP_AND ] = SHIFT 136
M [ 405 , OP_DEC ] = SHIFT 331
M [ 405 , OP_INC ] = SHIFT 332
M [ 405 , OP_LNOT ] = SHIFT 139
M [ 405 , OP_MUL ] = SHIFT 140
M [ 405 , OP_NOT ] = SHIFT 141
M [ 405 , OP_SUB ] = SHIFT 142
M [ 405 , STR_LITERAL ] = SHIFT 333
M [ 405 , sizeof ] = SHIFT 343
M [ 406 , DELIM_COMMA ] = SHIFT 261
M [ 406 , DELIM_SEMICOLON ] = SHIFT 766
M [ 407 , CHAR_CONST ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , DELIM_LCURBRACE ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , DELIM_LPAR ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , DELIM_RCURBRACE ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , DELIM_SEMICOLON ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , FLOAT_CONST ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , IDENTIFIER ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , INT_CONST ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , OP_ADD ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , OP_AND ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , OP_DEC ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , OP_INC ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , OP_LNOT ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , OP_MUL ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , OP_NOT ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , OP_SUB ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , STR_LITERAL ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , break ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , case ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , char ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , const ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , continue ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , default ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , do ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , double ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , enum ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , float ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , for ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , goto ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , if ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , int ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , long ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , return ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , short ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , signed ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , sizeof ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , struct ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , switch ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , typedef ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , unsigned ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , void ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 407 , while ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 408 , DELIM_COMMA ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , DELIM_QUESTION ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , DELIM_SEMICOLON ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_ADD ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_ADDASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_AND ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_ANDASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_ASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_DIV ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_DIVASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_EQ ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_GE ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_GT ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_LAND ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_LE ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_LOR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_LT ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_MOD ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_MODASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_MUL ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_MULASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_NEQ ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_OR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_ORASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_SHL ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_SHLASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_SHR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_SHRASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_SUB ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_SUBASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_XOR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 408 , OP_XORASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 409 , <additive-expr> ] = GOTO 299
M [ 409 , <and-expr> ] = GOTO 300
M [ 409 , <asn-expr> ] = GOTO 301
M [ 409 , <cast-expr> ] = GOTO 302
M [ 409 , <cond-expr> ] = GOTO 303
M [ 409 , <constant> ] = GOTO 304
M [ 409 , <enum-spec> ] = GOTO 305
M [ 409 , <eq-expr> ] = GOTO 306
M [ 409 , <exc-or-expr> ] = GOTO 307
M [ 409 , <expr> ] = GOTO 308
M [ 409 , <inc-or-expr> ] = GOTO 309
M [ 409 , <land-expr> ] = GOTO 310
M [ 409 , <lor-expr> ] = GOTO 311
M [ 409 , <multiplicative-expr> ] = GOTO 312
M [ 409 , <num-const> ] = GOTO 313
M [ 409 , <postfix-expr> ] = GOTO 314
M [ 409 , <prim-expr> ] = GOTO 315
M [ 409 , <rel-expr> ] = GOTO 316
M [ 409 , <shift-expr> ] = GOTO 317
M [ 409 , <spec-qual-list> ] = GOTO 318
M [ 409 , <struct-union-spec> ] = GOTO 319
M [ 409 , <struct-union> ] = GOTO 320
M [ 409 , <type-name> ] = GOTO 767
M [ 409 , <type-qual> ] = GOTO 322
M [ 409 , <type-spec> ] = GOTO 323
M [ 409 , <unary-expr> ] = GOTO 324
M [ 409 , <unary-op> ] = GOTO 325
M [ 409 , CHAR_CONST ] = SHIFT 326
M [ 409 , DELIM_LPAR ] = SHIFT 327
M [ 409 , FLOAT_CONST ] = SHIFT 328
M [ 409 , IDENTIFIER ] = SHIFT 329
M [ 409 , INT_CONST ] = SHIFT 330
M [ 409 , OP_ADD ] = SHIFT 135
M [ 409 , OP_AND ] = SHIFT 136
M [ 409 , OP_DEC ] = SHIFT 331
M [ 409 , OP_INC ] = SHIFT 332
M [ 409 , OP_LNOT ] = SHIFT 139
M [ 409 , OP_MUL ] = SHIFT 140
M [ 409 , OP_NOT ] = SHIFT 141
M [ 409 , OP_SUB ] = SHIFT 142
M [ 409 , STR_LITERAL ] = SHIFT 333
M [ 409 , char ] = SHIFT 334
M [ 409 , const ] = SHIFT 335
M [ 409 , double ] = SHIFT 336
M [ 409 , enum ] = SHIFT 337
M [ 409 , float ] = SHIFT 338
M [ 409 , int ] = SHIFT 339
M [ 409 , long ] = SHIFT 340
M [ 409 , short ] = SHIFT 341
M [ 409 , signed ] = SHIFT 342
M [ 409 , sizeof ] = SHIFT 343
M [ 409 , struct ] = SHIFT 21
M [ 409 , unsigned ] = SHIFT 344
M [ 409 , void ] = SHIFT 345
M [ 410 , <additive-expr> ] = GOTO 299
M [ 410 , <and-expr> ] = GOTO 300
M [ 410 , <asn-expr> ] = GOTO 301
M [ 410 , <cast-expr> ] = GOTO 302
M [ 410 , <cond-expr> ] = GOTO 303
M [ 410 , <constant> ] = GOTO 304
M [ 410 , <eq-expr> ] = GOTO 306
M [ 410 , <exc-or-expr> ] = GOTO 307
M [ 410 , <expr> ] = GOTO 768
M [ 410 , <inc-or-expr> ] = GOTO 309
M [ 410 , <land-expr> ] = GOTO 310
M [ 410 , <lor-expr> ] = GOTO 311
M [ 410 , <multiplicative-expr> ] = GOTO 312
M [ 410 , <num-const> ] = GOTO 313
M [ 410 , <postfix-expr> ] = GOTO 314
M [ 410 , <prim-expr> ] = GOTO 315
M [ 410 , <rel-expr> ] = GOTO 316
M [ 410 , <shift-expr> ] = GOTO 317
M [ 410 , <unary-expr> ] = GOTO 324
M [ 410 , <unary-op> ] = GOTO 325
M [ 410 , CHAR_CONST ] = SHIFT 326
M [ 410 , DELIM_LPAR ] = SHIFT 327
M [ 410 , FLOAT_CONST ] = SHIFT 328
M [ 410 , IDENTIFIER ] = SHIFT 329
M [ 410 , INT_CONST ] = SHIFT 330
M [ 410 , OP_ADD ] = SHIFT 135
M [ 410 , OP_AND ] = SHIFT 136
M [ 410 , OP_DEC ] = SHIFT 331
M [ 410 , OP_INC ] = SHIFT 332
M [ 410 , OP_LNOT ] = SHIFT 139
M [ 410 , OP_MUL ] = SHIFT 140
M [ 410 , OP_NOT ] = SHIFT 141
M [ 410 , OP_SUB ] = SHIFT 142
M [ 410 , STR_LITERAL ] = SHIFT 333
M [ 410 , sizeof ] = SHIFT 343
M [ 411 , <additive-expr> ] = GOTO 299
M [ 411 , <and-expr> ] = GOTO 300
M [ 411 , <asn-expr> ] = GOTO 301
M [ 411 , <cast-expr> ] = GOTO 302
M [ 411 , <cond-expr> ] = GOTO 303
M [ 411 , <constant> ] = GOTO 304
M [ 411 , <eq-expr> ] = GOTO 306
M [ 411 , <exc-or-expr> ] = GOTO 307
M [ 411 , <expr> ] = GOTO 769
M [ 411 , <inc-or-expr> ] = GOTO 309
M [ 411 , <land-expr> ] = GOTO 310
M [ 411 , <lor-expr> ] = GOTO 311
M [ 411 , <multiplicative-expr> ] = GOTO 312
M [ 411 , <num-const> ] = GOTO 313
M [ 411 , <postfix-expr> ] = GOTO 314
M [ 411 , <prim-expr> ] = GOTO 315
M [ 411 , <rel-expr> ] = GOTO 316
M [ 411 , <shift-expr> ] = GOTO 317
M [ 411 , <unary-expr> ] = GOTO 324
M [ 411 , <unary-op> ] = GOTO 325
M [ 411 , CHAR_CONST ] = SHIFT 326
M [ 411 , DELIM_LPAR ] = SHIFT 327
M [ 411 , FLOAT_CONST ] = SHIFT 328
M [ 411 , IDENTIFIER ] = SHIFT 329
M [ 411 , INT_CONST ] = SHIFT 330
M [ 411 , OP_ADD ] = SHIFT 135
M [ 411 , OP_AND ] = SHIFT 136
M [ 411 , OP_DEC ] = SHIFT 331
M [ 411 , OP_INC ] = SHIFT 332
M [ 411 , OP_LNOT ] = SHIFT 139
M [ 411 , OP_MUL ] = SHIFT 140
M [ 411 , OP_NOT ] = SHIFT 141
M [ 411 , OP_SUB ] = SHIFT 142
M [ 411 , STR_LITERAL ] = SHIFT 333
M [ 411 , sizeof ] = SHIFT 343
M [ 412 , DELIM_COMMA ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 412 , DELIM_QUESTION ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 412 , DELIM_RCURBRACE ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 412 , OP_ADD ] = SHIFT 770
M [ 412 , OP_AND ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 412 , OP_EQ ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 412 , OP_GE ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 412 , OP_GT ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 412 , OP_LAND ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 412 , OP_LE ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 412 , OP_LOR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 412 , OP_LT ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 412 , OP_NEQ ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 412 , OP_OR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 412 , OP_SHL ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 412 , OP_SHR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 412 , OP_SUB ] = SHIFT 771
M [ 412 , OP_XOR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 413 , DELIM_COMMA ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 413 , DELIM_QUESTION ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 413 , DELIM_RCURBRACE ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 413 , OP_AND ] = SHIFT 772
M [ 413 , OP_LAND ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 413 , OP_LOR ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 413 , OP_OR ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 413 , OP_XOR ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 414 , DELIM_COMMA ] = REDUCE <initializer> -> <asn-expr> 
M [ 414 , DELIM_RCURBRACE ] = REDUCE <initializer> -> <asn-expr> 
M [ 415 , DELIM_COMMA ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 415 , DELIM_QUESTION ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 415 , DELIM_RCURBRACE ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 415 , OP_ADD ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 415 , OP_AND ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 415 , OP_DIV ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 415 , OP_EQ ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 415 , OP_GE ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 415 , OP_GT ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 415 , OP_LAND ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 415 , OP_LE ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 415 , OP_LOR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 415 , OP_LT ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 415 , OP_MOD ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 415 , OP_MUL ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 415 , OP_NEQ ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 415 , OP_OR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 415 , OP_SHL ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 415 , OP_SHR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 415 , OP_SUB ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 415 , OP_XOR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 416 , DELIM_COMMA ] = REDUCE <asn-expr> -> <cond-expr> 
M [ 416 , DELIM_RCURBRACE ] = REDUCE <asn-expr> -> <cond-expr> 
M [ 417 , DELIM_COMMA ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , DELIM_LPAR ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , DELIM_QUESTION ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , DELIM_RCURBRACE ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_ADD ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_ADDASN ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_AND ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_ANDASN ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_ARROW ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_ASN ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_DEC ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_DIV ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_DIVASN ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_DOT ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_EQ ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_GE ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_GT ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_INC ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_LAND ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_LE ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_LOR ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_LT ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_MOD ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_MODASN ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_MUL ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_MULASN ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_NEQ ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_OR ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_ORASN ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_SHL ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_SHLASN ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_SHR ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_SHRASN ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_SUB ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_SUBASN ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_XOR ] = REDUCE <prim-expr> -> <constant> 
M [ 417 , OP_XORASN ] = REDUCE <prim-expr> -> <constant> 
M [ 418 , <additive-expr> ] = GOTO 412
M [ 418 , <and-expr> ] = GOTO 413
M [ 418 , <asn-expr> ] = GOTO 414
M [ 418 , <cast-expr> ] = GOTO 415
M [ 418 , <cond-expr> ] = GOTO 416
M [ 418 , <constant> ] = GOTO 417
M [ 418 , <eq-expr> ] = GOTO 421
M [ 418 , <exc-or-expr> ] = GOTO 422
M [ 418 , <inc-or-expr> ] = GOTO 423
M [ 418 , <initializer> ] = GOTO 773
M [ 418 , <land-expr> ] = GOTO 426
M [ 418 , <lor-expr> ] = GOTO 427
M [ 418 , <multiplicative-expr> ] = GOTO 428
M [ 418 , <num-const> ] = GOTO 429
M [ 418 , <postfix-expr> ] = GOTO 430
M [ 418 , <prim-expr> ] = GOTO 431
M [ 418 , <rel-expr> ] = GOTO 432
M [ 418 , <shift-expr> ] = GOTO 433
M [ 418 , <unary-expr> ] = GOTO 434
M [ 418 , <unary-op> ] = GOTO 435
M [ 418 , CHAR_CONST ] = SHIFT 436
M [ 418 , DELIM_LCURBRACE ] = SHIFT 437
M [ 418 , DELIM_LPAR ] = SHIFT 438
M [ 418 , FLOAT_CONST ] = SHIFT 440
M [ 418 , IDENTIFIER ] = SHIFT 441
M [ 418 , INT_CONST ] = SHIFT 442
M [ 418 , OP_ADD ] = SHIFT 135
M [ 418 , OP_AND ] = SHIFT 136
M [ 418 , OP_DEC ] = SHIFT 443
M [ 418 , OP_INC ] = SHIFT 445
M [ 418 , OP_LNOT ] = SHIFT 139
M [ 418 , OP_MUL ] = SHIFT 140
M [ 418 , OP_NOT ] = SHIFT 141
M [ 418 , OP_SUB ] = SHIFT 142
M [ 418 , STR_LITERAL ] = SHIFT 446
M [ 418 , sizeof ] = SHIFT 447
M [ 419 , <designator> ] = GOTO 774
M [ 419 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 419 , OP_ASN ] = SHIFT 775
M [ 419 , OP_DOT ] = SHIFT 444
M [ 420 , DELIM_LSQBRACKET ] = REDUCE <designator-list> -> <designator> 
M [ 420 , OP_ASN ] = REDUCE <designator-list> -> <designator> 
M [ 420 , OP_DOT ] = REDUCE <designator-list> -> <designator> 
M [ 421 , DELIM_COMMA ] = REDUCE <and-expr> -> <eq-expr> 
M [ 421 , DELIM_QUESTION ] = REDUCE <and-expr> -> <eq-expr> 
M [ 421 , DELIM_RCURBRACE ] = REDUCE <and-expr> -> <eq-expr> 
M [ 421 , OP_AND ] = REDUCE <and-expr> -> <eq-expr> 
M [ 421 , OP_EQ ] = SHIFT 776
M [ 421 , OP_LAND ] = REDUCE <and-expr> -> <eq-expr> 
M [ 421 , OP_LOR ] = REDUCE <and-expr> -> <eq-expr> 
M [ 421 , OP_NEQ ] = SHIFT 777
M [ 421 , OP_OR ] = REDUCE <and-expr> -> <eq-expr> 
M [ 421 , OP_XOR ] = REDUCE <and-expr> -> <eq-expr> 
M [ 422 , DELIM_COMMA ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 422 , DELIM_QUESTION ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 422 , DELIM_RCURBRACE ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 422 , OP_LAND ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 422 , OP_LOR ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 422 , OP_OR ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 422 , OP_XOR ] = SHIFT 778
M [ 423 , DELIM_COMMA ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 423 , DELIM_QUESTION ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 423 , DELIM_RCURBRACE ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 423 , OP_LAND ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 423 , OP_LOR ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 423 , OP_OR ] = SHIFT 779
M [ 424 , DELIM_COMMA ] = SHIFT 780
M [ 424 , DELIM_RCURBRACE ] = SHIFT 781
M [ 425 , DELIM_COMMA ] = REDUCE <initializer-list> -> <initializer> 
M [ 425 , DELIM_RCURBRACE ] = REDUCE <initializer-list> -> <initializer> 
M [ 426 , DELIM_COMMA ] = REDUCE <lor-expr> -> <land-expr> 
M [ 426 , DELIM_QUESTION ] = REDUCE <lor-expr> -> <land-expr> 
M [ 426 , DELIM_RCURBRACE ] = REDUCE <lor-expr> -> <land-expr> 
M [ 426 , OP_LAND ] = SHIFT 782
M [ 426 , OP_LOR ] = REDUCE <lor-expr> -> <land-expr> 
M [ 427 , DELIM_COMMA ] = REDUCE <cond-expr> -> <lor-expr> 
M [ 427 , DELIM_QUESTION ] = SHIFT 783
M [ 427 , DELIM_RCURBRACE ] = REDUCE <cond-expr> -> <lor-expr> 
M [ 427 , OP_LOR ] = SHIFT 784
M [ 428 , DELIM_COMMA ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 428 , DELIM_QUESTION ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 428 , DELIM_RCURBRACE ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 428 , OP_ADD ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 428 , OP_AND ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 428 , OP_DIV ] = SHIFT 785
M [ 428 , OP_EQ ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 428 , OP_GE ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 428 , OP_GT ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 428 , OP_LAND ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 428 , OP_LE ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 428 , OP_LOR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 428 , OP_LT ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 428 , OP_MOD ] = SHIFT 786
M [ 428 , OP_MUL ] = SHIFT 787
M [ 428 , OP_NEQ ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 428 , OP_OR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 428 , OP_SHL ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 428 , OP_SHR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 428 , OP_SUB ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 428 , OP_XOR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 429 , DELIM_COMMA ] = REDUCE <constant> -> <num-const> 
M [ 429 , DELIM_LPAR ] = REDUCE <constant> -> <num-const> 
M [ 429 , DELIM_LSQBRACKET ] = REDUCE <constant> -> <num-const> 
M [ 429 , DELIM_QUESTION ] = REDUCE <constant> -> <num-const> 
M [ 429 , DELIM_RCURBRACE ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_ADD ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_ADDASN ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_AND ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_ANDASN ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_ARROW ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_ASN ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_DEC ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_DIV ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_DIVASN ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_DOT ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_EQ ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_GE ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_GT ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_INC ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_LAND ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_LE ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_LOR ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_LT ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_MOD ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_MODASN ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_MUL ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_MULASN ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_NEQ ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_OR ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_ORASN ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_SHL ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_SHLASN ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_SHR ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_SHRASN ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_SUB ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_SUBASN ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_XOR ] = REDUCE <constant> -> <num-const> 
M [ 429 , OP_XORASN ] = REDUCE <constant> -> <num-const> 
M [ 430 , DELIM_COMMA ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , DELIM_LPAR ] = SHIFT 788
M [ 430 , DELIM_LSQBRACKET ] = SHIFT 789
M [ 430 , DELIM_QUESTION ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , DELIM_RCURBRACE ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_ADD ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_ADDASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_AND ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_ANDASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_ARROW ] = SHIFT 790
M [ 430 , OP_ASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_DEC ] = SHIFT 791
M [ 430 , OP_DIV ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_DIVASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_DOT ] = SHIFT 792
M [ 430 , OP_EQ ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_GE ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_GT ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_INC ] = SHIFT 793
M [ 430 , OP_LAND ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_LE ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_LOR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_LT ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_MOD ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_MODASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_MUL ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_MULASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_NEQ ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_OR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_ORASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_SHL ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_SHLASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_SHR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_SHRASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_SUB ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_SUBASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_XOR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 430 , OP_XORASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 431 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , DELIM_RCURBRACE ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_ADD ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_ADDASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_AND ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_ANDASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_ARROW ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_ASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_DEC ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_DIV ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_DIVASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_DOT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_EQ ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_GE ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_GT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_INC ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_LAND ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_LE ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_LOR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_LT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_MOD ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_MODASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_MUL ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_MULASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_NEQ ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_OR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_ORASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_SHL ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_SHLASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_SHR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_SHRASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_SUB ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_SUBASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_XOR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 431 , OP_XORASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 432 , DELIM_COMMA ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 432 , DELIM_QUESTION ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 432 , DELIM_RCURBRACE ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 432 , OP_AND ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 432 , OP_EQ ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 432 , OP_GE ] = SHIFT 794
M [ 432 , OP_GT ] = SHIFT 795
M [ 432 , OP_LAND ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 432 , OP_LE ] = SHIFT 796
M [ 432 , OP_LOR ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 432 , OP_LT ] = SHIFT 797
M [ 432 , OP_NEQ ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 432 , OP_OR ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 432 , OP_XOR ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 433 , DELIM_COMMA ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 433 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 433 , DELIM_RCURBRACE ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 433 , OP_AND ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 433 , OP_EQ ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 433 , OP_GE ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 433 , OP_GT ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 433 , OP_LAND ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 433 , OP_LE ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 433 , OP_LOR ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 433 , OP_LT ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 433 , OP_NEQ ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 433 , OP_OR ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 433 , OP_SHL ] = SHIFT 798
M [ 433 , OP_SHR ] = SHIFT 799
M [ 433 , OP_XOR ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 434 , <asn-op> ] = GOTO 800
M [ 434 , DELIM_COMMA ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 434 , DELIM_QUESTION ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 434 , DELIM_RCURBRACE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 434 , OP_ADD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 434 , OP_ADDASN ] = SHIFT 283
M [ 434 , OP_AND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 434 , OP_ANDASN ] = SHIFT 284
M [ 434 , OP_ASN ] = SHIFT 285
M [ 434 , OP_DIV ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 434 , OP_DIVASN ] = SHIFT 286
M [ 434 , OP_EQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 434 , OP_GE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 434 , OP_GT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 434 , OP_LAND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 434 , OP_LE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 434 , OP_LOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 434 , OP_LT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 434 , OP_MOD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 434 , OP_MODASN ] = SHIFT 287
M [ 434 , OP_MUL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 434 , OP_MULASN ] = SHIFT 288
M [ 434 , OP_NEQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 434 , OP_OR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 434 , OP_ORASN ] = SHIFT 289
M [ 434 , OP_SHL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 434 , OP_SHLASN ] = SHIFT 290
M [ 434 , OP_SHR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 434 , OP_SHRASN ] = SHIFT 291
M [ 434 , OP_SUB ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 434 , OP_SUBASN ] = SHIFT 292
M [ 434 , OP_XOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 434 , OP_XORASN ] = SHIFT 293
M [ 435 , <cast-expr> ] = GOTO 801
M [ 435 , <constant> ] = GOTO 417
M [ 435 , <num-const> ] = GOTO 429
M [ 435 , <postfix-expr> ] = GOTO 430
M [ 435 , <prim-expr> ] = GOTO 431
M [ 435 , <unary-expr> ] = GOTO 802
M [ 435 , <unary-op> ] = GOTO 435
M [ 435 , CHAR_CONST ] = SHIFT 436
M [ 435 , DELIM_LPAR ] = SHIFT 803
M [ 435 , FLOAT_CONST ] = SHIFT 440
M [ 435 , IDENTIFIER ] = SHIFT 441
M [ 435 , INT_CONST ] = SHIFT 442
M [ 435 , OP_ADD ] = SHIFT 135
M [ 435 , OP_AND ] = SHIFT 136
M [ 435 , OP_DEC ] = SHIFT 443
M [ 435 , OP_INC ] = SHIFT 445
M [ 435 , OP_LNOT ] = SHIFT 139
M [ 435 , OP_MUL ] = SHIFT 140
M [ 435 , OP_NOT ] = SHIFT 141
M [ 435 , OP_SUB ] = SHIFT 142
M [ 435 , STR_LITERAL ] = SHIFT 446
M [ 435 , sizeof ] = SHIFT 447
M [ 436 , DELIM_COMMA ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , DELIM_LPAR ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , DELIM_LSQBRACKET ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , DELIM_QUESTION ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , DELIM_RCURBRACE ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_ADD ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_ADDASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_AND ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_ANDASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_ARROW ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_ASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_DEC ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_DIV ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_DIVASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_DOT ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_EQ ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_GE ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_GT ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_INC ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_LAND ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_LE ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_LOR ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_LT ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_MOD ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_MODASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_MUL ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_MULASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_NEQ ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_OR ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_ORASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_SHL ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_SHLASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_SHR ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_SHRASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_SUB ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_SUBASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_XOR ] = REDUCE <constant> -> CHAR_CONST 
M [ 436 , OP_XORASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 437 , <additive-expr> ] = GOTO 412
M [ 437 , <and-expr> ] = GOTO 413
M [ 437 , <asn-expr> ] = GOTO 414
M [ 437 , <cast-expr> ] = GOTO 415
M [ 437 , <cond-expr> ] = GOTO 416
M [ 437 , <constant> ] = GOTO 417
M [ 437 , <designation> ] = GOTO 418
M [ 437 , <designator-list> ] = GOTO 419
M [ 437 , <designator> ] = GOTO 420
M [ 437 , <eq-expr> ] = GOTO 421
M [ 437 , <exc-or-expr> ] = GOTO 422
M [ 437 , <inc-or-expr> ] = GOTO 423
M [ 437 , <initializer-list> ] = GOTO 804
M [ 437 , <initializer> ] = GOTO 425
M [ 437 , <land-expr> ] = GOTO 426
M [ 437 , <lor-expr> ] = GOTO 427
M [ 437 , <multiplicative-expr> ] = GOTO 428
M [ 437 , <num-const> ] = GOTO 429
M [ 437 , <postfix-expr> ] = GOTO 430
M [ 437 , <prim-expr> ] = GOTO 431
M [ 437 , <rel-expr> ] = GOTO 432
M [ 437 , <shift-expr> ] = GOTO 433
M [ 437 , <unary-expr> ] = GOTO 434
M [ 437 , <unary-op> ] = GOTO 435
M [ 437 , CHAR_CONST ] = SHIFT 436
M [ 437 , DELIM_LCURBRACE ] = SHIFT 437
M [ 437 , DELIM_LPAR ] = SHIFT 438
M [ 437 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 437 , FLOAT_CONST ] = SHIFT 440
M [ 437 , IDENTIFIER ] = SHIFT 441
M [ 437 , INT_CONST ] = SHIFT 442
M [ 437 , OP_ADD ] = SHIFT 135
M [ 437 , OP_AND ] = SHIFT 136
M [ 437 , OP_DEC ] = SHIFT 443
M [ 437 , OP_DOT ] = SHIFT 444
M [ 437 , OP_INC ] = SHIFT 445
M [ 437 , OP_LNOT ] = SHIFT 139
M [ 437 , OP_MUL ] = SHIFT 140
M [ 437 , OP_NOT ] = SHIFT 141
M [ 437 , OP_SUB ] = SHIFT 142
M [ 437 , STR_LITERAL ] = SHIFT 446
M [ 437 , sizeof ] = SHIFT 447
M [ 438 , <additive-expr> ] = GOTO 299
M [ 438 , <and-expr> ] = GOTO 300
M [ 438 , <asn-expr> ] = GOTO 301
M [ 438 , <cast-expr> ] = GOTO 302
M [ 438 , <cond-expr> ] = GOTO 303
M [ 438 , <constant> ] = GOTO 304
M [ 438 , <enum-spec> ] = GOTO 305
M [ 438 , <eq-expr> ] = GOTO 306
M [ 438 , <exc-or-expr> ] = GOTO 307
M [ 438 , <expr> ] = GOTO 805
M [ 438 , <inc-or-expr> ] = GOTO 309
M [ 438 , <land-expr> ] = GOTO 310
M [ 438 , <lor-expr> ] = GOTO 311
M [ 438 , <multiplicative-expr> ] = GOTO 312
M [ 438 , <num-const> ] = GOTO 313
M [ 438 , <postfix-expr> ] = GOTO 314
M [ 438 , <prim-expr> ] = GOTO 315
M [ 438 , <rel-expr> ] = GOTO 316
M [ 438 , <shift-expr> ] = GOTO 317
M [ 438 , <spec-qual-list> ] = GOTO 318
M [ 438 , <struct-union-spec> ] = GOTO 319
M [ 438 , <struct-union> ] = GOTO 320
M [ 438 , <type-name> ] = GOTO 806
M [ 438 , <type-qual> ] = GOTO 322
M [ 438 , <type-spec> ] = GOTO 323
M [ 438 , <unary-expr> ] = GOTO 324
M [ 438 , <unary-op> ] = GOTO 325
M [ 438 , CHAR_CONST ] = SHIFT 326
M [ 438 , DELIM_LPAR ] = SHIFT 327
M [ 438 , FLOAT_CONST ] = SHIFT 328
M [ 438 , IDENTIFIER ] = SHIFT 329
M [ 438 , INT_CONST ] = SHIFT 330
M [ 438 , OP_ADD ] = SHIFT 135
M [ 438 , OP_AND ] = SHIFT 136
M [ 438 , OP_DEC ] = SHIFT 331
M [ 438 , OP_INC ] = SHIFT 332
M [ 438 , OP_LNOT ] = SHIFT 139
M [ 438 , OP_MUL ] = SHIFT 140
M [ 438 , OP_NOT ] = SHIFT 141
M [ 438 , OP_SUB ] = SHIFT 142
M [ 438 , STR_LITERAL ] = SHIFT 333
M [ 438 , char ] = SHIFT 334
M [ 438 , const ] = SHIFT 335
M [ 438 , double ] = SHIFT 336
M [ 438 , enum ] = SHIFT 337
M [ 438 , float ] = SHIFT 338
M [ 438 , int ] = SHIFT 339
M [ 438 , long ] = SHIFT 340
M [ 438 , short ] = SHIFT 341
M [ 438 , signed ] = SHIFT 342
M [ 438 , sizeof ] = SHIFT 343
M [ 438 , struct ] = SHIFT 21
M [ 438 , unsigned ] = SHIFT 344
M [ 438 , void ] = SHIFT 345
M [ 439 , <additive-expr> ] = GOTO 185
M [ 439 , <and-expr> ] = GOTO 186
M [ 439 , <cast-expr> ] = GOTO 188
M [ 439 , <cond-expr> ] = GOTO 807
M [ 439 , <const-expr> ] = GOTO 808
M [ 439 , <constant> ] = GOTO 809
M [ 439 , <eq-expr> ] = GOTO 191
M [ 439 , <exc-or-expr> ] = GOTO 192
M [ 439 , <inc-or-expr> ] = GOTO 193
M [ 439 , <land-expr> ] = GOTO 194
M [ 439 , <lor-expr> ] = GOTO 195
M [ 439 , <multiplicative-expr> ] = GOTO 196
M [ 439 , <num-const> ] = GOTO 810
M [ 439 , <postfix-expr> ] = GOTO 811
M [ 439 , <prim-expr> ] = GOTO 812
M [ 439 , <rel-expr> ] = GOTO 200
M [ 439 , <shift-expr> ] = GOTO 201
M [ 439 , <unary-expr> ] = GOTO 813
M [ 439 , <unary-op> ] = GOTO 814
M [ 439 , CHAR_CONST ] = SHIFT 815
M [ 439 , DELIM_LPAR ] = SHIFT 816
M [ 439 , FLOAT_CONST ] = SHIFT 817
M [ 439 , IDENTIFIER ] = SHIFT 818
M [ 439 , INT_CONST ] = SHIFT 819
M [ 439 , OP_ADD ] = SHIFT 135
M [ 439 , OP_AND ] = SHIFT 136
M [ 439 , OP_DEC ] = SHIFT 820
M [ 439 , OP_INC ] = SHIFT 821
M [ 439 , OP_LNOT ] = SHIFT 139
M [ 439 , OP_MUL ] = SHIFT 140
M [ 439 , OP_NOT ] = SHIFT 141
M [ 439 , OP_SUB ] = SHIFT 142
M [ 439 , STR_LITERAL ] = SHIFT 822
M [ 439 , sizeof ] = SHIFT 823
M [ 440 , DELIM_COMMA ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , DELIM_LPAR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , DELIM_LSQBRACKET ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , DELIM_QUESTION ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , DELIM_RCURBRACE ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_ADD ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_ADDASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_AND ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_ANDASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_ARROW ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_ASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_DEC ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_DIV ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_DIVASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_DOT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_EQ ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_GE ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_GT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_INC ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_LAND ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_LE ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_LOR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_LT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_MOD ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_MODASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_MUL ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_MULASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_NEQ ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_OR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_ORASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_SHL ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_SHLASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_SHR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_SHRASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_SUB ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_SUBASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_XOR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 440 , OP_XORASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 441 , DELIM_COMMA ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , DELIM_LPAR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , DELIM_QUESTION ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , DELIM_RCURBRACE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_ADD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_ADDASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_AND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_ANDASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_ARROW ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_ASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_DEC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_DIV ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_DIVASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_DOT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_EQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_GE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_GT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_INC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_LAND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_LE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_LOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_LT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_MOD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_MODASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_MUL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_MULASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_NEQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_OR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_ORASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_SHL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_SHLASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_SHR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_SHRASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_SUB ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_SUBASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_XOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 441 , OP_XORASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 442 , DELIM_COMMA ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , DELIM_LPAR ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , DELIM_LSQBRACKET ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , DELIM_QUESTION ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , DELIM_RCURBRACE ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_ADD ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_ADDASN ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_AND ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_ANDASN ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_ARROW ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_ASN ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_DEC ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_DIV ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_DIVASN ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_DOT ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_EQ ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_GE ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_GT ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_INC ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_LAND ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_LE ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_LOR ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_LT ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_MOD ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_MODASN ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_MUL ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_MULASN ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_NEQ ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_OR ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_ORASN ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_SHL ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_SHLASN ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_SHR ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_SHRASN ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_SUB ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_SUBASN ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_XOR ] = REDUCE <num-const> -> INT_CONST 
M [ 442 , OP_XORASN ] = REDUCE <num-const> -> INT_CONST 
M [ 443 , <constant> ] = GOTO 417
M [ 443 , <num-const> ] = GOTO 429
M [ 443 , <postfix-expr> ] = GOTO 430
M [ 443 , <prim-expr> ] = GOTO 431
M [ 443 , <unary-expr> ] = GOTO 824
M [ 443 , <unary-op> ] = GOTO 435
M [ 443 , CHAR_CONST ] = SHIFT 436
M [ 443 , DELIM_LPAR ] = SHIFT 825
M [ 443 , FLOAT_CONST ] = SHIFT 440
M [ 443 , IDENTIFIER ] = SHIFT 441
M [ 443 , INT_CONST ] = SHIFT 442
M [ 443 , OP_ADD ] = SHIFT 135
M [ 443 , OP_AND ] = SHIFT 136
M [ 443 , OP_DEC ] = SHIFT 443
M [ 443 , OP_INC ] = SHIFT 445
M [ 443 , OP_LNOT ] = SHIFT 139
M [ 443 , OP_MUL ] = SHIFT 140
M [ 443 , OP_NOT ] = SHIFT 141
M [ 443 , OP_SUB ] = SHIFT 142
M [ 443 , STR_LITERAL ] = SHIFT 446
M [ 443 , sizeof ] = SHIFT 447
M [ 444 , IDENTIFIER ] = SHIFT 826
M [ 445 , <constant> ] = GOTO 417
M [ 445 , <num-const> ] = GOTO 429
M [ 445 , <postfix-expr> ] = GOTO 430
M [ 445 , <prim-expr> ] = GOTO 431
M [ 445 , <unary-expr> ] = GOTO 827
M [ 445 , <unary-op> ] = GOTO 435
M [ 445 , CHAR_CONST ] = SHIFT 436
M [ 445 , DELIM_LPAR ] = SHIFT 825
M [ 445 , FLOAT_CONST ] = SHIFT 440
M [ 445 , IDENTIFIER ] = SHIFT 441
M [ 445 , INT_CONST ] = SHIFT 442
M [ 445 , OP_ADD ] = SHIFT 135
M [ 445 , OP_AND ] = SHIFT 136
M [ 445 , OP_DEC ] = SHIFT 443
M [ 445 , OP_INC ] = SHIFT 445
M [ 445 , OP_LNOT ] = SHIFT 139
M [ 445 , OP_MUL ] = SHIFT 140
M [ 445 , OP_NOT ] = SHIFT 141
M [ 445 , OP_SUB ] = SHIFT 142
M [ 445 , STR_LITERAL ] = SHIFT 446
M [ 445 , sizeof ] = SHIFT 447
M [ 446 , DELIM_COMMA ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , DELIM_LPAR ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , DELIM_LSQBRACKET ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , DELIM_QUESTION ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , DELIM_RCURBRACE ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_ADD ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_ADDASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_AND ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_ANDASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_ARROW ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_ASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_DEC ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_DIV ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_DIVASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_DOT ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_EQ ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_GE ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_GT ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_INC ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_LAND ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_LE ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_LOR ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_LT ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_MOD ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_MODASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_MUL ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_MULASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_NEQ ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_OR ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_ORASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_SHL ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_SHLASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_SHR ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_SHRASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_SUB ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_SUBASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_XOR ] = REDUCE <constant> -> STR_LITERAL 
M [ 446 , OP_XORASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 447 , <constant> ] = GOTO 417
M [ 447 , <num-const> ] = GOTO 429
M [ 447 , <postfix-expr> ] = GOTO 430
M [ 447 , <prim-expr> ] = GOTO 431
M [ 447 , <unary-expr> ] = GOTO 828
M [ 447 , <unary-op> ] = GOTO 435
M [ 447 , CHAR_CONST ] = SHIFT 436
M [ 447 , DELIM_LPAR ] = SHIFT 829
M [ 447 , FLOAT_CONST ] = SHIFT 440
M [ 447 , IDENTIFIER ] = SHIFT 441
M [ 447 , INT_CONST ] = SHIFT 442
M [ 447 , OP_ADD ] = SHIFT 135
M [ 447 , OP_AND ] = SHIFT 136
M [ 447 , OP_DEC ] = SHIFT 443
M [ 447 , OP_INC ] = SHIFT 445
M [ 447 , OP_LNOT ] = SHIFT 139
M [ 447 , OP_MUL ] = SHIFT 140
M [ 447 , OP_NOT ] = SHIFT 141
M [ 447 , OP_SUB ] = SHIFT 142
M [ 447 , STR_LITERAL ] = SHIFT 446
M [ 447 , sizeof ] = SHIFT 447
M [ 448 , DELIM_COMMA ] = REDUCE <param-decl> -> <decl-spec> <abstract-declarator> 
M [ 448 , DELIM_RPAR ] = REDUCE <param-decl> -> <decl-spec> <abstract-declarator> 
M [ 449 , DELIM_COMMA ] = REDUCE <param-decl> -> <decl-spec> <declarator> 
M [ 449 , DELIM_RPAR ] = REDUCE <param-decl> -> <decl-spec> <declarator> 
M [ 450 , DELIM_COMMA ] = REDUCE <abstract-declarator> -> <direct-abstract-declarator> 
M [ 450 , DELIM_RPAR ] = REDUCE <abstract-declarator> -> <direct-abstract-declarator> 
M [ 451 , DELIM_COMMA ] = REDUCE <declarator> -> <direct-declarator> 
M [ 451 , DELIM_LPAR ] = SHIFT 830
M [ 451 , DELIM_LSQBRACKET ] = SHIFT 831
M [ 451 , DELIM_RPAR ] = REDUCE <declarator> -> <direct-declarator> 
M [ 452 , <direct-abstract-declarator> ] = GOTO 832
M [ 452 , <direct-declarator> ] = GOTO 833
M [ 452 , DELIM_COMMA ] = REDUCE <abstract-declarator> -> <pointer> 
M [ 452 , DELIM_LPAR ] = SHIFT 453
M [ 452 , DELIM_LSQBRACKET ] = SHIFT 454
M [ 452 , DELIM_RPAR ] = REDUCE <abstract-declarator> -> <pointer> 
M [ 452 , IDENTIFIER ] = SHIFT 455
M [ 453 , <abstract-declarator> ] = GOTO 834
M [ 453 , <declarator> ] = GOTO 835
M [ 453 , <direct-abstract-declarator> ] = GOTO 683
M [ 453 , <direct-declarator> ] = GOTO 54
M [ 453 , <pointer> ] = GOTO 836
M [ 453 , DELIM_LPAR ] = SHIFT 837
M [ 453 , DELIM_LSQBRACKET ] = SHIFT 686
M [ 453 , IDENTIFIER ] = SHIFT 57
M [ 453 , OP_MUL ] = SHIFT 838
M [ 454 , <additive-expr> ] = GOTO 185
M [ 454 , <and-expr> ] = GOTO 186
M [ 454 , <asn-expr> ] = GOTO 839
M [ 454 , <cast-expr> ] = GOTO 188
M [ 454 , <cond-expr> ] = GOTO 189
M [ 454 , <constant> ] = GOTO 190
M [ 454 , <eq-expr> ] = GOTO 191
M [ 454 , <exc-or-expr> ] = GOTO 192
M [ 454 , <inc-or-expr> ] = GOTO 193
M [ 454 , <land-expr> ] = GOTO 194
M [ 454 , <lor-expr> ] = GOTO 195
M [ 454 , <multiplicative-expr> ] = GOTO 196
M [ 454 , <num-const> ] = GOTO 197
M [ 454 , <postfix-expr> ] = GOTO 198
M [ 454 , <prim-expr> ] = GOTO 199
M [ 454 , <rel-expr> ] = GOTO 200
M [ 454 , <shift-expr> ] = GOTO 201
M [ 454 , <type-qual-list> ] = GOTO 840
M [ 454 , <type-qual> ] = GOTO 203
M [ 454 , <unary-expr> ] = GOTO 204
M [ 454 , <unary-op> ] = GOTO 205
M [ 454 , CHAR_CONST ] = SHIFT 206
M [ 454 , DELIM_LPAR ] = SHIFT 207
M [ 454 , DELIM_RSQBRACKET ] = SHIFT 841
M [ 454 , FLOAT_CONST ] = SHIFT 209
M [ 454 , IDENTIFIER ] = SHIFT 210
M [ 454 , INT_CONST ] = SHIFT 211
M [ 454 , OP_ADD ] = SHIFT 135
M [ 454 , OP_AND ] = SHIFT 136
M [ 454 , OP_DEC ] = SHIFT 212
M [ 454 , OP_INC ] = SHIFT 213
M [ 454 , OP_LNOT ] = SHIFT 139
M [ 454 , OP_MUL ] = SHIFT 140
M [ 454 , OP_NOT ] = SHIFT 141
M [ 454 , OP_SUB ] = SHIFT 142
M [ 454 , STR_LITERAL ] = SHIFT 214
M [ 454 , const ] = SHIFT 215
M [ 454 , sizeof ] = SHIFT 216
M [ 455 , DELIM_COMMA ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 455 , DELIM_LPAR ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 455 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 455 , DELIM_RPAR ] = REDUCE <direct-declarator> -> IDENTIFIER 
M [ 456 , <pointer> ] = GOTO 842
M [ 456 , <type-qual-list> ] = GOTO 843
M [ 456 , <type-qual> ] = GOTO 844
M [ 456 , DELIM_COMMA ] = REDUCE <pointer> -> OP_MUL 
M [ 456 , DELIM_LPAR ] = REDUCE <pointer> -> OP_MUL 
M [ 456 , DELIM_LSQBRACKET ] = REDUCE <pointer> -> OP_MUL 
M [ 456 , DELIM_RPAR ] = REDUCE <pointer> -> OP_MUL 
M [ 456 , IDENTIFIER ] = REDUCE <pointer> -> OP_MUL 
M [ 456 , OP_MUL ] = SHIFT 456
M [ 456 , const ] = SHIFT 845
M [ 457 , IDENTIFIER ] = SHIFT 846
M [ 458 , DELIM_COMMA ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 458 , DELIM_LCURBRACE ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 458 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 458 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 458 , DELIM_SEMICOLON ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 458 , OP_ASN ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 458 , char ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 458 , const ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 458 , double ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 458 , enum ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 458 , float ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 458 , int ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 458 , long ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 458 , short ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 458 , signed ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 458 , struct ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 458 , typedef ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 458 , unsigned ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 458 , void ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 459 , <decl-spec> ] = GOTO 160
M [ 459 , <enum-spec> ] = GOTO 161
M [ 459 , <param-decl> ] = GOTO 847
M [ 459 , <storage-class-spec> ] = GOTO 166
M [ 459 , <struct-union-spec> ] = GOTO 167
M [ 459 , <struct-union> ] = GOTO 168
M [ 459 , <type-qual> ] = GOTO 169
M [ 459 , <type-spec> ] = GOTO 170
M [ 459 , char ] = SHIFT 173
M [ 459 , const ] = SHIFT 174
M [ 459 , double ] = SHIFT 175
M [ 459 , enum ] = SHIFT 176
M [ 459 , float ] = SHIFT 177
M [ 459 , int ] = SHIFT 178
M [ 459 , long ] = SHIFT 179
M [ 459 , short ] = SHIFT 180
M [ 459 , signed ] = SHIFT 181
M [ 459 , struct ] = SHIFT 21
M [ 459 , typedef ] = SHIFT 182
M [ 459 , unsigned ] = SHIFT 183
M [ 459 , void ] = SHIFT 184
M [ 460 , DELIM_COMMA ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 460 , DELIM_LCURBRACE ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 460 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 460 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 460 , DELIM_SEMICOLON ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 460 , OP_ASN ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 460 , char ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 460 , const ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 460 , double ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 460 , enum ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 460 , float ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 460 , int ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 460 , long ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 460 , short ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 460 , signed ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 460 , struct ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 460 , typedef ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 460 , unsigned ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 460 , void ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 461 , DELIM_COMMA ] = REDUCE <decl-spec> -> <storage-class-spec> <decl-spec> 
M [ 461 , DELIM_LPAR ] = REDUCE <decl-spec> -> <storage-class-spec> <decl-spec> 
M [ 461 , DELIM_LSQBRACKET ] = REDUCE <decl-spec> -> <storage-class-spec> <decl-spec> 
M [ 461 , DELIM_RPAR ] = REDUCE <decl-spec> -> <storage-class-spec> <decl-spec> 
M [ 461 , IDENTIFIER ] = REDUCE <decl-spec> -> <storage-class-spec> <decl-spec> 
M [ 461 , OP_MUL ] = REDUCE <decl-spec> -> <storage-class-spec> <decl-spec> 
M [ 462 , <enum-spec> ] = GOTO 62
M [ 462 , <spec-qual-list> ] = GOTO 63
M [ 462 , <struct-decl-list> ] = GOTO 848
M [ 462 , <struct-decl> ] = GOTO 65
M [ 462 , <struct-union-spec> ] = GOTO 66
M [ 462 , <struct-union> ] = GOTO 67
M [ 462 , <type-qual> ] = GOTO 68
M [ 462 , <type-spec> ] = GOTO 69
M [ 462 , char ] = SHIFT 70
M [ 462 , const ] = SHIFT 71
M [ 462 , double ] = SHIFT 72
M [ 462 , enum ] = SHIFT 73
M [ 462 , float ] = SHIFT 74
M [ 462 , int ] = SHIFT 75
M [ 462 , long ] = SHIFT 76
M [ 462 , short ] = SHIFT 77
M [ 462 , signed ] = SHIFT 78
M [ 462 , struct ] = SHIFT 21
M [ 462 , unsigned ] = SHIFT 79
M [ 462 , void ] = SHIFT 80
M [ 463 , DELIM_COMMA ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 463 , DELIM_LCURBRACE ] = SHIFT 849
M [ 463 , DELIM_LPAR ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 463 , DELIM_LSQBRACKET ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 463 , DELIM_RPAR ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 463 , IDENTIFIER ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 463 , OP_MUL ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 463 , char ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 463 , const ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 463 , double ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 463 , enum ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 463 , float ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 463 , int ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 463 , long ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 463 , short ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 463 , signed ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 463 , struct ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 463 , typedef ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 463 , unsigned ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 463 , void ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 464 , DELIM_COMMA ] = REDUCE <decl-spec> -> <type-qual> <decl-spec> 
M [ 464 , DELIM_LPAR ] = REDUCE <decl-spec> -> <type-qual> <decl-spec> 
M [ 464 , DELIM_LSQBRACKET ] = REDUCE <decl-spec> -> <type-qual> <decl-spec> 
M [ 464 , DELIM_RPAR ] = REDUCE <decl-spec> -> <type-qual> <decl-spec> 
M [ 464 , IDENTIFIER ] = REDUCE <decl-spec> -> <type-qual> <decl-spec> 
M [ 464 , OP_MUL ] = REDUCE <decl-spec> -> <type-qual> <decl-spec> 
M [ 465 , DELIM_COMMA ] = REDUCE <decl-spec> -> <type-spec> <decl-spec> 
M [ 465 , DELIM_LPAR ] = REDUCE <decl-spec> -> <type-spec> <decl-spec> 
M [ 465 , DELIM_LSQBRACKET ] = REDUCE <decl-spec> -> <type-spec> <decl-spec> 
M [ 465 , DELIM_RPAR ] = REDUCE <decl-spec> -> <type-spec> <decl-spec> 
M [ 465 , IDENTIFIER ] = REDUCE <decl-spec> -> <type-spec> <decl-spec> 
M [ 465 , OP_MUL ] = REDUCE <decl-spec> -> <type-spec> <decl-spec> 
M [ 466 , <enumeration-const> ] = GOTO 82
M [ 466 , <enumerator-list> ] = GOTO 850
M [ 466 , <enumerator> ] = GOTO 84
M [ 466 , IDENTIFIER ] = SHIFT 85
M [ 467 , DELIM_COMMA ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 467 , DELIM_LCURBRACE ] = SHIFT 851
M [ 467 , DELIM_LPAR ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 467 , DELIM_LSQBRACKET ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 467 , DELIM_RPAR ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 467 , IDENTIFIER ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 467 , OP_MUL ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 467 , char ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 467 , const ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 467 , double ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 467 , enum ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 467 , float ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 467 , int ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 467 , long ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 467 , short ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 467 , signed ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 467 , struct ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 467 , typedef ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 467 , unsigned ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 467 , void ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 468 , <cast-expr> ] = GOTO 188
M [ 468 , <constant> ] = GOTO 809
M [ 468 , <multiplicative-expr> ] = GOTO 852
M [ 468 , <num-const> ] = GOTO 810
M [ 468 , <postfix-expr> ] = GOTO 811
M [ 468 , <prim-expr> ] = GOTO 812
M [ 468 , <unary-expr> ] = GOTO 813
M [ 468 , <unary-op> ] = GOTO 814
M [ 468 , CHAR_CONST ] = SHIFT 815
M [ 468 , DELIM_LPAR ] = SHIFT 816
M [ 468 , FLOAT_CONST ] = SHIFT 817
M [ 468 , IDENTIFIER ] = SHIFT 818
M [ 468 , INT_CONST ] = SHIFT 819
M [ 468 , OP_ADD ] = SHIFT 135
M [ 468 , OP_AND ] = SHIFT 136
M [ 468 , OP_DEC ] = SHIFT 820
M [ 468 , OP_INC ] = SHIFT 821
M [ 468 , OP_LNOT ] = SHIFT 139
M [ 468 , OP_MUL ] = SHIFT 140
M [ 468 , OP_NOT ] = SHIFT 141
M [ 468 , OP_SUB ] = SHIFT 142
M [ 468 , STR_LITERAL ] = SHIFT 822
M [ 468 , sizeof ] = SHIFT 823
M [ 469 , <cast-expr> ] = GOTO 188
M [ 469 , <constant> ] = GOTO 809
M [ 469 , <multiplicative-expr> ] = GOTO 853
M [ 469 , <num-const> ] = GOTO 810
M [ 469 , <postfix-expr> ] = GOTO 811
M [ 469 , <prim-expr> ] = GOTO 812
M [ 469 , <unary-expr> ] = GOTO 813
M [ 469 , <unary-op> ] = GOTO 814
M [ 469 , CHAR_CONST ] = SHIFT 815
M [ 469 , DELIM_LPAR ] = SHIFT 816
M [ 469 , FLOAT_CONST ] = SHIFT 817
M [ 469 , IDENTIFIER ] = SHIFT 818
M [ 469 , INT_CONST ] = SHIFT 819
M [ 469 , OP_ADD ] = SHIFT 135
M [ 469 , OP_AND ] = SHIFT 136
M [ 469 , OP_DEC ] = SHIFT 820
M [ 469 , OP_INC ] = SHIFT 821
M [ 469 , OP_LNOT ] = SHIFT 139
M [ 469 , OP_MUL ] = SHIFT 140
M [ 469 , OP_NOT ] = SHIFT 141
M [ 469 , OP_SUB ] = SHIFT 142
M [ 469 , STR_LITERAL ] = SHIFT 822
M [ 469 , sizeof ] = SHIFT 823
M [ 470 , <additive-expr> ] = GOTO 185
M [ 470 , <cast-expr> ] = GOTO 188
M [ 470 , <constant> ] = GOTO 809
M [ 470 , <eq-expr> ] = GOTO 854
M [ 470 , <multiplicative-expr> ] = GOTO 196
M [ 470 , <num-const> ] = GOTO 810
M [ 470 , <postfix-expr> ] = GOTO 811
M [ 470 , <prim-expr> ] = GOTO 812
M [ 470 , <rel-expr> ] = GOTO 200
M [ 470 , <shift-expr> ] = GOTO 201
M [ 470 , <unary-expr> ] = GOTO 813
M [ 470 , <unary-op> ] = GOTO 814
M [ 470 , CHAR_CONST ] = SHIFT 815
M [ 470 , DELIM_LPAR ] = SHIFT 816
M [ 470 , FLOAT_CONST ] = SHIFT 817
M [ 470 , IDENTIFIER ] = SHIFT 818
M [ 470 , INT_CONST ] = SHIFT 819
M [ 470 , OP_ADD ] = SHIFT 135
M [ 470 , OP_AND ] = SHIFT 136
M [ 470 , OP_DEC ] = SHIFT 820
M [ 470 , OP_INC ] = SHIFT 821
M [ 470 , OP_LNOT ] = SHIFT 139
M [ 470 , OP_MUL ] = SHIFT 140
M [ 470 , OP_NOT ] = SHIFT 141
M [ 470 , OP_SUB ] = SHIFT 142
M [ 470 , STR_LITERAL ] = SHIFT 822
M [ 470 , sizeof ] = SHIFT 823
M [ 471 , DELIM_COMMA ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 471 , DELIM_LCURBRACE ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 471 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 471 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 471 , DELIM_SEMICOLON ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 471 , OP_ASN ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 471 , char ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 471 , const ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 471 , double ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 471 , enum ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 471 , float ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 471 , int ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 471 , long ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 471 , short ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 471 , signed ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 471 , struct ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 471 , typedef ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 471 , unsigned ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 471 , void ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 472 , <additive-expr> ] = GOTO 185
M [ 472 , <cast-expr> ] = GOTO 188
M [ 472 , <constant> ] = GOTO 809
M [ 472 , <multiplicative-expr> ] = GOTO 196
M [ 472 , <num-const> ] = GOTO 810
M [ 472 , <postfix-expr> ] = GOTO 811
M [ 472 , <prim-expr> ] = GOTO 812
M [ 472 , <rel-expr> ] = GOTO 855
M [ 472 , <shift-expr> ] = GOTO 201
M [ 472 , <unary-expr> ] = GOTO 813
M [ 472 , <unary-op> ] = GOTO 814
M [ 472 , CHAR_CONST ] = SHIFT 815
M [ 472 , DELIM_LPAR ] = SHIFT 816
M [ 472 , FLOAT_CONST ] = SHIFT 817
M [ 472 , IDENTIFIER ] = SHIFT 818
M [ 472 , INT_CONST ] = SHIFT 819
M [ 472 , OP_ADD ] = SHIFT 135
M [ 472 , OP_AND ] = SHIFT 136
M [ 472 , OP_DEC ] = SHIFT 820
M [ 472 , OP_INC ] = SHIFT 821
M [ 472 , OP_LNOT ] = SHIFT 139
M [ 472 , OP_MUL ] = SHIFT 140
M [ 472 , OP_NOT ] = SHIFT 141
M [ 472 , OP_SUB ] = SHIFT 142
M [ 472 , STR_LITERAL ] = SHIFT 822
M [ 472 , sizeof ] = SHIFT 823
M [ 473 , <additive-expr> ] = GOTO 185
M [ 473 , <cast-expr> ] = GOTO 188
M [ 473 , <constant> ] = GOTO 809
M [ 473 , <multiplicative-expr> ] = GOTO 196
M [ 473 , <num-const> ] = GOTO 810
M [ 473 , <postfix-expr> ] = GOTO 811
M [ 473 , <prim-expr> ] = GOTO 812
M [ 473 , <rel-expr> ] = GOTO 856
M [ 473 , <shift-expr> ] = GOTO 201
M [ 473 , <unary-expr> ] = GOTO 813
M [ 473 , <unary-op> ] = GOTO 814
M [ 473 , CHAR_CONST ] = SHIFT 815
M [ 473 , DELIM_LPAR ] = SHIFT 816
M [ 473 , FLOAT_CONST ] = SHIFT 817
M [ 473 , IDENTIFIER ] = SHIFT 818
M [ 473 , INT_CONST ] = SHIFT 819
M [ 473 , OP_ADD ] = SHIFT 135
M [ 473 , OP_AND ] = SHIFT 136
M [ 473 , OP_DEC ] = SHIFT 820
M [ 473 , OP_INC ] = SHIFT 821
M [ 473 , OP_LNOT ] = SHIFT 139
M [ 473 , OP_MUL ] = SHIFT 140
M [ 473 , OP_NOT ] = SHIFT 141
M [ 473 , OP_SUB ] = SHIFT 142
M [ 473 , STR_LITERAL ] = SHIFT 822
M [ 473 , sizeof ] = SHIFT 823
M [ 474 , <additive-expr> ] = GOTO 185
M [ 474 , <and-expr> ] = GOTO 857
M [ 474 , <cast-expr> ] = GOTO 188
M [ 474 , <constant> ] = GOTO 809
M [ 474 , <eq-expr> ] = GOTO 191
M [ 474 , <multiplicative-expr> ] = GOTO 196
M [ 474 , <num-const> ] = GOTO 810
M [ 474 , <postfix-expr> ] = GOTO 811
M [ 474 , <prim-expr> ] = GOTO 812
M [ 474 , <rel-expr> ] = GOTO 200
M [ 474 , <shift-expr> ] = GOTO 201
M [ 474 , <unary-expr> ] = GOTO 813
M [ 474 , <unary-op> ] = GOTO 814
M [ 474 , CHAR_CONST ] = SHIFT 815
M [ 474 , DELIM_LPAR ] = SHIFT 816
M [ 474 , FLOAT_CONST ] = SHIFT 817
M [ 474 , IDENTIFIER ] = SHIFT 818
M [ 474 , INT_CONST ] = SHIFT 819
M [ 474 , OP_ADD ] = SHIFT 135
M [ 474 , OP_AND ] = SHIFT 136
M [ 474 , OP_DEC ] = SHIFT 820
M [ 474 , OP_INC ] = SHIFT 821
M [ 474 , OP_LNOT ] = SHIFT 139
M [ 474 , OP_MUL ] = SHIFT 140
M [ 474 , OP_NOT ] = SHIFT 141
M [ 474 , OP_SUB ] = SHIFT 142
M [ 474 , STR_LITERAL ] = SHIFT 822
M [ 474 , sizeof ] = SHIFT 823
M [ 475 , <additive-expr> ] = GOTO 185
M [ 475 , <and-expr> ] = GOTO 186
M [ 475 , <cast-expr> ] = GOTO 188
M [ 475 , <constant> ] = GOTO 809
M [ 475 , <eq-expr> ] = GOTO 191
M [ 475 , <exc-or-expr> ] = GOTO 858
M [ 475 , <multiplicative-expr> ] = GOTO 196
M [ 475 , <num-const> ] = GOTO 810
M [ 475 , <postfix-expr> ] = GOTO 811
M [ 475 , <prim-expr> ] = GOTO 812
M [ 475 , <rel-expr> ] = GOTO 200
M [ 475 , <shift-expr> ] = GOTO 201
M [ 475 , <unary-expr> ] = GOTO 813
M [ 475 , <unary-op> ] = GOTO 814
M [ 475 , CHAR_CONST ] = SHIFT 815
M [ 475 , DELIM_LPAR ] = SHIFT 816
M [ 475 , FLOAT_CONST ] = SHIFT 817
M [ 475 , IDENTIFIER ] = SHIFT 818
M [ 475 , INT_CONST ] = SHIFT 819
M [ 475 , OP_ADD ] = SHIFT 135
M [ 475 , OP_AND ] = SHIFT 136
M [ 475 , OP_DEC ] = SHIFT 820
M [ 475 , OP_INC ] = SHIFT 821
M [ 475 , OP_LNOT ] = SHIFT 139
M [ 475 , OP_MUL ] = SHIFT 140
M [ 475 , OP_NOT ] = SHIFT 141
M [ 475 , OP_SUB ] = SHIFT 142
M [ 475 , STR_LITERAL ] = SHIFT 822
M [ 475 , sizeof ] = SHIFT 823
M [ 476 , <additive-expr> ] = GOTO 185
M [ 476 , <and-expr> ] = GOTO 186
M [ 476 , <cast-expr> ] = GOTO 188
M [ 476 , <constant> ] = GOTO 809
M [ 476 , <eq-expr> ] = GOTO 191
M [ 476 , <exc-or-expr> ] = GOTO 192
M [ 476 , <inc-or-expr> ] = GOTO 859
M [ 476 , <multiplicative-expr> ] = GOTO 196
M [ 476 , <num-const> ] = GOTO 810
M [ 476 , <postfix-expr> ] = GOTO 811
M [ 476 , <prim-expr> ] = GOTO 812
M [ 476 , <rel-expr> ] = GOTO 200
M [ 476 , <shift-expr> ] = GOTO 201
M [ 476 , <unary-expr> ] = GOTO 813
M [ 476 , <unary-op> ] = GOTO 814
M [ 476 , CHAR_CONST ] = SHIFT 815
M [ 476 , DELIM_LPAR ] = SHIFT 816
M [ 476 , FLOAT_CONST ] = SHIFT 817
M [ 476 , IDENTIFIER ] = SHIFT 818
M [ 476 , INT_CONST ] = SHIFT 819
M [ 476 , OP_ADD ] = SHIFT 135
M [ 476 , OP_AND ] = SHIFT 136
M [ 476 , OP_DEC ] = SHIFT 820
M [ 476 , OP_INC ] = SHIFT 821
M [ 476 , OP_LNOT ] = SHIFT 139
M [ 476 , OP_MUL ] = SHIFT 140
M [ 476 , OP_NOT ] = SHIFT 141
M [ 476 , OP_SUB ] = SHIFT 142
M [ 476 , STR_LITERAL ] = SHIFT 822
M [ 476 , sizeof ] = SHIFT 823
M [ 477 , <additive-expr> ] = GOTO 579
M [ 477 , <and-expr> ] = GOTO 580
M [ 477 , <asn-expr> ] = GOTO 581
M [ 477 , <cast-expr> ] = GOTO 582
M [ 477 , <cond-expr> ] = GOTO 583
M [ 477 , <constant> ] = GOTO 584
M [ 477 , <eq-expr> ] = GOTO 585
M [ 477 , <exc-or-expr> ] = GOTO 586
M [ 477 , <expr> ] = GOTO 860
M [ 477 , <inc-or-expr> ] = GOTO 588
M [ 477 , <land-expr> ] = GOTO 589
M [ 477 , <lor-expr> ] = GOTO 590
M [ 477 , <multiplicative-expr> ] = GOTO 591
M [ 477 , <num-const> ] = GOTO 592
M [ 477 , <postfix-expr> ] = GOTO 593
M [ 477 , <prim-expr> ] = GOTO 594
M [ 477 , <rel-expr> ] = GOTO 595
M [ 477 , <shift-expr> ] = GOTO 596
M [ 477 , <unary-expr> ] = GOTO 597
M [ 477 , <unary-op> ] = GOTO 598
M [ 477 , CHAR_CONST ] = SHIFT 599
M [ 477 , DELIM_LPAR ] = SHIFT 600
M [ 477 , FLOAT_CONST ] = SHIFT 601
M [ 477 , IDENTIFIER ] = SHIFT 602
M [ 477 , INT_CONST ] = SHIFT 603
M [ 477 , OP_ADD ] = SHIFT 135
M [ 477 , OP_AND ] = SHIFT 136
M [ 477 , OP_DEC ] = SHIFT 604
M [ 477 , OP_INC ] = SHIFT 605
M [ 477 , OP_LNOT ] = SHIFT 139
M [ 477 , OP_MUL ] = SHIFT 140
M [ 477 , OP_NOT ] = SHIFT 141
M [ 477 , OP_SUB ] = SHIFT 142
M [ 477 , STR_LITERAL ] = SHIFT 606
M [ 477 , sizeof ] = SHIFT 607
M [ 478 , <additive-expr> ] = GOTO 185
M [ 478 , <and-expr> ] = GOTO 186
M [ 478 , <cast-expr> ] = GOTO 188
M [ 478 , <constant> ] = GOTO 809
M [ 478 , <eq-expr> ] = GOTO 191
M [ 478 , <exc-or-expr> ] = GOTO 192
M [ 478 , <inc-or-expr> ] = GOTO 193
M [ 478 , <land-expr> ] = GOTO 861
M [ 478 , <multiplicative-expr> ] = GOTO 196
M [ 478 , <num-const> ] = GOTO 810
M [ 478 , <postfix-expr> ] = GOTO 811
M [ 478 , <prim-expr> ] = GOTO 812
M [ 478 , <rel-expr> ] = GOTO 200
M [ 478 , <shift-expr> ] = GOTO 201
M [ 478 , <unary-expr> ] = GOTO 813
M [ 478 , <unary-op> ] = GOTO 814
M [ 478 , CHAR_CONST ] = SHIFT 815
M [ 478 , DELIM_LPAR ] = SHIFT 816
M [ 478 , FLOAT_CONST ] = SHIFT 817
M [ 478 , IDENTIFIER ] = SHIFT 818
M [ 478 , INT_CONST ] = SHIFT 819
M [ 478 , OP_ADD ] = SHIFT 135
M [ 478 , OP_AND ] = SHIFT 136
M [ 478 , OP_DEC ] = SHIFT 820
M [ 478 , OP_INC ] = SHIFT 821
M [ 478 , OP_LNOT ] = SHIFT 139
M [ 478 , OP_MUL ] = SHIFT 140
M [ 478 , OP_NOT ] = SHIFT 141
M [ 478 , OP_SUB ] = SHIFT 142
M [ 478 , STR_LITERAL ] = SHIFT 822
M [ 478 , sizeof ] = SHIFT 823
M [ 479 , <cast-expr> ] = GOTO 862
M [ 479 , <constant> ] = GOTO 809
M [ 479 , <num-const> ] = GOTO 810
M [ 479 , <postfix-expr> ] = GOTO 811
M [ 479 , <prim-expr> ] = GOTO 812
M [ 479 , <unary-expr> ] = GOTO 813
M [ 479 , <unary-op> ] = GOTO 814
M [ 479 , CHAR_CONST ] = SHIFT 815
M [ 479 , DELIM_LPAR ] = SHIFT 816
M [ 479 , FLOAT_CONST ] = SHIFT 817
M [ 479 , IDENTIFIER ] = SHIFT 818
M [ 479 , INT_CONST ] = SHIFT 819
M [ 479 , OP_ADD ] = SHIFT 135
M [ 479 , OP_AND ] = SHIFT 136
M [ 479 , OP_DEC ] = SHIFT 820
M [ 479 , OP_INC ] = SHIFT 821
M [ 479 , OP_LNOT ] = SHIFT 139
M [ 479 , OP_MUL ] = SHIFT 140
M [ 479 , OP_NOT ] = SHIFT 141
M [ 479 , OP_SUB ] = SHIFT 142
M [ 479 , STR_LITERAL ] = SHIFT 822
M [ 479 , sizeof ] = SHIFT 823
M [ 480 , <cast-expr> ] = GOTO 863
M [ 480 , <constant> ] = GOTO 809
M [ 480 , <num-const> ] = GOTO 810
M [ 480 , <postfix-expr> ] = GOTO 811
M [ 480 , <prim-expr> ] = GOTO 812
M [ 480 , <unary-expr> ] = GOTO 813
M [ 480 , <unary-op> ] = GOTO 814
M [ 480 , CHAR_CONST ] = SHIFT 815
M [ 480 , DELIM_LPAR ] = SHIFT 816
M [ 480 , FLOAT_CONST ] = SHIFT 817
M [ 480 , IDENTIFIER ] = SHIFT 818
M [ 480 , INT_CONST ] = SHIFT 819
M [ 480 , OP_ADD ] = SHIFT 135
M [ 480 , OP_AND ] = SHIFT 136
M [ 480 , OP_DEC ] = SHIFT 820
M [ 480 , OP_INC ] = SHIFT 821
M [ 480 , OP_LNOT ] = SHIFT 139
M [ 480 , OP_MUL ] = SHIFT 140
M [ 480 , OP_NOT ] = SHIFT 141
M [ 480 , OP_SUB ] = SHIFT 142
M [ 480 , STR_LITERAL ] = SHIFT 822
M [ 480 , sizeof ] = SHIFT 823
M [ 481 , <cast-expr> ] = GOTO 864
M [ 481 , <constant> ] = GOTO 809
M [ 481 , <num-const> ] = GOTO 810
M [ 481 , <postfix-expr> ] = GOTO 811
M [ 481 , <prim-expr> ] = GOTO 812
M [ 481 , <unary-expr> ] = GOTO 813
M [ 481 , <unary-op> ] = GOTO 814
M [ 481 , CHAR_CONST ] = SHIFT 815
M [ 481 , DELIM_LPAR ] = SHIFT 816
M [ 481 , FLOAT_CONST ] = SHIFT 817
M [ 481 , IDENTIFIER ] = SHIFT 818
M [ 481 , INT_CONST ] = SHIFT 819
M [ 481 , OP_ADD ] = SHIFT 135
M [ 481 , OP_AND ] = SHIFT 136
M [ 481 , OP_DEC ] = SHIFT 820
M [ 481 , OP_INC ] = SHIFT 821
M [ 481 , OP_LNOT ] = SHIFT 139
M [ 481 , OP_MUL ] = SHIFT 140
M [ 481 , OP_NOT ] = SHIFT 141
M [ 481 , OP_SUB ] = SHIFT 142
M [ 481 , STR_LITERAL ] = SHIFT 822
M [ 481 , sizeof ] = SHIFT 823
M [ 482 , <additive-expr> ] = GOTO 299
M [ 482 , <and-expr> ] = GOTO 300
M [ 482 , <arg-expr-list> ] = GOTO 865
M [ 482 , <asn-expr> ] = GOTO 613
M [ 482 , <cast-expr> ] = GOTO 302
M [ 482 , <cond-expr> ] = GOTO 303
M [ 482 , <constant> ] = GOTO 304
M [ 482 , <eq-expr> ] = GOTO 306
M [ 482 , <exc-or-expr> ] = GOTO 307
M [ 482 , <inc-or-expr> ] = GOTO 309
M [ 482 , <land-expr> ] = GOTO 310
M [ 482 , <lor-expr> ] = GOTO 311
M [ 482 , <multiplicative-expr> ] = GOTO 312
M [ 482 , <num-const> ] = GOTO 313
M [ 482 , <postfix-expr> ] = GOTO 314
M [ 482 , <prim-expr> ] = GOTO 315
M [ 482 , <rel-expr> ] = GOTO 316
M [ 482 , <shift-expr> ] = GOTO 317
M [ 482 , <unary-expr> ] = GOTO 324
M [ 482 , <unary-op> ] = GOTO 325
M [ 482 , CHAR_CONST ] = SHIFT 326
M [ 482 , DELIM_LPAR ] = SHIFT 327
M [ 482 , DELIM_RPAR ] = SHIFT 866
M [ 482 , FLOAT_CONST ] = SHIFT 328
M [ 482 , IDENTIFIER ] = SHIFT 329
M [ 482 , INT_CONST ] = SHIFT 330
M [ 482 , OP_ADD ] = SHIFT 135
M [ 482 , OP_AND ] = SHIFT 136
M [ 482 , OP_DEC ] = SHIFT 331
M [ 482 , OP_INC ] = SHIFT 332
M [ 482 , OP_LNOT ] = SHIFT 139
M [ 482 , OP_MUL ] = SHIFT 140
M [ 482 , OP_NOT ] = SHIFT 141
M [ 482 , OP_SUB ] = SHIFT 142
M [ 482 , STR_LITERAL ] = SHIFT 333
M [ 482 , sizeof ] = SHIFT 343
M [ 483 , <additive-expr> ] = GOTO 615
M [ 483 , <and-expr> ] = GOTO 616
M [ 483 , <asn-expr> ] = GOTO 617
M [ 483 , <cast-expr> ] = GOTO 618
M [ 483 , <cond-expr> ] = GOTO 619
M [ 483 , <constant> ] = GOTO 620
M [ 483 , <eq-expr> ] = GOTO 621
M [ 483 , <exc-or-expr> ] = GOTO 622
M [ 483 , <expr> ] = GOTO 867
M [ 483 , <inc-or-expr> ] = GOTO 624
M [ 483 , <land-expr> ] = GOTO 625
M [ 483 , <lor-expr> ] = GOTO 626
M [ 483 , <multiplicative-expr> ] = GOTO 627
M [ 483 , <num-const> ] = GOTO 628
M [ 483 , <postfix-expr> ] = GOTO 629
M [ 483 , <prim-expr> ] = GOTO 630
M [ 483 , <rel-expr> ] = GOTO 631
M [ 483 , <shift-expr> ] = GOTO 632
M [ 483 , <unary-expr> ] = GOTO 633
M [ 483 , <unary-op> ] = GOTO 634
M [ 483 , CHAR_CONST ] = SHIFT 635
M [ 483 , DELIM_LPAR ] = SHIFT 636
M [ 483 , FLOAT_CONST ] = SHIFT 637
M [ 483 , IDENTIFIER ] = SHIFT 638
M [ 483 , INT_CONST ] = SHIFT 639
M [ 483 , OP_ADD ] = SHIFT 135
M [ 483 , OP_AND ] = SHIFT 136
M [ 483 , OP_DEC ] = SHIFT 640
M [ 483 , OP_INC ] = SHIFT 641
M [ 483 , OP_LNOT ] = SHIFT 139
M [ 483 , OP_MUL ] = SHIFT 140
M [ 483 , OP_NOT ] = SHIFT 141
M [ 483 , OP_SUB ] = SHIFT 142
M [ 483 , STR_LITERAL ] = SHIFT 642
M [ 483 , sizeof ] = SHIFT 643
M [ 484 , IDENTIFIER ] = SHIFT 868
M [ 485 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 485 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 486 , IDENTIFIER ] = SHIFT 869
M [ 487 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 487 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 488 , <additive-expr> ] = GOTO 185
M [ 488 , <cast-expr> ] = GOTO 188
M [ 488 , <constant> ] = GOTO 809
M [ 488 , <multiplicative-expr> ] = GOTO 196
M [ 488 , <num-const> ] = GOTO 810
M [ 488 , <postfix-expr> ] = GOTO 811
M [ 488 , <prim-expr> ] = GOTO 812
M [ 488 , <shift-expr> ] = GOTO 870
M [ 488 , <unary-expr> ] = GOTO 813
M [ 488 , <unary-op> ] = GOTO 814
M [ 488 , CHAR_CONST ] = SHIFT 815
M [ 488 , DELIM_LPAR ] = SHIFT 816
M [ 488 , FLOAT_CONST ] = SHIFT 817
M [ 488 , IDENTIFIER ] = SHIFT 818
M [ 488 , INT_CONST ] = SHIFT 819
M [ 488 , OP_ADD ] = SHIFT 135
M [ 488 , OP_AND ] = SHIFT 136
M [ 488 , OP_DEC ] = SHIFT 820
M [ 488 , OP_INC ] = SHIFT 821
M [ 488 , OP_LNOT ] = SHIFT 139
M [ 488 , OP_MUL ] = SHIFT 140
M [ 488 , OP_NOT ] = SHIFT 141
M [ 488 , OP_SUB ] = SHIFT 142
M [ 488 , STR_LITERAL ] = SHIFT 822
M [ 488 , sizeof ] = SHIFT 823
M [ 489 , <additive-expr> ] = GOTO 185
M [ 489 , <cast-expr> ] = GOTO 188
M [ 489 , <constant> ] = GOTO 809
M [ 489 , <multiplicative-expr> ] = GOTO 196
M [ 489 , <num-const> ] = GOTO 810
M [ 489 , <postfix-expr> ] = GOTO 811
M [ 489 , <prim-expr> ] = GOTO 812
M [ 489 , <shift-expr> ] = GOTO 871
M [ 489 , <unary-expr> ] = GOTO 813
M [ 489 , <unary-op> ] = GOTO 814
M [ 489 , CHAR_CONST ] = SHIFT 815
M [ 489 , DELIM_LPAR ] = SHIFT 816
M [ 489 , FLOAT_CONST ] = SHIFT 817
M [ 489 , IDENTIFIER ] = SHIFT 818
M [ 489 , INT_CONST ] = SHIFT 819
M [ 489 , OP_ADD ] = SHIFT 135
M [ 489 , OP_AND ] = SHIFT 136
M [ 489 , OP_DEC ] = SHIFT 820
M [ 489 , OP_INC ] = SHIFT 821
M [ 489 , OP_LNOT ] = SHIFT 139
M [ 489 , OP_MUL ] = SHIFT 140
M [ 489 , OP_NOT ] = SHIFT 141
M [ 489 , OP_SUB ] = SHIFT 142
M [ 489 , STR_LITERAL ] = SHIFT 822
M [ 489 , sizeof ] = SHIFT 823
M [ 490 , <additive-expr> ] = GOTO 185
M [ 490 , <cast-expr> ] = GOTO 188
M [ 490 , <constant> ] = GOTO 809
M [ 490 , <multiplicative-expr> ] = GOTO 196
M [ 490 , <num-const> ] = GOTO 810
M [ 490 , <postfix-expr> ] = GOTO 811
M [ 490 , <prim-expr> ] = GOTO 812
M [ 490 , <shift-expr> ] = GOTO 872
M [ 490 , <unary-expr> ] = GOTO 813
M [ 490 , <unary-op> ] = GOTO 814
M [ 490 , CHAR_CONST ] = SHIFT 815
M [ 490 , DELIM_LPAR ] = SHIFT 816
M [ 490 , FLOAT_CONST ] = SHIFT 817
M [ 490 , IDENTIFIER ] = SHIFT 818
M [ 490 , INT_CONST ] = SHIFT 819
M [ 490 , OP_ADD ] = SHIFT 135
M [ 490 , OP_AND ] = SHIFT 136
M [ 490 , OP_DEC ] = SHIFT 820
M [ 490 , OP_INC ] = SHIFT 821
M [ 490 , OP_LNOT ] = SHIFT 139
M [ 490 , OP_MUL ] = SHIFT 140
M [ 490 , OP_NOT ] = SHIFT 141
M [ 490 , OP_SUB ] = SHIFT 142
M [ 490 , STR_LITERAL ] = SHIFT 822
M [ 490 , sizeof ] = SHIFT 823
M [ 491 , <additive-expr> ] = GOTO 185
M [ 491 , <cast-expr> ] = GOTO 188
M [ 491 , <constant> ] = GOTO 809
M [ 491 , <multiplicative-expr> ] = GOTO 196
M [ 491 , <num-const> ] = GOTO 810
M [ 491 , <postfix-expr> ] = GOTO 811
M [ 491 , <prim-expr> ] = GOTO 812
M [ 491 , <shift-expr> ] = GOTO 873
M [ 491 , <unary-expr> ] = GOTO 813
M [ 491 , <unary-op> ] = GOTO 814
M [ 491 , CHAR_CONST ] = SHIFT 815
M [ 491 , DELIM_LPAR ] = SHIFT 816
M [ 491 , FLOAT_CONST ] = SHIFT 817
M [ 491 , IDENTIFIER ] = SHIFT 818
M [ 491 , INT_CONST ] = SHIFT 819
M [ 491 , OP_ADD ] = SHIFT 135
M [ 491 , OP_AND ] = SHIFT 136
M [ 491 , OP_DEC ] = SHIFT 820
M [ 491 , OP_INC ] = SHIFT 821
M [ 491 , OP_LNOT ] = SHIFT 139
M [ 491 , OP_MUL ] = SHIFT 140
M [ 491 , OP_NOT ] = SHIFT 141
M [ 491 , OP_SUB ] = SHIFT 142
M [ 491 , STR_LITERAL ] = SHIFT 822
M [ 491 , sizeof ] = SHIFT 823
M [ 492 , <additive-expr> ] = GOTO 874
M [ 492 , <cast-expr> ] = GOTO 188
M [ 492 , <constant> ] = GOTO 809
M [ 492 , <multiplicative-expr> ] = GOTO 196
M [ 492 , <num-const> ] = GOTO 810
M [ 492 , <postfix-expr> ] = GOTO 811
M [ 492 , <prim-expr> ] = GOTO 812
M [ 492 , <unary-expr> ] = GOTO 813
M [ 492 , <unary-op> ] = GOTO 814
M [ 492 , CHAR_CONST ] = SHIFT 815
M [ 492 , DELIM_LPAR ] = SHIFT 816
M [ 492 , FLOAT_CONST ] = SHIFT 817
M [ 492 , IDENTIFIER ] = SHIFT 818
M [ 492 , INT_CONST ] = SHIFT 819
M [ 492 , OP_ADD ] = SHIFT 135
M [ 492 , OP_AND ] = SHIFT 136
M [ 492 , OP_DEC ] = SHIFT 820
M [ 492 , OP_INC ] = SHIFT 821
M [ 492 , OP_LNOT ] = SHIFT 139
M [ 492 , OP_MUL ] = SHIFT 140
M [ 492 , OP_NOT ] = SHIFT 141
M [ 492 , OP_SUB ] = SHIFT 142
M [ 492 , STR_LITERAL ] = SHIFT 822
M [ 492 , sizeof ] = SHIFT 823
M [ 493 , <additive-expr> ] = GOTO 875
M [ 493 , <cast-expr> ] = GOTO 188
M [ 493 , <constant> ] = GOTO 809
M [ 493 , <multiplicative-expr> ] = GOTO 196
M [ 493 , <num-const> ] = GOTO 810
M [ 493 , <postfix-expr> ] = GOTO 811
M [ 493 , <prim-expr> ] = GOTO 812
M [ 493 , <unary-expr> ] = GOTO 813
M [ 493 , <unary-op> ] = GOTO 814
M [ 493 , CHAR_CONST ] = SHIFT 815
M [ 493 , DELIM_LPAR ] = SHIFT 816
M [ 493 , FLOAT_CONST ] = SHIFT 817
M [ 493 , IDENTIFIER ] = SHIFT 818
M [ 493 , INT_CONST ] = SHIFT 819
M [ 493 , OP_ADD ] = SHIFT 135
M [ 493 , OP_AND ] = SHIFT 136
M [ 493 , OP_DEC ] = SHIFT 820
M [ 493 , OP_INC ] = SHIFT 821
M [ 493 , OP_LNOT ] = SHIFT 139
M [ 493 , OP_MUL ] = SHIFT 140
M [ 493 , OP_NOT ] = SHIFT 141
M [ 493 , OP_SUB ] = SHIFT 142
M [ 493 , STR_LITERAL ] = SHIFT 822
M [ 493 , sizeof ] = SHIFT 823
M [ 494 , DELIM_RSQBRACKET ] = SHIFT 876
M [ 495 , CHAR_CONST ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 495 , DELIM_LPAR ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 495 , DELIM_RSQBRACKET ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 495 , FLOAT_CONST ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 495 , IDENTIFIER ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 495 , INT_CONST ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 495 , OP_ADD ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 495 , OP_AND ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 495 , OP_DEC ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 495 , OP_INC ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 495 , OP_LNOT ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 495 , OP_MUL ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 495 , OP_NOT ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 495 , OP_SUB ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 495 , STR_LITERAL ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 495 , const ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 495 , sizeof ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 496 , DELIM_COMMA ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 496 , DELIM_LCURBRACE ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 496 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 496 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 496 , DELIM_SEMICOLON ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 496 , OP_ASN ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 496 , char ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 496 , const ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 496 , double ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 496 , enum ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 496 , float ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 496 , int ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 496 , long ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 496 , short ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 496 , signed ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 496 , struct ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 496 , typedef ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 496 , unsigned ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 496 , void ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 497 , <additive-expr> ] = GOTO 185
M [ 497 , <and-expr> ] = GOTO 186
M [ 497 , <asn-expr> ] = GOTO 877
M [ 497 , <cast-expr> ] = GOTO 188
M [ 497 , <cond-expr> ] = GOTO 189
M [ 497 , <constant> ] = GOTO 190
M [ 497 , <eq-expr> ] = GOTO 191
M [ 497 , <exc-or-expr> ] = GOTO 192
M [ 497 , <inc-or-expr> ] = GOTO 193
M [ 497 , <land-expr> ] = GOTO 194
M [ 497 , <lor-expr> ] = GOTO 195
M [ 497 , <multiplicative-expr> ] = GOTO 196
M [ 497 , <num-const> ] = GOTO 197
M [ 497 , <postfix-expr> ] = GOTO 198
M [ 497 , <prim-expr> ] = GOTO 199
M [ 497 , <rel-expr> ] = GOTO 200
M [ 497 , <shift-expr> ] = GOTO 201
M [ 497 , <unary-expr> ] = GOTO 204
M [ 497 , <unary-op> ] = GOTO 205
M [ 497 , CHAR_CONST ] = SHIFT 206
M [ 497 , DELIM_LPAR ] = SHIFT 207
M [ 497 , FLOAT_CONST ] = SHIFT 209
M [ 497 , IDENTIFIER ] = SHIFT 210
M [ 497 , INT_CONST ] = SHIFT 211
M [ 497 , OP_ADD ] = SHIFT 135
M [ 497 , OP_AND ] = SHIFT 136
M [ 497 , OP_DEC ] = SHIFT 212
M [ 497 , OP_INC ] = SHIFT 213
M [ 497 , OP_LNOT ] = SHIFT 139
M [ 497 , OP_MUL ] = SHIFT 140
M [ 497 , OP_NOT ] = SHIFT 141
M [ 497 , OP_SUB ] = SHIFT 142
M [ 497 , STR_LITERAL ] = SHIFT 214
M [ 497 , sizeof ] = SHIFT 216
M [ 498 , DELIM_QUESTION ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , DELIM_RSQBRACKET ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_ADD ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_ADDASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_AND ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_ANDASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_ASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_DIV ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_DIVASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_EQ ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_GE ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_GT ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_LAND ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_LE ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_LOR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_LT ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_MOD ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_MODASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_MUL ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_MULASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_NEQ ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_OR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_ORASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_SHL ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_SHLASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_SHR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_SHRASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_SUB ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_SUBASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_XOR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 498 , OP_XORASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 499 , DELIM_QUESTION ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , DELIM_RSQBRACKET ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_ADD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_ADDASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_AND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_ANDASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_ASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_DIV ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_DIVASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_EQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_GE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_GT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_LAND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_LE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_LOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_LT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_MOD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_MODASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_MUL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_MULASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_NEQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_OR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_ORASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_SHL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_SHLASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_SHR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_SHRASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_SUB ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_SUBASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_XOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 499 , OP_XORASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 500 , <additive-expr> ] = GOTO 299
M [ 500 , <and-expr> ] = GOTO 300
M [ 500 , <asn-expr> ] = GOTO 301
M [ 500 , <cast-expr> ] = GOTO 302
M [ 500 , <cond-expr> ] = GOTO 303
M [ 500 , <constant> ] = GOTO 304
M [ 500 , <enum-spec> ] = GOTO 305
M [ 500 , <eq-expr> ] = GOTO 306
M [ 500 , <exc-or-expr> ] = GOTO 307
M [ 500 , <expr> ] = GOTO 501
M [ 500 , <inc-or-expr> ] = GOTO 309
M [ 500 , <land-expr> ] = GOTO 310
M [ 500 , <lor-expr> ] = GOTO 311
M [ 500 , <multiplicative-expr> ] = GOTO 312
M [ 500 , <num-const> ] = GOTO 313
M [ 500 , <postfix-expr> ] = GOTO 314
M [ 500 , <prim-expr> ] = GOTO 315
M [ 500 , <rel-expr> ] = GOTO 316
M [ 500 , <shift-expr> ] = GOTO 317
M [ 500 , <spec-qual-list> ] = GOTO 318
M [ 500 , <struct-union-spec> ] = GOTO 319
M [ 500 , <struct-union> ] = GOTO 320
M [ 500 , <type-name> ] = GOTO 878
M [ 500 , <type-qual> ] = GOTO 322
M [ 500 , <type-spec> ] = GOTO 323
M [ 500 , <unary-expr> ] = GOTO 324
M [ 500 , <unary-op> ] = GOTO 325
M [ 500 , CHAR_CONST ] = SHIFT 326
M [ 500 , DELIM_LPAR ] = SHIFT 327
M [ 500 , FLOAT_CONST ] = SHIFT 328
M [ 500 , IDENTIFIER ] = SHIFT 329
M [ 500 , INT_CONST ] = SHIFT 330
M [ 500 , OP_ADD ] = SHIFT 135
M [ 500 , OP_AND ] = SHIFT 136
M [ 500 , OP_DEC ] = SHIFT 331
M [ 500 , OP_INC ] = SHIFT 332
M [ 500 , OP_LNOT ] = SHIFT 139
M [ 500 , OP_MUL ] = SHIFT 140
M [ 500 , OP_NOT ] = SHIFT 141
M [ 500 , OP_SUB ] = SHIFT 142
M [ 500 , STR_LITERAL ] = SHIFT 333
M [ 500 , char ] = SHIFT 334
M [ 500 , const ] = SHIFT 335
M [ 500 , double ] = SHIFT 336
M [ 500 , enum ] = SHIFT 337
M [ 500 , float ] = SHIFT 338
M [ 500 , int ] = SHIFT 339
M [ 500 , long ] = SHIFT 340
M [ 500 , short ] = SHIFT 341
M [ 500 , signed ] = SHIFT 342
M [ 500 , sizeof ] = SHIFT 343
M [ 500 , struct ] = SHIFT 21
M [ 500 , unsigned ] = SHIFT 344
M [ 500 , void ] = SHIFT 345
M [ 501 , DELIM_COMMA ] = SHIFT 661
M [ 501 , DELIM_RPAR ] = SHIFT 879
M [ 502 , DELIM_RPAR ] = SHIFT 880
M [ 503 , DELIM_QUESTION ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , DELIM_RSQBRACKET ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_ADD ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_ADDASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_AND ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_ANDASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_ASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_DIV ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_DIVASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_EQ ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_GE ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_GT ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_LAND ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_LE ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_LOR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_LT ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_MOD ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_MODASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_MUL ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_MULASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_NEQ ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_OR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_ORASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_SHL ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_SHLASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_SHR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_SHRASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_SUB ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_SUBASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_XOR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 503 , OP_XORASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 504 , <additive-expr> ] = GOTO 299
M [ 504 , <and-expr> ] = GOTO 300
M [ 504 , <asn-expr> ] = GOTO 301
M [ 504 , <cast-expr> ] = GOTO 302
M [ 504 , <cond-expr> ] = GOTO 303
M [ 504 , <constant> ] = GOTO 304
M [ 504 , <enum-spec> ] = GOTO 305
M [ 504 , <eq-expr> ] = GOTO 306
M [ 504 , <exc-or-expr> ] = GOTO 307
M [ 504 , <expr> ] = GOTO 501
M [ 504 , <inc-or-expr> ] = GOTO 309
M [ 504 , <land-expr> ] = GOTO 310
M [ 504 , <lor-expr> ] = GOTO 311
M [ 504 , <multiplicative-expr> ] = GOTO 312
M [ 504 , <num-const> ] = GOTO 313
M [ 504 , <postfix-expr> ] = GOTO 314
M [ 504 , <prim-expr> ] = GOTO 315
M [ 504 , <rel-expr> ] = GOTO 316
M [ 504 , <shift-expr> ] = GOTO 317
M [ 504 , <spec-qual-list> ] = GOTO 318
M [ 504 , <struct-union-spec> ] = GOTO 319
M [ 504 , <struct-union> ] = GOTO 320
M [ 504 , <type-name> ] = GOTO 881
M [ 504 , <type-qual> ] = GOTO 322
M [ 504 , <type-spec> ] = GOTO 323
M [ 504 , <unary-expr> ] = GOTO 324
M [ 504 , <unary-op> ] = GOTO 325
M [ 504 , CHAR_CONST ] = SHIFT 326
M [ 504 , DELIM_LPAR ] = SHIFT 327
M [ 504 , FLOAT_CONST ] = SHIFT 328
M [ 504 , IDENTIFIER ] = SHIFT 329
M [ 504 , INT_CONST ] = SHIFT 330
M [ 504 , OP_ADD ] = SHIFT 135
M [ 504 , OP_AND ] = SHIFT 136
M [ 504 , OP_DEC ] = SHIFT 331
M [ 504 , OP_INC ] = SHIFT 332
M [ 504 , OP_LNOT ] = SHIFT 139
M [ 504 , OP_MUL ] = SHIFT 140
M [ 504 , OP_NOT ] = SHIFT 141
M [ 504 , OP_SUB ] = SHIFT 142
M [ 504 , STR_LITERAL ] = SHIFT 333
M [ 504 , char ] = SHIFT 334
M [ 504 , const ] = SHIFT 335
M [ 504 , double ] = SHIFT 336
M [ 504 , enum ] = SHIFT 337
M [ 504 , float ] = SHIFT 338
M [ 504 , int ] = SHIFT 339
M [ 504 , long ] = SHIFT 340
M [ 504 , short ] = SHIFT 341
M [ 504 , signed ] = SHIFT 342
M [ 504 , sizeof ] = SHIFT 343
M [ 504 , struct ] = SHIFT 21
M [ 504 , unsigned ] = SHIFT 344
M [ 504 , void ] = SHIFT 345
M [ 505 , DELIM_QUESTION ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , DELIM_RSQBRACKET ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_ADD ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_ADDASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_AND ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_ANDASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_ASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_DIV ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_DIVASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_EQ ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_GE ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_GT ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_LAND ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_LE ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_LOR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_LT ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_MOD ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_MODASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_MUL ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_MULASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_NEQ ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_OR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_ORASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_SHL ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_SHLASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_SHR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_SHRASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_SUB ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_SUBASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_XOR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 505 , OP_XORASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 506 , DELIM_QUESTION ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , DELIM_RSQBRACKET ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_ADD ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_ADDASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_AND ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_ANDASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_ASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_DIV ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_DIVASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_EQ ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_GE ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_GT ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_LAND ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_LE ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_LOR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_LT ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_MOD ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_MODASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_MUL ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_MULASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_NEQ ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_OR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_ORASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_SHL ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_SHLASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_SHR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_SHRASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_SUB ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_SUBASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_XOR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 506 , OP_XORASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 507 , <additive-expr> ] = GOTO 299
M [ 507 , <and-expr> ] = GOTO 300
M [ 507 , <asn-expr> ] = GOTO 301
M [ 507 , <cast-expr> ] = GOTO 302
M [ 507 , <cond-expr> ] = GOTO 303
M [ 507 , <constant> ] = GOTO 304
M [ 507 , <enum-spec> ] = GOTO 305
M [ 507 , <eq-expr> ] = GOTO 306
M [ 507 , <exc-or-expr> ] = GOTO 307
M [ 507 , <expr> ] = GOTO 501
M [ 507 , <inc-or-expr> ] = GOTO 309
M [ 507 , <land-expr> ] = GOTO 310
M [ 507 , <lor-expr> ] = GOTO 311
M [ 507 , <multiplicative-expr> ] = GOTO 312
M [ 507 , <num-const> ] = GOTO 313
M [ 507 , <postfix-expr> ] = GOTO 314
M [ 507 , <prim-expr> ] = GOTO 315
M [ 507 , <rel-expr> ] = GOTO 316
M [ 507 , <shift-expr> ] = GOTO 317
M [ 507 , <spec-qual-list> ] = GOTO 318
M [ 507 , <struct-union-spec> ] = GOTO 319
M [ 507 , <struct-union> ] = GOTO 320
M [ 507 , <type-name> ] = GOTO 882
M [ 507 , <type-qual> ] = GOTO 322
M [ 507 , <type-spec> ] = GOTO 323
M [ 507 , <unary-expr> ] = GOTO 324
M [ 507 , <unary-op> ] = GOTO 325
M [ 507 , CHAR_CONST ] = SHIFT 326
M [ 507 , DELIM_LPAR ] = SHIFT 327
M [ 507 , FLOAT_CONST ] = SHIFT 328
M [ 507 , IDENTIFIER ] = SHIFT 329
M [ 507 , INT_CONST ] = SHIFT 330
M [ 507 , OP_ADD ] = SHIFT 135
M [ 507 , OP_AND ] = SHIFT 136
M [ 507 , OP_DEC ] = SHIFT 331
M [ 507 , OP_INC ] = SHIFT 332
M [ 507 , OP_LNOT ] = SHIFT 139
M [ 507 , OP_MUL ] = SHIFT 140
M [ 507 , OP_NOT ] = SHIFT 141
M [ 507 , OP_SUB ] = SHIFT 142
M [ 507 , STR_LITERAL ] = SHIFT 333
M [ 507 , char ] = SHIFT 334
M [ 507 , const ] = SHIFT 335
M [ 507 , double ] = SHIFT 336
M [ 507 , enum ] = SHIFT 337
M [ 507 , float ] = SHIFT 338
M [ 507 , int ] = SHIFT 339
M [ 507 , long ] = SHIFT 340
M [ 507 , short ] = SHIFT 341
M [ 507 , signed ] = SHIFT 342
M [ 507 , sizeof ] = SHIFT 343
M [ 507 , struct ] = SHIFT 21
M [ 507 , unsigned ] = SHIFT 344
M [ 507 , void ] = SHIFT 345
M [ 508 , DELIM_COMMA ] = SHIFT 457
M [ 508 , DELIM_RPAR ] = SHIFT 883
M [ 509 , DELIM_RPAR ] = SHIFT 884
M [ 510 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 510 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 510 , DELIM_RPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 511 , DELIM_RSQBRACKET ] = SHIFT 885
M [ 512 , <additive-expr> ] = GOTO 185
M [ 512 , <and-expr> ] = GOTO 186
M [ 512 , <asn-expr> ] = GOTO 886
M [ 512 , <cast-expr> ] = GOTO 188
M [ 512 , <cond-expr> ] = GOTO 189
M [ 512 , <constant> ] = GOTO 190
M [ 512 , <eq-expr> ] = GOTO 191
M [ 512 , <exc-or-expr> ] = GOTO 192
M [ 512 , <inc-or-expr> ] = GOTO 193
M [ 512 , <land-expr> ] = GOTO 194
M [ 512 , <lor-expr> ] = GOTO 195
M [ 512 , <multiplicative-expr> ] = GOTO 196
M [ 512 , <num-const> ] = GOTO 197
M [ 512 , <postfix-expr> ] = GOTO 198
M [ 512 , <prim-expr> ] = GOTO 199
M [ 512 , <rel-expr> ] = GOTO 200
M [ 512 , <shift-expr> ] = GOTO 201
M [ 512 , <type-qual> ] = GOTO 495
M [ 512 , <unary-expr> ] = GOTO 204
M [ 512 , <unary-op> ] = GOTO 205
M [ 512 , CHAR_CONST ] = SHIFT 206
M [ 512 , DELIM_LPAR ] = SHIFT 207
M [ 512 , DELIM_RSQBRACKET ] = SHIFT 887
M [ 512 , FLOAT_CONST ] = SHIFT 209
M [ 512 , IDENTIFIER ] = SHIFT 210
M [ 512 , INT_CONST ] = SHIFT 211
M [ 512 , OP_ADD ] = SHIFT 135
M [ 512 , OP_AND ] = SHIFT 136
M [ 512 , OP_DEC ] = SHIFT 212
M [ 512 , OP_INC ] = SHIFT 213
M [ 512 , OP_LNOT ] = SHIFT 139
M [ 512 , OP_MUL ] = SHIFT 140
M [ 512 , OP_NOT ] = SHIFT 141
M [ 512 , OP_SUB ] = SHIFT 142
M [ 512 , STR_LITERAL ] = SHIFT 214
M [ 512 , const ] = SHIFT 215
M [ 512 , sizeof ] = SHIFT 216
M [ 513 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 513 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 513 , DELIM_RPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 514 , DELIM_LPAR ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 514 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 514 , DELIM_RPAR ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 515 , <decl-spec> ] = GOTO 160
M [ 515 , <enum-spec> ] = GOTO 161
M [ 515 , <identifier-list> ] = GOTO 888
M [ 515 , <param-decl> ] = GOTO 163
M [ 515 , <param-list> ] = GOTO 164
M [ 515 , <param-type-list> ] = GOTO 889
M [ 515 , <storage-class-spec> ] = GOTO 166
M [ 515 , <struct-union-spec> ] = GOTO 167
M [ 515 , <struct-union> ] = GOTO 168
M [ 515 , <type-qual> ] = GOTO 169
M [ 515 , <type-spec> ] = GOTO 170
M [ 515 , DELIM_RPAR ] = SHIFT 890
M [ 515 , IDENTIFIER ] = SHIFT 172
M [ 515 , char ] = SHIFT 173
M [ 515 , const ] = SHIFT 174
M [ 515 , double ] = SHIFT 175
M [ 515 , enum ] = SHIFT 176
M [ 515 , float ] = SHIFT 177
M [ 515 , int ] = SHIFT 178
M [ 515 , long ] = SHIFT 179
M [ 515 , short ] = SHIFT 180
M [ 515 , signed ] = SHIFT 181
M [ 515 , struct ] = SHIFT 21
M [ 515 , typedef ] = SHIFT 182
M [ 515 , unsigned ] = SHIFT 183
M [ 515 , void ] = SHIFT 184
M [ 516 , <additive-expr> ] = GOTO 185
M [ 516 , <and-expr> ] = GOTO 186
M [ 516 , <asn-expr> ] = GOTO 891
M [ 516 , <cast-expr> ] = GOTO 188
M [ 516 , <cond-expr> ] = GOTO 189
M [ 516 , <constant> ] = GOTO 190
M [ 516 , <eq-expr> ] = GOTO 191
M [ 516 , <exc-or-expr> ] = GOTO 192
M [ 516 , <inc-or-expr> ] = GOTO 193
M [ 516 , <land-expr> ] = GOTO 194
M [ 516 , <lor-expr> ] = GOTO 195
M [ 516 , <multiplicative-expr> ] = GOTO 196
M [ 516 , <num-const> ] = GOTO 197
M [ 516 , <postfix-expr> ] = GOTO 198
M [ 516 , <prim-expr> ] = GOTO 199
M [ 516 , <rel-expr> ] = GOTO 200
M [ 516 , <shift-expr> ] = GOTO 201
M [ 516 , <type-qual-list> ] = GOTO 892
M [ 516 , <type-qual> ] = GOTO 203
M [ 516 , <unary-expr> ] = GOTO 204
M [ 516 , <unary-op> ] = GOTO 205
M [ 516 , CHAR_CONST ] = SHIFT 206
M [ 516 , DELIM_LPAR ] = SHIFT 207
M [ 516 , DELIM_RSQBRACKET ] = SHIFT 893
M [ 516 , FLOAT_CONST ] = SHIFT 209
M [ 516 , IDENTIFIER ] = SHIFT 210
M [ 516 , INT_CONST ] = SHIFT 211
M [ 516 , OP_ADD ] = SHIFT 135
M [ 516 , OP_AND ] = SHIFT 136
M [ 516 , OP_DEC ] = SHIFT 212
M [ 516 , OP_INC ] = SHIFT 213
M [ 516 , OP_LNOT ] = SHIFT 139
M [ 516 , OP_MUL ] = SHIFT 140
M [ 516 , OP_NOT ] = SHIFT 141
M [ 516 , OP_SUB ] = SHIFT 142
M [ 516 , STR_LITERAL ] = SHIFT 214
M [ 516 , const ] = SHIFT 215
M [ 516 , sizeof ] = SHIFT 216
M [ 517 , DELIM_COMMA ] = REDUCE <declarator> -> <pointer> <direct-declarator> 
M [ 517 , DELIM_LPAR ] = SHIFT 515
M [ 517 , DELIM_LSQBRACKET ] = SHIFT 516
M [ 517 , DELIM_SEMICOLON ] = REDUCE <declarator> -> <pointer> <direct-declarator> 
M [ 518 , <declarator> ] = GOTO 225
M [ 518 , <direct-declarator> ] = GOTO 226
M [ 518 , <pointer> ] = GOTO 227
M [ 518 , <struct-declarator> ] = GOTO 894
M [ 518 , DELIM_LPAR ] = SHIFT 230
M [ 518 , IDENTIFIER ] = SHIFT 232
M [ 518 , OP_MUL ] = SHIFT 33
M [ 519 , DELIM_RCURBRACE ] = REDUCE <struct-decl> -> <spec-qual-list> <struct-declarator-list> DELIM_SEMICOLON 
M [ 519 , char ] = REDUCE <struct-decl> -> <spec-qual-list> <struct-declarator-list> DELIM_SEMICOLON 
M [ 519 , const ] = REDUCE <struct-decl> -> <spec-qual-list> <struct-declarator-list> DELIM_SEMICOLON 
M [ 519 , double ] = REDUCE <struct-decl> -> <spec-qual-list> <struct-declarator-list> DELIM_SEMICOLON 
M [ 519 , enum ] = REDUCE <struct-decl> -> <spec-qual-list> <struct-declarator-list> DELIM_SEMICOLON 
M [ 519 , float ] = REDUCE <struct-decl> -> <spec-qual-list> <struct-declarator-list> DELIM_SEMICOLON 
M [ 519 , int ] = REDUCE <struct-decl> -> <spec-qual-list> <struct-declarator-list> DELIM_SEMICOLON 
M [ 519 , long ] = REDUCE <struct-decl> -> <spec-qual-list> <struct-declarator-list> DELIM_SEMICOLON 
M [ 519 , short ] = REDUCE <struct-decl> -> <spec-qual-list> <struct-declarator-list> DELIM_SEMICOLON 
M [ 519 , signed ] = REDUCE <struct-decl> -> <spec-qual-list> <struct-declarator-list> DELIM_SEMICOLON 
M [ 519 , struct ] = REDUCE <struct-decl> -> <spec-qual-list> <struct-declarator-list> DELIM_SEMICOLON 
M [ 519 , unsigned ] = REDUCE <struct-decl> -> <spec-qual-list> <struct-declarator-list> DELIM_SEMICOLON 
M [ 519 , void ] = REDUCE <struct-decl> -> <spec-qual-list> <struct-declarator-list> DELIM_SEMICOLON 
M [ 520 , DELIM_RPAR ] = SHIFT 895
M [ 521 , <enum-spec> ] = GOTO 62
M [ 521 , <spec-qual-list> ] = GOTO 63
M [ 521 , <struct-decl> ] = GOTO 233
M [ 521 , <struct-union-spec> ] = GOTO 66
M [ 521 , <struct-union> ] = GOTO 67
M [ 521 , <type-qual> ] = GOTO 68
M [ 521 , <type-spec> ] = GOTO 69
M [ 521 , DELIM_RCURBRACE ] = SHIFT 896
M [ 521 , char ] = SHIFT 70
M [ 521 , const ] = SHIFT 71
M [ 521 , double ] = SHIFT 72
M [ 521 , enum ] = SHIFT 73
M [ 521 , float ] = SHIFT 74
M [ 521 , int ] = SHIFT 75
M [ 521 , long ] = SHIFT 76
M [ 521 , short ] = SHIFT 77
M [ 521 , signed ] = SHIFT 78
M [ 521 , struct ] = SHIFT 21
M [ 521 , unsigned ] = SHIFT 79
M [ 521 , void ] = SHIFT 80
M [ 522 , <enum-spec> ] = GOTO 62
M [ 522 , <spec-qual-list> ] = GOTO 63
M [ 522 , <struct-decl-list> ] = GOTO 897
M [ 522 , <struct-decl> ] = GOTO 65
M [ 522 , <struct-union-spec> ] = GOTO 66
M [ 522 , <struct-union> ] = GOTO 67
M [ 522 , <type-qual> ] = GOTO 68
M [ 522 , <type-spec> ] = GOTO 69
M [ 522 , char ] = SHIFT 70
M [ 522 , const ] = SHIFT 71
M [ 522 , double ] = SHIFT 72
M [ 522 , enum ] = SHIFT 73
M [ 522 , float ] = SHIFT 74
M [ 522 , int ] = SHIFT 75
M [ 522 , long ] = SHIFT 76
M [ 522 , short ] = SHIFT 77
M [ 522 , signed ] = SHIFT 78
M [ 522 , struct ] = SHIFT 21
M [ 522 , unsigned ] = SHIFT 79
M [ 522 , void ] = SHIFT 80
M [ 523 , DELIM_COMMA ] = SHIFT 898
M [ 523 , DELIM_RCURBRACE ] = SHIFT 899
M [ 524 , <enumeration-const> ] = GOTO 82
M [ 524 , <enumerator-list> ] = GOTO 900
M [ 524 , <enumerator> ] = GOTO 84
M [ 524 , IDENTIFIER ] = SHIFT 85
M [ 525 , DELIM_LPAR ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 525 , DELIM_SEMICOLON ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 525 , IDENTIFIER ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 525 , OP_MUL ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 525 , char ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 525 , const ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 525 , double ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 525 , enum ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 525 , float ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 525 , int ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 525 , long ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 525 , short ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 525 , signed ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 525 , struct ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 525 , typedef ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 525 , unsigned ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 525 , void ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 526 , DELIM_COMMA ] = REDUCE <const-expr> -> <cond-expr> 
M [ 526 , DELIM_RCURBRACE ] = REDUCE <const-expr> -> <cond-expr> 
M [ 527 , DELIM_COMMA ] = REDUCE <enumerator> -> <enumeration-const> OP_ASN <const-expr> 
M [ 527 , DELIM_RCURBRACE ] = REDUCE <enumerator> -> <enumeration-const> OP_ASN <const-expr> 
M [ 528 , DELIM_COMMA ] = REDUCE <prim-expr> -> <constant> 
M [ 528 , DELIM_LPAR ] = REDUCE <prim-expr> -> <constant> 
M [ 528 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> <constant> 
M [ 528 , DELIM_QUESTION ] = REDUCE <prim-expr> -> <constant> 
M [ 528 , DELIM_RCURBRACE ] = REDUCE <prim-expr> -> <constant> 
M [ 528 , OP_ADD ] = REDUCE <prim-expr> -> <constant> 
M [ 528 , OP_AND ] = REDUCE <prim-expr> -> <constant> 
M [ 528 , OP_ARROW ] = REDUCE <prim-expr> -> <constant> 
M [ 528 , OP_DEC ] = REDUCE <prim-expr> -> <constant> 
M [ 528 , OP_DIV ] = REDUCE <prim-expr> -> <constant> 
M [ 528 , OP_DOT ] = REDUCE <prim-expr> -> <constant> 
M [ 528 , OP_EQ ] = REDUCE <prim-expr> -> <constant> 
M [ 528 , OP_GE ] = REDUCE <prim-expr> -> <constant> 
M [ 528 , OP_GT ] = REDUCE <prim-expr> -> <constant> 
M [ 528 , OP_INC ] = REDUCE <prim-expr> -> <constant> 
M [ 528 , OP_LAND ] = REDUCE <prim-expr> -> <constant> 
M [ 528 , OP_LE ] = REDUCE <prim-expr> -> <constant> 
M [ 528 , OP_LOR ] = REDUCE <prim-expr> -> <constant> 
M [ 528 , OP_LT ] = REDUCE <prim-expr> -> <constant> 
M [ 528 , OP_MOD ] = REDUCE <prim-expr> -> <constant> 
M [ 528 , OP_MUL ] = REDUCE <prim-expr> -> <constant> 
M [ 528 , OP_NEQ ] = REDUCE <prim-expr> -> <constant> 
M [ 528 , OP_OR ] = REDUCE <prim-expr> -> <constant> 
M [ 528 , OP_SHL ] = REDUCE <prim-expr> -> <constant> 
M [ 528 , OP_SHR ] = REDUCE <prim-expr> -> <constant> 
M [ 528 , OP_SUB ] = REDUCE <prim-expr> -> <constant> 
M [ 528 , OP_XOR ] = REDUCE <prim-expr> -> <constant> 
M [ 529 , DELIM_COMMA ] = REDUCE <constant> -> <num-const> 
M [ 529 , DELIM_LPAR ] = REDUCE <constant> -> <num-const> 
M [ 529 , DELIM_LSQBRACKET ] = REDUCE <constant> -> <num-const> 
M [ 529 , DELIM_QUESTION ] = REDUCE <constant> -> <num-const> 
M [ 529 , DELIM_RCURBRACE ] = REDUCE <constant> -> <num-const> 
M [ 529 , OP_ADD ] = REDUCE <constant> -> <num-const> 
M [ 529 , OP_AND ] = REDUCE <constant> -> <num-const> 
M [ 529 , OP_ARROW ] = REDUCE <constant> -> <num-const> 
M [ 529 , OP_DEC ] = REDUCE <constant> -> <num-const> 
M [ 529 , OP_DIV ] = REDUCE <constant> -> <num-const> 
M [ 529 , OP_DOT ] = REDUCE <constant> -> <num-const> 
M [ 529 , OP_EQ ] = REDUCE <constant> -> <num-const> 
M [ 529 , OP_GE ] = REDUCE <constant> -> <num-const> 
M [ 529 , OP_GT ] = REDUCE <constant> -> <num-const> 
M [ 529 , OP_INC ] = REDUCE <constant> -> <num-const> 
M [ 529 , OP_LAND ] = REDUCE <constant> -> <num-const> 
M [ 529 , OP_LE ] = REDUCE <constant> -> <num-const> 
M [ 529 , OP_LOR ] = REDUCE <constant> -> <num-const> 
M [ 529 , OP_LT ] = REDUCE <constant> -> <num-const> 
M [ 529 , OP_MOD ] = REDUCE <constant> -> <num-const> 
M [ 529 , OP_MUL ] = REDUCE <constant> -> <num-const> 
M [ 529 , OP_NEQ ] = REDUCE <constant> -> <num-const> 
M [ 529 , OP_OR ] = REDUCE <constant> -> <num-const> 
M [ 529 , OP_SHL ] = REDUCE <constant> -> <num-const> 
M [ 529 , OP_SHR ] = REDUCE <constant> -> <num-const> 
M [ 529 , OP_SUB ] = REDUCE <constant> -> <num-const> 
M [ 529 , OP_XOR ] = REDUCE <constant> -> <num-const> 
M [ 530 , DELIM_COMMA ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 530 , DELIM_LPAR ] = SHIFT 901
M [ 530 , DELIM_LSQBRACKET ] = SHIFT 902
M [ 530 , DELIM_QUESTION ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 530 , DELIM_RCURBRACE ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 530 , OP_ADD ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 530 , OP_AND ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 530 , OP_ARROW ] = SHIFT 903
M [ 530 , OP_DEC ] = SHIFT 904
M [ 530 , OP_DIV ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 530 , OP_DOT ] = SHIFT 905
M [ 530 , OP_EQ ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 530 , OP_GE ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 530 , OP_GT ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 530 , OP_INC ] = SHIFT 906
M [ 530 , OP_LAND ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 530 , OP_LE ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 530 , OP_LOR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 530 , OP_LT ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 530 , OP_MOD ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 530 , OP_MUL ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 530 , OP_NEQ ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 530 , OP_OR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 530 , OP_SHL ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 530 , OP_SHR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 530 , OP_SUB ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 530 , OP_XOR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 531 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 531 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 531 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 531 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 531 , DELIM_RCURBRACE ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 531 , OP_ADD ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 531 , OP_AND ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 531 , OP_ARROW ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 531 , OP_DEC ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 531 , OP_DIV ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 531 , OP_DOT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 531 , OP_EQ ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 531 , OP_GE ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 531 , OP_GT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 531 , OP_INC ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 531 , OP_LAND ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 531 , OP_LE ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 531 , OP_LOR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 531 , OP_LT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 531 , OP_MOD ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 531 , OP_MUL ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 531 , OP_NEQ ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 531 , OP_OR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 531 , OP_SHL ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 531 , OP_SHR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 531 , OP_SUB ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 531 , OP_XOR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 532 , DELIM_COMMA ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 532 , DELIM_QUESTION ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 532 , DELIM_RCURBRACE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 532 , OP_ADD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 532 , OP_AND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 532 , OP_DIV ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 532 , OP_EQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 532 , OP_GE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 532 , OP_GT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 532 , OP_LAND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 532 , OP_LE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 532 , OP_LOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 532 , OP_LT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 532 , OP_MOD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 532 , OP_MUL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 532 , OP_NEQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 532 , OP_OR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 532 , OP_SHL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 532 , OP_SHR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 532 , OP_SUB ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 532 , OP_XOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 533 , <cast-expr> ] = GOTO 907
M [ 533 , <constant> ] = GOTO 528
M [ 533 , <num-const> ] = GOTO 529
M [ 533 , <postfix-expr> ] = GOTO 530
M [ 533 , <prim-expr> ] = GOTO 531
M [ 533 , <unary-expr> ] = GOTO 532
M [ 533 , <unary-op> ] = GOTO 533
M [ 533 , CHAR_CONST ] = SHIFT 534
M [ 533 , DELIM_LPAR ] = SHIFT 535
M [ 533 , FLOAT_CONST ] = SHIFT 536
M [ 533 , IDENTIFIER ] = SHIFT 537
M [ 533 , INT_CONST ] = SHIFT 538
M [ 533 , OP_ADD ] = SHIFT 135
M [ 533 , OP_AND ] = SHIFT 136
M [ 533 , OP_DEC ] = SHIFT 539
M [ 533 , OP_INC ] = SHIFT 540
M [ 533 , OP_LNOT ] = SHIFT 139
M [ 533 , OP_MUL ] = SHIFT 140
M [ 533 , OP_NOT ] = SHIFT 141
M [ 533 , OP_SUB ] = SHIFT 142
M [ 533 , STR_LITERAL ] = SHIFT 541
M [ 533 , sizeof ] = SHIFT 542
M [ 534 , DELIM_COMMA ] = REDUCE <constant> -> CHAR_CONST 
M [ 534 , DELIM_LPAR ] = REDUCE <constant> -> CHAR_CONST 
M [ 534 , DELIM_LSQBRACKET ] = REDUCE <constant> -> CHAR_CONST 
M [ 534 , DELIM_QUESTION ] = REDUCE <constant> -> CHAR_CONST 
M [ 534 , DELIM_RCURBRACE ] = REDUCE <constant> -> CHAR_CONST 
M [ 534 , OP_ADD ] = REDUCE <constant> -> CHAR_CONST 
M [ 534 , OP_AND ] = REDUCE <constant> -> CHAR_CONST 
M [ 534 , OP_ARROW ] = REDUCE <constant> -> CHAR_CONST 
M [ 534 , OP_DEC ] = REDUCE <constant> -> CHAR_CONST 
M [ 534 , OP_DIV ] = REDUCE <constant> -> CHAR_CONST 
M [ 534 , OP_DOT ] = REDUCE <constant> -> CHAR_CONST 
M [ 534 , OP_EQ ] = REDUCE <constant> -> CHAR_CONST 
M [ 534 , OP_GE ] = REDUCE <constant> -> CHAR_CONST 
M [ 534 , OP_GT ] = REDUCE <constant> -> CHAR_CONST 
M [ 534 , OP_INC ] = REDUCE <constant> -> CHAR_CONST 
M [ 534 , OP_LAND ] = REDUCE <constant> -> CHAR_CONST 
M [ 534 , OP_LE ] = REDUCE <constant> -> CHAR_CONST 
M [ 534 , OP_LOR ] = REDUCE <constant> -> CHAR_CONST 
M [ 534 , OP_LT ] = REDUCE <constant> -> CHAR_CONST 
M [ 534 , OP_MOD ] = REDUCE <constant> -> CHAR_CONST 
M [ 534 , OP_MUL ] = REDUCE <constant> -> CHAR_CONST 
M [ 534 , OP_NEQ ] = REDUCE <constant> -> CHAR_CONST 
M [ 534 , OP_OR ] = REDUCE <constant> -> CHAR_CONST 
M [ 534 , OP_SHL ] = REDUCE <constant> -> CHAR_CONST 
M [ 534 , OP_SHR ] = REDUCE <constant> -> CHAR_CONST 
M [ 534 , OP_SUB ] = REDUCE <constant> -> CHAR_CONST 
M [ 534 , OP_XOR ] = REDUCE <constant> -> CHAR_CONST 
M [ 535 , <additive-expr> ] = GOTO 299
M [ 535 , <and-expr> ] = GOTO 300
M [ 535 , <asn-expr> ] = GOTO 301
M [ 535 , <cast-expr> ] = GOTO 302
M [ 535 , <cond-expr> ] = GOTO 303
M [ 535 , <constant> ] = GOTO 304
M [ 535 , <enum-spec> ] = GOTO 305
M [ 535 , <eq-expr> ] = GOTO 306
M [ 535 , <exc-or-expr> ] = GOTO 307
M [ 535 , <expr> ] = GOTO 908
M [ 535 , <inc-or-expr> ] = GOTO 309
M [ 535 , <land-expr> ] = GOTO 310
M [ 535 , <lor-expr> ] = GOTO 311
M [ 535 , <multiplicative-expr> ] = GOTO 312
M [ 535 , <num-const> ] = GOTO 313
M [ 535 , <postfix-expr> ] = GOTO 314
M [ 535 , <prim-expr> ] = GOTO 315
M [ 535 , <rel-expr> ] = GOTO 316
M [ 535 , <shift-expr> ] = GOTO 317
M [ 535 , <spec-qual-list> ] = GOTO 318
M [ 535 , <struct-union-spec> ] = GOTO 319
M [ 535 , <struct-union> ] = GOTO 320
M [ 535 , <type-name> ] = GOTO 909
M [ 535 , <type-qual> ] = GOTO 322
M [ 535 , <type-spec> ] = GOTO 323
M [ 535 , <unary-expr> ] = GOTO 324
M [ 535 , <unary-op> ] = GOTO 325
M [ 535 , CHAR_CONST ] = SHIFT 326
M [ 535 , DELIM_LPAR ] = SHIFT 327
M [ 535 , FLOAT_CONST ] = SHIFT 328
M [ 535 , IDENTIFIER ] = SHIFT 329
M [ 535 , INT_CONST ] = SHIFT 330
M [ 535 , OP_ADD ] = SHIFT 135
M [ 535 , OP_AND ] = SHIFT 136
M [ 535 , OP_DEC ] = SHIFT 331
M [ 535 , OP_INC ] = SHIFT 332
M [ 535 , OP_LNOT ] = SHIFT 139
M [ 535 , OP_MUL ] = SHIFT 140
M [ 535 , OP_NOT ] = SHIFT 141
M [ 535 , OP_SUB ] = SHIFT 142
M [ 535 , STR_LITERAL ] = SHIFT 333
M [ 535 , char ] = SHIFT 334
M [ 535 , const ] = SHIFT 335
M [ 535 , double ] = SHIFT 336
M [ 535 , enum ] = SHIFT 337
M [ 535 , float ] = SHIFT 338
M [ 535 , int ] = SHIFT 339
M [ 535 , long ] = SHIFT 340
M [ 535 , short ] = SHIFT 341
M [ 535 , signed ] = SHIFT 342
M [ 535 , sizeof ] = SHIFT 343
M [ 535 , struct ] = SHIFT 21
M [ 535 , unsigned ] = SHIFT 344
M [ 535 , void ] = SHIFT 345
M [ 536 , DELIM_COMMA ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 536 , DELIM_LPAR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 536 , DELIM_LSQBRACKET ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 536 , DELIM_QUESTION ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 536 , DELIM_RCURBRACE ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 536 , OP_ADD ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 536 , OP_AND ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 536 , OP_ARROW ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 536 , OP_DEC ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 536 , OP_DIV ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 536 , OP_DOT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 536 , OP_EQ ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 536 , OP_GE ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 536 , OP_GT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 536 , OP_INC ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 536 , OP_LAND ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 536 , OP_LE ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 536 , OP_LOR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 536 , OP_LT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 536 , OP_MOD ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 536 , OP_MUL ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 536 , OP_NEQ ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 536 , OP_OR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 536 , OP_SHL ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 536 , OP_SHR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 536 , OP_SUB ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 536 , OP_XOR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 537 , DELIM_COMMA ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 537 , DELIM_LPAR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 537 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 537 , DELIM_QUESTION ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 537 , DELIM_RCURBRACE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 537 , OP_ADD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 537 , OP_AND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 537 , OP_ARROW ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 537 , OP_DEC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 537 , OP_DIV ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 537 , OP_DOT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 537 , OP_EQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 537 , OP_GE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 537 , OP_GT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 537 , OP_INC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 537 , OP_LAND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 537 , OP_LE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 537 , OP_LOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 537 , OP_LT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 537 , OP_MOD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 537 , OP_MUL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 537 , OP_NEQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 537 , OP_OR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 537 , OP_SHL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 537 , OP_SHR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 537 , OP_SUB ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 537 , OP_XOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 538 , DELIM_COMMA ] = REDUCE <num-const> -> INT_CONST 
M [ 538 , DELIM_LPAR ] = REDUCE <num-const> -> INT_CONST 
M [ 538 , DELIM_LSQBRACKET ] = REDUCE <num-const> -> INT_CONST 
M [ 538 , DELIM_QUESTION ] = REDUCE <num-const> -> INT_CONST 
M [ 538 , DELIM_RCURBRACE ] = REDUCE <num-const> -> INT_CONST 
M [ 538 , OP_ADD ] = REDUCE <num-const> -> INT_CONST 
M [ 538 , OP_AND ] = REDUCE <num-const> -> INT_CONST 
M [ 538 , OP_ARROW ] = REDUCE <num-const> -> INT_CONST 
M [ 538 , OP_DEC ] = REDUCE <num-const> -> INT_CONST 
M [ 538 , OP_DIV ] = REDUCE <num-const> -> INT_CONST 
M [ 538 , OP_DOT ] = REDUCE <num-const> -> INT_CONST 
M [ 538 , OP_EQ ] = REDUCE <num-const> -> INT_CONST 
M [ 538 , OP_GE ] = REDUCE <num-const> -> INT_CONST 
M [ 538 , OP_GT ] = REDUCE <num-const> -> INT_CONST 
M [ 538 , OP_INC ] = REDUCE <num-const> -> INT_CONST 
M [ 538 , OP_LAND ] = REDUCE <num-const> -> INT_CONST 
M [ 538 , OP_LE ] = REDUCE <num-const> -> INT_CONST 
M [ 538 , OP_LOR ] = REDUCE <num-const> -> INT_CONST 
M [ 538 , OP_LT ] = REDUCE <num-const> -> INT_CONST 
M [ 538 , OP_MOD ] = REDUCE <num-const> -> INT_CONST 
M [ 538 , OP_MUL ] = REDUCE <num-const> -> INT_CONST 
M [ 538 , OP_NEQ ] = REDUCE <num-const> -> INT_CONST 
M [ 538 , OP_OR ] = REDUCE <num-const> -> INT_CONST 
M [ 538 , OP_SHL ] = REDUCE <num-const> -> INT_CONST 
M [ 538 , OP_SHR ] = REDUCE <num-const> -> INT_CONST 
M [ 538 , OP_SUB ] = REDUCE <num-const> -> INT_CONST 
M [ 538 , OP_XOR ] = REDUCE <num-const> -> INT_CONST 
M [ 539 , <constant> ] = GOTO 528
M [ 539 , <num-const> ] = GOTO 529
M [ 539 , <postfix-expr> ] = GOTO 530
M [ 539 , <prim-expr> ] = GOTO 531
M [ 539 , <unary-expr> ] = GOTO 910
M [ 539 , <unary-op> ] = GOTO 533
M [ 539 , CHAR_CONST ] = SHIFT 534
M [ 539 , DELIM_LPAR ] = SHIFT 911
M [ 539 , FLOAT_CONST ] = SHIFT 536
M [ 539 , IDENTIFIER ] = SHIFT 537
M [ 539 , INT_CONST ] = SHIFT 538
M [ 539 , OP_ADD ] = SHIFT 135
M [ 539 , OP_AND ] = SHIFT 136
M [ 539 , OP_DEC ] = SHIFT 539
M [ 539 , OP_INC ] = SHIFT 540
M [ 539 , OP_LNOT ] = SHIFT 139
M [ 539 , OP_MUL ] = SHIFT 140
M [ 539 , OP_NOT ] = SHIFT 141
M [ 539 , OP_SUB ] = SHIFT 142
M [ 539 , STR_LITERAL ] = SHIFT 541
M [ 539 , sizeof ] = SHIFT 542
M [ 540 , <constant> ] = GOTO 528
M [ 540 , <num-const> ] = GOTO 529
M [ 540 , <postfix-expr> ] = GOTO 530
M [ 540 , <prim-expr> ] = GOTO 531
M [ 540 , <unary-expr> ] = GOTO 912
M [ 540 , <unary-op> ] = GOTO 533
M [ 540 , CHAR_CONST ] = SHIFT 534
M [ 540 , DELIM_LPAR ] = SHIFT 911
M [ 540 , FLOAT_CONST ] = SHIFT 536
M [ 540 , IDENTIFIER ] = SHIFT 537
M [ 540 , INT_CONST ] = SHIFT 538
M [ 540 , OP_ADD ] = SHIFT 135
M [ 540 , OP_AND ] = SHIFT 136
M [ 540 , OP_DEC ] = SHIFT 539
M [ 540 , OP_INC ] = SHIFT 540
M [ 540 , OP_LNOT ] = SHIFT 139
M [ 540 , OP_MUL ] = SHIFT 140
M [ 540 , OP_NOT ] = SHIFT 141
M [ 540 , OP_SUB ] = SHIFT 142
M [ 540 , STR_LITERAL ] = SHIFT 541
M [ 540 , sizeof ] = SHIFT 542
M [ 541 , DELIM_COMMA ] = REDUCE <constant> -> STR_LITERAL 
M [ 541 , DELIM_LPAR ] = REDUCE <constant> -> STR_LITERAL 
M [ 541 , DELIM_LSQBRACKET ] = REDUCE <constant> -> STR_LITERAL 
M [ 541 , DELIM_QUESTION ] = REDUCE <constant> -> STR_LITERAL 
M [ 541 , DELIM_RCURBRACE ] = REDUCE <constant> -> STR_LITERAL 
M [ 541 , OP_ADD ] = REDUCE <constant> -> STR_LITERAL 
M [ 541 , OP_AND ] = REDUCE <constant> -> STR_LITERAL 
M [ 541 , OP_ARROW ] = REDUCE <constant> -> STR_LITERAL 
M [ 541 , OP_DEC ] = REDUCE <constant> -> STR_LITERAL 
M [ 541 , OP_DIV ] = REDUCE <constant> -> STR_LITERAL 
M [ 541 , OP_DOT ] = REDUCE <constant> -> STR_LITERAL 
M [ 541 , OP_EQ ] = REDUCE <constant> -> STR_LITERAL 
M [ 541 , OP_GE ] = REDUCE <constant> -> STR_LITERAL 
M [ 541 , OP_GT ] = REDUCE <constant> -> STR_LITERAL 
M [ 541 , OP_INC ] = REDUCE <constant> -> STR_LITERAL 
M [ 541 , OP_LAND ] = REDUCE <constant> -> STR_LITERAL 
M [ 541 , OP_LE ] = REDUCE <constant> -> STR_LITERAL 
M [ 541 , OP_LOR ] = REDUCE <constant> -> STR_LITERAL 
M [ 541 , OP_LT ] = REDUCE <constant> -> STR_LITERAL 
M [ 541 , OP_MOD ] = REDUCE <constant> -> STR_LITERAL 
M [ 541 , OP_MUL ] = REDUCE <constant> -> STR_LITERAL 
M [ 541 , OP_NEQ ] = REDUCE <constant> -> STR_LITERAL 
M [ 541 , OP_OR ] = REDUCE <constant> -> STR_LITERAL 
M [ 541 , OP_SHL ] = REDUCE <constant> -> STR_LITERAL 
M [ 541 , OP_SHR ] = REDUCE <constant> -> STR_LITERAL 
M [ 541 , OP_SUB ] = REDUCE <constant> -> STR_LITERAL 
M [ 541 , OP_XOR ] = REDUCE <constant> -> STR_LITERAL 
M [ 542 , <constant> ] = GOTO 528
M [ 542 , <num-const> ] = GOTO 529
M [ 542 , <postfix-expr> ] = GOTO 530
M [ 542 , <prim-expr> ] = GOTO 531
M [ 542 , <unary-expr> ] = GOTO 913
M [ 542 , <unary-op> ] = GOTO 533
M [ 542 , CHAR_CONST ] = SHIFT 534
M [ 542 , DELIM_LPAR ] = SHIFT 914
M [ 542 , FLOAT_CONST ] = SHIFT 536
M [ 542 , IDENTIFIER ] = SHIFT 537
M [ 542 , INT_CONST ] = SHIFT 538
M [ 542 , OP_ADD ] = SHIFT 135
M [ 542 , OP_AND ] = SHIFT 136
M [ 542 , OP_DEC ] = SHIFT 539
M [ 542 , OP_INC ] = SHIFT 540
M [ 542 , OP_LNOT ] = SHIFT 139
M [ 542 , OP_MUL ] = SHIFT 140
M [ 542 , OP_NOT ] = SHIFT 141
M [ 542 , OP_SUB ] = SHIFT 142
M [ 542 , STR_LITERAL ] = SHIFT 541
M [ 542 , sizeof ] = SHIFT 542
M [ 543 , DELIM_COMMA ] = REDUCE <enumerator-list> -> <enumerator-list> DELIM_COMMA <enumerator> 
M [ 543 , DELIM_RCURBRACE ] = REDUCE <enumerator-list> -> <enumerator-list> DELIM_COMMA <enumerator> 
M [ 544 , DELIM_LPAR ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 544 , DELIM_SEMICOLON ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 544 , IDENTIFIER ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 544 , OP_MUL ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 544 , char ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 544 , const ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 544 , double ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 544 , enum ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 544 , float ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 544 , int ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 544 , long ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 544 , short ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 544 , signed ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 544 , struct ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 544 , typedef ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 544 , unsigned ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 544 , void ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 545 , <enumeration-const> ] = GOTO 82
M [ 545 , <enumerator> ] = GOTO 543
M [ 545 , DELIM_RCURBRACE ] = SHIFT 915
M [ 545 , IDENTIFIER ] = SHIFT 85
M [ 546 , DELIM_LPAR ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 546 , DELIM_SEMICOLON ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 546 , IDENTIFIER ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 546 , OP_MUL ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 546 , char ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 546 , const ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 546 , double ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 546 , enum ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 546 , float ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 546 , int ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 546 , long ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 546 , short ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 546 , signed ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 546 , struct ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 546 , typedef ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 546 , unsigned ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 546 , void ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 547 , DELIM_COMMA ] = SHIFT 457
M [ 547 , DELIM_RPAR ] = SHIFT 916
M [ 548 , DELIM_RPAR ] = SHIFT 917
M [ 549 , DELIM_COMMA ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 549 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 549 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 549 , DELIM_SEMICOLON ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 549 , OP_ASN ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 550 , DELIM_RSQBRACKET ] = SHIFT 918
M [ 551 , <additive-expr> ] = GOTO 185
M [ 551 , <and-expr> ] = GOTO 186
M [ 551 , <asn-expr> ] = GOTO 919
M [ 551 , <cast-expr> ] = GOTO 188
M [ 551 , <cond-expr> ] = GOTO 189
M [ 551 , <constant> ] = GOTO 190
M [ 551 , <eq-expr> ] = GOTO 191
M [ 551 , <exc-or-expr> ] = GOTO 192
M [ 551 , <inc-or-expr> ] = GOTO 193
M [ 551 , <land-expr> ] = GOTO 194
M [ 551 , <lor-expr> ] = GOTO 195
M [ 551 , <multiplicative-expr> ] = GOTO 196
M [ 551 , <num-const> ] = GOTO 197
M [ 551 , <postfix-expr> ] = GOTO 198
M [ 551 , <prim-expr> ] = GOTO 199
M [ 551 , <rel-expr> ] = GOTO 200
M [ 551 , <shift-expr> ] = GOTO 201
M [ 551 , <type-qual> ] = GOTO 495
M [ 551 , <unary-expr> ] = GOTO 204
M [ 551 , <unary-op> ] = GOTO 205
M [ 551 , CHAR_CONST ] = SHIFT 206
M [ 551 , DELIM_LPAR ] = SHIFT 207
M [ 551 , DELIM_RSQBRACKET ] = SHIFT 920
M [ 551 , FLOAT_CONST ] = SHIFT 209
M [ 551 , IDENTIFIER ] = SHIFT 210
M [ 551 , INT_CONST ] = SHIFT 211
M [ 551 , OP_ADD ] = SHIFT 135
M [ 551 , OP_AND ] = SHIFT 136
M [ 551 , OP_DEC ] = SHIFT 212
M [ 551 , OP_INC ] = SHIFT 213
M [ 551 , OP_LNOT ] = SHIFT 139
M [ 551 , OP_MUL ] = SHIFT 140
M [ 551 , OP_NOT ] = SHIFT 141
M [ 551 , OP_SUB ] = SHIFT 142
M [ 551 , STR_LITERAL ] = SHIFT 214
M [ 551 , const ] = SHIFT 215
M [ 551 , sizeof ] = SHIFT 216
M [ 552 , DELIM_COMMA ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 552 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 552 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 552 , DELIM_SEMICOLON ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 552 , OP_ASN ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 553 , DELIM_COMMA ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 553 , DELIM_LPAR ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 553 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 553 , DELIM_SEMICOLON ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 553 , OP_ASN ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 554 , DELIM_COMMA ] = REDUCE <prim-expr> -> <constant> 
M [ 554 , DELIM_LPAR ] = REDUCE <prim-expr> -> <constant> 
M [ 554 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> <constant> 
M [ 554 , DELIM_QUESTION ] = REDUCE <prim-expr> -> <constant> 
M [ 554 , DELIM_SEMICOLON ] = REDUCE <prim-expr> -> <constant> 
M [ 554 , OP_ADD ] = REDUCE <prim-expr> -> <constant> 
M [ 554 , OP_AND ] = REDUCE <prim-expr> -> <constant> 
M [ 554 , OP_ARROW ] = REDUCE <prim-expr> -> <constant> 
M [ 554 , OP_DEC ] = REDUCE <prim-expr> -> <constant> 
M [ 554 , OP_DIV ] = REDUCE <prim-expr> -> <constant> 
M [ 554 , OP_DOT ] = REDUCE <prim-expr> -> <constant> 
M [ 554 , OP_EQ ] = REDUCE <prim-expr> -> <constant> 
M [ 554 , OP_GE ] = REDUCE <prim-expr> -> <constant> 
M [ 554 , OP_GT ] = REDUCE <prim-expr> -> <constant> 
M [ 554 , OP_INC ] = REDUCE <prim-expr> -> <constant> 
M [ 554 , OP_LAND ] = REDUCE <prim-expr> -> <constant> 
M [ 554 , OP_LE ] = REDUCE <prim-expr> -> <constant> 
M [ 554 , OP_LOR ] = REDUCE <prim-expr> -> <constant> 
M [ 554 , OP_LT ] = REDUCE <prim-expr> -> <constant> 
M [ 554 , OP_MOD ] = REDUCE <prim-expr> -> <constant> 
M [ 554 , OP_MUL ] = REDUCE <prim-expr> -> <constant> 
M [ 554 , OP_NEQ ] = REDUCE <prim-expr> -> <constant> 
M [ 554 , OP_OR ] = REDUCE <prim-expr> -> <constant> 
M [ 554 , OP_SHL ] = REDUCE <prim-expr> -> <constant> 
M [ 554 , OP_SHR ] = REDUCE <prim-expr> -> <constant> 
M [ 554 , OP_SUB ] = REDUCE <prim-expr> -> <constant> 
M [ 554 , OP_XOR ] = REDUCE <prim-expr> -> <constant> 
M [ 555 , DELIM_COMMA ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 555 , DELIM_QUESTION ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 555 , DELIM_SEMICOLON ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 555 , OP_ADD ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 555 , OP_AND ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 555 , OP_DIV ] = SHIFT 267
M [ 555 , OP_EQ ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 555 , OP_GE ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 555 , OP_GT ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 555 , OP_LAND ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 555 , OP_LE ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 555 , OP_LOR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 555 , OP_LT ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 555 , OP_MOD ] = SHIFT 268
M [ 555 , OP_MUL ] = SHIFT 269
M [ 555 , OP_NEQ ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 555 , OP_OR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 555 , OP_SHL ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 555 , OP_SHR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 555 , OP_SUB ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 555 , OP_XOR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 556 , DELIM_COMMA ] = REDUCE <constant> -> <num-const> 
M [ 556 , DELIM_LPAR ] = REDUCE <constant> -> <num-const> 
M [ 556 , DELIM_LSQBRACKET ] = REDUCE <constant> -> <num-const> 
M [ 556 , DELIM_QUESTION ] = REDUCE <constant> -> <num-const> 
M [ 556 , DELIM_SEMICOLON ] = REDUCE <constant> -> <num-const> 
M [ 556 , OP_ADD ] = REDUCE <constant> -> <num-const> 
M [ 556 , OP_AND ] = REDUCE <constant> -> <num-const> 
M [ 556 , OP_ARROW ] = REDUCE <constant> -> <num-const> 
M [ 556 , OP_DEC ] = REDUCE <constant> -> <num-const> 
M [ 556 , OP_DIV ] = REDUCE <constant> -> <num-const> 
M [ 556 , OP_DOT ] = REDUCE <constant> -> <num-const> 
M [ 556 , OP_EQ ] = REDUCE <constant> -> <num-const> 
M [ 556 , OP_GE ] = REDUCE <constant> -> <num-const> 
M [ 556 , OP_GT ] = REDUCE <constant> -> <num-const> 
M [ 556 , OP_INC ] = REDUCE <constant> -> <num-const> 
M [ 556 , OP_LAND ] = REDUCE <constant> -> <num-const> 
M [ 556 , OP_LE ] = REDUCE <constant> -> <num-const> 
M [ 556 , OP_LOR ] = REDUCE <constant> -> <num-const> 
M [ 556 , OP_LT ] = REDUCE <constant> -> <num-const> 
M [ 556 , OP_MOD ] = REDUCE <constant> -> <num-const> 
M [ 556 , OP_MUL ] = REDUCE <constant> -> <num-const> 
M [ 556 , OP_NEQ ] = REDUCE <constant> -> <num-const> 
M [ 556 , OP_OR ] = REDUCE <constant> -> <num-const> 
M [ 556 , OP_SHL ] = REDUCE <constant> -> <num-const> 
M [ 556 , OP_SHR ] = REDUCE <constant> -> <num-const> 
M [ 556 , OP_SUB ] = REDUCE <constant> -> <num-const> 
M [ 556 , OP_XOR ] = REDUCE <constant> -> <num-const> 
M [ 557 , DELIM_COMMA ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 557 , DELIM_LPAR ] = SHIFT 921
M [ 557 , DELIM_LSQBRACKET ] = SHIFT 922
M [ 557 , DELIM_QUESTION ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 557 , DELIM_SEMICOLON ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 557 , OP_ADD ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 557 , OP_AND ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 557 , OP_ARROW ] = SHIFT 923
M [ 557 , OP_DEC ] = SHIFT 924
M [ 557 , OP_DIV ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 557 , OP_DOT ] = SHIFT 925
M [ 557 , OP_EQ ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 557 , OP_GE ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 557 , OP_GT ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 557 , OP_INC ] = SHIFT 926
M [ 557 , OP_LAND ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 557 , OP_LE ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 557 , OP_LOR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 557 , OP_LT ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 557 , OP_MOD ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 557 , OP_MUL ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 557 , OP_NEQ ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 557 , OP_OR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 557 , OP_SHL ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 557 , OP_SHR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 557 , OP_SUB ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 557 , OP_XOR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 558 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 558 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 558 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 558 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 558 , DELIM_SEMICOLON ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 558 , OP_ADD ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 558 , OP_AND ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 558 , OP_ARROW ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 558 , OP_DEC ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 558 , OP_DIV ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 558 , OP_DOT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 558 , OP_EQ ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 558 , OP_GE ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 558 , OP_GT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 558 , OP_INC ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 558 , OP_LAND ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 558 , OP_LE ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 558 , OP_LOR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 558 , OP_LT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 558 , OP_MOD ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 558 , OP_MUL ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 558 , OP_NEQ ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 558 , OP_OR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 558 , OP_SHL ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 558 , OP_SHR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 558 , OP_SUB ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 558 , OP_XOR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 559 , DELIM_COMMA ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 559 , DELIM_QUESTION ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 559 , DELIM_SEMICOLON ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 559 , OP_ADD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 559 , OP_AND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 559 , OP_DIV ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 559 , OP_EQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 559 , OP_GE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 559 , OP_GT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 559 , OP_LAND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 559 , OP_LE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 559 , OP_LOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 559 , OP_LT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 559 , OP_MOD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 559 , OP_MUL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 559 , OP_NEQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 559 , OP_OR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 559 , OP_SHL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 559 , OP_SHR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 559 , OP_SUB ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 559 , OP_XOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 560 , <cast-expr> ] = GOTO 927
M [ 560 , <constant> ] = GOTO 554
M [ 560 , <num-const> ] = GOTO 556
M [ 560 , <postfix-expr> ] = GOTO 557
M [ 560 , <prim-expr> ] = GOTO 558
M [ 560 , <unary-expr> ] = GOTO 559
M [ 560 , <unary-op> ] = GOTO 560
M [ 560 , CHAR_CONST ] = SHIFT 561
M [ 560 , DELIM_LPAR ] = SHIFT 562
M [ 560 , FLOAT_CONST ] = SHIFT 563
M [ 560 , IDENTIFIER ] = SHIFT 564
M [ 560 , INT_CONST ] = SHIFT 565
M [ 560 , OP_ADD ] = SHIFT 135
M [ 560 , OP_AND ] = SHIFT 136
M [ 560 , OP_DEC ] = SHIFT 566
M [ 560 , OP_INC ] = SHIFT 567
M [ 560 , OP_LNOT ] = SHIFT 139
M [ 560 , OP_MUL ] = SHIFT 140
M [ 560 , OP_NOT ] = SHIFT 141
M [ 560 , OP_SUB ] = SHIFT 142
M [ 560 , STR_LITERAL ] = SHIFT 568
M [ 560 , sizeof ] = SHIFT 569
M [ 561 , DELIM_COMMA ] = REDUCE <constant> -> CHAR_CONST 
M [ 561 , DELIM_LPAR ] = REDUCE <constant> -> CHAR_CONST 
M [ 561 , DELIM_LSQBRACKET ] = REDUCE <constant> -> CHAR_CONST 
M [ 561 , DELIM_QUESTION ] = REDUCE <constant> -> CHAR_CONST 
M [ 561 , DELIM_SEMICOLON ] = REDUCE <constant> -> CHAR_CONST 
M [ 561 , OP_ADD ] = REDUCE <constant> -> CHAR_CONST 
M [ 561 , OP_AND ] = REDUCE <constant> -> CHAR_CONST 
M [ 561 , OP_ARROW ] = REDUCE <constant> -> CHAR_CONST 
M [ 561 , OP_DEC ] = REDUCE <constant> -> CHAR_CONST 
M [ 561 , OP_DIV ] = REDUCE <constant> -> CHAR_CONST 
M [ 561 , OP_DOT ] = REDUCE <constant> -> CHAR_CONST 
M [ 561 , OP_EQ ] = REDUCE <constant> -> CHAR_CONST 
M [ 561 , OP_GE ] = REDUCE <constant> -> CHAR_CONST 
M [ 561 , OP_GT ] = REDUCE <constant> -> CHAR_CONST 
M [ 561 , OP_INC ] = REDUCE <constant> -> CHAR_CONST 
M [ 561 , OP_LAND ] = REDUCE <constant> -> CHAR_CONST 
M [ 561 , OP_LE ] = REDUCE <constant> -> CHAR_CONST 
M [ 561 , OP_LOR ] = REDUCE <constant> -> CHAR_CONST 
M [ 561 , OP_LT ] = REDUCE <constant> -> CHAR_CONST 
M [ 561 , OP_MOD ] = REDUCE <constant> -> CHAR_CONST 
M [ 561 , OP_MUL ] = REDUCE <constant> -> CHAR_CONST 
M [ 561 , OP_NEQ ] = REDUCE <constant> -> CHAR_CONST 
M [ 561 , OP_OR ] = REDUCE <constant> -> CHAR_CONST 
M [ 561 , OP_SHL ] = REDUCE <constant> -> CHAR_CONST 
M [ 561 , OP_SHR ] = REDUCE <constant> -> CHAR_CONST 
M [ 561 , OP_SUB ] = REDUCE <constant> -> CHAR_CONST 
M [ 561 , OP_XOR ] = REDUCE <constant> -> CHAR_CONST 
M [ 562 , <additive-expr> ] = GOTO 299
M [ 562 , <and-expr> ] = GOTO 300
M [ 562 , <asn-expr> ] = GOTO 301
M [ 562 , <cast-expr> ] = GOTO 302
M [ 562 , <cond-expr> ] = GOTO 303
M [ 562 , <constant> ] = GOTO 304
M [ 562 , <enum-spec> ] = GOTO 305
M [ 562 , <eq-expr> ] = GOTO 306
M [ 562 , <exc-or-expr> ] = GOTO 307
M [ 562 , <expr> ] = GOTO 928
M [ 562 , <inc-or-expr> ] = GOTO 309
M [ 562 , <land-expr> ] = GOTO 310
M [ 562 , <lor-expr> ] = GOTO 311
M [ 562 , <multiplicative-expr> ] = GOTO 312
M [ 562 , <num-const> ] = GOTO 313
M [ 562 , <postfix-expr> ] = GOTO 314
M [ 562 , <prim-expr> ] = GOTO 315
M [ 562 , <rel-expr> ] = GOTO 316
M [ 562 , <shift-expr> ] = GOTO 317
M [ 562 , <spec-qual-list> ] = GOTO 318
M [ 562 , <struct-union-spec> ] = GOTO 319
M [ 562 , <struct-union> ] = GOTO 320
M [ 562 , <type-name> ] = GOTO 929
M [ 562 , <type-qual> ] = GOTO 322
M [ 562 , <type-spec> ] = GOTO 323
M [ 562 , <unary-expr> ] = GOTO 324
M [ 562 , <unary-op> ] = GOTO 325
M [ 562 , CHAR_CONST ] = SHIFT 326
M [ 562 , DELIM_LPAR ] = SHIFT 327
M [ 562 , FLOAT_CONST ] = SHIFT 328
M [ 562 , IDENTIFIER ] = SHIFT 329
M [ 562 , INT_CONST ] = SHIFT 330
M [ 562 , OP_ADD ] = SHIFT 135
M [ 562 , OP_AND ] = SHIFT 136
M [ 562 , OP_DEC ] = SHIFT 331
M [ 562 , OP_INC ] = SHIFT 332
M [ 562 , OP_LNOT ] = SHIFT 139
M [ 562 , OP_MUL ] = SHIFT 140
M [ 562 , OP_NOT ] = SHIFT 141
M [ 562 , OP_SUB ] = SHIFT 142
M [ 562 , STR_LITERAL ] = SHIFT 333
M [ 562 , char ] = SHIFT 334
M [ 562 , const ] = SHIFT 335
M [ 562 , double ] = SHIFT 336
M [ 562 , enum ] = SHIFT 337
M [ 562 , float ] = SHIFT 338
M [ 562 , int ] = SHIFT 339
M [ 562 , long ] = SHIFT 340
M [ 562 , short ] = SHIFT 341
M [ 562 , signed ] = SHIFT 342
M [ 562 , sizeof ] = SHIFT 343
M [ 562 , struct ] = SHIFT 21
M [ 562 , unsigned ] = SHIFT 344
M [ 562 , void ] = SHIFT 345
M [ 563 , DELIM_COMMA ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 563 , DELIM_LPAR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 563 , DELIM_LSQBRACKET ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 563 , DELIM_QUESTION ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 563 , DELIM_SEMICOLON ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 563 , OP_ADD ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 563 , OP_AND ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 563 , OP_ARROW ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 563 , OP_DEC ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 563 , OP_DIV ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 563 , OP_DOT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 563 , OP_EQ ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 563 , OP_GE ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 563 , OP_GT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 563 , OP_INC ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 563 , OP_LAND ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 563 , OP_LE ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 563 , OP_LOR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 563 , OP_LT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 563 , OP_MOD ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 563 , OP_MUL ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 563 , OP_NEQ ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 563 , OP_OR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 563 , OP_SHL ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 563 , OP_SHR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 563 , OP_SUB ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 563 , OP_XOR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 564 , DELIM_COMMA ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 564 , DELIM_LPAR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 564 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 564 , DELIM_QUESTION ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 564 , DELIM_SEMICOLON ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 564 , OP_ADD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 564 , OP_AND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 564 , OP_ARROW ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 564 , OP_DEC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 564 , OP_DIV ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 564 , OP_DOT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 564 , OP_EQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 564 , OP_GE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 564 , OP_GT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 564 , OP_INC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 564 , OP_LAND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 564 , OP_LE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 564 , OP_LOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 564 , OP_LT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 564 , OP_MOD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 564 , OP_MUL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 564 , OP_NEQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 564 , OP_OR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 564 , OP_SHL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 564 , OP_SHR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 564 , OP_SUB ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 564 , OP_XOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 565 , DELIM_COMMA ] = REDUCE <num-const> -> INT_CONST 
M [ 565 , DELIM_LPAR ] = REDUCE <num-const> -> INT_CONST 
M [ 565 , DELIM_LSQBRACKET ] = REDUCE <num-const> -> INT_CONST 
M [ 565 , DELIM_QUESTION ] = REDUCE <num-const> -> INT_CONST 
M [ 565 , DELIM_SEMICOLON ] = REDUCE <num-const> -> INT_CONST 
M [ 565 , OP_ADD ] = REDUCE <num-const> -> INT_CONST 
M [ 565 , OP_AND ] = REDUCE <num-const> -> INT_CONST 
M [ 565 , OP_ARROW ] = REDUCE <num-const> -> INT_CONST 
M [ 565 , OP_DEC ] = REDUCE <num-const> -> INT_CONST 
M [ 565 , OP_DIV ] = REDUCE <num-const> -> INT_CONST 
M [ 565 , OP_DOT ] = REDUCE <num-const> -> INT_CONST 
M [ 565 , OP_EQ ] = REDUCE <num-const> -> INT_CONST 
M [ 565 , OP_GE ] = REDUCE <num-const> -> INT_CONST 
M [ 565 , OP_GT ] = REDUCE <num-const> -> INT_CONST 
M [ 565 , OP_INC ] = REDUCE <num-const> -> INT_CONST 
M [ 565 , OP_LAND ] = REDUCE <num-const> -> INT_CONST 
M [ 565 , OP_LE ] = REDUCE <num-const> -> INT_CONST 
M [ 565 , OP_LOR ] = REDUCE <num-const> -> INT_CONST 
M [ 565 , OP_LT ] = REDUCE <num-const> -> INT_CONST 
M [ 565 , OP_MOD ] = REDUCE <num-const> -> INT_CONST 
M [ 565 , OP_MUL ] = REDUCE <num-const> -> INT_CONST 
M [ 565 , OP_NEQ ] = REDUCE <num-const> -> INT_CONST 
M [ 565 , OP_OR ] = REDUCE <num-const> -> INT_CONST 
M [ 565 , OP_SHL ] = REDUCE <num-const> -> INT_CONST 
M [ 565 , OP_SHR ] = REDUCE <num-const> -> INT_CONST 
M [ 565 , OP_SUB ] = REDUCE <num-const> -> INT_CONST 
M [ 565 , OP_XOR ] = REDUCE <num-const> -> INT_CONST 
M [ 566 , <constant> ] = GOTO 554
M [ 566 , <num-const> ] = GOTO 556
M [ 566 , <postfix-expr> ] = GOTO 557
M [ 566 , <prim-expr> ] = GOTO 558
M [ 566 , <unary-expr> ] = GOTO 930
M [ 566 , <unary-op> ] = GOTO 560
M [ 566 , CHAR_CONST ] = SHIFT 561
M [ 566 , DELIM_LPAR ] = SHIFT 931
M [ 566 , FLOAT_CONST ] = SHIFT 563
M [ 566 , IDENTIFIER ] = SHIFT 564
M [ 566 , INT_CONST ] = SHIFT 565
M [ 566 , OP_ADD ] = SHIFT 135
M [ 566 , OP_AND ] = SHIFT 136
M [ 566 , OP_DEC ] = SHIFT 566
M [ 566 , OP_INC ] = SHIFT 567
M [ 566 , OP_LNOT ] = SHIFT 139
M [ 566 , OP_MUL ] = SHIFT 140
M [ 566 , OP_NOT ] = SHIFT 141
M [ 566 , OP_SUB ] = SHIFT 142
M [ 566 , STR_LITERAL ] = SHIFT 568
M [ 566 , sizeof ] = SHIFT 569
M [ 567 , <constant> ] = GOTO 554
M [ 567 , <num-const> ] = GOTO 556
M [ 567 , <postfix-expr> ] = GOTO 557
M [ 567 , <prim-expr> ] = GOTO 558
M [ 567 , <unary-expr> ] = GOTO 932
M [ 567 , <unary-op> ] = GOTO 560
M [ 567 , CHAR_CONST ] = SHIFT 561
M [ 567 , DELIM_LPAR ] = SHIFT 931
M [ 567 , FLOAT_CONST ] = SHIFT 563
M [ 567 , IDENTIFIER ] = SHIFT 564
M [ 567 , INT_CONST ] = SHIFT 565
M [ 567 , OP_ADD ] = SHIFT 135
M [ 567 , OP_AND ] = SHIFT 136
M [ 567 , OP_DEC ] = SHIFT 566
M [ 567 , OP_INC ] = SHIFT 567
M [ 567 , OP_LNOT ] = SHIFT 139
M [ 567 , OP_MUL ] = SHIFT 140
M [ 567 , OP_NOT ] = SHIFT 141
M [ 567 , OP_SUB ] = SHIFT 142
M [ 567 , STR_LITERAL ] = SHIFT 568
M [ 567 , sizeof ] = SHIFT 569
M [ 568 , DELIM_COMMA ] = REDUCE <constant> -> STR_LITERAL 
M [ 568 , DELIM_LPAR ] = REDUCE <constant> -> STR_LITERAL 
M [ 568 , DELIM_LSQBRACKET ] = REDUCE <constant> -> STR_LITERAL 
M [ 568 , DELIM_QUESTION ] = REDUCE <constant> -> STR_LITERAL 
M [ 568 , DELIM_SEMICOLON ] = REDUCE <constant> -> STR_LITERAL 
M [ 568 , OP_ADD ] = REDUCE <constant> -> STR_LITERAL 
M [ 568 , OP_AND ] = REDUCE <constant> -> STR_LITERAL 
M [ 568 , OP_ARROW ] = REDUCE <constant> -> STR_LITERAL 
M [ 568 , OP_DEC ] = REDUCE <constant> -> STR_LITERAL 
M [ 568 , OP_DIV ] = REDUCE <constant> -> STR_LITERAL 
M [ 568 , OP_DOT ] = REDUCE <constant> -> STR_LITERAL 
M [ 568 , OP_EQ ] = REDUCE <constant> -> STR_LITERAL 
M [ 568 , OP_GE ] = REDUCE <constant> -> STR_LITERAL 
M [ 568 , OP_GT ] = REDUCE <constant> -> STR_LITERAL 
M [ 568 , OP_INC ] = REDUCE <constant> -> STR_LITERAL 
M [ 568 , OP_LAND ] = REDUCE <constant> -> STR_LITERAL 
M [ 568 , OP_LE ] = REDUCE <constant> -> STR_LITERAL 
M [ 568 , OP_LOR ] = REDUCE <constant> -> STR_LITERAL 
M [ 568 , OP_LT ] = REDUCE <constant> -> STR_LITERAL 
M [ 568 , OP_MOD ] = REDUCE <constant> -> STR_LITERAL 
M [ 568 , OP_MUL ] = REDUCE <constant> -> STR_LITERAL 
M [ 568 , OP_NEQ ] = REDUCE <constant> -> STR_LITERAL 
M [ 568 , OP_OR ] = REDUCE <constant> -> STR_LITERAL 
M [ 568 , OP_SHL ] = REDUCE <constant> -> STR_LITERAL 
M [ 568 , OP_SHR ] = REDUCE <constant> -> STR_LITERAL 
M [ 568 , OP_SUB ] = REDUCE <constant> -> STR_LITERAL 
M [ 568 , OP_XOR ] = REDUCE <constant> -> STR_LITERAL 
M [ 569 , <constant> ] = GOTO 554
M [ 569 , <num-const> ] = GOTO 556
M [ 569 , <postfix-expr> ] = GOTO 557
M [ 569 , <prim-expr> ] = GOTO 558
M [ 569 , <unary-expr> ] = GOTO 933
M [ 569 , <unary-op> ] = GOTO 560
M [ 569 , CHAR_CONST ] = SHIFT 561
M [ 569 , DELIM_LPAR ] = SHIFT 934
M [ 569 , FLOAT_CONST ] = SHIFT 563
M [ 569 , IDENTIFIER ] = SHIFT 564
M [ 569 , INT_CONST ] = SHIFT 565
M [ 569 , OP_ADD ] = SHIFT 135
M [ 569 , OP_AND ] = SHIFT 136
M [ 569 , OP_DEC ] = SHIFT 566
M [ 569 , OP_INC ] = SHIFT 567
M [ 569 , OP_LNOT ] = SHIFT 139
M [ 569 , OP_MUL ] = SHIFT 140
M [ 569 , OP_NOT ] = SHIFT 141
M [ 569 , OP_SUB ] = SHIFT 142
M [ 569 , STR_LITERAL ] = SHIFT 568
M [ 569 , sizeof ] = SHIFT 569
M [ 570 , DELIM_COMMA ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 570 , DELIM_QUESTION ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 570 , DELIM_SEMICOLON ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 570 , OP_ADD ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 570 , OP_AND ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 570 , OP_DIV ] = SHIFT 267
M [ 570 , OP_EQ ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 570 , OP_GE ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 570 , OP_GT ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 570 , OP_LAND ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 570 , OP_LE ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 570 , OP_LOR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 570 , OP_LT ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 570 , OP_MOD ] = SHIFT 268
M [ 570 , OP_MUL ] = SHIFT 269
M [ 570 , OP_NEQ ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 570 , OP_OR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 570 , OP_SHL ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 570 , OP_SHR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 570 , OP_SUB ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 570 , OP_XOR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 571 , DELIM_COMMA ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 571 , DELIM_QUESTION ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 571 , DELIM_SEMICOLON ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 571 , OP_AND ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 571 , OP_EQ ] = SHIFT 258
M [ 571 , OP_LAND ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 571 , OP_LOR ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 571 , OP_NEQ ] = SHIFT 259
M [ 571 , OP_OR ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 571 , OP_XOR ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 572 , CHAR_CONST ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , DELIM_LCURBRACE ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , DELIM_LPAR ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , DELIM_RCURBRACE ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , DELIM_SEMICOLON ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , FLOAT_CONST ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , IDENTIFIER ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , INT_CONST ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , OP_ADD ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , OP_AND ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , OP_DEC ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , OP_INC ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , OP_LNOT ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , OP_MUL ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , OP_NOT ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , OP_SUB ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , STR_LITERAL ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , break ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , case ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , char ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , const ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , continue ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , default ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , do ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , double ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , enum ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , float ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , for ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , goto ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , if ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , int ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , long ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , return ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , short ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , signed ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , sizeof ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , struct ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , switch ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , typedef ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , unsigned ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , void ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 572 , while ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 573 , DELIM_COMMA ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 573 , DELIM_QUESTION ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 573 , DELIM_SEMICOLON ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 573 , OP_AND ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 573 , OP_EQ ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 573 , OP_GE ] = SHIFT 276
M [ 573 , OP_GT ] = SHIFT 277
M [ 573 , OP_LAND ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 573 , OP_LE ] = SHIFT 278
M [ 573 , OP_LOR ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 573 , OP_LT ] = SHIFT 279
M [ 573 , OP_NEQ ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 573 , OP_OR ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 573 , OP_XOR ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 574 , DELIM_COMMA ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 574 , DELIM_QUESTION ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 574 , DELIM_SEMICOLON ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 574 , OP_AND ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 574 , OP_EQ ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 574 , OP_GE ] = SHIFT 276
M [ 574 , OP_GT ] = SHIFT 277
M [ 574 , OP_LAND ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 574 , OP_LE ] = SHIFT 278
M [ 574 , OP_LOR ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 574 , OP_LT ] = SHIFT 279
M [ 574 , OP_NEQ ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 574 , OP_OR ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 574 , OP_XOR ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 575 , DELIM_COMMA ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 575 , DELIM_QUESTION ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 575 , DELIM_SEMICOLON ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 575 , OP_AND ] = SHIFT 253
M [ 575 , OP_LAND ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 575 , OP_LOR ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 575 , OP_OR ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 575 , OP_XOR ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 576 , DELIM_COMMA ] = REDUCE <expr> -> <expr> DELIM_COMMA <asn-expr> 
M [ 576 , DELIM_SEMICOLON ] = REDUCE <expr> -> <expr> DELIM_COMMA <asn-expr> 
M [ 577 , DELIM_COMMA ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 577 , DELIM_QUESTION ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 577 , DELIM_SEMICOLON ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 577 , OP_LAND ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 577 , OP_LOR ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 577 , OP_OR ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 577 , OP_XOR ] = SHIFT 260
M [ 578 , DELIM_COMMA ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 578 , DELIM_QUESTION ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 578 , DELIM_SEMICOLON ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 578 , OP_LAND ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 578 , OP_LOR ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 578 , OP_OR ] = SHIFT 263
M [ 579 , DELIM_COLON ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 579 , DELIM_COMMA ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 579 , DELIM_QUESTION ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 579 , OP_ADD ] = SHIFT 935
M [ 579 , OP_AND ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 579 , OP_EQ ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 579 , OP_GE ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 579 , OP_GT ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 579 , OP_LAND ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 579 , OP_LE ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 579 , OP_LOR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 579 , OP_LT ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 579 , OP_NEQ ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 579 , OP_OR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 579 , OP_SHL ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 579 , OP_SHR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 579 , OP_SUB ] = SHIFT 936
M [ 579 , OP_XOR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 580 , DELIM_COLON ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 580 , DELIM_COMMA ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 580 , DELIM_QUESTION ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 580 , OP_AND ] = SHIFT 937
M [ 580 , OP_LAND ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 580 , OP_LOR ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 580 , OP_OR ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 580 , OP_XOR ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 581 , DELIM_COLON ] = REDUCE <expr> -> <asn-expr> 
M [ 581 , DELIM_COMMA ] = REDUCE <expr> -> <asn-expr> 
M [ 582 , DELIM_COLON ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 582 , DELIM_COMMA ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 582 , DELIM_QUESTION ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 582 , OP_ADD ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 582 , OP_AND ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 582 , OP_DIV ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 582 , OP_EQ ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 582 , OP_GE ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 582 , OP_GT ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 582 , OP_LAND ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 582 , OP_LE ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 582 , OP_LOR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 582 , OP_LT ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 582 , OP_MOD ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 582 , OP_MUL ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 582 , OP_NEQ ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 582 , OP_OR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 582 , OP_SHL ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 582 , OP_SHR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 582 , OP_SUB ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 582 , OP_XOR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 583 , DELIM_COLON ] = REDUCE <asn-expr> -> <cond-expr> 
M [ 583 , DELIM_COMMA ] = REDUCE <asn-expr> -> <cond-expr> 
M [ 584 , DELIM_COLON ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , DELIM_COMMA ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , DELIM_LPAR ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , DELIM_QUESTION ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_ADD ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_ADDASN ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_AND ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_ANDASN ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_ARROW ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_ASN ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_DEC ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_DIV ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_DIVASN ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_DOT ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_EQ ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_GE ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_GT ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_INC ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_LAND ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_LE ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_LOR ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_LT ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_MOD ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_MODASN ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_MUL ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_MULASN ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_NEQ ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_OR ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_ORASN ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_SHL ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_SHLASN ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_SHR ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_SHRASN ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_SUB ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_SUBASN ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_XOR ] = REDUCE <prim-expr> -> <constant> 
M [ 584 , OP_XORASN ] = REDUCE <prim-expr> -> <constant> 
M [ 585 , DELIM_COLON ] = REDUCE <and-expr> -> <eq-expr> 
M [ 585 , DELIM_COMMA ] = REDUCE <and-expr> -> <eq-expr> 
M [ 585 , DELIM_QUESTION ] = REDUCE <and-expr> -> <eq-expr> 
M [ 585 , OP_AND ] = REDUCE <and-expr> -> <eq-expr> 
M [ 585 , OP_EQ ] = SHIFT 938
M [ 585 , OP_LAND ] = REDUCE <and-expr> -> <eq-expr> 
M [ 585 , OP_LOR ] = REDUCE <and-expr> -> <eq-expr> 
M [ 585 , OP_NEQ ] = SHIFT 939
M [ 585 , OP_OR ] = REDUCE <and-expr> -> <eq-expr> 
M [ 585 , OP_XOR ] = REDUCE <and-expr> -> <eq-expr> 
M [ 586 , DELIM_COLON ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 586 , DELIM_COMMA ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 586 , DELIM_QUESTION ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 586 , OP_LAND ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 586 , OP_LOR ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 586 , OP_OR ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 586 , OP_XOR ] = SHIFT 940
M [ 587 , DELIM_COLON ] = SHIFT 941
M [ 587 , DELIM_COMMA ] = SHIFT 942
M [ 588 , DELIM_COLON ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 588 , DELIM_COMMA ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 588 , DELIM_QUESTION ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 588 , OP_LAND ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 588 , OP_LOR ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 588 , OP_OR ] = SHIFT 943
M [ 589 , DELIM_COLON ] = REDUCE <lor-expr> -> <land-expr> 
M [ 589 , DELIM_COMMA ] = REDUCE <lor-expr> -> <land-expr> 
M [ 589 , DELIM_QUESTION ] = REDUCE <lor-expr> -> <land-expr> 
M [ 589 , OP_LAND ] = SHIFT 944
M [ 589 , OP_LOR ] = REDUCE <lor-expr> -> <land-expr> 
M [ 590 , DELIM_COLON ] = REDUCE <cond-expr> -> <lor-expr> 
M [ 590 , DELIM_COMMA ] = REDUCE <cond-expr> -> <lor-expr> 
M [ 590 , DELIM_QUESTION ] = SHIFT 945
M [ 590 , OP_LOR ] = SHIFT 946
M [ 591 , DELIM_COLON ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 591 , DELIM_COMMA ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 591 , DELIM_QUESTION ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 591 , OP_ADD ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 591 , OP_AND ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 591 , OP_DIV ] = SHIFT 947
M [ 591 , OP_EQ ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 591 , OP_GE ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 591 , OP_GT ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 591 , OP_LAND ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 591 , OP_LE ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 591 , OP_LOR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 591 , OP_LT ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 591 , OP_MOD ] = SHIFT 948
M [ 591 , OP_MUL ] = SHIFT 949
M [ 591 , OP_NEQ ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 591 , OP_OR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 591 , OP_SHL ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 591 , OP_SHR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 591 , OP_SUB ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 591 , OP_XOR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 592 , DELIM_COLON ] = REDUCE <constant> -> <num-const> 
M [ 592 , DELIM_COMMA ] = REDUCE <constant> -> <num-const> 
M [ 592 , DELIM_LPAR ] = REDUCE <constant> -> <num-const> 
M [ 592 , DELIM_LSQBRACKET ] = REDUCE <constant> -> <num-const> 
M [ 592 , DELIM_QUESTION ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_ADD ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_ADDASN ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_AND ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_ANDASN ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_ARROW ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_ASN ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_DEC ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_DIV ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_DIVASN ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_DOT ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_EQ ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_GE ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_GT ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_INC ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_LAND ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_LE ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_LOR ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_LT ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_MOD ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_MODASN ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_MUL ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_MULASN ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_NEQ ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_OR ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_ORASN ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_SHL ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_SHLASN ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_SHR ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_SHRASN ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_SUB ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_SUBASN ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_XOR ] = REDUCE <constant> -> <num-const> 
M [ 592 , OP_XORASN ] = REDUCE <constant> -> <num-const> 
M [ 593 , DELIM_COLON ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , DELIM_COMMA ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , DELIM_LPAR ] = SHIFT 950
M [ 593 , DELIM_LSQBRACKET ] = SHIFT 951
M [ 593 , DELIM_QUESTION ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_ADD ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_ADDASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_AND ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_ANDASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_ARROW ] = SHIFT 952
M [ 593 , OP_ASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_DEC ] = SHIFT 953
M [ 593 , OP_DIV ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_DIVASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_DOT ] = SHIFT 954
M [ 593 , OP_EQ ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_GE ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_GT ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_INC ] = SHIFT 955
M [ 593 , OP_LAND ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_LE ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_LOR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_LT ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_MOD ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_MODASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_MUL ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_MULASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_NEQ ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_OR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_ORASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_SHL ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_SHLASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_SHR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_SHRASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_SUB ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_SUBASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_XOR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 593 , OP_XORASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 594 , DELIM_COLON ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_ADD ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_ADDASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_AND ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_ANDASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_ARROW ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_ASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_DEC ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_DIV ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_DIVASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_DOT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_EQ ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_GE ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_GT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_INC ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_LAND ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_LE ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_LOR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_LT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_MOD ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_MODASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_MUL ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_MULASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_NEQ ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_OR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_ORASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_SHL ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_SHLASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_SHR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_SHRASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_SUB ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_SUBASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_XOR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 594 , OP_XORASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 595 , DELIM_COLON ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 595 , DELIM_COMMA ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 595 , DELIM_QUESTION ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 595 , OP_AND ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 595 , OP_EQ ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 595 , OP_GE ] = SHIFT 956
M [ 595 , OP_GT ] = SHIFT 957
M [ 595 , OP_LAND ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 595 , OP_LE ] = SHIFT 958
M [ 595 , OP_LOR ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 595 , OP_LT ] = SHIFT 959
M [ 595 , OP_NEQ ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 595 , OP_OR ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 595 , OP_XOR ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 596 , DELIM_COLON ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 596 , DELIM_COMMA ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 596 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 596 , OP_AND ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 596 , OP_EQ ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 596 , OP_GE ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 596 , OP_GT ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 596 , OP_LAND ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 596 , OP_LE ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 596 , OP_LOR ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 596 , OP_LT ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 596 , OP_NEQ ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 596 , OP_OR ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 596 , OP_SHL ] = SHIFT 960
M [ 596 , OP_SHR ] = SHIFT 961
M [ 596 , OP_XOR ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 597 , <asn-op> ] = GOTO 962
M [ 597 , DELIM_COLON ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 597 , DELIM_COMMA ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 597 , DELIM_QUESTION ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 597 , OP_ADD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 597 , OP_ADDASN ] = SHIFT 283
M [ 597 , OP_AND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 597 , OP_ANDASN ] = SHIFT 284
M [ 597 , OP_ASN ] = SHIFT 285
M [ 597 , OP_DIV ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 597 , OP_DIVASN ] = SHIFT 286
M [ 597 , OP_EQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 597 , OP_GE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 597 , OP_GT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 597 , OP_LAND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 597 , OP_LE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 597 , OP_LOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 597 , OP_LT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 597 , OP_MOD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 597 , OP_MODASN ] = SHIFT 287
M [ 597 , OP_MUL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 597 , OP_MULASN ] = SHIFT 288
M [ 597 , OP_NEQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 597 , OP_OR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 597 , OP_ORASN ] = SHIFT 289
M [ 597 , OP_SHL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 597 , OP_SHLASN ] = SHIFT 290
M [ 597 , OP_SHR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 597 , OP_SHRASN ] = SHIFT 291
M [ 597 , OP_SUB ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 597 , OP_SUBASN ] = SHIFT 292
M [ 597 , OP_XOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 597 , OP_XORASN ] = SHIFT 293
M [ 598 , <cast-expr> ] = GOTO 963
M [ 598 , <constant> ] = GOTO 584
M [ 598 , <num-const> ] = GOTO 592
M [ 598 , <postfix-expr> ] = GOTO 593
M [ 598 , <prim-expr> ] = GOTO 594
M [ 598 , <unary-expr> ] = GOTO 964
M [ 598 , <unary-op> ] = GOTO 598
M [ 598 , CHAR_CONST ] = SHIFT 599
M [ 598 , DELIM_LPAR ] = SHIFT 965
M [ 598 , FLOAT_CONST ] = SHIFT 601
M [ 598 , IDENTIFIER ] = SHIFT 602
M [ 598 , INT_CONST ] = SHIFT 603
M [ 598 , OP_ADD ] = SHIFT 135
M [ 598 , OP_AND ] = SHIFT 136
M [ 598 , OP_DEC ] = SHIFT 604
M [ 598 , OP_INC ] = SHIFT 605
M [ 598 , OP_LNOT ] = SHIFT 139
M [ 598 , OP_MUL ] = SHIFT 140
M [ 598 , OP_NOT ] = SHIFT 141
M [ 598 , OP_SUB ] = SHIFT 142
M [ 598 , STR_LITERAL ] = SHIFT 606
M [ 598 , sizeof ] = SHIFT 607
M [ 599 , DELIM_COLON ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , DELIM_COMMA ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , DELIM_LPAR ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , DELIM_LSQBRACKET ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , DELIM_QUESTION ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_ADD ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_ADDASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_AND ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_ANDASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_ARROW ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_ASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_DEC ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_DIV ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_DIVASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_DOT ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_EQ ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_GE ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_GT ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_INC ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_LAND ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_LE ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_LOR ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_LT ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_MOD ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_MODASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_MUL ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_MULASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_NEQ ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_OR ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_ORASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_SHL ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_SHLASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_SHR ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_SHRASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_SUB ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_SUBASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_XOR ] = REDUCE <constant> -> CHAR_CONST 
M [ 599 , OP_XORASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 600 , <additive-expr> ] = GOTO 299
M [ 600 , <and-expr> ] = GOTO 300
M [ 600 , <asn-expr> ] = GOTO 301
M [ 600 , <cast-expr> ] = GOTO 302
M [ 600 , <cond-expr> ] = GOTO 303
M [ 600 , <constant> ] = GOTO 304
M [ 600 , <enum-spec> ] = GOTO 305
M [ 600 , <eq-expr> ] = GOTO 306
M [ 600 , <exc-or-expr> ] = GOTO 307
M [ 600 , <expr> ] = GOTO 966
M [ 600 , <inc-or-expr> ] = GOTO 309
M [ 600 , <land-expr> ] = GOTO 310
M [ 600 , <lor-expr> ] = GOTO 311
M [ 600 , <multiplicative-expr> ] = GOTO 312
M [ 600 , <num-const> ] = GOTO 313
M [ 600 , <postfix-expr> ] = GOTO 314
M [ 600 , <prim-expr> ] = GOTO 315
M [ 600 , <rel-expr> ] = GOTO 316
M [ 600 , <shift-expr> ] = GOTO 317
M [ 600 , <spec-qual-list> ] = GOTO 318
M [ 600 , <struct-union-spec> ] = GOTO 319
M [ 600 , <struct-union> ] = GOTO 320
M [ 600 , <type-name> ] = GOTO 967
M [ 600 , <type-qual> ] = GOTO 322
M [ 600 , <type-spec> ] = GOTO 323
M [ 600 , <unary-expr> ] = GOTO 324
M [ 600 , <unary-op> ] = GOTO 325
M [ 600 , CHAR_CONST ] = SHIFT 326
M [ 600 , DELIM_LPAR ] = SHIFT 327
M [ 600 , FLOAT_CONST ] = SHIFT 328
M [ 600 , IDENTIFIER ] = SHIFT 329
M [ 600 , INT_CONST ] = SHIFT 330
M [ 600 , OP_ADD ] = SHIFT 135
M [ 600 , OP_AND ] = SHIFT 136
M [ 600 , OP_DEC ] = SHIFT 331
M [ 600 , OP_INC ] = SHIFT 332
M [ 600 , OP_LNOT ] = SHIFT 139
M [ 600 , OP_MUL ] = SHIFT 140
M [ 600 , OP_NOT ] = SHIFT 141
M [ 600 , OP_SUB ] = SHIFT 142
M [ 600 , STR_LITERAL ] = SHIFT 333
M [ 600 , char ] = SHIFT 334
M [ 600 , const ] = SHIFT 335
M [ 600 , double ] = SHIFT 336
M [ 600 , enum ] = SHIFT 337
M [ 600 , float ] = SHIFT 338
M [ 600 , int ] = SHIFT 339
M [ 600 , long ] = SHIFT 340
M [ 600 , short ] = SHIFT 341
M [ 600 , signed ] = SHIFT 342
M [ 600 , sizeof ] = SHIFT 343
M [ 600 , struct ] = SHIFT 21
M [ 600 , unsigned ] = SHIFT 344
M [ 600 , void ] = SHIFT 345
M [ 601 , DELIM_COLON ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , DELIM_COMMA ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , DELIM_LPAR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , DELIM_LSQBRACKET ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , DELIM_QUESTION ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_ADD ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_ADDASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_AND ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_ANDASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_ARROW ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_ASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_DEC ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_DIV ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_DIVASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_DOT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_EQ ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_GE ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_GT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_INC ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_LAND ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_LE ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_LOR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_LT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_MOD ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_MODASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_MUL ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_MULASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_NEQ ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_OR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_ORASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_SHL ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_SHLASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_SHR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_SHRASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_SUB ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_SUBASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_XOR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 601 , OP_XORASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 602 , DELIM_COLON ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , DELIM_COMMA ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , DELIM_LPAR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , DELIM_QUESTION ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_ADD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_ADDASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_AND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_ANDASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_ARROW ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_ASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_DEC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_DIV ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_DIVASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_DOT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_EQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_GE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_GT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_INC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_LAND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_LE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_LOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_LT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_MOD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_MODASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_MUL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_MULASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_NEQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_OR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_ORASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_SHL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_SHLASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_SHR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_SHRASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_SUB ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_SUBASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_XOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 602 , OP_XORASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 603 , DELIM_COLON ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , DELIM_COMMA ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , DELIM_LPAR ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , DELIM_LSQBRACKET ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , DELIM_QUESTION ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_ADD ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_ADDASN ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_AND ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_ANDASN ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_ARROW ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_ASN ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_DEC ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_DIV ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_DIVASN ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_DOT ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_EQ ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_GE ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_GT ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_INC ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_LAND ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_LE ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_LOR ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_LT ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_MOD ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_MODASN ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_MUL ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_MULASN ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_NEQ ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_OR ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_ORASN ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_SHL ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_SHLASN ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_SHR ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_SHRASN ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_SUB ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_SUBASN ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_XOR ] = REDUCE <num-const> -> INT_CONST 
M [ 603 , OP_XORASN ] = REDUCE <num-const> -> INT_CONST 
M [ 604 , <constant> ] = GOTO 584
M [ 604 , <num-const> ] = GOTO 592
M [ 604 , <postfix-expr> ] = GOTO 593
M [ 604 , <prim-expr> ] = GOTO 594
M [ 604 , <unary-expr> ] = GOTO 968
M [ 604 , <unary-op> ] = GOTO 598
M [ 604 , CHAR_CONST ] = SHIFT 599
M [ 604 , DELIM_LPAR ] = SHIFT 969
M [ 604 , FLOAT_CONST ] = SHIFT 601
M [ 604 , IDENTIFIER ] = SHIFT 602
M [ 604 , INT_CONST ] = SHIFT 603
M [ 604 , OP_ADD ] = SHIFT 135
M [ 604 , OP_AND ] = SHIFT 136
M [ 604 , OP_DEC ] = SHIFT 604
M [ 604 , OP_INC ] = SHIFT 605
M [ 604 , OP_LNOT ] = SHIFT 139
M [ 604 , OP_MUL ] = SHIFT 140
M [ 604 , OP_NOT ] = SHIFT 141
M [ 604 , OP_SUB ] = SHIFT 142
M [ 604 , STR_LITERAL ] = SHIFT 606
M [ 604 , sizeof ] = SHIFT 607
M [ 605 , <constant> ] = GOTO 584
M [ 605 , <num-const> ] = GOTO 592
M [ 605 , <postfix-expr> ] = GOTO 593
M [ 605 , <prim-expr> ] = GOTO 594
M [ 605 , <unary-expr> ] = GOTO 970
M [ 605 , <unary-op> ] = GOTO 598
M [ 605 , CHAR_CONST ] = SHIFT 599
M [ 605 , DELIM_LPAR ] = SHIFT 969
M [ 605 , FLOAT_CONST ] = SHIFT 601
M [ 605 , IDENTIFIER ] = SHIFT 602
M [ 605 , INT_CONST ] = SHIFT 603
M [ 605 , OP_ADD ] = SHIFT 135
M [ 605 , OP_AND ] = SHIFT 136
M [ 605 , OP_DEC ] = SHIFT 604
M [ 605 , OP_INC ] = SHIFT 605
M [ 605 , OP_LNOT ] = SHIFT 139
M [ 605 , OP_MUL ] = SHIFT 140
M [ 605 , OP_NOT ] = SHIFT 141
M [ 605 , OP_SUB ] = SHIFT 142
M [ 605 , STR_LITERAL ] = SHIFT 606
M [ 605 , sizeof ] = SHIFT 607
M [ 606 , DELIM_COLON ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , DELIM_COMMA ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , DELIM_LPAR ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , DELIM_LSQBRACKET ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , DELIM_QUESTION ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_ADD ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_ADDASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_AND ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_ANDASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_ARROW ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_ASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_DEC ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_DIV ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_DIVASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_DOT ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_EQ ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_GE ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_GT ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_INC ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_LAND ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_LE ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_LOR ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_LT ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_MOD ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_MODASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_MUL ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_MULASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_NEQ ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_OR ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_ORASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_SHL ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_SHLASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_SHR ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_SHRASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_SUB ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_SUBASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_XOR ] = REDUCE <constant> -> STR_LITERAL 
M [ 606 , OP_XORASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 607 , <constant> ] = GOTO 584
M [ 607 , <num-const> ] = GOTO 592
M [ 607 , <postfix-expr> ] = GOTO 593
M [ 607 , <prim-expr> ] = GOTO 594
M [ 607 , <unary-expr> ] = GOTO 971
M [ 607 , <unary-op> ] = GOTO 598
M [ 607 , CHAR_CONST ] = SHIFT 599
M [ 607 , DELIM_LPAR ] = SHIFT 972
M [ 607 , FLOAT_CONST ] = SHIFT 601
M [ 607 , IDENTIFIER ] = SHIFT 602
M [ 607 , INT_CONST ] = SHIFT 603
M [ 607 , OP_ADD ] = SHIFT 135
M [ 607 , OP_AND ] = SHIFT 136
M [ 607 , OP_DEC ] = SHIFT 604
M [ 607 , OP_INC ] = SHIFT 605
M [ 607 , OP_LNOT ] = SHIFT 139
M [ 607 , OP_MUL ] = SHIFT 140
M [ 607 , OP_NOT ] = SHIFT 141
M [ 607 , OP_SUB ] = SHIFT 142
M [ 607 , STR_LITERAL ] = SHIFT 606
M [ 607 , sizeof ] = SHIFT 607
M [ 608 , DELIM_COMMA ] = REDUCE <lor-expr> -> <lor-expr> OP_LOR <land-expr> 
M [ 608 , DELIM_QUESTION ] = REDUCE <lor-expr> -> <lor-expr> OP_LOR <land-expr> 
M [ 608 , DELIM_SEMICOLON ] = REDUCE <lor-expr> -> <lor-expr> OP_LOR <land-expr> 
M [ 608 , OP_LAND ] = SHIFT 264
M [ 608 , OP_LOR ] = REDUCE <lor-expr> -> <lor-expr> OP_LOR <land-expr> 
M [ 609 , DELIM_COMMA ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 609 , DELIM_QUESTION ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 609 , DELIM_SEMICOLON ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 609 , OP_ADD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 609 , OP_AND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 609 , OP_DIV ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 609 , OP_EQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 609 , OP_GE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 609 , OP_GT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 609 , OP_LAND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 609 , OP_LE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 609 , OP_LOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 609 , OP_LT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 609 , OP_MOD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 609 , OP_MUL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 609 , OP_NEQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 609 , OP_OR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 609 , OP_SHL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 609 , OP_SHR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 609 , OP_SUB ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 609 , OP_XOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 610 , DELIM_COMMA ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 610 , DELIM_QUESTION ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 610 , DELIM_SEMICOLON ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 610 , OP_ADD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 610 , OP_AND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 610 , OP_DIV ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 610 , OP_EQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 610 , OP_GE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 610 , OP_GT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 610 , OP_LAND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 610 , OP_LE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 610 , OP_LOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 610 , OP_LT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 610 , OP_MOD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 610 , OP_MUL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 610 , OP_NEQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 610 , OP_OR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 610 , OP_SHL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 610 , OP_SHR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 610 , OP_SUB ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 610 , OP_XOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 611 , DELIM_COMMA ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 611 , DELIM_QUESTION ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 611 , DELIM_SEMICOLON ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 611 , OP_ADD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 611 , OP_AND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 611 , OP_DIV ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 611 , OP_EQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 611 , OP_GE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 611 , OP_GT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 611 , OP_LAND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 611 , OP_LE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 611 , OP_LOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 611 , OP_LT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 611 , OP_MOD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 611 , OP_MUL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 611 , OP_NEQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 611 , OP_OR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 611 , OP_SHL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 611 , OP_SHR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 611 , OP_SUB ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 611 , OP_XOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 612 , DELIM_COMMA ] = SHIFT 973
M [ 612 , DELIM_RPAR ] = SHIFT 974
M [ 613 , DELIM_COMMA ] = REDUCE <arg-expr-list> -> <asn-expr> 
M [ 613 , DELIM_RPAR ] = REDUCE <arg-expr-list> -> <asn-expr> 
M [ 614 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , DELIM_SEMICOLON ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 614 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 615 , DELIM_COMMA ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 615 , DELIM_QUESTION ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 615 , DELIM_RSQBRACKET ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 615 , OP_ADD ] = SHIFT 975
M [ 615 , OP_AND ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 615 , OP_EQ ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 615 , OP_GE ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 615 , OP_GT ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 615 , OP_LAND ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 615 , OP_LE ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 615 , OP_LOR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 615 , OP_LT ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 615 , OP_NEQ ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 615 , OP_OR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 615 , OP_SHL ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 615 , OP_SHR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 615 , OP_SUB ] = SHIFT 976
M [ 615 , OP_XOR ] = REDUCE <shift-expr> -> <additive-expr> 
M [ 616 , DELIM_COMMA ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 616 , DELIM_QUESTION ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 616 , DELIM_RSQBRACKET ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 616 , OP_AND ] = SHIFT 977
M [ 616 , OP_LAND ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 616 , OP_LOR ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 616 , OP_OR ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 616 , OP_XOR ] = REDUCE <exc-or-expr> -> <and-expr> 
M [ 617 , DELIM_COMMA ] = REDUCE <expr> -> <asn-expr> 
M [ 617 , DELIM_RSQBRACKET ] = REDUCE <expr> -> <asn-expr> 
M [ 618 , DELIM_COMMA ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 618 , DELIM_QUESTION ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 618 , DELIM_RSQBRACKET ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 618 , OP_ADD ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 618 , OP_AND ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 618 , OP_DIV ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 618 , OP_EQ ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 618 , OP_GE ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 618 , OP_GT ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 618 , OP_LAND ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 618 , OP_LE ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 618 , OP_LOR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 618 , OP_LT ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 618 , OP_MOD ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 618 , OP_MUL ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 618 , OP_NEQ ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 618 , OP_OR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 618 , OP_SHL ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 618 , OP_SHR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 618 , OP_SUB ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 618 , OP_XOR ] = REDUCE <multiplicative-expr> -> <cast-expr> 
M [ 619 , DELIM_COMMA ] = REDUCE <asn-expr> -> <cond-expr> 
M [ 619 , DELIM_RSQBRACKET ] = REDUCE <asn-expr> -> <cond-expr> 
M [ 620 , DELIM_COMMA ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , DELIM_LPAR ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , DELIM_QUESTION ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , DELIM_RSQBRACKET ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_ADD ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_ADDASN ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_AND ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_ANDASN ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_ARROW ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_ASN ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_DEC ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_DIV ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_DIVASN ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_DOT ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_EQ ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_GE ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_GT ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_INC ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_LAND ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_LE ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_LOR ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_LT ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_MOD ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_MODASN ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_MUL ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_MULASN ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_NEQ ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_OR ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_ORASN ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_SHL ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_SHLASN ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_SHR ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_SHRASN ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_SUB ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_SUBASN ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_XOR ] = REDUCE <prim-expr> -> <constant> 
M [ 620 , OP_XORASN ] = REDUCE <prim-expr> -> <constant> 
M [ 621 , DELIM_COMMA ] = REDUCE <and-expr> -> <eq-expr> 
M [ 621 , DELIM_QUESTION ] = REDUCE <and-expr> -> <eq-expr> 
M [ 621 , DELIM_RSQBRACKET ] = REDUCE <and-expr> -> <eq-expr> 
M [ 621 , OP_AND ] = REDUCE <and-expr> -> <eq-expr> 
M [ 621 , OP_EQ ] = SHIFT 978
M [ 621 , OP_LAND ] = REDUCE <and-expr> -> <eq-expr> 
M [ 621 , OP_LOR ] = REDUCE <and-expr> -> <eq-expr> 
M [ 621 , OP_NEQ ] = SHIFT 979
M [ 621 , OP_OR ] = REDUCE <and-expr> -> <eq-expr> 
M [ 621 , OP_XOR ] = REDUCE <and-expr> -> <eq-expr> 
M [ 622 , DELIM_COMMA ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 622 , DELIM_QUESTION ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 622 , DELIM_RSQBRACKET ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 622 , OP_LAND ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 622 , OP_LOR ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 622 , OP_OR ] = REDUCE <inc-or-expr> -> <exc-or-expr> 
M [ 622 , OP_XOR ] = SHIFT 980
M [ 623 , DELIM_COMMA ] = SHIFT 981
M [ 623 , DELIM_RSQBRACKET ] = SHIFT 982
M [ 624 , DELIM_COMMA ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 624 , DELIM_QUESTION ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 624 , DELIM_RSQBRACKET ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 624 , OP_LAND ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 624 , OP_LOR ] = REDUCE <land-expr> -> <inc-or-expr> 
M [ 624 , OP_OR ] = SHIFT 983
M [ 625 , DELIM_COMMA ] = REDUCE <lor-expr> -> <land-expr> 
M [ 625 , DELIM_QUESTION ] = REDUCE <lor-expr> -> <land-expr> 
M [ 625 , DELIM_RSQBRACKET ] = REDUCE <lor-expr> -> <land-expr> 
M [ 625 , OP_LAND ] = SHIFT 984
M [ 625 , OP_LOR ] = REDUCE <lor-expr> -> <land-expr> 
M [ 626 , DELIM_COMMA ] = REDUCE <cond-expr> -> <lor-expr> 
M [ 626 , DELIM_QUESTION ] = SHIFT 985
M [ 626 , DELIM_RSQBRACKET ] = REDUCE <cond-expr> -> <lor-expr> 
M [ 626 , OP_LOR ] = SHIFT 986
M [ 627 , DELIM_COMMA ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 627 , DELIM_QUESTION ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 627 , DELIM_RSQBRACKET ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 627 , OP_ADD ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 627 , OP_AND ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 627 , OP_DIV ] = SHIFT 987
M [ 627 , OP_EQ ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 627 , OP_GE ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 627 , OP_GT ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 627 , OP_LAND ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 627 , OP_LE ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 627 , OP_LOR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 627 , OP_LT ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 627 , OP_MOD ] = SHIFT 988
M [ 627 , OP_MUL ] = SHIFT 989
M [ 627 , OP_NEQ ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 627 , OP_OR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 627 , OP_SHL ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 627 , OP_SHR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 627 , OP_SUB ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 627 , OP_XOR ] = REDUCE <additive-expr> -> <multiplicative-expr> 
M [ 628 , DELIM_COMMA ] = REDUCE <constant> -> <num-const> 
M [ 628 , DELIM_LPAR ] = REDUCE <constant> -> <num-const> 
M [ 628 , DELIM_LSQBRACKET ] = REDUCE <constant> -> <num-const> 
M [ 628 , DELIM_QUESTION ] = REDUCE <constant> -> <num-const> 
M [ 628 , DELIM_RSQBRACKET ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_ADD ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_ADDASN ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_AND ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_ANDASN ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_ARROW ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_ASN ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_DEC ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_DIV ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_DIVASN ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_DOT ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_EQ ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_GE ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_GT ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_INC ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_LAND ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_LE ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_LOR ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_LT ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_MOD ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_MODASN ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_MUL ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_MULASN ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_NEQ ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_OR ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_ORASN ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_SHL ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_SHLASN ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_SHR ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_SHRASN ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_SUB ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_SUBASN ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_XOR ] = REDUCE <constant> -> <num-const> 
M [ 628 , OP_XORASN ] = REDUCE <constant> -> <num-const> 
M [ 629 , DELIM_COMMA ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , DELIM_LPAR ] = SHIFT 990
M [ 629 , DELIM_LSQBRACKET ] = SHIFT 991
M [ 629 , DELIM_QUESTION ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , DELIM_RSQBRACKET ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_ADD ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_ADDASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_AND ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_ANDASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_ARROW ] = SHIFT 992
M [ 629 , OP_ASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_DEC ] = SHIFT 993
M [ 629 , OP_DIV ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_DIVASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_DOT ] = SHIFT 994
M [ 629 , OP_EQ ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_GE ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_GT ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_INC ] = SHIFT 995
M [ 629 , OP_LAND ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_LE ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_LOR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_LT ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_MOD ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_MODASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_MUL ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_MULASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_NEQ ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_OR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_ORASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_SHL ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_SHLASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_SHR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_SHRASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_SUB ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_SUBASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_XOR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 629 , OP_XORASN ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 630 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_ADD ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_ADDASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_AND ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_ANDASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_ARROW ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_ASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_DEC ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_DIV ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_DIVASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_DOT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_EQ ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_GE ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_GT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_INC ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_LAND ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_LE ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_LOR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_LT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_MOD ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_MODASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_MUL ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_MULASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_NEQ ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_OR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_ORASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_SHL ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_SHLASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_SHR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_SHRASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_SUB ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_SUBASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_XOR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 630 , OP_XORASN ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 631 , DELIM_COMMA ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 631 , DELIM_QUESTION ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 631 , DELIM_RSQBRACKET ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 631 , OP_AND ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 631 , OP_EQ ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 631 , OP_GE ] = SHIFT 996
M [ 631 , OP_GT ] = SHIFT 997
M [ 631 , OP_LAND ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 631 , OP_LE ] = SHIFT 998
M [ 631 , OP_LOR ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 631 , OP_LT ] = SHIFT 999
M [ 631 , OP_NEQ ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 631 , OP_OR ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 631 , OP_XOR ] = REDUCE <eq-expr> -> <rel-expr> 
M [ 632 , DELIM_COMMA ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 632 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 632 , DELIM_RSQBRACKET ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 632 , OP_AND ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 632 , OP_EQ ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 632 , OP_GE ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 632 , OP_GT ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 632 , OP_LAND ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 632 , OP_LE ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 632 , OP_LOR ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 632 , OP_LT ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 632 , OP_NEQ ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 632 , OP_OR ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 632 , OP_SHL ] = SHIFT 1000
M [ 632 , OP_SHR ] = SHIFT 1001
M [ 632 , OP_XOR ] = REDUCE <rel-expr> -> <shift-expr> 
M [ 633 , <asn-op> ] = GOTO 1002
M [ 633 , DELIM_COMMA ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 633 , DELIM_QUESTION ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 633 , DELIM_RSQBRACKET ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 633 , OP_ADD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 633 , OP_ADDASN ] = SHIFT 283
M [ 633 , OP_AND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 633 , OP_ANDASN ] = SHIFT 284
M [ 633 , OP_ASN ] = SHIFT 285
M [ 633 , OP_DIV ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 633 , OP_DIVASN ] = SHIFT 286
M [ 633 , OP_EQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 633 , OP_GE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 633 , OP_GT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 633 , OP_LAND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 633 , OP_LE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 633 , OP_LOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 633 , OP_LT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 633 , OP_MOD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 633 , OP_MODASN ] = SHIFT 287
M [ 633 , OP_MUL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 633 , OP_MULASN ] = SHIFT 288
M [ 633 , OP_NEQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 633 , OP_OR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 633 , OP_ORASN ] = SHIFT 289
M [ 633 , OP_SHL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 633 , OP_SHLASN ] = SHIFT 290
M [ 633 , OP_SHR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 633 , OP_SHRASN ] = SHIFT 291
M [ 633 , OP_SUB ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 633 , OP_SUBASN ] = SHIFT 292
M [ 633 , OP_XOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 633 , OP_XORASN ] = SHIFT 293
M [ 634 , <cast-expr> ] = GOTO 1003
M [ 634 , <constant> ] = GOTO 620
M [ 634 , <num-const> ] = GOTO 628
M [ 634 , <postfix-expr> ] = GOTO 629
M [ 634 , <prim-expr> ] = GOTO 630
M [ 634 , <unary-expr> ] = GOTO 1004
M [ 634 , <unary-op> ] = GOTO 634
M [ 634 , CHAR_CONST ] = SHIFT 635
M [ 634 , DELIM_LPAR ] = SHIFT 1005
M [ 634 , FLOAT_CONST ] = SHIFT 637
M [ 634 , IDENTIFIER ] = SHIFT 638
M [ 634 , INT_CONST ] = SHIFT 639
M [ 634 , OP_ADD ] = SHIFT 135
M [ 634 , OP_AND ] = SHIFT 136
M [ 634 , OP_DEC ] = SHIFT 640
M [ 634 , OP_INC ] = SHIFT 641
M [ 634 , OP_LNOT ] = SHIFT 139
M [ 634 , OP_MUL ] = SHIFT 140
M [ 634 , OP_NOT ] = SHIFT 141
M [ 634 , OP_SUB ] = SHIFT 142
M [ 634 , STR_LITERAL ] = SHIFT 642
M [ 634 , sizeof ] = SHIFT 643
M [ 635 , DELIM_COMMA ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , DELIM_LPAR ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , DELIM_LSQBRACKET ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , DELIM_QUESTION ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , DELIM_RSQBRACKET ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_ADD ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_ADDASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_AND ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_ANDASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_ARROW ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_ASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_DEC ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_DIV ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_DIVASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_DOT ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_EQ ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_GE ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_GT ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_INC ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_LAND ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_LE ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_LOR ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_LT ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_MOD ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_MODASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_MUL ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_MULASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_NEQ ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_OR ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_ORASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_SHL ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_SHLASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_SHR ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_SHRASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_SUB ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_SUBASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_XOR ] = REDUCE <constant> -> CHAR_CONST 
M [ 635 , OP_XORASN ] = REDUCE <constant> -> CHAR_CONST 
M [ 636 , <additive-expr> ] = GOTO 299
M [ 636 , <and-expr> ] = GOTO 300
M [ 636 , <asn-expr> ] = GOTO 301
M [ 636 , <cast-expr> ] = GOTO 302
M [ 636 , <cond-expr> ] = GOTO 303
M [ 636 , <constant> ] = GOTO 304
M [ 636 , <enum-spec> ] = GOTO 305
M [ 636 , <eq-expr> ] = GOTO 306
M [ 636 , <exc-or-expr> ] = GOTO 307
M [ 636 , <expr> ] = GOTO 1006
M [ 636 , <inc-or-expr> ] = GOTO 309
M [ 636 , <land-expr> ] = GOTO 310
M [ 636 , <lor-expr> ] = GOTO 311
M [ 636 , <multiplicative-expr> ] = GOTO 312
M [ 636 , <num-const> ] = GOTO 313
M [ 636 , <postfix-expr> ] = GOTO 314
M [ 636 , <prim-expr> ] = GOTO 315
M [ 636 , <rel-expr> ] = GOTO 316
M [ 636 , <shift-expr> ] = GOTO 317
M [ 636 , <spec-qual-list> ] = GOTO 318
M [ 636 , <struct-union-spec> ] = GOTO 319
M [ 636 , <struct-union> ] = GOTO 320
M [ 636 , <type-name> ] = GOTO 1007
M [ 636 , <type-qual> ] = GOTO 322
M [ 636 , <type-spec> ] = GOTO 323
M [ 636 , <unary-expr> ] = GOTO 324
M [ 636 , <unary-op> ] = GOTO 325
M [ 636 , CHAR_CONST ] = SHIFT 326
M [ 636 , DELIM_LPAR ] = SHIFT 327
M [ 636 , FLOAT_CONST ] = SHIFT 328
M [ 636 , IDENTIFIER ] = SHIFT 329
M [ 636 , INT_CONST ] = SHIFT 330
M [ 636 , OP_ADD ] = SHIFT 135
M [ 636 , OP_AND ] = SHIFT 136
M [ 636 , OP_DEC ] = SHIFT 331
M [ 636 , OP_INC ] = SHIFT 332
M [ 636 , OP_LNOT ] = SHIFT 139
M [ 636 , OP_MUL ] = SHIFT 140
M [ 636 , OP_NOT ] = SHIFT 141
M [ 636 , OP_SUB ] = SHIFT 142
M [ 636 , STR_LITERAL ] = SHIFT 333
M [ 636 , char ] = SHIFT 334
M [ 636 , const ] = SHIFT 335
M [ 636 , double ] = SHIFT 336
M [ 636 , enum ] = SHIFT 337
M [ 636 , float ] = SHIFT 338
M [ 636 , int ] = SHIFT 339
M [ 636 , long ] = SHIFT 340
M [ 636 , short ] = SHIFT 341
M [ 636 , signed ] = SHIFT 342
M [ 636 , sizeof ] = SHIFT 343
M [ 636 , struct ] = SHIFT 21
M [ 636 , unsigned ] = SHIFT 344
M [ 636 , void ] = SHIFT 345
M [ 637 , DELIM_COMMA ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , DELIM_LPAR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , DELIM_LSQBRACKET ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , DELIM_QUESTION ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , DELIM_RSQBRACKET ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_ADD ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_ADDASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_AND ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_ANDASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_ARROW ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_ASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_DEC ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_DIV ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_DIVASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_DOT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_EQ ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_GE ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_GT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_INC ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_LAND ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_LE ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_LOR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_LT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_MOD ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_MODASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_MUL ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_MULASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_NEQ ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_OR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_ORASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_SHL ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_SHLASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_SHR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_SHRASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_SUB ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_SUBASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_XOR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 637 , OP_XORASN ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 638 , DELIM_COMMA ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , DELIM_LPAR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , DELIM_QUESTION ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , DELIM_RSQBRACKET ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_ADD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_ADDASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_AND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_ANDASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_ARROW ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_ASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_DEC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_DIV ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_DIVASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_DOT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_EQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_GE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_GT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_INC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_LAND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_LE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_LOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_LT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_MOD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_MODASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_MUL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_MULASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_NEQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_OR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_ORASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_SHL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_SHLASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_SHR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_SHRASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_SUB ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_SUBASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_XOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 638 , OP_XORASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 639 , DELIM_COMMA ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , DELIM_LPAR ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , DELIM_LSQBRACKET ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , DELIM_QUESTION ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , DELIM_RSQBRACKET ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_ADD ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_ADDASN ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_AND ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_ANDASN ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_ARROW ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_ASN ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_DEC ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_DIV ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_DIVASN ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_DOT ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_EQ ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_GE ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_GT ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_INC ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_LAND ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_LE ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_LOR ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_LT ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_MOD ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_MODASN ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_MUL ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_MULASN ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_NEQ ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_OR ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_ORASN ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_SHL ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_SHLASN ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_SHR ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_SHRASN ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_SUB ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_SUBASN ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_XOR ] = REDUCE <num-const> -> INT_CONST 
M [ 639 , OP_XORASN ] = REDUCE <num-const> -> INT_CONST 
M [ 640 , <constant> ] = GOTO 620
M [ 640 , <num-const> ] = GOTO 628
M [ 640 , <postfix-expr> ] = GOTO 629
M [ 640 , <prim-expr> ] = GOTO 630
M [ 640 , <unary-expr> ] = GOTO 1008
M [ 640 , <unary-op> ] = GOTO 634
M [ 640 , CHAR_CONST ] = SHIFT 635
M [ 640 , DELIM_LPAR ] = SHIFT 1009
M [ 640 , FLOAT_CONST ] = SHIFT 637
M [ 640 , IDENTIFIER ] = SHIFT 638
M [ 640 , INT_CONST ] = SHIFT 639
M [ 640 , OP_ADD ] = SHIFT 135
M [ 640 , OP_AND ] = SHIFT 136
M [ 640 , OP_DEC ] = SHIFT 640
M [ 640 , OP_INC ] = SHIFT 641
M [ 640 , OP_LNOT ] = SHIFT 139
M [ 640 , OP_MUL ] = SHIFT 140
M [ 640 , OP_NOT ] = SHIFT 141
M [ 640 , OP_SUB ] = SHIFT 142
M [ 640 , STR_LITERAL ] = SHIFT 642
M [ 640 , sizeof ] = SHIFT 643
M [ 641 , <constant> ] = GOTO 620
M [ 641 , <num-const> ] = GOTO 628
M [ 641 , <postfix-expr> ] = GOTO 629
M [ 641 , <prim-expr> ] = GOTO 630
M [ 641 , <unary-expr> ] = GOTO 1010
M [ 641 , <unary-op> ] = GOTO 634
M [ 641 , CHAR_CONST ] = SHIFT 635
M [ 641 , DELIM_LPAR ] = SHIFT 1009
M [ 641 , FLOAT_CONST ] = SHIFT 637
M [ 641 , IDENTIFIER ] = SHIFT 638
M [ 641 , INT_CONST ] = SHIFT 639
M [ 641 , OP_ADD ] = SHIFT 135
M [ 641 , OP_AND ] = SHIFT 136
M [ 641 , OP_DEC ] = SHIFT 640
M [ 641 , OP_INC ] = SHIFT 641
M [ 641 , OP_LNOT ] = SHIFT 139
M [ 641 , OP_MUL ] = SHIFT 140
M [ 641 , OP_NOT ] = SHIFT 141
M [ 641 , OP_SUB ] = SHIFT 142
M [ 641 , STR_LITERAL ] = SHIFT 642
M [ 641 , sizeof ] = SHIFT 643
M [ 642 , DELIM_COMMA ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , DELIM_LPAR ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , DELIM_LSQBRACKET ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , DELIM_QUESTION ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , DELIM_RSQBRACKET ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_ADD ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_ADDASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_AND ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_ANDASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_ARROW ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_ASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_DEC ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_DIV ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_DIVASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_DOT ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_EQ ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_GE ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_GT ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_INC ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_LAND ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_LE ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_LOR ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_LT ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_MOD ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_MODASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_MUL ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_MULASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_NEQ ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_OR ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_ORASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_SHL ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_SHLASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_SHR ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_SHRASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_SUB ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_SUBASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_XOR ] = REDUCE <constant> -> STR_LITERAL 
M [ 642 , OP_XORASN ] = REDUCE <constant> -> STR_LITERAL 
M [ 643 , <constant> ] = GOTO 620
M [ 643 , <num-const> ] = GOTO 628
M [ 643 , <postfix-expr> ] = GOTO 629
M [ 643 , <prim-expr> ] = GOTO 630
M [ 643 , <unary-expr> ] = GOTO 1011
M [ 643 , <unary-op> ] = GOTO 634
M [ 643 , CHAR_CONST ] = SHIFT 635
M [ 643 , DELIM_LPAR ] = SHIFT 1012
M [ 643 , FLOAT_CONST ] = SHIFT 637
M [ 643 , IDENTIFIER ] = SHIFT 638
M [ 643 , INT_CONST ] = SHIFT 639
M [ 643 , OP_ADD ] = SHIFT 135
M [ 643 , OP_AND ] = SHIFT 136
M [ 643 , OP_DEC ] = SHIFT 640
M [ 643 , OP_INC ] = SHIFT 641
M [ 643 , OP_LNOT ] = SHIFT 139
M [ 643 , OP_MUL ] = SHIFT 140
M [ 643 , OP_NOT ] = SHIFT 141
M [ 643 , OP_SUB ] = SHIFT 142
M [ 643 , STR_LITERAL ] = SHIFT 642
M [ 643 , sizeof ] = SHIFT 643
M [ 644 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , DELIM_SEMICOLON ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 644 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 645 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , DELIM_SEMICOLON ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 645 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 646 , DELIM_COMMA ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 646 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 646 , DELIM_SEMICOLON ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 646 , OP_AND ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 646 , OP_EQ ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 646 , OP_GE ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 646 , OP_GT ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 646 , OP_LAND ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 646 , OP_LE ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 646 , OP_LOR ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 646 , OP_LT ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 646 , OP_NEQ ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 646 , OP_OR ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 646 , OP_SHL ] = SHIFT 280
M [ 646 , OP_SHR ] = SHIFT 281
M [ 646 , OP_XOR ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 647 , DELIM_COMMA ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 647 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 647 , DELIM_SEMICOLON ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 647 , OP_AND ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 647 , OP_EQ ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 647 , OP_GE ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 647 , OP_GT ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 647 , OP_LAND ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 647 , OP_LE ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 647 , OP_LOR ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 647 , OP_LT ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 647 , OP_NEQ ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 647 , OP_OR ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 647 , OP_SHL ] = SHIFT 280
M [ 647 , OP_SHR ] = SHIFT 281
M [ 647 , OP_XOR ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 648 , DELIM_COMMA ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 648 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 648 , DELIM_SEMICOLON ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 648 , OP_AND ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 648 , OP_EQ ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 648 , OP_GE ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 648 , OP_GT ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 648 , OP_LAND ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 648 , OP_LE ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 648 , OP_LOR ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 648 , OP_LT ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 648 , OP_NEQ ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 648 , OP_OR ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 648 , OP_SHL ] = SHIFT 280
M [ 648 , OP_SHR ] = SHIFT 281
M [ 648 , OP_XOR ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 649 , DELIM_COMMA ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 649 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 649 , DELIM_SEMICOLON ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 649 , OP_AND ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 649 , OP_EQ ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 649 , OP_GE ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 649 , OP_GT ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 649 , OP_LAND ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 649 , OP_LE ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 649 , OP_LOR ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 649 , OP_LT ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 649 , OP_NEQ ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 649 , OP_OR ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 649 , OP_SHL ] = SHIFT 280
M [ 649 , OP_SHR ] = SHIFT 281
M [ 649 , OP_XOR ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 650 , DELIM_COMMA ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 650 , DELIM_QUESTION ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 650 , DELIM_SEMICOLON ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 650 , OP_ADD ] = SHIFT 251
M [ 650 , OP_AND ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 650 , OP_EQ ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 650 , OP_GE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 650 , OP_GT ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 650 , OP_LAND ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 650 , OP_LE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 650 , OP_LOR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 650 , OP_LT ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 650 , OP_NEQ ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 650 , OP_OR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 650 , OP_SHL ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 650 , OP_SHR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 650 , OP_SUB ] = SHIFT 252
M [ 650 , OP_XOR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 651 , DELIM_COMMA ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 651 , DELIM_QUESTION ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 651 , DELIM_SEMICOLON ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 651 , OP_ADD ] = SHIFT 251
M [ 651 , OP_AND ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 651 , OP_EQ ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 651 , OP_GE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 651 , OP_GT ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 651 , OP_LAND ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 651 , OP_LE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 651 , OP_LOR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 651 , OP_LT ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 651 , OP_NEQ ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 651 , OP_OR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 651 , OP_SHL ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 651 , OP_SHR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 651 , OP_SUB ] = SHIFT 252
M [ 651 , OP_XOR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 652 , DELIM_COMMA ] = REDUCE <asn-expr> -> <unary-expr> <asn-op> <asn-expr> 
M [ 652 , DELIM_SEMICOLON ] = REDUCE <asn-expr> -> <unary-expr> <asn-op> <asn-expr> 
M [ 653 , DELIM_RPAR ] = SHIFT 1013
M [ 654 , CHAR_CONST ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , DELIM_LCURBRACE ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , DELIM_LPAR ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , DELIM_RCURBRACE ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , DELIM_SEMICOLON ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , FLOAT_CONST ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , IDENTIFIER ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , INT_CONST ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , OP_ADD ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , OP_AND ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , OP_DEC ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , OP_INC ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , OP_LNOT ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , OP_MUL ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , OP_NOT ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , OP_SUB ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , STR_LITERAL ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , break ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , case ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , char ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , const ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , continue ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , default ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , do ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , double ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , enum ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , float ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , for ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , goto ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , if ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , int ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , long ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , return ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , short ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , signed ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , sizeof ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , struct ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , switch ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , typedef ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , unsigned ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , void ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 654 , while ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 655 , <cast-expr> ] = GOTO 302
M [ 655 , <constant> ] = GOTO 1014
M [ 655 , <multiplicative-expr> ] = GOTO 1015
M [ 655 , <num-const> ] = GOTO 1016
M [ 655 , <postfix-expr> ] = GOTO 1017
M [ 655 , <prim-expr> ] = GOTO 1018
M [ 655 , <unary-expr> ] = GOTO 1019
M [ 655 , <unary-op> ] = GOTO 1020
M [ 655 , CHAR_CONST ] = SHIFT 1021
M [ 655 , DELIM_LPAR ] = SHIFT 1022
M [ 655 , FLOAT_CONST ] = SHIFT 1023
M [ 655 , IDENTIFIER ] = SHIFT 1024
M [ 655 , INT_CONST ] = SHIFT 1025
M [ 655 , OP_ADD ] = SHIFT 135
M [ 655 , OP_AND ] = SHIFT 136
M [ 655 , OP_DEC ] = SHIFT 1026
M [ 655 , OP_INC ] = SHIFT 1027
M [ 655 , OP_LNOT ] = SHIFT 139
M [ 655 , OP_MUL ] = SHIFT 140
M [ 655 , OP_NOT ] = SHIFT 141
M [ 655 , OP_SUB ] = SHIFT 142
M [ 655 , STR_LITERAL ] = SHIFT 1028
M [ 655 , sizeof ] = SHIFT 1029
M [ 656 , <cast-expr> ] = GOTO 302
M [ 656 , <constant> ] = GOTO 1014
M [ 656 , <multiplicative-expr> ] = GOTO 1030
M [ 656 , <num-const> ] = GOTO 1016
M [ 656 , <postfix-expr> ] = GOTO 1017
M [ 656 , <prim-expr> ] = GOTO 1018
M [ 656 , <unary-expr> ] = GOTO 1019
M [ 656 , <unary-op> ] = GOTO 1020
M [ 656 , CHAR_CONST ] = SHIFT 1021
M [ 656 , DELIM_LPAR ] = SHIFT 1022
M [ 656 , FLOAT_CONST ] = SHIFT 1023
M [ 656 , IDENTIFIER ] = SHIFT 1024
M [ 656 , INT_CONST ] = SHIFT 1025
M [ 656 , OP_ADD ] = SHIFT 135
M [ 656 , OP_AND ] = SHIFT 136
M [ 656 , OP_DEC ] = SHIFT 1026
M [ 656 , OP_INC ] = SHIFT 1027
M [ 656 , OP_LNOT ] = SHIFT 139
M [ 656 , OP_MUL ] = SHIFT 140
M [ 656 , OP_NOT ] = SHIFT 141
M [ 656 , OP_SUB ] = SHIFT 142
M [ 656 , STR_LITERAL ] = SHIFT 1028
M [ 656 , sizeof ] = SHIFT 1029
M [ 657 , <additive-expr> ] = GOTO 299
M [ 657 , <cast-expr> ] = GOTO 302
M [ 657 , <constant> ] = GOTO 1014
M [ 657 , <eq-expr> ] = GOTO 1031
M [ 657 , <multiplicative-expr> ] = GOTO 312
M [ 657 , <num-const> ] = GOTO 1016
M [ 657 , <postfix-expr> ] = GOTO 1017
M [ 657 , <prim-expr> ] = GOTO 1018
M [ 657 , <rel-expr> ] = GOTO 316
M [ 657 , <shift-expr> ] = GOTO 317
M [ 657 , <unary-expr> ] = GOTO 1019
M [ 657 , <unary-op> ] = GOTO 1020
M [ 657 , CHAR_CONST ] = SHIFT 1021
M [ 657 , DELIM_LPAR ] = SHIFT 1022
M [ 657 , FLOAT_CONST ] = SHIFT 1023
M [ 657 , IDENTIFIER ] = SHIFT 1024
M [ 657 , INT_CONST ] = SHIFT 1025
M [ 657 , OP_ADD ] = SHIFT 135
M [ 657 , OP_AND ] = SHIFT 136
M [ 657 , OP_DEC ] = SHIFT 1026
M [ 657 , OP_INC ] = SHIFT 1027
M [ 657 , OP_LNOT ] = SHIFT 139
M [ 657 , OP_MUL ] = SHIFT 140
M [ 657 , OP_NOT ] = SHIFT 141
M [ 657 , OP_SUB ] = SHIFT 142
M [ 657 , STR_LITERAL ] = SHIFT 1028
M [ 657 , sizeof ] = SHIFT 1029
M [ 658 , <additive-expr> ] = GOTO 299
M [ 658 , <cast-expr> ] = GOTO 302
M [ 658 , <constant> ] = GOTO 1014
M [ 658 , <multiplicative-expr> ] = GOTO 312
M [ 658 , <num-const> ] = GOTO 1016
M [ 658 , <postfix-expr> ] = GOTO 1017
M [ 658 , <prim-expr> ] = GOTO 1018
M [ 658 , <rel-expr> ] = GOTO 1032
M [ 658 , <shift-expr> ] = GOTO 317
M [ 658 , <unary-expr> ] = GOTO 1019
M [ 658 , <unary-op> ] = GOTO 1020
M [ 658 , CHAR_CONST ] = SHIFT 1021
M [ 658 , DELIM_LPAR ] = SHIFT 1022
M [ 658 , FLOAT_CONST ] = SHIFT 1023
M [ 658 , IDENTIFIER ] = SHIFT 1024
M [ 658 , INT_CONST ] = SHIFT 1025
M [ 658 , OP_ADD ] = SHIFT 135
M [ 658 , OP_AND ] = SHIFT 136
M [ 658 , OP_DEC ] = SHIFT 1026
M [ 658 , OP_INC ] = SHIFT 1027
M [ 658 , OP_LNOT ] = SHIFT 139
M [ 658 , OP_MUL ] = SHIFT 140
M [ 658 , OP_NOT ] = SHIFT 141
M [ 658 , OP_SUB ] = SHIFT 142
M [ 658 , STR_LITERAL ] = SHIFT 1028
M [ 658 , sizeof ] = SHIFT 1029
M [ 659 , <additive-expr> ] = GOTO 299
M [ 659 , <cast-expr> ] = GOTO 302
M [ 659 , <constant> ] = GOTO 1014
M [ 659 , <multiplicative-expr> ] = GOTO 312
M [ 659 , <num-const> ] = GOTO 1016
M [ 659 , <postfix-expr> ] = GOTO 1017
M [ 659 , <prim-expr> ] = GOTO 1018
M [ 659 , <rel-expr> ] = GOTO 1033
M [ 659 , <shift-expr> ] = GOTO 317
M [ 659 , <unary-expr> ] = GOTO 1019
M [ 659 , <unary-op> ] = GOTO 1020
M [ 659 , CHAR_CONST ] = SHIFT 1021
M [ 659 , DELIM_LPAR ] = SHIFT 1022
M [ 659 , FLOAT_CONST ] = SHIFT 1023
M [ 659 , IDENTIFIER ] = SHIFT 1024
M [ 659 , INT_CONST ] = SHIFT 1025
M [ 659 , OP_ADD ] = SHIFT 135
M [ 659 , OP_AND ] = SHIFT 136
M [ 659 , OP_DEC ] = SHIFT 1026
M [ 659 , OP_INC ] = SHIFT 1027
M [ 659 , OP_LNOT ] = SHIFT 139
M [ 659 , OP_MUL ] = SHIFT 140
M [ 659 , OP_NOT ] = SHIFT 141
M [ 659 , OP_SUB ] = SHIFT 142
M [ 659 , STR_LITERAL ] = SHIFT 1028
M [ 659 , sizeof ] = SHIFT 1029
M [ 660 , <additive-expr> ] = GOTO 299
M [ 660 , <and-expr> ] = GOTO 1034
M [ 660 , <cast-expr> ] = GOTO 302
M [ 660 , <constant> ] = GOTO 1014
M [ 660 , <eq-expr> ] = GOTO 306
M [ 660 , <multiplicative-expr> ] = GOTO 312
M [ 660 , <num-const> ] = GOTO 1016
M [ 660 , <postfix-expr> ] = GOTO 1017
M [ 660 , <prim-expr> ] = GOTO 1018
M [ 660 , <rel-expr> ] = GOTO 316
M [ 660 , <shift-expr> ] = GOTO 317
M [ 660 , <unary-expr> ] = GOTO 1019
M [ 660 , <unary-op> ] = GOTO 1020
M [ 660 , CHAR_CONST ] = SHIFT 1021
M [ 660 , DELIM_LPAR ] = SHIFT 1022
M [ 660 , FLOAT_CONST ] = SHIFT 1023
M [ 660 , IDENTIFIER ] = SHIFT 1024
M [ 660 , INT_CONST ] = SHIFT 1025
M [ 660 , OP_ADD ] = SHIFT 135
M [ 660 , OP_AND ] = SHIFT 136
M [ 660 , OP_DEC ] = SHIFT 1026
M [ 660 , OP_INC ] = SHIFT 1027
M [ 660 , OP_LNOT ] = SHIFT 139
M [ 660 , OP_MUL ] = SHIFT 140
M [ 660 , OP_NOT ] = SHIFT 141
M [ 660 , OP_SUB ] = SHIFT 142
M [ 660 , STR_LITERAL ] = SHIFT 1028
M [ 660 , sizeof ] = SHIFT 1029
M [ 661 , <additive-expr> ] = GOTO 299
M [ 661 , <and-expr> ] = GOTO 300
M [ 661 , <asn-expr> ] = GOTO 1035
M [ 661 , <cast-expr> ] = GOTO 302
M [ 661 , <cond-expr> ] = GOTO 303
M [ 661 , <constant> ] = GOTO 304
M [ 661 , <eq-expr> ] = GOTO 306
M [ 661 , <exc-or-expr> ] = GOTO 307
M [ 661 , <inc-or-expr> ] = GOTO 309
M [ 661 , <land-expr> ] = GOTO 310
M [ 661 , <lor-expr> ] = GOTO 311
M [ 661 , <multiplicative-expr> ] = GOTO 312
M [ 661 , <num-const> ] = GOTO 313
M [ 661 , <postfix-expr> ] = GOTO 314
M [ 661 , <prim-expr> ] = GOTO 315
M [ 661 , <rel-expr> ] = GOTO 316
M [ 661 , <shift-expr> ] = GOTO 317
M [ 661 , <unary-expr> ] = GOTO 324
M [ 661 , <unary-op> ] = GOTO 325
M [ 661 , CHAR_CONST ] = SHIFT 326
M [ 661 , DELIM_LPAR ] = SHIFT 327
M [ 661 , FLOAT_CONST ] = SHIFT 328
M [ 661 , IDENTIFIER ] = SHIFT 329
M [ 661 , INT_CONST ] = SHIFT 330
M [ 661 , OP_ADD ] = SHIFT 135
M [ 661 , OP_AND ] = SHIFT 136
M [ 661 , OP_DEC ] = SHIFT 331
M [ 661 , OP_INC ] = SHIFT 332
M [ 661 , OP_LNOT ] = SHIFT 139
M [ 661 , OP_MUL ] = SHIFT 140
M [ 661 , OP_NOT ] = SHIFT 141
M [ 661 , OP_SUB ] = SHIFT 142
M [ 661 , STR_LITERAL ] = SHIFT 333
M [ 661 , sizeof ] = SHIFT 343
M [ 662 , DELIM_COMMA ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , DELIM_LPAR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , DELIM_QUESTION ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , DELIM_SEMICOLON ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_ADD ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_ADDASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_AND ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_ANDASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_ARROW ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_ASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_DEC ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_DIV ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_DIVASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_DOT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_EQ ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_GE ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_GT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_INC ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_LAND ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_LE ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_LOR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_LT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_MOD ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_MODASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_MUL ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_MULASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_NEQ ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_OR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_ORASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_SHL ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_SHLASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_SHR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_SHRASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_SUB ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_SUBASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_XOR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 662 , OP_XORASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 663 , <additive-expr> ] = GOTO 299
M [ 663 , <and-expr> ] = GOTO 300
M [ 663 , <cast-expr> ] = GOTO 302
M [ 663 , <constant> ] = GOTO 1014
M [ 663 , <eq-expr> ] = GOTO 306
M [ 663 , <exc-or-expr> ] = GOTO 1036
M [ 663 , <multiplicative-expr> ] = GOTO 312
M [ 663 , <num-const> ] = GOTO 1016
M [ 663 , <postfix-expr> ] = GOTO 1017
M [ 663 , <prim-expr> ] = GOTO 1018
M [ 663 , <rel-expr> ] = GOTO 316
M [ 663 , <shift-expr> ] = GOTO 317
M [ 663 , <unary-expr> ] = GOTO 1019
M [ 663 , <unary-op> ] = GOTO 1020
M [ 663 , CHAR_CONST ] = SHIFT 1021
M [ 663 , DELIM_LPAR ] = SHIFT 1022
M [ 663 , FLOAT_CONST ] = SHIFT 1023
M [ 663 , IDENTIFIER ] = SHIFT 1024
M [ 663 , INT_CONST ] = SHIFT 1025
M [ 663 , OP_ADD ] = SHIFT 135
M [ 663 , OP_AND ] = SHIFT 136
M [ 663 , OP_DEC ] = SHIFT 1026
M [ 663 , OP_INC ] = SHIFT 1027
M [ 663 , OP_LNOT ] = SHIFT 139
M [ 663 , OP_MUL ] = SHIFT 140
M [ 663 , OP_NOT ] = SHIFT 141
M [ 663 , OP_SUB ] = SHIFT 142
M [ 663 , STR_LITERAL ] = SHIFT 1028
M [ 663 , sizeof ] = SHIFT 1029
M [ 664 , <additive-expr> ] = GOTO 299
M [ 664 , <and-expr> ] = GOTO 300
M [ 664 , <cast-expr> ] = GOTO 302
M [ 664 , <constant> ] = GOTO 1014
M [ 664 , <eq-expr> ] = GOTO 306
M [ 664 , <exc-or-expr> ] = GOTO 307
M [ 664 , <inc-or-expr> ] = GOTO 1037
M [ 664 , <multiplicative-expr> ] = GOTO 312
M [ 664 , <num-const> ] = GOTO 1016
M [ 664 , <postfix-expr> ] = GOTO 1017
M [ 664 , <prim-expr> ] = GOTO 1018
M [ 664 , <rel-expr> ] = GOTO 316
M [ 664 , <shift-expr> ] = GOTO 317
M [ 664 , <unary-expr> ] = GOTO 1019
M [ 664 , <unary-op> ] = GOTO 1020
M [ 664 , CHAR_CONST ] = SHIFT 1021
M [ 664 , DELIM_LPAR ] = SHIFT 1022
M [ 664 , FLOAT_CONST ] = SHIFT 1023
M [ 664 , IDENTIFIER ] = SHIFT 1024
M [ 664 , INT_CONST ] = SHIFT 1025
M [ 664 , OP_ADD ] = SHIFT 135
M [ 664 , OP_AND ] = SHIFT 136
M [ 664 , OP_DEC ] = SHIFT 1026
M [ 664 , OP_INC ] = SHIFT 1027
M [ 664 , OP_LNOT ] = SHIFT 139
M [ 664 , OP_MUL ] = SHIFT 140
M [ 664 , OP_NOT ] = SHIFT 141
M [ 664 , OP_SUB ] = SHIFT 142
M [ 664 , STR_LITERAL ] = SHIFT 1028
M [ 664 , sizeof ] = SHIFT 1029
M [ 665 , <additive-expr> ] = GOTO 579
M [ 665 , <and-expr> ] = GOTO 580
M [ 665 , <asn-expr> ] = GOTO 581
M [ 665 , <cast-expr> ] = GOTO 582
M [ 665 , <cond-expr> ] = GOTO 583
M [ 665 , <constant> ] = GOTO 584
M [ 665 , <eq-expr> ] = GOTO 585
M [ 665 , <exc-or-expr> ] = GOTO 586
M [ 665 , <expr> ] = GOTO 1038
M [ 665 , <inc-or-expr> ] = GOTO 588
M [ 665 , <land-expr> ] = GOTO 589
M [ 665 , <lor-expr> ] = GOTO 590
M [ 665 , <multiplicative-expr> ] = GOTO 591
M [ 665 , <num-const> ] = GOTO 592
M [ 665 , <postfix-expr> ] = GOTO 593
M [ 665 , <prim-expr> ] = GOTO 594
M [ 665 , <rel-expr> ] = GOTO 595
M [ 665 , <shift-expr> ] = GOTO 596
M [ 665 , <unary-expr> ] = GOTO 597
M [ 665 , <unary-op> ] = GOTO 598
M [ 665 , CHAR_CONST ] = SHIFT 599
M [ 665 , DELIM_LPAR ] = SHIFT 600
M [ 665 , FLOAT_CONST ] = SHIFT 601
M [ 665 , IDENTIFIER ] = SHIFT 602
M [ 665 , INT_CONST ] = SHIFT 603
M [ 665 , OP_ADD ] = SHIFT 135
M [ 665 , OP_AND ] = SHIFT 136
M [ 665 , OP_DEC ] = SHIFT 604
M [ 665 , OP_INC ] = SHIFT 605
M [ 665 , OP_LNOT ] = SHIFT 139
M [ 665 , OP_MUL ] = SHIFT 140
M [ 665 , OP_NOT ] = SHIFT 141
M [ 665 , OP_SUB ] = SHIFT 142
M [ 665 , STR_LITERAL ] = SHIFT 606
M [ 665 , sizeof ] = SHIFT 607
M [ 666 , <additive-expr> ] = GOTO 299
M [ 666 , <and-expr> ] = GOTO 300
M [ 666 , <cast-expr> ] = GOTO 302
M [ 666 , <constant> ] = GOTO 1014
M [ 666 , <eq-expr> ] = GOTO 306
M [ 666 , <exc-or-expr> ] = GOTO 307
M [ 666 , <inc-or-expr> ] = GOTO 309
M [ 666 , <land-expr> ] = GOTO 1039
M [ 666 , <multiplicative-expr> ] = GOTO 312
M [ 666 , <num-const> ] = GOTO 1016
M [ 666 , <postfix-expr> ] = GOTO 1017
M [ 666 , <prim-expr> ] = GOTO 1018
M [ 666 , <rel-expr> ] = GOTO 316
M [ 666 , <shift-expr> ] = GOTO 317
M [ 666 , <unary-expr> ] = GOTO 1019
M [ 666 , <unary-op> ] = GOTO 1020
M [ 666 , CHAR_CONST ] = SHIFT 1021
M [ 666 , DELIM_LPAR ] = SHIFT 1022
M [ 666 , FLOAT_CONST ] = SHIFT 1023
M [ 666 , IDENTIFIER ] = SHIFT 1024
M [ 666 , INT_CONST ] = SHIFT 1025
M [ 666 , OP_ADD ] = SHIFT 135
M [ 666 , OP_AND ] = SHIFT 136
M [ 666 , OP_DEC ] = SHIFT 1026
M [ 666 , OP_INC ] = SHIFT 1027
M [ 666 , OP_LNOT ] = SHIFT 139
M [ 666 , OP_MUL ] = SHIFT 140
M [ 666 , OP_NOT ] = SHIFT 141
M [ 666 , OP_SUB ] = SHIFT 142
M [ 666 , STR_LITERAL ] = SHIFT 1028
M [ 666 , sizeof ] = SHIFT 1029
M [ 667 , <cast-expr> ] = GOTO 1040
M [ 667 , <constant> ] = GOTO 1014
M [ 667 , <num-const> ] = GOTO 1016
M [ 667 , <postfix-expr> ] = GOTO 1017
M [ 667 , <prim-expr> ] = GOTO 1018
M [ 667 , <unary-expr> ] = GOTO 1019
M [ 667 , <unary-op> ] = GOTO 1020
M [ 667 , CHAR_CONST ] = SHIFT 1021
M [ 667 , DELIM_LPAR ] = SHIFT 1022
M [ 667 , FLOAT_CONST ] = SHIFT 1023
M [ 667 , IDENTIFIER ] = SHIFT 1024
M [ 667 , INT_CONST ] = SHIFT 1025
M [ 667 , OP_ADD ] = SHIFT 135
M [ 667 , OP_AND ] = SHIFT 136
M [ 667 , OP_DEC ] = SHIFT 1026
M [ 667 , OP_INC ] = SHIFT 1027
M [ 667 , OP_LNOT ] = SHIFT 139
M [ 667 , OP_MUL ] = SHIFT 140
M [ 667 , OP_NOT ] = SHIFT 141
M [ 667 , OP_SUB ] = SHIFT 142
M [ 667 , STR_LITERAL ] = SHIFT 1028
M [ 667 , sizeof ] = SHIFT 1029
M [ 668 , <cast-expr> ] = GOTO 1041
M [ 668 , <constant> ] = GOTO 1014
M [ 668 , <num-const> ] = GOTO 1016
M [ 668 , <postfix-expr> ] = GOTO 1017
M [ 668 , <prim-expr> ] = GOTO 1018
M [ 668 , <unary-expr> ] = GOTO 1019
M [ 668 , <unary-op> ] = GOTO 1020
M [ 668 , CHAR_CONST ] = SHIFT 1021
M [ 668 , DELIM_LPAR ] = SHIFT 1022
M [ 668 , FLOAT_CONST ] = SHIFT 1023
M [ 668 , IDENTIFIER ] = SHIFT 1024
M [ 668 , INT_CONST ] = SHIFT 1025
M [ 668 , OP_ADD ] = SHIFT 135
M [ 668 , OP_AND ] = SHIFT 136
M [ 668 , OP_DEC ] = SHIFT 1026
M [ 668 , OP_INC ] = SHIFT 1027
M [ 668 , OP_LNOT ] = SHIFT 139
M [ 668 , OP_MUL ] = SHIFT 140
M [ 668 , OP_NOT ] = SHIFT 141
M [ 668 , OP_SUB ] = SHIFT 142
M [ 668 , STR_LITERAL ] = SHIFT 1028
M [ 668 , sizeof ] = SHIFT 1029
M [ 669 , <cast-expr> ] = GOTO 1042
M [ 669 , <constant> ] = GOTO 1014
M [ 669 , <num-const> ] = GOTO 1016
M [ 669 , <postfix-expr> ] = GOTO 1017
M [ 669 , <prim-expr> ] = GOTO 1018
M [ 669 , <unary-expr> ] = GOTO 1019
M [ 669 , <unary-op> ] = GOTO 1020
M [ 669 , CHAR_CONST ] = SHIFT 1021
M [ 669 , DELIM_LPAR ] = SHIFT 1022
M [ 669 , FLOAT_CONST ] = SHIFT 1023
M [ 669 , IDENTIFIER ] = SHIFT 1024
M [ 669 , INT_CONST ] = SHIFT 1025
M [ 669 , OP_ADD ] = SHIFT 135
M [ 669 , OP_AND ] = SHIFT 136
M [ 669 , OP_DEC ] = SHIFT 1026
M [ 669 , OP_INC ] = SHIFT 1027
M [ 669 , OP_LNOT ] = SHIFT 139
M [ 669 , OP_MUL ] = SHIFT 140
M [ 669 , OP_NOT ] = SHIFT 141
M [ 669 , OP_SUB ] = SHIFT 142
M [ 669 , STR_LITERAL ] = SHIFT 1028
M [ 669 , sizeof ] = SHIFT 1029
M [ 670 , <additive-expr> ] = GOTO 299
M [ 670 , <and-expr> ] = GOTO 300
M [ 670 , <arg-expr-list> ] = GOTO 1043
M [ 670 , <asn-expr> ] = GOTO 613
M [ 670 , <cast-expr> ] = GOTO 302
M [ 670 , <cond-expr> ] = GOTO 303
M [ 670 , <constant> ] = GOTO 304
M [ 670 , <eq-expr> ] = GOTO 306
M [ 670 , <exc-or-expr> ] = GOTO 307
M [ 670 , <inc-or-expr> ] = GOTO 309
M [ 670 , <land-expr> ] = GOTO 310
M [ 670 , <lor-expr> ] = GOTO 311
M [ 670 , <multiplicative-expr> ] = GOTO 312
M [ 670 , <num-const> ] = GOTO 313
M [ 670 , <postfix-expr> ] = GOTO 314
M [ 670 , <prim-expr> ] = GOTO 315
M [ 670 , <rel-expr> ] = GOTO 316
M [ 670 , <shift-expr> ] = GOTO 317
M [ 670 , <unary-expr> ] = GOTO 324
M [ 670 , <unary-op> ] = GOTO 325
M [ 670 , CHAR_CONST ] = SHIFT 326
M [ 670 , DELIM_LPAR ] = SHIFT 327
M [ 670 , DELIM_RPAR ] = SHIFT 1044
M [ 670 , FLOAT_CONST ] = SHIFT 328
M [ 670 , IDENTIFIER ] = SHIFT 329
M [ 670 , INT_CONST ] = SHIFT 330
M [ 670 , OP_ADD ] = SHIFT 135
M [ 670 , OP_AND ] = SHIFT 136
M [ 670 , OP_DEC ] = SHIFT 331
M [ 670 , OP_INC ] = SHIFT 332
M [ 670 , OP_LNOT ] = SHIFT 139
M [ 670 , OP_MUL ] = SHIFT 140
M [ 670 , OP_NOT ] = SHIFT 141
M [ 670 , OP_SUB ] = SHIFT 142
M [ 670 , STR_LITERAL ] = SHIFT 333
M [ 670 , sizeof ] = SHIFT 343
M [ 671 , <additive-expr> ] = GOTO 615
M [ 671 , <and-expr> ] = GOTO 616
M [ 671 , <asn-expr> ] = GOTO 617
M [ 671 , <cast-expr> ] = GOTO 618
M [ 671 , <cond-expr> ] = GOTO 619
M [ 671 , <constant> ] = GOTO 620
M [ 671 , <eq-expr> ] = GOTO 621
M [ 671 , <exc-or-expr> ] = GOTO 622
M [ 671 , <expr> ] = GOTO 1045
M [ 671 , <inc-or-expr> ] = GOTO 624
M [ 671 , <land-expr> ] = GOTO 625
M [ 671 , <lor-expr> ] = GOTO 626
M [ 671 , <multiplicative-expr> ] = GOTO 627
M [ 671 , <num-const> ] = GOTO 628
M [ 671 , <postfix-expr> ] = GOTO 629
M [ 671 , <prim-expr> ] = GOTO 630
M [ 671 , <rel-expr> ] = GOTO 631
M [ 671 , <shift-expr> ] = GOTO 632
M [ 671 , <unary-expr> ] = GOTO 633
M [ 671 , <unary-op> ] = GOTO 634
M [ 671 , CHAR_CONST ] = SHIFT 635
M [ 671 , DELIM_LPAR ] = SHIFT 636
M [ 671 , FLOAT_CONST ] = SHIFT 637
M [ 671 , IDENTIFIER ] = SHIFT 638
M [ 671 , INT_CONST ] = SHIFT 639
M [ 671 , OP_ADD ] = SHIFT 135
M [ 671 , OP_AND ] = SHIFT 136
M [ 671 , OP_DEC ] = SHIFT 640
M [ 671 , OP_INC ] = SHIFT 641
M [ 671 , OP_LNOT ] = SHIFT 139
M [ 671 , OP_MUL ] = SHIFT 140
M [ 671 , OP_NOT ] = SHIFT 141
M [ 671 , OP_SUB ] = SHIFT 142
M [ 671 , STR_LITERAL ] = SHIFT 642
M [ 671 , sizeof ] = SHIFT 643
M [ 672 , IDENTIFIER ] = SHIFT 1046
M [ 673 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , DELIM_RPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 673 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 674 , IDENTIFIER ] = SHIFT 1047
M [ 675 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , DELIM_RPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 675 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 676 , <additive-expr> ] = GOTO 299
M [ 676 , <cast-expr> ] = GOTO 302
M [ 676 , <constant> ] = GOTO 1014
M [ 676 , <multiplicative-expr> ] = GOTO 312
M [ 676 , <num-const> ] = GOTO 1016
M [ 676 , <postfix-expr> ] = GOTO 1017
M [ 676 , <prim-expr> ] = GOTO 1018
M [ 676 , <shift-expr> ] = GOTO 1048
M [ 676 , <unary-expr> ] = GOTO 1019
M [ 676 , <unary-op> ] = GOTO 1020
M [ 676 , CHAR_CONST ] = SHIFT 1021
M [ 676 , DELIM_LPAR ] = SHIFT 1022
M [ 676 , FLOAT_CONST ] = SHIFT 1023
M [ 676 , IDENTIFIER ] = SHIFT 1024
M [ 676 , INT_CONST ] = SHIFT 1025
M [ 676 , OP_ADD ] = SHIFT 135
M [ 676 , OP_AND ] = SHIFT 136
M [ 676 , OP_DEC ] = SHIFT 1026
M [ 676 , OP_INC ] = SHIFT 1027
M [ 676 , OP_LNOT ] = SHIFT 139
M [ 676 , OP_MUL ] = SHIFT 140
M [ 676 , OP_NOT ] = SHIFT 141
M [ 676 , OP_SUB ] = SHIFT 142
M [ 676 , STR_LITERAL ] = SHIFT 1028
M [ 676 , sizeof ] = SHIFT 1029
M [ 677 , <additive-expr> ] = GOTO 299
M [ 677 , <cast-expr> ] = GOTO 302
M [ 677 , <constant> ] = GOTO 1014
M [ 677 , <multiplicative-expr> ] = GOTO 312
M [ 677 , <num-const> ] = GOTO 1016
M [ 677 , <postfix-expr> ] = GOTO 1017
M [ 677 , <prim-expr> ] = GOTO 1018
M [ 677 , <shift-expr> ] = GOTO 1049
M [ 677 , <unary-expr> ] = GOTO 1019
M [ 677 , <unary-op> ] = GOTO 1020
M [ 677 , CHAR_CONST ] = SHIFT 1021
M [ 677 , DELIM_LPAR ] = SHIFT 1022
M [ 677 , FLOAT_CONST ] = SHIFT 1023
M [ 677 , IDENTIFIER ] = SHIFT 1024
M [ 677 , INT_CONST ] = SHIFT 1025
M [ 677 , OP_ADD ] = SHIFT 135
M [ 677 , OP_AND ] = SHIFT 136
M [ 677 , OP_DEC ] = SHIFT 1026
M [ 677 , OP_INC ] = SHIFT 1027
M [ 677 , OP_LNOT ] = SHIFT 139
M [ 677 , OP_MUL ] = SHIFT 140
M [ 677 , OP_NOT ] = SHIFT 141
M [ 677 , OP_SUB ] = SHIFT 142
M [ 677 , STR_LITERAL ] = SHIFT 1028
M [ 677 , sizeof ] = SHIFT 1029
M [ 678 , <additive-expr> ] = GOTO 299
M [ 678 , <cast-expr> ] = GOTO 302
M [ 678 , <constant> ] = GOTO 1014
M [ 678 , <multiplicative-expr> ] = GOTO 312
M [ 678 , <num-const> ] = GOTO 1016
M [ 678 , <postfix-expr> ] = GOTO 1017
M [ 678 , <prim-expr> ] = GOTO 1018
M [ 678 , <shift-expr> ] = GOTO 1050
M [ 678 , <unary-expr> ] = GOTO 1019
M [ 678 , <unary-op> ] = GOTO 1020
M [ 678 , CHAR_CONST ] = SHIFT 1021
M [ 678 , DELIM_LPAR ] = SHIFT 1022
M [ 678 , FLOAT_CONST ] = SHIFT 1023
M [ 678 , IDENTIFIER ] = SHIFT 1024
M [ 678 , INT_CONST ] = SHIFT 1025
M [ 678 , OP_ADD ] = SHIFT 135
M [ 678 , OP_AND ] = SHIFT 136
M [ 678 , OP_DEC ] = SHIFT 1026
M [ 678 , OP_INC ] = SHIFT 1027
M [ 678 , OP_LNOT ] = SHIFT 139
M [ 678 , OP_MUL ] = SHIFT 140
M [ 678 , OP_NOT ] = SHIFT 141
M [ 678 , OP_SUB ] = SHIFT 142
M [ 678 , STR_LITERAL ] = SHIFT 1028
M [ 678 , sizeof ] = SHIFT 1029
M [ 679 , <additive-expr> ] = GOTO 299
M [ 679 , <cast-expr> ] = GOTO 302
M [ 679 , <constant> ] = GOTO 1014
M [ 679 , <multiplicative-expr> ] = GOTO 312
M [ 679 , <num-const> ] = GOTO 1016
M [ 679 , <postfix-expr> ] = GOTO 1017
M [ 679 , <prim-expr> ] = GOTO 1018
M [ 679 , <shift-expr> ] = GOTO 1051
M [ 679 , <unary-expr> ] = GOTO 1019
M [ 679 , <unary-op> ] = GOTO 1020
M [ 679 , CHAR_CONST ] = SHIFT 1021
M [ 679 , DELIM_LPAR ] = SHIFT 1022
M [ 679 , FLOAT_CONST ] = SHIFT 1023
M [ 679 , IDENTIFIER ] = SHIFT 1024
M [ 679 , INT_CONST ] = SHIFT 1025
M [ 679 , OP_ADD ] = SHIFT 135
M [ 679 , OP_AND ] = SHIFT 136
M [ 679 , OP_DEC ] = SHIFT 1026
M [ 679 , OP_INC ] = SHIFT 1027
M [ 679 , OP_LNOT ] = SHIFT 139
M [ 679 , OP_MUL ] = SHIFT 140
M [ 679 , OP_NOT ] = SHIFT 141
M [ 679 , OP_SUB ] = SHIFT 142
M [ 679 , STR_LITERAL ] = SHIFT 1028
M [ 679 , sizeof ] = SHIFT 1029
M [ 680 , <additive-expr> ] = GOTO 1052
M [ 680 , <cast-expr> ] = GOTO 302
M [ 680 , <constant> ] = GOTO 1014
M [ 680 , <multiplicative-expr> ] = GOTO 312
M [ 680 , <num-const> ] = GOTO 1016
M [ 680 , <postfix-expr> ] = GOTO 1017
M [ 680 , <prim-expr> ] = GOTO 1018
M [ 680 , <unary-expr> ] = GOTO 1019
M [ 680 , <unary-op> ] = GOTO 1020
M [ 680 , CHAR_CONST ] = SHIFT 1021
M [ 680 , DELIM_LPAR ] = SHIFT 1022
M [ 680 , FLOAT_CONST ] = SHIFT 1023
M [ 680 , IDENTIFIER ] = SHIFT 1024
M [ 680 , INT_CONST ] = SHIFT 1025
M [ 680 , OP_ADD ] = SHIFT 135
M [ 680 , OP_AND ] = SHIFT 136
M [ 680 , OP_DEC ] = SHIFT 1026
M [ 680 , OP_INC ] = SHIFT 1027
M [ 680 , OP_LNOT ] = SHIFT 139
M [ 680 , OP_MUL ] = SHIFT 140
M [ 680 , OP_NOT ] = SHIFT 141
M [ 680 , OP_SUB ] = SHIFT 142
M [ 680 , STR_LITERAL ] = SHIFT 1028
M [ 680 , sizeof ] = SHIFT 1029
M [ 681 , <additive-expr> ] = GOTO 1053
M [ 681 , <cast-expr> ] = GOTO 302
M [ 681 , <constant> ] = GOTO 1014
M [ 681 , <multiplicative-expr> ] = GOTO 312
M [ 681 , <num-const> ] = GOTO 1016
M [ 681 , <postfix-expr> ] = GOTO 1017
M [ 681 , <prim-expr> ] = GOTO 1018
M [ 681 , <unary-expr> ] = GOTO 1019
M [ 681 , <unary-op> ] = GOTO 1020
M [ 681 , CHAR_CONST ] = SHIFT 1021
M [ 681 , DELIM_LPAR ] = SHIFT 1022
M [ 681 , FLOAT_CONST ] = SHIFT 1023
M [ 681 , IDENTIFIER ] = SHIFT 1024
M [ 681 , INT_CONST ] = SHIFT 1025
M [ 681 , OP_ADD ] = SHIFT 135
M [ 681 , OP_AND ] = SHIFT 136
M [ 681 , OP_DEC ] = SHIFT 1026
M [ 681 , OP_INC ] = SHIFT 1027
M [ 681 , OP_LNOT ] = SHIFT 139
M [ 681 , OP_MUL ] = SHIFT 140
M [ 681 , OP_NOT ] = SHIFT 141
M [ 681 , OP_SUB ] = SHIFT 142
M [ 681 , STR_LITERAL ] = SHIFT 1028
M [ 681 , sizeof ] = SHIFT 1029
M [ 682 , DELIM_RPAR ] = REDUCE <type-name> -> <spec-qual-list> <abstract-declarator> 
M [ 683 , DELIM_RPAR ] = REDUCE <abstract-declarator> -> <direct-abstract-declarator> 
M [ 684 , <direct-abstract-declarator> ] = GOTO 1054
M [ 684 , DELIM_LPAR ] = SHIFT 685
M [ 684 , DELIM_LSQBRACKET ] = SHIFT 686
M [ 684 , DELIM_RPAR ] = REDUCE <abstract-declarator> -> <pointer> 
M [ 685 , <abstract-declarator> ] = GOTO 1055
M [ 685 , <direct-abstract-declarator> ] = GOTO 683
M [ 685 , <pointer> ] = GOTO 684
M [ 685 , DELIM_LPAR ] = SHIFT 685
M [ 685 , DELIM_LSQBRACKET ] = SHIFT 686
M [ 685 , OP_MUL ] = SHIFT 687
M [ 686 , <additive-expr> ] = GOTO 185
M [ 686 , <and-expr> ] = GOTO 186
M [ 686 , <asn-expr> ] = GOTO 1056
M [ 686 , <cast-expr> ] = GOTO 188
M [ 686 , <cond-expr> ] = GOTO 189
M [ 686 , <constant> ] = GOTO 190
M [ 686 , <eq-expr> ] = GOTO 191
M [ 686 , <exc-or-expr> ] = GOTO 192
M [ 686 , <inc-or-expr> ] = GOTO 193
M [ 686 , <land-expr> ] = GOTO 194
M [ 686 , <lor-expr> ] = GOTO 195
M [ 686 , <multiplicative-expr> ] = GOTO 196
M [ 686 , <num-const> ] = GOTO 197
M [ 686 , <postfix-expr> ] = GOTO 198
M [ 686 , <prim-expr> ] = GOTO 199
M [ 686 , <rel-expr> ] = GOTO 200
M [ 686 , <shift-expr> ] = GOTO 201
M [ 686 , <type-qual-list> ] = GOTO 1057
M [ 686 , <type-qual> ] = GOTO 203
M [ 686 , <unary-expr> ] = GOTO 204
M [ 686 , <unary-op> ] = GOTO 205
M [ 686 , CHAR_CONST ] = SHIFT 206
M [ 686 , DELIM_LPAR ] = SHIFT 207
M [ 686 , DELIM_RSQBRACKET ] = SHIFT 1058
M [ 686 , FLOAT_CONST ] = SHIFT 209
M [ 686 , IDENTIFIER ] = SHIFT 210
M [ 686 , INT_CONST ] = SHIFT 211
M [ 686 , OP_ADD ] = SHIFT 135
M [ 686 , OP_AND ] = SHIFT 136
M [ 686 , OP_DEC ] = SHIFT 212
M [ 686 , OP_INC ] = SHIFT 213
M [ 686 , OP_LNOT ] = SHIFT 139
M [ 686 , OP_MUL ] = SHIFT 140
M [ 686 , OP_NOT ] = SHIFT 141
M [ 686 , OP_SUB ] = SHIFT 142
M [ 686 , STR_LITERAL ] = SHIFT 214
M [ 686 , const ] = SHIFT 215
M [ 686 , sizeof ] = SHIFT 216
M [ 687 , <pointer> ] = GOTO 1059
M [ 687 , <type-qual-list> ] = GOTO 1060
M [ 687 , <type-qual> ] = GOTO 1061
M [ 687 , DELIM_LPAR ] = REDUCE <pointer> -> OP_MUL 
M [ 687 , DELIM_LSQBRACKET ] = REDUCE <pointer> -> OP_MUL 
M [ 687 , DELIM_RPAR ] = REDUCE <pointer> -> OP_MUL 
M [ 687 , OP_MUL ] = SHIFT 687
M [ 687 , const ] = SHIFT 1062
M [ 688 , <enum-spec> ] = GOTO 62
M [ 688 , <spec-qual-list> ] = GOTO 63
M [ 688 , <struct-decl-list> ] = GOTO 1063
M [ 688 , <struct-decl> ] = GOTO 65
M [ 688 , <struct-union-spec> ] = GOTO 66
M [ 688 , <struct-union> ] = GOTO 67
M [ 688 , <type-qual> ] = GOTO 68
M [ 688 , <type-spec> ] = GOTO 69
M [ 688 , char ] = SHIFT 70
M [ 688 , const ] = SHIFT 71
M [ 688 , double ] = SHIFT 72
M [ 688 , enum ] = SHIFT 73
M [ 688 , float ] = SHIFT 74
M [ 688 , int ] = SHIFT 75
M [ 688 , long ] = SHIFT 76
M [ 688 , short ] = SHIFT 77
M [ 688 , signed ] = SHIFT 78
M [ 688 , struct ] = SHIFT 21
M [ 688 , unsigned ] = SHIFT 79
M [ 688 , void ] = SHIFT 80
M [ 689 , DELIM_LCURBRACE ] = SHIFT 1064
M [ 689 , DELIM_LPAR ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 689 , DELIM_LSQBRACKET ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 689 , DELIM_RPAR ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 689 , OP_MUL ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 689 , char ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 689 , const ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 689 , double ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 689 , enum ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 689 , float ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 689 , int ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 689 , long ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 689 , short ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 689 , signed ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 689 , struct ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 689 , unsigned ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 689 , void ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER 
M [ 690 , <cast-expr> ] = GOTO 1065
M [ 690 , <constant> ] = GOTO 554
M [ 690 , <num-const> ] = GOTO 556
M [ 690 , <postfix-expr> ] = GOTO 557
M [ 690 , <prim-expr> ] = GOTO 558
M [ 690 , <unary-expr> ] = GOTO 559
M [ 690 , <unary-op> ] = GOTO 560
M [ 690 , CHAR_CONST ] = SHIFT 561
M [ 690 , DELIM_LCURBRACE ] = SHIFT 1066
M [ 690 , DELIM_LPAR ] = SHIFT 562
M [ 690 , FLOAT_CONST ] = SHIFT 563
M [ 690 , IDENTIFIER ] = SHIFT 564
M [ 690 , INT_CONST ] = SHIFT 565
M [ 690 , OP_ADD ] = SHIFT 135
M [ 690 , OP_AND ] = SHIFT 136
M [ 690 , OP_DEC ] = SHIFT 566
M [ 690 , OP_INC ] = SHIFT 567
M [ 690 , OP_LNOT ] = SHIFT 139
M [ 690 , OP_MUL ] = SHIFT 140
M [ 690 , OP_NOT ] = SHIFT 141
M [ 690 , OP_SUB ] = SHIFT 142
M [ 690 , STR_LITERAL ] = SHIFT 568
M [ 690 , sizeof ] = SHIFT 569
M [ 691 , DELIM_LPAR ] = REDUCE <spec-qual-list> -> <type-qual> <spec-qual-list> 
M [ 691 , DELIM_LSQBRACKET ] = REDUCE <spec-qual-list> -> <type-qual> <spec-qual-list> 
M [ 691 , DELIM_RPAR ] = REDUCE <spec-qual-list> -> <type-qual> <spec-qual-list> 
M [ 691 , OP_MUL ] = REDUCE <spec-qual-list> -> <type-qual> <spec-qual-list> 
M [ 692 , DELIM_LPAR ] = REDUCE <spec-qual-list> -> <type-spec> <spec-qual-list> 
M [ 692 , DELIM_LSQBRACKET ] = REDUCE <spec-qual-list> -> <type-spec> <spec-qual-list> 
M [ 692 , DELIM_RPAR ] = REDUCE <spec-qual-list> -> <type-spec> <spec-qual-list> 
M [ 692 , OP_MUL ] = REDUCE <spec-qual-list> -> <type-spec> <spec-qual-list> 
M [ 693 , <additive-expr> ] = GOTO 299
M [ 693 , <and-expr> ] = GOTO 300
M [ 693 , <asn-expr> ] = GOTO 1067
M [ 693 , <cast-expr> ] = GOTO 302
M [ 693 , <cond-expr> ] = GOTO 303
M [ 693 , <constant> ] = GOTO 304
M [ 693 , <eq-expr> ] = GOTO 306
M [ 693 , <exc-or-expr> ] = GOTO 307
M [ 693 , <inc-or-expr> ] = GOTO 309
M [ 693 , <land-expr> ] = GOTO 310
M [ 693 , <lor-expr> ] = GOTO 311
M [ 693 , <multiplicative-expr> ] = GOTO 312
M [ 693 , <num-const> ] = GOTO 313
M [ 693 , <postfix-expr> ] = GOTO 314
M [ 693 , <prim-expr> ] = GOTO 315
M [ 693 , <rel-expr> ] = GOTO 316
M [ 693 , <shift-expr> ] = GOTO 317
M [ 693 , <unary-expr> ] = GOTO 324
M [ 693 , <unary-op> ] = GOTO 325
M [ 693 , CHAR_CONST ] = SHIFT 326
M [ 693 , DELIM_LPAR ] = SHIFT 327
M [ 693 , FLOAT_CONST ] = SHIFT 328
M [ 693 , IDENTIFIER ] = SHIFT 329
M [ 693 , INT_CONST ] = SHIFT 330
M [ 693 , OP_ADD ] = SHIFT 135
M [ 693 , OP_AND ] = SHIFT 136
M [ 693 , OP_DEC ] = SHIFT 331
M [ 693 , OP_INC ] = SHIFT 332
M [ 693 , OP_LNOT ] = SHIFT 139
M [ 693 , OP_MUL ] = SHIFT 140
M [ 693 , OP_NOT ] = SHIFT 141
M [ 693 , OP_SUB ] = SHIFT 142
M [ 693 , STR_LITERAL ] = SHIFT 333
M [ 693 , sizeof ] = SHIFT 343
M [ 694 , DELIM_COMMA ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , DELIM_QUESTION ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , DELIM_RPAR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_ADD ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_ADDASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_AND ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_ANDASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_ASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_DIV ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_DIVASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_EQ ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_GE ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_GT ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_LAND ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_LE ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_LOR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_LT ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_MOD ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_MODASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_MUL ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_MULASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_NEQ ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_OR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_ORASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_SHL ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_SHLASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_SHR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_SHRASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_SUB ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_SUBASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_XOR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 694 , OP_XORASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 695 , DELIM_COMMA ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , DELIM_QUESTION ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , DELIM_RPAR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_ADD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_ADDASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_AND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_ANDASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_ASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_DIV ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_DIVASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_EQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_GE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_GT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_LAND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_LE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_LOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_LT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_MOD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_MODASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_MUL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_MULASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_NEQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_OR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_ORASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_SHL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_SHLASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_SHR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_SHRASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_SUB ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_SUBASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_XOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 695 , OP_XORASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 696 , <additive-expr> ] = GOTO 299
M [ 696 , <and-expr> ] = GOTO 300
M [ 696 , <asn-expr> ] = GOTO 301
M [ 696 , <cast-expr> ] = GOTO 302
M [ 696 , <cond-expr> ] = GOTO 303
M [ 696 , <constant> ] = GOTO 304
M [ 696 , <enum-spec> ] = GOTO 305
M [ 696 , <eq-expr> ] = GOTO 306
M [ 696 , <exc-or-expr> ] = GOTO 307
M [ 696 , <expr> ] = GOTO 697
M [ 696 , <inc-or-expr> ] = GOTO 309
M [ 696 , <land-expr> ] = GOTO 310
M [ 696 , <lor-expr> ] = GOTO 311
M [ 696 , <multiplicative-expr> ] = GOTO 312
M [ 696 , <num-const> ] = GOTO 313
M [ 696 , <postfix-expr> ] = GOTO 314
M [ 696 , <prim-expr> ] = GOTO 315
M [ 696 , <rel-expr> ] = GOTO 316
M [ 696 , <shift-expr> ] = GOTO 317
M [ 696 , <spec-qual-list> ] = GOTO 318
M [ 696 , <struct-union-spec> ] = GOTO 319
M [ 696 , <struct-union> ] = GOTO 320
M [ 696 , <type-name> ] = GOTO 1068
M [ 696 , <type-qual> ] = GOTO 322
M [ 696 , <type-spec> ] = GOTO 323
M [ 696 , <unary-expr> ] = GOTO 324
M [ 696 , <unary-op> ] = GOTO 325
M [ 696 , CHAR_CONST ] = SHIFT 326
M [ 696 , DELIM_LPAR ] = SHIFT 327
M [ 696 , FLOAT_CONST ] = SHIFT 328
M [ 696 , IDENTIFIER ] = SHIFT 329
M [ 696 , INT_CONST ] = SHIFT 330
M [ 696 , OP_ADD ] = SHIFT 135
M [ 696 , OP_AND ] = SHIFT 136
M [ 696 , OP_DEC ] = SHIFT 331
M [ 696 , OP_INC ] = SHIFT 332
M [ 696 , OP_LNOT ] = SHIFT 139
M [ 696 , OP_MUL ] = SHIFT 140
M [ 696 , OP_NOT ] = SHIFT 141
M [ 696 , OP_SUB ] = SHIFT 142
M [ 696 , STR_LITERAL ] = SHIFT 333
M [ 696 , char ] = SHIFT 334
M [ 696 , const ] = SHIFT 335
M [ 696 , double ] = SHIFT 336
M [ 696 , enum ] = SHIFT 337
M [ 696 , float ] = SHIFT 338
M [ 696 , int ] = SHIFT 339
M [ 696 , long ] = SHIFT 340
M [ 696 , short ] = SHIFT 341
M [ 696 , signed ] = SHIFT 342
M [ 696 , sizeof ] = SHIFT 343
M [ 696 , struct ] = SHIFT 21
M [ 696 , unsigned ] = SHIFT 344
M [ 696 , void ] = SHIFT 345
M [ 697 , DELIM_COMMA ] = SHIFT 661
M [ 697 , DELIM_RPAR ] = SHIFT 1069
M [ 698 , DELIM_RPAR ] = SHIFT 1070
M [ 699 , DELIM_COMMA ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , DELIM_QUESTION ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , DELIM_RPAR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_ADD ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_ADDASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_AND ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_ANDASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_ASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_DIV ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_DIVASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_EQ ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_GE ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_GT ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_LAND ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_LE ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_LOR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_LT ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_MOD ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_MODASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_MUL ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_MULASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_NEQ ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_OR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_ORASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_SHL ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_SHLASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_SHR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_SHRASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_SUB ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_SUBASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_XOR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 699 , OP_XORASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 700 , <additive-expr> ] = GOTO 299
M [ 700 , <and-expr> ] = GOTO 300
M [ 700 , <asn-expr> ] = GOTO 301
M [ 700 , <cast-expr> ] = GOTO 302
M [ 700 , <cond-expr> ] = GOTO 303
M [ 700 , <constant> ] = GOTO 304
M [ 700 , <enum-spec> ] = GOTO 305
M [ 700 , <eq-expr> ] = GOTO 306
M [ 700 , <exc-or-expr> ] = GOTO 307
M [ 700 , <expr> ] = GOTO 697
M [ 700 , <inc-or-expr> ] = GOTO 309
M [ 700 , <land-expr> ] = GOTO 310
M [ 700 , <lor-expr> ] = GOTO 311
M [ 700 , <multiplicative-expr> ] = GOTO 312
M [ 700 , <num-const> ] = GOTO 313
M [ 700 , <postfix-expr> ] = GOTO 314
M [ 700 , <prim-expr> ] = GOTO 315
M [ 700 , <rel-expr> ] = GOTO 316
M [ 700 , <shift-expr> ] = GOTO 317
M [ 700 , <spec-qual-list> ] = GOTO 318
M [ 700 , <struct-union-spec> ] = GOTO 319
M [ 700 , <struct-union> ] = GOTO 320
M [ 700 , <type-name> ] = GOTO 1071
M [ 700 , <type-qual> ] = GOTO 322
M [ 700 , <type-spec> ] = GOTO 323
M [ 700 , <unary-expr> ] = GOTO 324
M [ 700 , <unary-op> ] = GOTO 325
M [ 700 , CHAR_CONST ] = SHIFT 326
M [ 700 , DELIM_LPAR ] = SHIFT 327
M [ 700 , FLOAT_CONST ] = SHIFT 328
M [ 700 , IDENTIFIER ] = SHIFT 329
M [ 700 , INT_CONST ] = SHIFT 330
M [ 700 , OP_ADD ] = SHIFT 135
M [ 700 , OP_AND ] = SHIFT 136
M [ 700 , OP_DEC ] = SHIFT 331
M [ 700 , OP_INC ] = SHIFT 332
M [ 700 , OP_LNOT ] = SHIFT 139
M [ 700 , OP_MUL ] = SHIFT 140
M [ 700 , OP_NOT ] = SHIFT 141
M [ 700 , OP_SUB ] = SHIFT 142
M [ 700 , STR_LITERAL ] = SHIFT 333
M [ 700 , char ] = SHIFT 334
M [ 700 , const ] = SHIFT 335
M [ 700 , double ] = SHIFT 336
M [ 700 , enum ] = SHIFT 337
M [ 700 , float ] = SHIFT 338
M [ 700 , int ] = SHIFT 339
M [ 700 , long ] = SHIFT 340
M [ 700 , short ] = SHIFT 341
M [ 700 , signed ] = SHIFT 342
M [ 700 , sizeof ] = SHIFT 343
M [ 700 , struct ] = SHIFT 21
M [ 700 , unsigned ] = SHIFT 344
M [ 700 , void ] = SHIFT 345
M [ 701 , DELIM_COMMA ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , DELIM_QUESTION ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , DELIM_RPAR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_ADD ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_ADDASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_AND ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_ANDASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_ASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_DIV ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_DIVASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_EQ ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_GE ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_GT ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_LAND ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_LE ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_LOR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_LT ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_MOD ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_MODASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_MUL ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_MULASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_NEQ ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_OR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_ORASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_SHL ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_SHLASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_SHR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_SHRASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_SUB ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_SUBASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_XOR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 701 , OP_XORASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 702 , <enumeration-const> ] = GOTO 82
M [ 702 , <enumerator-list> ] = GOTO 1072
M [ 702 , <enumerator> ] = GOTO 84
M [ 702 , IDENTIFIER ] = SHIFT 85
M [ 703 , DELIM_LCURBRACE ] = SHIFT 1073
M [ 703 , DELIM_LPAR ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 703 , DELIM_LSQBRACKET ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 703 , DELIM_RPAR ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 703 , OP_MUL ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 703 , char ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 703 , const ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 703 , double ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 703 , enum ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 703 , float ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 703 , int ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 703 , long ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 703 , short ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 703 , signed ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 703 , struct ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 703 , unsigned ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 703 , void ] = REDUCE <enum-spec> -> enum IDENTIFIER 
M [ 704 , DELIM_COMMA ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , DELIM_QUESTION ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , DELIM_RPAR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_ADD ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_ADDASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_AND ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_ANDASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_ASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_DIV ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_DIVASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_EQ ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_GE ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_GT ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_LAND ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_LE ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_LOR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_LT ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_MOD ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_MODASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_MUL ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_MULASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_NEQ ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_OR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_ORASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_SHL ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_SHLASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_SHR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_SHRASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_SUB ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_SUBASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_XOR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 704 , OP_XORASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 705 , <additive-expr> ] = GOTO 299
M [ 705 , <and-expr> ] = GOTO 300
M [ 705 , <asn-expr> ] = GOTO 301
M [ 705 , <cast-expr> ] = GOTO 302
M [ 705 , <cond-expr> ] = GOTO 303
M [ 705 , <constant> ] = GOTO 304
M [ 705 , <enum-spec> ] = GOTO 305
M [ 705 , <eq-expr> ] = GOTO 306
M [ 705 , <exc-or-expr> ] = GOTO 307
M [ 705 , <expr> ] = GOTO 697
M [ 705 , <inc-or-expr> ] = GOTO 309
M [ 705 , <land-expr> ] = GOTO 310
M [ 705 , <lor-expr> ] = GOTO 311
M [ 705 , <multiplicative-expr> ] = GOTO 312
M [ 705 , <num-const> ] = GOTO 313
M [ 705 , <postfix-expr> ] = GOTO 314
M [ 705 , <prim-expr> ] = GOTO 315
M [ 705 , <rel-expr> ] = GOTO 316
M [ 705 , <shift-expr> ] = GOTO 317
M [ 705 , <spec-qual-list> ] = GOTO 318
M [ 705 , <struct-union-spec> ] = GOTO 319
M [ 705 , <struct-union> ] = GOTO 320
M [ 705 , <type-name> ] = GOTO 1074
M [ 705 , <type-qual> ] = GOTO 322
M [ 705 , <type-spec> ] = GOTO 323
M [ 705 , <unary-expr> ] = GOTO 324
M [ 705 , <unary-op> ] = GOTO 325
M [ 705 , CHAR_CONST ] = SHIFT 326
M [ 705 , DELIM_LPAR ] = SHIFT 327
M [ 705 , FLOAT_CONST ] = SHIFT 328
M [ 705 , IDENTIFIER ] = SHIFT 329
M [ 705 , INT_CONST ] = SHIFT 330
M [ 705 , OP_ADD ] = SHIFT 135
M [ 705 , OP_AND ] = SHIFT 136
M [ 705 , OP_DEC ] = SHIFT 331
M [ 705 , OP_INC ] = SHIFT 332
M [ 705 , OP_LNOT ] = SHIFT 139
M [ 705 , OP_MUL ] = SHIFT 140
M [ 705 , OP_NOT ] = SHIFT 141
M [ 705 , OP_SUB ] = SHIFT 142
M [ 705 , STR_LITERAL ] = SHIFT 333
M [ 705 , char ] = SHIFT 334
M [ 705 , const ] = SHIFT 335
M [ 705 , double ] = SHIFT 336
M [ 705 , enum ] = SHIFT 337
M [ 705 , float ] = SHIFT 338
M [ 705 , int ] = SHIFT 339
M [ 705 , long ] = SHIFT 340
M [ 705 , short ] = SHIFT 341
M [ 705 , signed ] = SHIFT 342
M [ 705 , sizeof ] = SHIFT 343
M [ 705 , struct ] = SHIFT 21
M [ 705 , unsigned ] = SHIFT 344
M [ 705 , void ] = SHIFT 345
M [ 706 , CHAR_CONST ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , DELIM_LCURBRACE ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , DELIM_LPAR ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , DELIM_RCURBRACE ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , DELIM_SEMICOLON ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , FLOAT_CONST ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , IDENTIFIER ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , INT_CONST ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , OP_ADD ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , OP_AND ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , OP_DEC ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , OP_INC ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , OP_LNOT ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , OP_MUL ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , OP_NOT ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , OP_SUB ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , STR_LITERAL ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , break ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , case ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , char ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , const ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , continue ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , default ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , do ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , double ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , enum ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , float ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , for ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , goto ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , if ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , int ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , long ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , return ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , short ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , signed ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , sizeof ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , struct ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , switch ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , typedef ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , unsigned ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , void ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 706 , while ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 707 , DELIM_RPAR ] = SHIFT 1075
M [ 708 , <cast-expr> ] = GOTO 353
M [ 708 , <constant> ] = GOTO 356
M [ 708 , <multiplicative-expr> ] = GOTO 1076
M [ 708 , <num-const> ] = GOTO 363
M [ 708 , <postfix-expr> ] = GOTO 364
M [ 708 , <prim-expr> ] = GOTO 365
M [ 708 , <unary-expr> ] = GOTO 368
M [ 708 , <unary-op> ] = GOTO 369
M [ 708 , CHAR_CONST ] = SHIFT 370
M [ 708 , DELIM_LPAR ] = SHIFT 371
M [ 708 , FLOAT_CONST ] = SHIFT 372
M [ 708 , IDENTIFIER ] = SHIFT 373
M [ 708 , INT_CONST ] = SHIFT 374
M [ 708 , OP_ADD ] = SHIFT 135
M [ 708 , OP_AND ] = SHIFT 136
M [ 708 , OP_DEC ] = SHIFT 375
M [ 708 , OP_INC ] = SHIFT 376
M [ 708 , OP_LNOT ] = SHIFT 139
M [ 708 , OP_MUL ] = SHIFT 140
M [ 708 , OP_NOT ] = SHIFT 141
M [ 708 , OP_SUB ] = SHIFT 142
M [ 708 , STR_LITERAL ] = SHIFT 377
M [ 708 , sizeof ] = SHIFT 378
M [ 709 , <cast-expr> ] = GOTO 353
M [ 709 , <constant> ] = GOTO 356
M [ 709 , <multiplicative-expr> ] = GOTO 1077
M [ 709 , <num-const> ] = GOTO 363
M [ 709 , <postfix-expr> ] = GOTO 364
M [ 709 , <prim-expr> ] = GOTO 365
M [ 709 , <unary-expr> ] = GOTO 368
M [ 709 , <unary-op> ] = GOTO 369
M [ 709 , CHAR_CONST ] = SHIFT 370
M [ 709 , DELIM_LPAR ] = SHIFT 371
M [ 709 , FLOAT_CONST ] = SHIFT 372
M [ 709 , IDENTIFIER ] = SHIFT 373
M [ 709 , INT_CONST ] = SHIFT 374
M [ 709 , OP_ADD ] = SHIFT 135
M [ 709 , OP_AND ] = SHIFT 136
M [ 709 , OP_DEC ] = SHIFT 375
M [ 709 , OP_INC ] = SHIFT 376
M [ 709 , OP_LNOT ] = SHIFT 139
M [ 709 , OP_MUL ] = SHIFT 140
M [ 709 , OP_NOT ] = SHIFT 141
M [ 709 , OP_SUB ] = SHIFT 142
M [ 709 , STR_LITERAL ] = SHIFT 377
M [ 709 , sizeof ] = SHIFT 378
M [ 710 , <additive-expr> ] = GOTO 351
M [ 710 , <cast-expr> ] = GOTO 353
M [ 710 , <constant> ] = GOTO 356
M [ 710 , <eq-expr> ] = GOTO 1078
M [ 710 , <multiplicative-expr> ] = GOTO 362
M [ 710 , <num-const> ] = GOTO 363
M [ 710 , <postfix-expr> ] = GOTO 364
M [ 710 , <prim-expr> ] = GOTO 365
M [ 710 , <rel-expr> ] = GOTO 366
M [ 710 , <shift-expr> ] = GOTO 367
M [ 710 , <unary-expr> ] = GOTO 368
M [ 710 , <unary-op> ] = GOTO 369
M [ 710 , CHAR_CONST ] = SHIFT 370
M [ 710 , DELIM_LPAR ] = SHIFT 371
M [ 710 , FLOAT_CONST ] = SHIFT 372
M [ 710 , IDENTIFIER ] = SHIFT 373
M [ 710 , INT_CONST ] = SHIFT 374
M [ 710 , OP_ADD ] = SHIFT 135
M [ 710 , OP_AND ] = SHIFT 136
M [ 710 , OP_DEC ] = SHIFT 375
M [ 710 , OP_INC ] = SHIFT 376
M [ 710 , OP_LNOT ] = SHIFT 139
M [ 710 , OP_MUL ] = SHIFT 140
M [ 710 , OP_NOT ] = SHIFT 141
M [ 710 , OP_SUB ] = SHIFT 142
M [ 710 , STR_LITERAL ] = SHIFT 377
M [ 710 , sizeof ] = SHIFT 378
M [ 711 , <additive-expr> ] = GOTO 96
M [ 711 , <and-expr> ] = GOTO 97
M [ 711 , <asn-expr> ] = GOTO 98
M [ 711 , <cast-expr> ] = GOTO 101
M [ 711 , <comp-stmt> ] = GOTO 102
M [ 711 , <cond-expr> ] = GOTO 103
M [ 711 , <constant> ] = GOTO 104
M [ 711 , <eq-expr> ] = GOTO 107
M [ 711 , <exc-or-expr> ] = GOTO 108
M [ 711 , <expr-stmt> ] = GOTO 109
M [ 711 , <expr> ] = GOTO 110
M [ 711 , <inc-or-expr> ] = GOTO 111
M [ 711 , <iter-stmt> ] = GOTO 112
M [ 711 , <jump-stmt> ] = GOTO 113
M [ 711 , <labeled-stmt> ] = GOTO 114
M [ 711 , <land-expr> ] = GOTO 115
M [ 711 , <lor-expr> ] = GOTO 116
M [ 711 , <multiplicative-expr> ] = GOTO 117
M [ 711 , <num-const> ] = GOTO 118
M [ 711 , <postfix-expr> ] = GOTO 119
M [ 711 , <prim-expr> ] = GOTO 120
M [ 711 , <rel-expr> ] = GOTO 121
M [ 711 , <sele-stmt> ] = GOTO 122
M [ 711 , <shift-expr> ] = GOTO 123
M [ 711 , <stmt> ] = GOTO 1079
M [ 711 , <unary-expr> ] = GOTO 125
M [ 711 , <unary-op> ] = GOTO 126
M [ 711 , CHAR_CONST ] = SHIFT 127
M [ 711 , DELIM_LCURBRACE ] = SHIFT 128
M [ 711 , DELIM_LPAR ] = SHIFT 129
M [ 711 , DELIM_SEMICOLON ] = SHIFT 131
M [ 711 , FLOAT_CONST ] = SHIFT 132
M [ 711 , IDENTIFIER ] = SHIFT 133
M [ 711 , INT_CONST ] = SHIFT 134
M [ 711 , OP_ADD ] = SHIFT 135
M [ 711 , OP_AND ] = SHIFT 136
M [ 711 , OP_DEC ] = SHIFT 137
M [ 711 , OP_INC ] = SHIFT 138
M [ 711 , OP_LNOT ] = SHIFT 139
M [ 711 , OP_MUL ] = SHIFT 140
M [ 711 , OP_NOT ] = SHIFT 141
M [ 711 , OP_SUB ] = SHIFT 142
M [ 711 , STR_LITERAL ] = SHIFT 143
M [ 711 , break ] = SHIFT 144
M [ 711 , case ] = SHIFT 145
M [ 711 , continue ] = SHIFT 146
M [ 711 , default ] = SHIFT 147
M [ 711 , do ] = SHIFT 148
M [ 711 , for ] = SHIFT 149
M [ 711 , goto ] = SHIFT 150
M [ 711 , if ] = SHIFT 151
M [ 711 , return ] = SHIFT 152
M [ 711 , sizeof ] = SHIFT 153
M [ 711 , switch ] = SHIFT 154
M [ 711 , while ] = SHIFT 155
M [ 712 , <additive-expr> ] = GOTO 351
M [ 712 , <cast-expr> ] = GOTO 353
M [ 712 , <constant> ] = GOTO 356
M [ 712 , <multiplicative-expr> ] = GOTO 362
M [ 712 , <num-const> ] = GOTO 363
M [ 712 , <postfix-expr> ] = GOTO 364
M [ 712 , <prim-expr> ] = GOTO 365
M [ 712 , <rel-expr> ] = GOTO 1080
M [ 712 , <shift-expr> ] = GOTO 367
M [ 712 , <unary-expr> ] = GOTO 368
M [ 712 , <unary-op> ] = GOTO 369
M [ 712 , CHAR_CONST ] = SHIFT 370
M [ 712 , DELIM_LPAR ] = SHIFT 371
M [ 712 , FLOAT_CONST ] = SHIFT 372
M [ 712 , IDENTIFIER ] = SHIFT 373
M [ 712 , INT_CONST ] = SHIFT 374
M [ 712 , OP_ADD ] = SHIFT 135
M [ 712 , OP_AND ] = SHIFT 136
M [ 712 , OP_DEC ] = SHIFT 375
M [ 712 , OP_INC ] = SHIFT 376
M [ 712 , OP_LNOT ] = SHIFT 139
M [ 712 , OP_MUL ] = SHIFT 140
M [ 712 , OP_NOT ] = SHIFT 141
M [ 712 , OP_SUB ] = SHIFT 142
M [ 712 , STR_LITERAL ] = SHIFT 377
M [ 712 , sizeof ] = SHIFT 378
M [ 713 , <additive-expr> ] = GOTO 351
M [ 713 , <cast-expr> ] = GOTO 353
M [ 713 , <constant> ] = GOTO 356
M [ 713 , <multiplicative-expr> ] = GOTO 362
M [ 713 , <num-const> ] = GOTO 363
M [ 713 , <postfix-expr> ] = GOTO 364
M [ 713 , <prim-expr> ] = GOTO 365
M [ 713 , <rel-expr> ] = GOTO 1081
M [ 713 , <shift-expr> ] = GOTO 367
M [ 713 , <unary-expr> ] = GOTO 368
M [ 713 , <unary-op> ] = GOTO 369
M [ 713 , CHAR_CONST ] = SHIFT 370
M [ 713 , DELIM_LPAR ] = SHIFT 371
M [ 713 , FLOAT_CONST ] = SHIFT 372
M [ 713 , IDENTIFIER ] = SHIFT 373
M [ 713 , INT_CONST ] = SHIFT 374
M [ 713 , OP_ADD ] = SHIFT 135
M [ 713 , OP_AND ] = SHIFT 136
M [ 713 , OP_DEC ] = SHIFT 375
M [ 713 , OP_INC ] = SHIFT 376
M [ 713 , OP_LNOT ] = SHIFT 139
M [ 713 , OP_MUL ] = SHIFT 140
M [ 713 , OP_NOT ] = SHIFT 141
M [ 713 , OP_SUB ] = SHIFT 142
M [ 713 , STR_LITERAL ] = SHIFT 377
M [ 713 , sizeof ] = SHIFT 378
M [ 714 , <additive-expr> ] = GOTO 351
M [ 714 , <and-expr> ] = GOTO 1082
M [ 714 , <cast-expr> ] = GOTO 353
M [ 714 , <constant> ] = GOTO 356
M [ 714 , <eq-expr> ] = GOTO 357
M [ 714 , <multiplicative-expr> ] = GOTO 362
M [ 714 , <num-const> ] = GOTO 363
M [ 714 , <postfix-expr> ] = GOTO 364
M [ 714 , <prim-expr> ] = GOTO 365
M [ 714 , <rel-expr> ] = GOTO 366
M [ 714 , <shift-expr> ] = GOTO 367
M [ 714 , <unary-expr> ] = GOTO 368
M [ 714 , <unary-op> ] = GOTO 369
M [ 714 , CHAR_CONST ] = SHIFT 370
M [ 714 , DELIM_LPAR ] = SHIFT 371
M [ 714 , FLOAT_CONST ] = SHIFT 372
M [ 714 , IDENTIFIER ] = SHIFT 373
M [ 714 , INT_CONST ] = SHIFT 374
M [ 714 , OP_ADD ] = SHIFT 135
M [ 714 , OP_AND ] = SHIFT 136
M [ 714 , OP_DEC ] = SHIFT 375
M [ 714 , OP_INC ] = SHIFT 376
M [ 714 , OP_LNOT ] = SHIFT 139
M [ 714 , OP_MUL ] = SHIFT 140
M [ 714 , OP_NOT ] = SHIFT 141
M [ 714 , OP_SUB ] = SHIFT 142
M [ 714 , STR_LITERAL ] = SHIFT 377
M [ 714 , sizeof ] = SHIFT 378
M [ 715 , <additive-expr> ] = GOTO 351
M [ 715 , <and-expr> ] = GOTO 352
M [ 715 , <cast-expr> ] = GOTO 353
M [ 715 , <constant> ] = GOTO 356
M [ 715 , <eq-expr> ] = GOTO 357
M [ 715 , <exc-or-expr> ] = GOTO 1083
M [ 715 , <multiplicative-expr> ] = GOTO 362
M [ 715 , <num-const> ] = GOTO 363
M [ 715 , <postfix-expr> ] = GOTO 364
M [ 715 , <prim-expr> ] = GOTO 365
M [ 715 , <rel-expr> ] = GOTO 366
M [ 715 , <shift-expr> ] = GOTO 367
M [ 715 , <unary-expr> ] = GOTO 368
M [ 715 , <unary-op> ] = GOTO 369
M [ 715 , CHAR_CONST ] = SHIFT 370
M [ 715 , DELIM_LPAR ] = SHIFT 371
M [ 715 , FLOAT_CONST ] = SHIFT 372
M [ 715 , IDENTIFIER ] = SHIFT 373
M [ 715 , INT_CONST ] = SHIFT 374
M [ 715 , OP_ADD ] = SHIFT 135
M [ 715 , OP_AND ] = SHIFT 136
M [ 715 , OP_DEC ] = SHIFT 375
M [ 715 , OP_INC ] = SHIFT 376
M [ 715 , OP_LNOT ] = SHIFT 139
M [ 715 , OP_MUL ] = SHIFT 140
M [ 715 , OP_NOT ] = SHIFT 141
M [ 715 , OP_SUB ] = SHIFT 142
M [ 715 , STR_LITERAL ] = SHIFT 377
M [ 715 , sizeof ] = SHIFT 378
M [ 716 , <additive-expr> ] = GOTO 351
M [ 716 , <and-expr> ] = GOTO 352
M [ 716 , <cast-expr> ] = GOTO 353
M [ 716 , <constant> ] = GOTO 356
M [ 716 , <eq-expr> ] = GOTO 357
M [ 716 , <exc-or-expr> ] = GOTO 358
M [ 716 , <inc-or-expr> ] = GOTO 1084
M [ 716 , <multiplicative-expr> ] = GOTO 362
M [ 716 , <num-const> ] = GOTO 363
M [ 716 , <postfix-expr> ] = GOTO 364
M [ 716 , <prim-expr> ] = GOTO 365
M [ 716 , <rel-expr> ] = GOTO 366
M [ 716 , <shift-expr> ] = GOTO 367
M [ 716 , <unary-expr> ] = GOTO 368
M [ 716 , <unary-op> ] = GOTO 369
M [ 716 , CHAR_CONST ] = SHIFT 370
M [ 716 , DELIM_LPAR ] = SHIFT 371
M [ 716 , FLOAT_CONST ] = SHIFT 372
M [ 716 , IDENTIFIER ] = SHIFT 373
M [ 716 , INT_CONST ] = SHIFT 374
M [ 716 , OP_ADD ] = SHIFT 135
M [ 716 , OP_AND ] = SHIFT 136
M [ 716 , OP_DEC ] = SHIFT 375
M [ 716 , OP_INC ] = SHIFT 376
M [ 716 , OP_LNOT ] = SHIFT 139
M [ 716 , OP_MUL ] = SHIFT 140
M [ 716 , OP_NOT ] = SHIFT 141
M [ 716 , OP_SUB ] = SHIFT 142
M [ 716 , STR_LITERAL ] = SHIFT 377
M [ 716 , sizeof ] = SHIFT 378
M [ 717 , <additive-expr> ] = GOTO 579
M [ 717 , <and-expr> ] = GOTO 580
M [ 717 , <asn-expr> ] = GOTO 581
M [ 717 , <cast-expr> ] = GOTO 582
M [ 717 , <cond-expr> ] = GOTO 583
M [ 717 , <constant> ] = GOTO 584
M [ 717 , <eq-expr> ] = GOTO 585
M [ 717 , <exc-or-expr> ] = GOTO 586
M [ 717 , <expr> ] = GOTO 1085
M [ 717 , <inc-or-expr> ] = GOTO 588
M [ 717 , <land-expr> ] = GOTO 589
M [ 717 , <lor-expr> ] = GOTO 590
M [ 717 , <multiplicative-expr> ] = GOTO 591
M [ 717 , <num-const> ] = GOTO 592
M [ 717 , <postfix-expr> ] = GOTO 593
M [ 717 , <prim-expr> ] = GOTO 594
M [ 717 , <rel-expr> ] = GOTO 595
M [ 717 , <shift-expr> ] = GOTO 596
M [ 717 , <unary-expr> ] = GOTO 597
M [ 717 , <unary-op> ] = GOTO 598
M [ 717 , CHAR_CONST ] = SHIFT 599
M [ 717 , DELIM_LPAR ] = SHIFT 600
M [ 717 , FLOAT_CONST ] = SHIFT 601
M [ 717 , IDENTIFIER ] = SHIFT 602
M [ 717 , INT_CONST ] = SHIFT 603
M [ 717 , OP_ADD ] = SHIFT 135
M [ 717 , OP_AND ] = SHIFT 136
M [ 717 , OP_DEC ] = SHIFT 604
M [ 717 , OP_INC ] = SHIFT 605
M [ 717 , OP_LNOT ] = SHIFT 139
M [ 717 , OP_MUL ] = SHIFT 140
M [ 717 , OP_NOT ] = SHIFT 141
M [ 717 , OP_SUB ] = SHIFT 142
M [ 717 , STR_LITERAL ] = SHIFT 606
M [ 717 , sizeof ] = SHIFT 607
M [ 718 , <additive-expr> ] = GOTO 351
M [ 718 , <and-expr> ] = GOTO 352
M [ 718 , <cast-expr> ] = GOTO 353
M [ 718 , <constant> ] = GOTO 356
M [ 718 , <eq-expr> ] = GOTO 357
M [ 718 , <exc-or-expr> ] = GOTO 358
M [ 718 , <inc-or-expr> ] = GOTO 359
M [ 718 , <land-expr> ] = GOTO 1086
M [ 718 , <multiplicative-expr> ] = GOTO 362
M [ 718 , <num-const> ] = GOTO 363
M [ 718 , <postfix-expr> ] = GOTO 364
M [ 718 , <prim-expr> ] = GOTO 365
M [ 718 , <rel-expr> ] = GOTO 366
M [ 718 , <shift-expr> ] = GOTO 367
M [ 718 , <unary-expr> ] = GOTO 368
M [ 718 , <unary-op> ] = GOTO 369
M [ 718 , CHAR_CONST ] = SHIFT 370
M [ 718 , DELIM_LPAR ] = SHIFT 371
M [ 718 , FLOAT_CONST ] = SHIFT 372
M [ 718 , IDENTIFIER ] = SHIFT 373
M [ 718 , INT_CONST ] = SHIFT 374
M [ 718 , OP_ADD ] = SHIFT 135
M [ 718 , OP_AND ] = SHIFT 136
M [ 718 , OP_DEC ] = SHIFT 375
M [ 718 , OP_INC ] = SHIFT 376
M [ 718 , OP_LNOT ] = SHIFT 139
M [ 718 , OP_MUL ] = SHIFT 140
M [ 718 , OP_NOT ] = SHIFT 141
M [ 718 , OP_SUB ] = SHIFT 142
M [ 718 , STR_LITERAL ] = SHIFT 377
M [ 718 , sizeof ] = SHIFT 378
M [ 719 , <cast-expr> ] = GOTO 1087
M [ 719 , <constant> ] = GOTO 356
M [ 719 , <num-const> ] = GOTO 363
M [ 719 , <postfix-expr> ] = GOTO 364
M [ 719 , <prim-expr> ] = GOTO 365
M [ 719 , <unary-expr> ] = GOTO 368
M [ 719 , <unary-op> ] = GOTO 369
M [ 719 , CHAR_CONST ] = SHIFT 370
M [ 719 , DELIM_LPAR ] = SHIFT 371
M [ 719 , FLOAT_CONST ] = SHIFT 372
M [ 719 , IDENTIFIER ] = SHIFT 373
M [ 719 , INT_CONST ] = SHIFT 374
M [ 719 , OP_ADD ] = SHIFT 135
M [ 719 , OP_AND ] = SHIFT 136
M [ 719 , OP_DEC ] = SHIFT 375
M [ 719 , OP_INC ] = SHIFT 376
M [ 719 , OP_LNOT ] = SHIFT 139
M [ 719 , OP_MUL ] = SHIFT 140
M [ 719 , OP_NOT ] = SHIFT 141
M [ 719 , OP_SUB ] = SHIFT 142
M [ 719 , STR_LITERAL ] = SHIFT 377
M [ 719 , sizeof ] = SHIFT 378
M [ 720 , <cast-expr> ] = GOTO 1088
M [ 720 , <constant> ] = GOTO 356
M [ 720 , <num-const> ] = GOTO 363
M [ 720 , <postfix-expr> ] = GOTO 364
M [ 720 , <prim-expr> ] = GOTO 365
M [ 720 , <unary-expr> ] = GOTO 368
M [ 720 , <unary-op> ] = GOTO 369
M [ 720 , CHAR_CONST ] = SHIFT 370
M [ 720 , DELIM_LPAR ] = SHIFT 371
M [ 720 , FLOAT_CONST ] = SHIFT 372
M [ 720 , IDENTIFIER ] = SHIFT 373
M [ 720 , INT_CONST ] = SHIFT 374
M [ 720 , OP_ADD ] = SHIFT 135
M [ 720 , OP_AND ] = SHIFT 136
M [ 720 , OP_DEC ] = SHIFT 375
M [ 720 , OP_INC ] = SHIFT 376
M [ 720 , OP_LNOT ] = SHIFT 139
M [ 720 , OP_MUL ] = SHIFT 140
M [ 720 , OP_NOT ] = SHIFT 141
M [ 720 , OP_SUB ] = SHIFT 142
M [ 720 , STR_LITERAL ] = SHIFT 377
M [ 720 , sizeof ] = SHIFT 378
M [ 721 , <cast-expr> ] = GOTO 1089
M [ 721 , <constant> ] = GOTO 356
M [ 721 , <num-const> ] = GOTO 363
M [ 721 , <postfix-expr> ] = GOTO 364
M [ 721 , <prim-expr> ] = GOTO 365
M [ 721 , <unary-expr> ] = GOTO 368
M [ 721 , <unary-op> ] = GOTO 369
M [ 721 , CHAR_CONST ] = SHIFT 370
M [ 721 , DELIM_LPAR ] = SHIFT 371
M [ 721 , FLOAT_CONST ] = SHIFT 372
M [ 721 , IDENTIFIER ] = SHIFT 373
M [ 721 , INT_CONST ] = SHIFT 374
M [ 721 , OP_ADD ] = SHIFT 135
M [ 721 , OP_AND ] = SHIFT 136
M [ 721 , OP_DEC ] = SHIFT 375
M [ 721 , OP_INC ] = SHIFT 376
M [ 721 , OP_LNOT ] = SHIFT 139
M [ 721 , OP_MUL ] = SHIFT 140
M [ 721 , OP_NOT ] = SHIFT 141
M [ 721 , OP_SUB ] = SHIFT 142
M [ 721 , STR_LITERAL ] = SHIFT 377
M [ 721 , sizeof ] = SHIFT 378
M [ 722 , <additive-expr> ] = GOTO 299
M [ 722 , <and-expr> ] = GOTO 300
M [ 722 , <arg-expr-list> ] = GOTO 1090
M [ 722 , <asn-expr> ] = GOTO 613
M [ 722 , <cast-expr> ] = GOTO 302
M [ 722 , <cond-expr> ] = GOTO 303
M [ 722 , <constant> ] = GOTO 304
M [ 722 , <eq-expr> ] = GOTO 306
M [ 722 , <exc-or-expr> ] = GOTO 307
M [ 722 , <inc-or-expr> ] = GOTO 309
M [ 722 , <land-expr> ] = GOTO 310
M [ 722 , <lor-expr> ] = GOTO 311
M [ 722 , <multiplicative-expr> ] = GOTO 312
M [ 722 , <num-const> ] = GOTO 313
M [ 722 , <postfix-expr> ] = GOTO 314
M [ 722 , <prim-expr> ] = GOTO 315
M [ 722 , <rel-expr> ] = GOTO 316
M [ 722 , <shift-expr> ] = GOTO 317
M [ 722 , <unary-expr> ] = GOTO 324
M [ 722 , <unary-op> ] = GOTO 325
M [ 722 , CHAR_CONST ] = SHIFT 326
M [ 722 , DELIM_LPAR ] = SHIFT 327
M [ 722 , DELIM_RPAR ] = SHIFT 1091
M [ 722 , FLOAT_CONST ] = SHIFT 328
M [ 722 , IDENTIFIER ] = SHIFT 329
M [ 722 , INT_CONST ] = SHIFT 330
M [ 722 , OP_ADD ] = SHIFT 135
M [ 722 , OP_AND ] = SHIFT 136
M [ 722 , OP_DEC ] = SHIFT 331
M [ 722 , OP_INC ] = SHIFT 332
M [ 722 , OP_LNOT ] = SHIFT 139
M [ 722 , OP_MUL ] = SHIFT 140
M [ 722 , OP_NOT ] = SHIFT 141
M [ 722 , OP_SUB ] = SHIFT 142
M [ 722 , STR_LITERAL ] = SHIFT 333
M [ 722 , sizeof ] = SHIFT 343
M [ 723 , <additive-expr> ] = GOTO 615
M [ 723 , <and-expr> ] = GOTO 616
M [ 723 , <asn-expr> ] = GOTO 617
M [ 723 , <cast-expr> ] = GOTO 618
M [ 723 , <cond-expr> ] = GOTO 619
M [ 723 , <constant> ] = GOTO 620
M [ 723 , <eq-expr> ] = GOTO 621
M [ 723 , <exc-or-expr> ] = GOTO 622
M [ 723 , <expr> ] = GOTO 1092
M [ 723 , <inc-or-expr> ] = GOTO 624
M [ 723 , <land-expr> ] = GOTO 625
M [ 723 , <lor-expr> ] = GOTO 626
M [ 723 , <multiplicative-expr> ] = GOTO 627
M [ 723 , <num-const> ] = GOTO 628
M [ 723 , <postfix-expr> ] = GOTO 629
M [ 723 , <prim-expr> ] = GOTO 630
M [ 723 , <rel-expr> ] = GOTO 631
M [ 723 , <shift-expr> ] = GOTO 632
M [ 723 , <unary-expr> ] = GOTO 633
M [ 723 , <unary-op> ] = GOTO 634
M [ 723 , CHAR_CONST ] = SHIFT 635
M [ 723 , DELIM_LPAR ] = SHIFT 636
M [ 723 , FLOAT_CONST ] = SHIFT 637
M [ 723 , IDENTIFIER ] = SHIFT 638
M [ 723 , INT_CONST ] = SHIFT 639
M [ 723 , OP_ADD ] = SHIFT 135
M [ 723 , OP_AND ] = SHIFT 136
M [ 723 , OP_DEC ] = SHIFT 640
M [ 723 , OP_INC ] = SHIFT 641
M [ 723 , OP_LNOT ] = SHIFT 139
M [ 723 , OP_MUL ] = SHIFT 140
M [ 723 , OP_NOT ] = SHIFT 141
M [ 723 , OP_SUB ] = SHIFT 142
M [ 723 , STR_LITERAL ] = SHIFT 642
M [ 723 , sizeof ] = SHIFT 643
M [ 724 , IDENTIFIER ] = SHIFT 1093
M [ 725 , DELIM_COLON ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 725 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 725 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 725 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 725 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 725 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 725 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 725 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 725 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 725 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 725 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 725 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 725 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 725 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 725 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 725 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 725 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 725 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 725 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 725 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 725 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 725 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 725 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 725 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 725 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 725 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 726 , IDENTIFIER ] = SHIFT 1094
M [ 727 , DELIM_COLON ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 727 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 727 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 727 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 727 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 727 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 727 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 727 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 727 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 727 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 727 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 727 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 727 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 727 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 727 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 727 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 727 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 727 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 727 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 727 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 727 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 727 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 727 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 727 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 727 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 727 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 728 , <additive-expr> ] = GOTO 351
M [ 728 , <cast-expr> ] = GOTO 353
M [ 728 , <constant> ] = GOTO 356
M [ 728 , <multiplicative-expr> ] = GOTO 362
M [ 728 , <num-const> ] = GOTO 363
M [ 728 , <postfix-expr> ] = GOTO 364
M [ 728 , <prim-expr> ] = GOTO 365
M [ 728 , <shift-expr> ] = GOTO 1095
M [ 728 , <unary-expr> ] = GOTO 368
M [ 728 , <unary-op> ] = GOTO 369
M [ 728 , CHAR_CONST ] = SHIFT 370
M [ 728 , DELIM_LPAR ] = SHIFT 371
M [ 728 , FLOAT_CONST ] = SHIFT 372
M [ 728 , IDENTIFIER ] = SHIFT 373
M [ 728 , INT_CONST ] = SHIFT 374
M [ 728 , OP_ADD ] = SHIFT 135
M [ 728 , OP_AND ] = SHIFT 136
M [ 728 , OP_DEC ] = SHIFT 375
M [ 728 , OP_INC ] = SHIFT 376
M [ 728 , OP_LNOT ] = SHIFT 139
M [ 728 , OP_MUL ] = SHIFT 140
M [ 728 , OP_NOT ] = SHIFT 141
M [ 728 , OP_SUB ] = SHIFT 142
M [ 728 , STR_LITERAL ] = SHIFT 377
M [ 728 , sizeof ] = SHIFT 378
M [ 729 , <additive-expr> ] = GOTO 351
M [ 729 , <cast-expr> ] = GOTO 353
M [ 729 , <constant> ] = GOTO 356
M [ 729 , <multiplicative-expr> ] = GOTO 362
M [ 729 , <num-const> ] = GOTO 363
M [ 729 , <postfix-expr> ] = GOTO 364
M [ 729 , <prim-expr> ] = GOTO 365
M [ 729 , <shift-expr> ] = GOTO 1096
M [ 729 , <unary-expr> ] = GOTO 368
M [ 729 , <unary-op> ] = GOTO 369
M [ 729 , CHAR_CONST ] = SHIFT 370
M [ 729 , DELIM_LPAR ] = SHIFT 371
M [ 729 , FLOAT_CONST ] = SHIFT 372
M [ 729 , IDENTIFIER ] = SHIFT 373
M [ 729 , INT_CONST ] = SHIFT 374
M [ 729 , OP_ADD ] = SHIFT 135
M [ 729 , OP_AND ] = SHIFT 136
M [ 729 , OP_DEC ] = SHIFT 375
M [ 729 , OP_INC ] = SHIFT 376
M [ 729 , OP_LNOT ] = SHIFT 139
M [ 729 , OP_MUL ] = SHIFT 140
M [ 729 , OP_NOT ] = SHIFT 141
M [ 729 , OP_SUB ] = SHIFT 142
M [ 729 , STR_LITERAL ] = SHIFT 377
M [ 729 , sizeof ] = SHIFT 378
M [ 730 , <additive-expr> ] = GOTO 351
M [ 730 , <cast-expr> ] = GOTO 353
M [ 730 , <constant> ] = GOTO 356
M [ 730 , <multiplicative-expr> ] = GOTO 362
M [ 730 , <num-const> ] = GOTO 363
M [ 730 , <postfix-expr> ] = GOTO 364
M [ 730 , <prim-expr> ] = GOTO 365
M [ 730 , <shift-expr> ] = GOTO 1097
M [ 730 , <unary-expr> ] = GOTO 368
M [ 730 , <unary-op> ] = GOTO 369
M [ 730 , CHAR_CONST ] = SHIFT 370
M [ 730 , DELIM_LPAR ] = SHIFT 371
M [ 730 , FLOAT_CONST ] = SHIFT 372
M [ 730 , IDENTIFIER ] = SHIFT 373
M [ 730 , INT_CONST ] = SHIFT 374
M [ 730 , OP_ADD ] = SHIFT 135
M [ 730 , OP_AND ] = SHIFT 136
M [ 730 , OP_DEC ] = SHIFT 375
M [ 730 , OP_INC ] = SHIFT 376
M [ 730 , OP_LNOT ] = SHIFT 139
M [ 730 , OP_MUL ] = SHIFT 140
M [ 730 , OP_NOT ] = SHIFT 141
M [ 730 , OP_SUB ] = SHIFT 142
M [ 730 , STR_LITERAL ] = SHIFT 377
M [ 730 , sizeof ] = SHIFT 378
M [ 731 , <additive-expr> ] = GOTO 351
M [ 731 , <cast-expr> ] = GOTO 353
M [ 731 , <constant> ] = GOTO 356
M [ 731 , <multiplicative-expr> ] = GOTO 362
M [ 731 , <num-const> ] = GOTO 363
M [ 731 , <postfix-expr> ] = GOTO 364
M [ 731 , <prim-expr> ] = GOTO 365
M [ 731 , <shift-expr> ] = GOTO 1098
M [ 731 , <unary-expr> ] = GOTO 368
M [ 731 , <unary-op> ] = GOTO 369
M [ 731 , CHAR_CONST ] = SHIFT 370
M [ 731 , DELIM_LPAR ] = SHIFT 371
M [ 731 , FLOAT_CONST ] = SHIFT 372
M [ 731 , IDENTIFIER ] = SHIFT 373
M [ 731 , INT_CONST ] = SHIFT 374
M [ 731 , OP_ADD ] = SHIFT 135
M [ 731 , OP_AND ] = SHIFT 136
M [ 731 , OP_DEC ] = SHIFT 375
M [ 731 , OP_INC ] = SHIFT 376
M [ 731 , OP_LNOT ] = SHIFT 139
M [ 731 , OP_MUL ] = SHIFT 140
M [ 731 , OP_NOT ] = SHIFT 141
M [ 731 , OP_SUB ] = SHIFT 142
M [ 731 , STR_LITERAL ] = SHIFT 377
M [ 731 , sizeof ] = SHIFT 378
M [ 732 , <additive-expr> ] = GOTO 1099
M [ 732 , <cast-expr> ] = GOTO 353
M [ 732 , <constant> ] = GOTO 356
M [ 732 , <multiplicative-expr> ] = GOTO 362
M [ 732 , <num-const> ] = GOTO 363
M [ 732 , <postfix-expr> ] = GOTO 364
M [ 732 , <prim-expr> ] = GOTO 365
M [ 732 , <unary-expr> ] = GOTO 368
M [ 732 , <unary-op> ] = GOTO 369
M [ 732 , CHAR_CONST ] = SHIFT 370
M [ 732 , DELIM_LPAR ] = SHIFT 371
M [ 732 , FLOAT_CONST ] = SHIFT 372
M [ 732 , IDENTIFIER ] = SHIFT 373
M [ 732 , INT_CONST ] = SHIFT 374
M [ 732 , OP_ADD ] = SHIFT 135
M [ 732 , OP_AND ] = SHIFT 136
M [ 732 , OP_DEC ] = SHIFT 375
M [ 732 , OP_INC ] = SHIFT 376
M [ 732 , OP_LNOT ] = SHIFT 139
M [ 732 , OP_MUL ] = SHIFT 140
M [ 732 , OP_NOT ] = SHIFT 141
M [ 732 , OP_SUB ] = SHIFT 142
M [ 732 , STR_LITERAL ] = SHIFT 377
M [ 732 , sizeof ] = SHIFT 378
M [ 733 , <additive-expr> ] = GOTO 1100
M [ 733 , <cast-expr> ] = GOTO 353
M [ 733 , <constant> ] = GOTO 356
M [ 733 , <multiplicative-expr> ] = GOTO 362
M [ 733 , <num-const> ] = GOTO 363
M [ 733 , <postfix-expr> ] = GOTO 364
M [ 733 , <prim-expr> ] = GOTO 365
M [ 733 , <unary-expr> ] = GOTO 368
M [ 733 , <unary-op> ] = GOTO 369
M [ 733 , CHAR_CONST ] = SHIFT 370
M [ 733 , DELIM_LPAR ] = SHIFT 371
M [ 733 , FLOAT_CONST ] = SHIFT 372
M [ 733 , IDENTIFIER ] = SHIFT 373
M [ 733 , INT_CONST ] = SHIFT 374
M [ 733 , OP_ADD ] = SHIFT 135
M [ 733 , OP_AND ] = SHIFT 136
M [ 733 , OP_DEC ] = SHIFT 375
M [ 733 , OP_INC ] = SHIFT 376
M [ 733 , OP_LNOT ] = SHIFT 139
M [ 733 , OP_MUL ] = SHIFT 140
M [ 733 , OP_NOT ] = SHIFT 141
M [ 733 , OP_SUB ] = SHIFT 142
M [ 733 , STR_LITERAL ] = SHIFT 377
M [ 733 , sizeof ] = SHIFT 378
M [ 734 , DELIM_COLON ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 734 , DELIM_QUESTION ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 734 , OP_ADD ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 734 , OP_AND ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 734 , OP_DIV ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 734 , OP_EQ ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 734 , OP_GE ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 734 , OP_GT ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 734 , OP_LAND ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 734 , OP_LE ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 734 , OP_LOR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 734 , OP_LT ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 734 , OP_MOD ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 734 , OP_MUL ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 734 , OP_NEQ ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 734 , OP_OR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 734 , OP_SHL ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 734 , OP_SHR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 734 , OP_SUB ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 734 , OP_XOR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 735 , DELIM_COMMA ] = SHIFT 661
M [ 735 , DELIM_RPAR ] = SHIFT 1101
M [ 736 , DELIM_RPAR ] = SHIFT 1102
M [ 737 , DELIM_COLON ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 737 , DELIM_QUESTION ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 737 , OP_ADD ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 737 , OP_AND ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 737 , OP_DIV ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 737 , OP_EQ ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 737 , OP_GE ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 737 , OP_GT ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 737 , OP_LAND ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 737 , OP_LE ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 737 , OP_LOR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 737 , OP_LT ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 737 , OP_MOD ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 737 , OP_MUL ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 737 , OP_NEQ ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 737 , OP_OR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 737 , OP_SHL ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 737 , OP_SHR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 737 , OP_SUB ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 737 , OP_XOR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 738 , <additive-expr> ] = GOTO 299
M [ 738 , <and-expr> ] = GOTO 300
M [ 738 , <asn-expr> ] = GOTO 301
M [ 738 , <cast-expr> ] = GOTO 302
M [ 738 , <cond-expr> ] = GOTO 303
M [ 738 , <constant> ] = GOTO 304
M [ 738 , <enum-spec> ] = GOTO 305
M [ 738 , <eq-expr> ] = GOTO 306
M [ 738 , <exc-or-expr> ] = GOTO 307
M [ 738 , <expr> ] = GOTO 735
M [ 738 , <inc-or-expr> ] = GOTO 309
M [ 738 , <land-expr> ] = GOTO 310
M [ 738 , <lor-expr> ] = GOTO 311
M [ 738 , <multiplicative-expr> ] = GOTO 312
M [ 738 , <num-const> ] = GOTO 313
M [ 738 , <postfix-expr> ] = GOTO 314
M [ 738 , <prim-expr> ] = GOTO 315
M [ 738 , <rel-expr> ] = GOTO 316
M [ 738 , <shift-expr> ] = GOTO 317
M [ 738 , <spec-qual-list> ] = GOTO 318
M [ 738 , <struct-union-spec> ] = GOTO 319
M [ 738 , <struct-union> ] = GOTO 320
M [ 738 , <type-name> ] = GOTO 1103
M [ 738 , <type-qual> ] = GOTO 322
M [ 738 , <type-spec> ] = GOTO 323
M [ 738 , <unary-expr> ] = GOTO 324
M [ 738 , <unary-op> ] = GOTO 325
M [ 738 , CHAR_CONST ] = SHIFT 326
M [ 738 , DELIM_LPAR ] = SHIFT 327
M [ 738 , FLOAT_CONST ] = SHIFT 328
M [ 738 , IDENTIFIER ] = SHIFT 329
M [ 738 , INT_CONST ] = SHIFT 330
M [ 738 , OP_ADD ] = SHIFT 135
M [ 738 , OP_AND ] = SHIFT 136
M [ 738 , OP_DEC ] = SHIFT 331
M [ 738 , OP_INC ] = SHIFT 332
M [ 738 , OP_LNOT ] = SHIFT 139
M [ 738 , OP_MUL ] = SHIFT 140
M [ 738 , OP_NOT ] = SHIFT 141
M [ 738 , OP_SUB ] = SHIFT 142
M [ 738 , STR_LITERAL ] = SHIFT 333
M [ 738 , char ] = SHIFT 334
M [ 738 , const ] = SHIFT 335
M [ 738 , double ] = SHIFT 336
M [ 738 , enum ] = SHIFT 337
M [ 738 , float ] = SHIFT 338
M [ 738 , int ] = SHIFT 339
M [ 738 , long ] = SHIFT 340
M [ 738 , short ] = SHIFT 341
M [ 738 , signed ] = SHIFT 342
M [ 738 , sizeof ] = SHIFT 343
M [ 738 , struct ] = SHIFT 21
M [ 738 , unsigned ] = SHIFT 344
M [ 738 , void ] = SHIFT 345
M [ 739 , DELIM_COLON ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 739 , DELIM_QUESTION ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 739 , OP_ADD ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 739 , OP_AND ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 739 , OP_DIV ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 739 , OP_EQ ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 739 , OP_GE ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 739 , OP_GT ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 739 , OP_LAND ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 739 , OP_LE ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 739 , OP_LOR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 739 , OP_LT ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 739 , OP_MOD ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 739 , OP_MUL ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 739 , OP_NEQ ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 739 , OP_OR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 739 , OP_SHL ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 739 , OP_SHR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 739 , OP_SUB ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 739 , OP_XOR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 740 , DELIM_COLON ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 740 , DELIM_QUESTION ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 740 , OP_ADD ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 740 , OP_AND ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 740 , OP_DIV ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 740 , OP_EQ ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 740 , OP_GE ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 740 , OP_GT ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 740 , OP_LAND ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 740 , OP_LE ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 740 , OP_LOR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 740 , OP_LT ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 740 , OP_MOD ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 740 , OP_MUL ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 740 , OP_NEQ ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 740 , OP_OR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 740 , OP_SHL ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 740 , OP_SHR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 740 , OP_SUB ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 740 , OP_XOR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 741 , <additive-expr> ] = GOTO 299
M [ 741 , <and-expr> ] = GOTO 300
M [ 741 , <asn-expr> ] = GOTO 301
M [ 741 , <cast-expr> ] = GOTO 302
M [ 741 , <cond-expr> ] = GOTO 303
M [ 741 , <constant> ] = GOTO 304
M [ 741 , <enum-spec> ] = GOTO 305
M [ 741 , <eq-expr> ] = GOTO 306
M [ 741 , <exc-or-expr> ] = GOTO 307
M [ 741 , <expr> ] = GOTO 735
M [ 741 , <inc-or-expr> ] = GOTO 309
M [ 741 , <land-expr> ] = GOTO 310
M [ 741 , <lor-expr> ] = GOTO 311
M [ 741 , <multiplicative-expr> ] = GOTO 312
M [ 741 , <num-const> ] = GOTO 313
M [ 741 , <postfix-expr> ] = GOTO 314
M [ 741 , <prim-expr> ] = GOTO 315
M [ 741 , <rel-expr> ] = GOTO 316
M [ 741 , <shift-expr> ] = GOTO 317
M [ 741 , <spec-qual-list> ] = GOTO 318
M [ 741 , <struct-union-spec> ] = GOTO 319
M [ 741 , <struct-union> ] = GOTO 320
M [ 741 , <type-name> ] = GOTO 1104
M [ 741 , <type-qual> ] = GOTO 322
M [ 741 , <type-spec> ] = GOTO 323
M [ 741 , <unary-expr> ] = GOTO 324
M [ 741 , <unary-op> ] = GOTO 325
M [ 741 , CHAR_CONST ] = SHIFT 326
M [ 741 , DELIM_LPAR ] = SHIFT 327
M [ 741 , FLOAT_CONST ] = SHIFT 328
M [ 741 , IDENTIFIER ] = SHIFT 329
M [ 741 , INT_CONST ] = SHIFT 330
M [ 741 , OP_ADD ] = SHIFT 135
M [ 741 , OP_AND ] = SHIFT 136
M [ 741 , OP_DEC ] = SHIFT 331
M [ 741 , OP_INC ] = SHIFT 332
M [ 741 , OP_LNOT ] = SHIFT 139
M [ 741 , OP_MUL ] = SHIFT 140
M [ 741 , OP_NOT ] = SHIFT 141
M [ 741 , OP_SUB ] = SHIFT 142
M [ 741 , STR_LITERAL ] = SHIFT 333
M [ 741 , char ] = SHIFT 334
M [ 741 , const ] = SHIFT 335
M [ 741 , double ] = SHIFT 336
M [ 741 , enum ] = SHIFT 337
M [ 741 , float ] = SHIFT 338
M [ 741 , int ] = SHIFT 339
M [ 741 , long ] = SHIFT 340
M [ 741 , short ] = SHIFT 341
M [ 741 , signed ] = SHIFT 342
M [ 741 , sizeof ] = SHIFT 343
M [ 741 , struct ] = SHIFT 21
M [ 741 , unsigned ] = SHIFT 344
M [ 741 , void ] = SHIFT 345
M [ 742 , CHAR_CONST ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , DELIM_LCURBRACE ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , DELIM_LPAR ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , DELIM_RCURBRACE ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , DELIM_SEMICOLON ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , FLOAT_CONST ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , IDENTIFIER ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , INT_CONST ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , OP_ADD ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , OP_AND ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , OP_DEC ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , OP_INC ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , OP_LNOT ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , OP_MUL ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , OP_NOT ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , OP_SUB ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , STR_LITERAL ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , break ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , case ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , char ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , const ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , continue ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , default ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , do ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , double ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , enum ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , float ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , for ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , goto ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , if ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , int ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , long ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , return ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , short ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , signed ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , sizeof ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , struct ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , switch ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , typedef ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , unsigned ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , void ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 742 , while ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 743 , while ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 744 , DELIM_LPAR ] = SHIFT 1105
M [ 745 , <additive-expr> ] = GOTO 96
M [ 745 , <and-expr> ] = GOTO 97
M [ 745 , <asn-expr> ] = GOTO 98
M [ 745 , <blk-item> ] = GOTO 254
M [ 745 , <cast-expr> ] = GOTO 101
M [ 745 , <comp-stmt> ] = GOTO 102
M [ 745 , <cond-expr> ] = GOTO 103
M [ 745 , <constant> ] = GOTO 104
M [ 745 , <decl-spec> ] = GOTO 105
M [ 745 , <decl> ] = GOTO 106
M [ 745 , <enum-spec> ] = GOTO 3
M [ 745 , <eq-expr> ] = GOTO 107
M [ 745 , <exc-or-expr> ] = GOTO 108
M [ 745 , <expr-stmt> ] = GOTO 109
M [ 745 , <expr> ] = GOTO 110
M [ 745 , <inc-or-expr> ] = GOTO 111
M [ 745 , <iter-stmt> ] = GOTO 112
M [ 745 , <jump-stmt> ] = GOTO 113
M [ 745 , <labeled-stmt> ] = GOTO 114
M [ 745 , <land-expr> ] = GOTO 115
M [ 745 , <lor-expr> ] = GOTO 116
M [ 745 , <multiplicative-expr> ] = GOTO 117
M [ 745 , <num-const> ] = GOTO 118
M [ 745 , <postfix-expr> ] = GOTO 119
M [ 745 , <prim-expr> ] = GOTO 120
M [ 745 , <rel-expr> ] = GOTO 121
M [ 745 , <sele-stmt> ] = GOTO 122
M [ 745 , <shift-expr> ] = GOTO 123
M [ 745 , <stmt> ] = GOTO 124
M [ 745 , <storage-class-spec> ] = GOTO 6
M [ 745 , <struct-union-spec> ] = GOTO 7
M [ 745 , <struct-union> ] = GOTO 8
M [ 745 , <type-qual> ] = GOTO 10
M [ 745 , <type-spec> ] = GOTO 11
M [ 745 , <unary-expr> ] = GOTO 125
M [ 745 , <unary-op> ] = GOTO 126
M [ 745 , CHAR_CONST ] = SHIFT 127
M [ 745 , DELIM_LCURBRACE ] = SHIFT 128
M [ 745 , DELIM_LPAR ] = SHIFT 129
M [ 745 , DELIM_RCURBRACE ] = SHIFT 1106
M [ 745 , DELIM_SEMICOLON ] = SHIFT 131
M [ 745 , FLOAT_CONST ] = SHIFT 132
M [ 745 , IDENTIFIER ] = SHIFT 133
M [ 745 , INT_CONST ] = SHIFT 134
M [ 745 , OP_ADD ] = SHIFT 135
M [ 745 , OP_AND ] = SHIFT 136
M [ 745 , OP_DEC ] = SHIFT 137
M [ 745 , OP_INC ] = SHIFT 138
M [ 745 , OP_LNOT ] = SHIFT 139
M [ 745 , OP_MUL ] = SHIFT 140
M [ 745 , OP_NOT ] = SHIFT 141
M [ 745 , OP_SUB ] = SHIFT 142
M [ 745 , STR_LITERAL ] = SHIFT 143
M [ 745 , break ] = SHIFT 144
M [ 745 , case ] = SHIFT 145
M [ 745 , char ] = SHIFT 12
M [ 745 , const ] = SHIFT 13
M [ 745 , continue ] = SHIFT 146
M [ 745 , default ] = SHIFT 147
M [ 745 , do ] = SHIFT 148
M [ 745 , double ] = SHIFT 14
M [ 745 , enum ] = SHIFT 15
M [ 745 , float ] = SHIFT 16
M [ 745 , for ] = SHIFT 149
M [ 745 , goto ] = SHIFT 150
M [ 745 , if ] = SHIFT 151
M [ 745 , int ] = SHIFT 17
M [ 745 , long ] = SHIFT 18
M [ 745 , return ] = SHIFT 152
M [ 745 , short ] = SHIFT 19
M [ 745 , signed ] = SHIFT 20
M [ 745 , sizeof ] = SHIFT 153
M [ 745 , struct ] = SHIFT 21
M [ 745 , switch ] = SHIFT 154
M [ 745 , typedef ] = SHIFT 22
M [ 745 , unsigned ] = SHIFT 23
M [ 745 , void ] = SHIFT 24
M [ 745 , while ] = SHIFT 155
M [ 746 , while ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 747 , <additive-expr> ] = GOTO 96
M [ 747 , <and-expr> ] = GOTO 97
M [ 747 , <asn-expr> ] = GOTO 98
M [ 747 , <cast-expr> ] = GOTO 101
M [ 747 , <comp-stmt> ] = GOTO 381
M [ 747 , <cond-expr> ] = GOTO 103
M [ 747 , <constant> ] = GOTO 104
M [ 747 , <eq-expr> ] = GOTO 107
M [ 747 , <exc-or-expr> ] = GOTO 108
M [ 747 , <expr-stmt> ] = GOTO 382
M [ 747 , <expr> ] = GOTO 383
M [ 747 , <inc-or-expr> ] = GOTO 111
M [ 747 , <iter-stmt> ] = GOTO 384
M [ 747 , <jump-stmt> ] = GOTO 385
M [ 747 , <labeled-stmt> ] = GOTO 386
M [ 747 , <land-expr> ] = GOTO 115
M [ 747 , <lor-expr> ] = GOTO 116
M [ 747 , <multiplicative-expr> ] = GOTO 117
M [ 747 , <num-const> ] = GOTO 118
M [ 747 , <postfix-expr> ] = GOTO 119
M [ 747 , <prim-expr> ] = GOTO 120
M [ 747 , <rel-expr> ] = GOTO 121
M [ 747 , <sele-stmt> ] = GOTO 387
M [ 747 , <shift-expr> ] = GOTO 123
M [ 747 , <stmt> ] = GOTO 1107
M [ 747 , <unary-expr> ] = GOTO 125
M [ 747 , <unary-op> ] = GOTO 126
M [ 747 , CHAR_CONST ] = SHIFT 127
M [ 747 , DELIM_LCURBRACE ] = SHIFT 389
M [ 747 , DELIM_LPAR ] = SHIFT 129
M [ 747 , DELIM_SEMICOLON ] = SHIFT 390
M [ 747 , FLOAT_CONST ] = SHIFT 132
M [ 747 , IDENTIFIER ] = SHIFT 391
M [ 747 , INT_CONST ] = SHIFT 134
M [ 747 , OP_ADD ] = SHIFT 135
M [ 747 , OP_AND ] = SHIFT 136
M [ 747 , OP_DEC ] = SHIFT 137
M [ 747 , OP_INC ] = SHIFT 138
M [ 747 , OP_LNOT ] = SHIFT 139
M [ 747 , OP_MUL ] = SHIFT 140
M [ 747 , OP_NOT ] = SHIFT 141
M [ 747 , OP_SUB ] = SHIFT 142
M [ 747 , STR_LITERAL ] = SHIFT 143
M [ 747 , break ] = SHIFT 392
M [ 747 , case ] = SHIFT 393
M [ 747 , continue ] = SHIFT 394
M [ 747 , default ] = SHIFT 395
M [ 747 , do ] = SHIFT 396
M [ 747 , for ] = SHIFT 397
M [ 747 , goto ] = SHIFT 398
M [ 747 , if ] = SHIFT 399
M [ 747 , return ] = SHIFT 400
M [ 747 , sizeof ] = SHIFT 153
M [ 747 , switch ] = SHIFT 401
M [ 747 , while ] = SHIFT 402
M [ 748 , while ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 749 , DELIM_COLON ] = SHIFT 1108
M [ 750 , while ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 751 , <additive-expr> ] = GOTO 96
M [ 751 , <and-expr> ] = GOTO 97
M [ 751 , <asn-expr> ] = GOTO 98
M [ 751 , <cast-expr> ] = GOTO 101
M [ 751 , <comp-stmt> ] = GOTO 381
M [ 751 , <cond-expr> ] = GOTO 103
M [ 751 , <constant> ] = GOTO 104
M [ 751 , <eq-expr> ] = GOTO 107
M [ 751 , <exc-or-expr> ] = GOTO 108
M [ 751 , <expr-stmt> ] = GOTO 382
M [ 751 , <expr> ] = GOTO 383
M [ 751 , <inc-or-expr> ] = GOTO 111
M [ 751 , <iter-stmt> ] = GOTO 384
M [ 751 , <jump-stmt> ] = GOTO 385
M [ 751 , <labeled-stmt> ] = GOTO 386
M [ 751 , <land-expr> ] = GOTO 115
M [ 751 , <lor-expr> ] = GOTO 116
M [ 751 , <multiplicative-expr> ] = GOTO 117
M [ 751 , <num-const> ] = GOTO 118
M [ 751 , <postfix-expr> ] = GOTO 119
M [ 751 , <prim-expr> ] = GOTO 120
M [ 751 , <rel-expr> ] = GOTO 121
M [ 751 , <sele-stmt> ] = GOTO 387
M [ 751 , <shift-expr> ] = GOTO 123
M [ 751 , <stmt> ] = GOTO 1109
M [ 751 , <unary-expr> ] = GOTO 125
M [ 751 , <unary-op> ] = GOTO 126
M [ 751 , CHAR_CONST ] = SHIFT 127
M [ 751 , DELIM_LCURBRACE ] = SHIFT 389
M [ 751 , DELIM_LPAR ] = SHIFT 129
M [ 751 , DELIM_SEMICOLON ] = SHIFT 390
M [ 751 , FLOAT_CONST ] = SHIFT 132
M [ 751 , IDENTIFIER ] = SHIFT 391
M [ 751 , INT_CONST ] = SHIFT 134
M [ 751 , OP_ADD ] = SHIFT 135
M [ 751 , OP_AND ] = SHIFT 136
M [ 751 , OP_DEC ] = SHIFT 137
M [ 751 , OP_INC ] = SHIFT 138
M [ 751 , OP_LNOT ] = SHIFT 139
M [ 751 , OP_MUL ] = SHIFT 140
M [ 751 , OP_NOT ] = SHIFT 141
M [ 751 , OP_SUB ] = SHIFT 142
M [ 751 , STR_LITERAL ] = SHIFT 143
M [ 751 , break ] = SHIFT 392
M [ 751 , case ] = SHIFT 393
M [ 751 , continue ] = SHIFT 394
M [ 751 , default ] = SHIFT 395
M [ 751 , do ] = SHIFT 396
M [ 751 , for ] = SHIFT 397
M [ 751 , goto ] = SHIFT 398
M [ 751 , if ] = SHIFT 399
M [ 751 , return ] = SHIFT 400
M [ 751 , sizeof ] = SHIFT 153
M [ 751 , switch ] = SHIFT 401
M [ 751 , while ] = SHIFT 402
M [ 752 , while ] = SHIFT 1110
M [ 753 , <additive-expr> ] = GOTO 96
M [ 753 , <and-expr> ] = GOTO 97
M [ 753 , <asn-expr> ] = GOTO 98
M [ 753 , <cast-expr> ] = GOTO 101
M [ 753 , <cond-expr> ] = GOTO 103
M [ 753 , <constant> ] = GOTO 104
M [ 753 , <decl-spec> ] = GOTO 760
M [ 753 , <decl> ] = GOTO 761
M [ 753 , <enum-spec> ] = GOTO 3
M [ 753 , <eq-expr> ] = GOTO 107
M [ 753 , <exc-or-expr> ] = GOTO 108
M [ 753 , <expr> ] = GOTO 762
M [ 753 , <for-cond> ] = GOTO 1111
M [ 753 , <inc-or-expr> ] = GOTO 111
M [ 753 , <land-expr> ] = GOTO 115
M [ 753 , <lor-expr> ] = GOTO 116
M [ 753 , <multiplicative-expr> ] = GOTO 117
M [ 753 , <num-const> ] = GOTO 118
M [ 753 , <postfix-expr> ] = GOTO 119
M [ 753 , <prim-expr> ] = GOTO 120
M [ 753 , <rel-expr> ] = GOTO 121
M [ 753 , <shift-expr> ] = GOTO 123
M [ 753 , <storage-class-spec> ] = GOTO 6
M [ 753 , <struct-union-spec> ] = GOTO 7
M [ 753 , <struct-union> ] = GOTO 8
M [ 753 , <type-qual> ] = GOTO 10
M [ 753 , <type-spec> ] = GOTO 11
M [ 753 , <unary-expr> ] = GOTO 125
M [ 753 , <unary-op> ] = GOTO 126
M [ 753 , CHAR_CONST ] = SHIFT 127
M [ 753 , DELIM_LPAR ] = SHIFT 129
M [ 753 , DELIM_SEMICOLON ] = SHIFT 764
M [ 753 , FLOAT_CONST ] = SHIFT 132
M [ 753 , IDENTIFIER ] = SHIFT 159
M [ 753 , INT_CONST ] = SHIFT 134
M [ 753 , OP_ADD ] = SHIFT 135
M [ 753 , OP_AND ] = SHIFT 136
M [ 753 , OP_DEC ] = SHIFT 137
M [ 753 , OP_INC ] = SHIFT 138
M [ 753 , OP_LNOT ] = SHIFT 139
M [ 753 , OP_MUL ] = SHIFT 140
M [ 753 , OP_NOT ] = SHIFT 141
M [ 753 , OP_SUB ] = SHIFT 142
M [ 753 , STR_LITERAL ] = SHIFT 143
M [ 753 , char ] = SHIFT 12
M [ 753 , const ] = SHIFT 13
M [ 753 , double ] = SHIFT 14
M [ 753 , enum ] = SHIFT 15
M [ 753 , float ] = SHIFT 16
M [ 753 , int ] = SHIFT 17
M [ 753 , long ] = SHIFT 18
M [ 753 , short ] = SHIFT 19
M [ 753 , signed ] = SHIFT 20
M [ 753 , sizeof ] = SHIFT 153
M [ 753 , struct ] = SHIFT 21
M [ 753 , typedef ] = SHIFT 22
M [ 753 , unsigned ] = SHIFT 23
M [ 753 , void ] = SHIFT 24
M [ 754 , while ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 755 , <additive-expr> ] = GOTO 299
M [ 755 , <and-expr> ] = GOTO 300
M [ 755 , <asn-expr> ] = GOTO 301
M [ 755 , <cast-expr> ] = GOTO 302
M [ 755 , <cond-expr> ] = GOTO 303
M [ 755 , <constant> ] = GOTO 304
M [ 755 , <eq-expr> ] = GOTO 306
M [ 755 , <exc-or-expr> ] = GOTO 307
M [ 755 , <expr> ] = GOTO 1112
M [ 755 , <inc-or-expr> ] = GOTO 309
M [ 755 , <land-expr> ] = GOTO 310
M [ 755 , <lor-expr> ] = GOTO 311
M [ 755 , <multiplicative-expr> ] = GOTO 312
M [ 755 , <num-const> ] = GOTO 313
M [ 755 , <postfix-expr> ] = GOTO 314
M [ 755 , <prim-expr> ] = GOTO 315
M [ 755 , <rel-expr> ] = GOTO 316
M [ 755 , <shift-expr> ] = GOTO 317
M [ 755 , <unary-expr> ] = GOTO 324
M [ 755 , <unary-op> ] = GOTO 325
M [ 755 , CHAR_CONST ] = SHIFT 326
M [ 755 , DELIM_LPAR ] = SHIFT 327
M [ 755 , FLOAT_CONST ] = SHIFT 328
M [ 755 , IDENTIFIER ] = SHIFT 329
M [ 755 , INT_CONST ] = SHIFT 330
M [ 755 , OP_ADD ] = SHIFT 135
M [ 755 , OP_AND ] = SHIFT 136
M [ 755 , OP_DEC ] = SHIFT 331
M [ 755 , OP_INC ] = SHIFT 332
M [ 755 , OP_LNOT ] = SHIFT 139
M [ 755 , OP_MUL ] = SHIFT 140
M [ 755 , OP_NOT ] = SHIFT 141
M [ 755 , OP_SUB ] = SHIFT 142
M [ 755 , STR_LITERAL ] = SHIFT 333
M [ 755 , sizeof ] = SHIFT 343
M [ 756 , DELIM_COMMA ] = SHIFT 261
M [ 756 , DELIM_SEMICOLON ] = SHIFT 1113
M [ 757 , while ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 758 , <additive-expr> ] = GOTO 299
M [ 758 , <and-expr> ] = GOTO 300
M [ 758 , <asn-expr> ] = GOTO 301
M [ 758 , <cast-expr> ] = GOTO 302
M [ 758 , <cond-expr> ] = GOTO 303
M [ 758 , <constant> ] = GOTO 304
M [ 758 , <eq-expr> ] = GOTO 306
M [ 758 , <exc-or-expr> ] = GOTO 307
M [ 758 , <expr> ] = GOTO 1114
M [ 758 , <inc-or-expr> ] = GOTO 309
M [ 758 , <land-expr> ] = GOTO 310
M [ 758 , <lor-expr> ] = GOTO 311
M [ 758 , <multiplicative-expr> ] = GOTO 312
M [ 758 , <num-const> ] = GOTO 313
M [ 758 , <postfix-expr> ] = GOTO 314
M [ 758 , <prim-expr> ] = GOTO 315
M [ 758 , <rel-expr> ] = GOTO 316
M [ 758 , <shift-expr> ] = GOTO 317
M [ 758 , <unary-expr> ] = GOTO 324
M [ 758 , <unary-op> ] = GOTO 325
M [ 758 , CHAR_CONST ] = SHIFT 326
M [ 758 , DELIM_LPAR ] = SHIFT 327
M [ 758 , FLOAT_CONST ] = SHIFT 328
M [ 758 , IDENTIFIER ] = SHIFT 329
M [ 758 , INT_CONST ] = SHIFT 330
M [ 758 , OP_ADD ] = SHIFT 135
M [ 758 , OP_AND ] = SHIFT 136
M [ 758 , OP_DEC ] = SHIFT 331
M [ 758 , OP_INC ] = SHIFT 332
M [ 758 , OP_LNOT ] = SHIFT 139
M [ 758 , OP_MUL ] = SHIFT 140
M [ 758 , OP_NOT ] = SHIFT 141
M [ 758 , OP_SUB ] = SHIFT 142
M [ 758 , STR_LITERAL ] = SHIFT 333
M [ 758 , sizeof ] = SHIFT 343
M [ 759 , <additive-expr> ] = GOTO 299
M [ 759 , <and-expr> ] = GOTO 300
M [ 759 , <asn-expr> ] = GOTO 301
M [ 759 , <cast-expr> ] = GOTO 302
M [ 759 , <cond-expr> ] = GOTO 303
M [ 759 , <constant> ] = GOTO 304
M [ 759 , <eq-expr> ] = GOTO 306
M [ 759 , <exc-or-expr> ] = GOTO 307
M [ 759 , <expr> ] = GOTO 1115
M [ 759 , <inc-or-expr> ] = GOTO 309
M [ 759 , <land-expr> ] = GOTO 310
M [ 759 , <lor-expr> ] = GOTO 311
M [ 759 , <multiplicative-expr> ] = GOTO 312
M [ 759 , <num-const> ] = GOTO 313
M [ 759 , <postfix-expr> ] = GOTO 314
M [ 759 , <prim-expr> ] = GOTO 315
M [ 759 , <rel-expr> ] = GOTO 316
M [ 759 , <shift-expr> ] = GOTO 317
M [ 759 , <unary-expr> ] = GOTO 324
M [ 759 , <unary-op> ] = GOTO 325
M [ 759 , CHAR_CONST ] = SHIFT 326
M [ 759 , DELIM_LPAR ] = SHIFT 327
M [ 759 , FLOAT_CONST ] = SHIFT 328
M [ 759 , IDENTIFIER ] = SHIFT 329
M [ 759 , INT_CONST ] = SHIFT 330
M [ 759 , OP_ADD ] = SHIFT 135
M [ 759 , OP_AND ] = SHIFT 136
M [ 759 , OP_DEC ] = SHIFT 331
M [ 759 , OP_INC ] = SHIFT 332
M [ 759 , OP_LNOT ] = SHIFT 139
M [ 759 , OP_MUL ] = SHIFT 140
M [ 759 , OP_NOT ] = SHIFT 141
M [ 759 , OP_SUB ] = SHIFT 142
M [ 759 , STR_LITERAL ] = SHIFT 333
M [ 759 , sizeof ] = SHIFT 343
M [ 760 , <declarator> ] = GOTO 89
M [ 760 , <direct-declarator> ] = GOTO 90
M [ 760 , <init-declarator-list> ] = GOTO 1116
M [ 760 , <init-declarator> ] = GOTO 28
M [ 760 , <pointer> ] = GOTO 92
M [ 760 , DELIM_LPAR ] = SHIFT 93
M [ 760 , DELIM_SEMICOLON ] = SHIFT 1117
M [ 760 , IDENTIFIER ] = SHIFT 95
M [ 760 , OP_MUL ] = SHIFT 33
M [ 761 , <additive-expr> ] = GOTO 96
M [ 761 , <and-expr> ] = GOTO 97
M [ 761 , <asn-expr> ] = GOTO 98
M [ 761 , <cast-expr> ] = GOTO 101
M [ 761 , <cond-expr> ] = GOTO 103
M [ 761 , <constant> ] = GOTO 104
M [ 761 , <eq-expr> ] = GOTO 107
M [ 761 , <exc-or-expr> ] = GOTO 108
M [ 761 , <expr> ] = GOTO 1118
M [ 761 , <inc-or-expr> ] = GOTO 111
M [ 761 , <land-expr> ] = GOTO 115
M [ 761 , <lor-expr> ] = GOTO 116
M [ 761 , <multiplicative-expr> ] = GOTO 117
M [ 761 , <num-const> ] = GOTO 118
M [ 761 , <postfix-expr> ] = GOTO 119
M [ 761 , <prim-expr> ] = GOTO 120
M [ 761 , <rel-expr> ] = GOTO 121
M [ 761 , <shift-expr> ] = GOTO 123
M [ 761 , <unary-expr> ] = GOTO 125
M [ 761 , <unary-op> ] = GOTO 126
M [ 761 , CHAR_CONST ] = SHIFT 127
M [ 761 , DELIM_LPAR ] = SHIFT 129
M [ 761 , DELIM_SEMICOLON ] = SHIFT 1119
M [ 761 , FLOAT_CONST ] = SHIFT 132
M [ 761 , IDENTIFIER ] = SHIFT 159
M [ 761 , INT_CONST ] = SHIFT 134
M [ 761 , OP_ADD ] = SHIFT 135
M [ 761 , OP_AND ] = SHIFT 136
M [ 761 , OP_DEC ] = SHIFT 137
M [ 761 , OP_INC ] = SHIFT 138
M [ 761 , OP_LNOT ] = SHIFT 139
M [ 761 , OP_MUL ] = SHIFT 140
M [ 761 , OP_NOT ] = SHIFT 141
M [ 761 , OP_SUB ] = SHIFT 142
M [ 761 , STR_LITERAL ] = SHIFT 143
M [ 761 , sizeof ] = SHIFT 153
M [ 762 , DELIM_COMMA ] = SHIFT 261
M [ 762 , DELIM_SEMICOLON ] = SHIFT 1120
M [ 763 , DELIM_RPAR ] = SHIFT 1121
M [ 764 , <additive-expr> ] = GOTO 96
M [ 764 , <and-expr> ] = GOTO 97
M [ 764 , <asn-expr> ] = GOTO 98
M [ 764 , <cast-expr> ] = GOTO 101
M [ 764 , <cond-expr> ] = GOTO 103
M [ 764 , <constant> ] = GOTO 104
M [ 764 , <eq-expr> ] = GOTO 107
M [ 764 , <exc-or-expr> ] = GOTO 108
M [ 764 , <expr> ] = GOTO 1122
M [ 764 , <inc-or-expr> ] = GOTO 111
M [ 764 , <land-expr> ] = GOTO 115
M [ 764 , <lor-expr> ] = GOTO 116
M [ 764 , <multiplicative-expr> ] = GOTO 117
M [ 764 , <num-const> ] = GOTO 118
M [ 764 , <postfix-expr> ] = GOTO 119
M [ 764 , <prim-expr> ] = GOTO 120
M [ 764 , <rel-expr> ] = GOTO 121
M [ 764 , <shift-expr> ] = GOTO 123
M [ 764 , <unary-expr> ] = GOTO 125
M [ 764 , <unary-op> ] = GOTO 126
M [ 764 , CHAR_CONST ] = SHIFT 127
M [ 764 , DELIM_LPAR ] = SHIFT 129
M [ 764 , DELIM_SEMICOLON ] = SHIFT 1123
M [ 764 , FLOAT_CONST ] = SHIFT 132
M [ 764 , IDENTIFIER ] = SHIFT 159
M [ 764 , INT_CONST ] = SHIFT 134
M [ 764 , OP_ADD ] = SHIFT 135
M [ 764 , OP_AND ] = SHIFT 136
M [ 764 , OP_DEC ] = SHIFT 137
M [ 764 , OP_INC ] = SHIFT 138
M [ 764 , OP_LNOT ] = SHIFT 139
M [ 764 , OP_MUL ] = SHIFT 140
M [ 764 , OP_NOT ] = SHIFT 141
M [ 764 , OP_SUB ] = SHIFT 142
M [ 764 , STR_LITERAL ] = SHIFT 143
M [ 764 , sizeof ] = SHIFT 153
M [ 765 , DELIM_COMMA ] = SHIFT 661
M [ 765 , DELIM_RPAR ] = SHIFT 1124
M [ 766 , CHAR_CONST ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , DELIM_LCURBRACE ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , DELIM_LPAR ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , DELIM_RCURBRACE ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , DELIM_SEMICOLON ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , FLOAT_CONST ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , IDENTIFIER ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , INT_CONST ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , OP_ADD ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , OP_AND ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , OP_DEC ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , OP_INC ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , OP_LNOT ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , OP_MUL ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , OP_NOT ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , OP_SUB ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , STR_LITERAL ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , break ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , case ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , char ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , const ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , continue ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , default ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , do ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , double ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , enum ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , float ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , for ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , goto ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , if ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , int ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , long ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , return ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , short ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , signed ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , sizeof ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , struct ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , switch ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , typedef ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , unsigned ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , void ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 766 , while ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 767 , DELIM_RPAR ] = SHIFT 1125
M [ 768 , DELIM_COMMA ] = SHIFT 661
M [ 768 , DELIM_RPAR ] = SHIFT 1126
M [ 769 , DELIM_COMMA ] = SHIFT 661
M [ 769 , DELIM_RPAR ] = SHIFT 1127
M [ 770 , <cast-expr> ] = GOTO 415
M [ 770 , <constant> ] = GOTO 528
M [ 770 , <multiplicative-expr> ] = GOTO 1128
M [ 770 , <num-const> ] = GOTO 529
M [ 770 , <postfix-expr> ] = GOTO 530
M [ 770 , <prim-expr> ] = GOTO 531
M [ 770 , <unary-expr> ] = GOTO 532
M [ 770 , <unary-op> ] = GOTO 533
M [ 770 , CHAR_CONST ] = SHIFT 534
M [ 770 , DELIM_LPAR ] = SHIFT 535
M [ 770 , FLOAT_CONST ] = SHIFT 536
M [ 770 , IDENTIFIER ] = SHIFT 537
M [ 770 , INT_CONST ] = SHIFT 538
M [ 770 , OP_ADD ] = SHIFT 135
M [ 770 , OP_AND ] = SHIFT 136
M [ 770 , OP_DEC ] = SHIFT 539
M [ 770 , OP_INC ] = SHIFT 540
M [ 770 , OP_LNOT ] = SHIFT 139
M [ 770 , OP_MUL ] = SHIFT 140
M [ 770 , OP_NOT ] = SHIFT 141
M [ 770 , OP_SUB ] = SHIFT 142
M [ 770 , STR_LITERAL ] = SHIFT 541
M [ 770 , sizeof ] = SHIFT 542
M [ 771 , <cast-expr> ] = GOTO 415
M [ 771 , <constant> ] = GOTO 528
M [ 771 , <multiplicative-expr> ] = GOTO 1129
M [ 771 , <num-const> ] = GOTO 529
M [ 771 , <postfix-expr> ] = GOTO 530
M [ 771 , <prim-expr> ] = GOTO 531
M [ 771 , <unary-expr> ] = GOTO 532
M [ 771 , <unary-op> ] = GOTO 533
M [ 771 , CHAR_CONST ] = SHIFT 534
M [ 771 , DELIM_LPAR ] = SHIFT 535
M [ 771 , FLOAT_CONST ] = SHIFT 536
M [ 771 , IDENTIFIER ] = SHIFT 537
M [ 771 , INT_CONST ] = SHIFT 538
M [ 771 , OP_ADD ] = SHIFT 135
M [ 771 , OP_AND ] = SHIFT 136
M [ 771 , OP_DEC ] = SHIFT 539
M [ 771 , OP_INC ] = SHIFT 540
M [ 771 , OP_LNOT ] = SHIFT 139
M [ 771 , OP_MUL ] = SHIFT 140
M [ 771 , OP_NOT ] = SHIFT 141
M [ 771 , OP_SUB ] = SHIFT 142
M [ 771 , STR_LITERAL ] = SHIFT 541
M [ 771 , sizeof ] = SHIFT 542
M [ 772 , <additive-expr> ] = GOTO 412
M [ 772 , <cast-expr> ] = GOTO 415
M [ 772 , <constant> ] = GOTO 528
M [ 772 , <eq-expr> ] = GOTO 1130
M [ 772 , <multiplicative-expr> ] = GOTO 428
M [ 772 , <num-const> ] = GOTO 529
M [ 772 , <postfix-expr> ] = GOTO 530
M [ 772 , <prim-expr> ] = GOTO 531
M [ 772 , <rel-expr> ] = GOTO 432
M [ 772 , <shift-expr> ] = GOTO 433
M [ 772 , <unary-expr> ] = GOTO 532
M [ 772 , <unary-op> ] = GOTO 533
M [ 772 , CHAR_CONST ] = SHIFT 534
M [ 772 , DELIM_LPAR ] = SHIFT 535
M [ 772 , FLOAT_CONST ] = SHIFT 536
M [ 772 , IDENTIFIER ] = SHIFT 537
M [ 772 , INT_CONST ] = SHIFT 538
M [ 772 , OP_ADD ] = SHIFT 135
M [ 772 , OP_AND ] = SHIFT 136
M [ 772 , OP_DEC ] = SHIFT 539
M [ 772 , OP_INC ] = SHIFT 540
M [ 772 , OP_LNOT ] = SHIFT 139
M [ 772 , OP_MUL ] = SHIFT 140
M [ 772 , OP_NOT ] = SHIFT 141
M [ 772 , OP_SUB ] = SHIFT 142
M [ 772 , STR_LITERAL ] = SHIFT 541
M [ 772 , sizeof ] = SHIFT 542
M [ 773 , DELIM_COMMA ] = REDUCE <initializer-list> -> <designation> <initializer> 
M [ 773 , DELIM_RCURBRACE ] = REDUCE <initializer-list> -> <designation> <initializer> 
M [ 774 , DELIM_LSQBRACKET ] = REDUCE <designator-list> -> <designator-list> <designator> 
M [ 774 , OP_ASN ] = REDUCE <designator-list> -> <designator-list> <designator> 
M [ 774 , OP_DOT ] = REDUCE <designator-list> -> <designator-list> <designator> 
M [ 775 , CHAR_CONST ] = REDUCE <designation> -> <designator-list> OP_ASN 
M [ 775 , DELIM_LCURBRACE ] = REDUCE <designation> -> <designator-list> OP_ASN 
M [ 775 , DELIM_LPAR ] = REDUCE <designation> -> <designator-list> OP_ASN 
M [ 775 , FLOAT_CONST ] = REDUCE <designation> -> <designator-list> OP_ASN 
M [ 775 , IDENTIFIER ] = REDUCE <designation> -> <designator-list> OP_ASN 
M [ 775 , INT_CONST ] = REDUCE <designation> -> <designator-list> OP_ASN 
M [ 775 , OP_ADD ] = REDUCE <designation> -> <designator-list> OP_ASN 
M [ 775 , OP_AND ] = REDUCE <designation> -> <designator-list> OP_ASN 
M [ 775 , OP_DEC ] = REDUCE <designation> -> <designator-list> OP_ASN 
M [ 775 , OP_INC ] = REDUCE <designation> -> <designator-list> OP_ASN 
M [ 775 , OP_LNOT ] = REDUCE <designation> -> <designator-list> OP_ASN 
M [ 775 , OP_MUL ] = REDUCE <designation> -> <designator-list> OP_ASN 
M [ 775 , OP_NOT ] = REDUCE <designation> -> <designator-list> OP_ASN 
M [ 775 , OP_SUB ] = REDUCE <designation> -> <designator-list> OP_ASN 
M [ 775 , STR_LITERAL ] = REDUCE <designation> -> <designator-list> OP_ASN 
M [ 775 , sizeof ] = REDUCE <designation> -> <designator-list> OP_ASN 
M [ 776 , <additive-expr> ] = GOTO 412
M [ 776 , <cast-expr> ] = GOTO 415
M [ 776 , <constant> ] = GOTO 528
M [ 776 , <multiplicative-expr> ] = GOTO 428
M [ 776 , <num-const> ] = GOTO 529
M [ 776 , <postfix-expr> ] = GOTO 530
M [ 776 , <prim-expr> ] = GOTO 531
M [ 776 , <rel-expr> ] = GOTO 1131
M [ 776 , <shift-expr> ] = GOTO 433
M [ 776 , <unary-expr> ] = GOTO 532
M [ 776 , <unary-op> ] = GOTO 533
M [ 776 , CHAR_CONST ] = SHIFT 534
M [ 776 , DELIM_LPAR ] = SHIFT 535
M [ 776 , FLOAT_CONST ] = SHIFT 536
M [ 776 , IDENTIFIER ] = SHIFT 537
M [ 776 , INT_CONST ] = SHIFT 538
M [ 776 , OP_ADD ] = SHIFT 135
M [ 776 , OP_AND ] = SHIFT 136
M [ 776 , OP_DEC ] = SHIFT 539
M [ 776 , OP_INC ] = SHIFT 540
M [ 776 , OP_LNOT ] = SHIFT 139
M [ 776 , OP_MUL ] = SHIFT 140
M [ 776 , OP_NOT ] = SHIFT 141
M [ 776 , OP_SUB ] = SHIFT 142
M [ 776 , STR_LITERAL ] = SHIFT 541
M [ 776 , sizeof ] = SHIFT 542
M [ 777 , <additive-expr> ] = GOTO 412
M [ 777 , <cast-expr> ] = GOTO 415
M [ 777 , <constant> ] = GOTO 528
M [ 777 , <multiplicative-expr> ] = GOTO 428
M [ 777 , <num-const> ] = GOTO 529
M [ 777 , <postfix-expr> ] = GOTO 530
M [ 777 , <prim-expr> ] = GOTO 531
M [ 777 , <rel-expr> ] = GOTO 1132
M [ 777 , <shift-expr> ] = GOTO 433
M [ 777 , <unary-expr> ] = GOTO 532
M [ 777 , <unary-op> ] = GOTO 533
M [ 777 , CHAR_CONST ] = SHIFT 534
M [ 777 , DELIM_LPAR ] = SHIFT 535
M [ 777 , FLOAT_CONST ] = SHIFT 536
M [ 777 , IDENTIFIER ] = SHIFT 537
M [ 777 , INT_CONST ] = SHIFT 538
M [ 777 , OP_ADD ] = SHIFT 135
M [ 777 , OP_AND ] = SHIFT 136
M [ 777 , OP_DEC ] = SHIFT 539
M [ 777 , OP_INC ] = SHIFT 540
M [ 777 , OP_LNOT ] = SHIFT 139
M [ 777 , OP_MUL ] = SHIFT 140
M [ 777 , OP_NOT ] = SHIFT 141
M [ 777 , OP_SUB ] = SHIFT 142
M [ 777 , STR_LITERAL ] = SHIFT 541
M [ 777 , sizeof ] = SHIFT 542
M [ 778 , <additive-expr> ] = GOTO 412
M [ 778 , <and-expr> ] = GOTO 1133
M [ 778 , <cast-expr> ] = GOTO 415
M [ 778 , <constant> ] = GOTO 528
M [ 778 , <eq-expr> ] = GOTO 421
M [ 778 , <multiplicative-expr> ] = GOTO 428
M [ 778 , <num-const> ] = GOTO 529
M [ 778 , <postfix-expr> ] = GOTO 530
M [ 778 , <prim-expr> ] = GOTO 531
M [ 778 , <rel-expr> ] = GOTO 432
M [ 778 , <shift-expr> ] = GOTO 433
M [ 778 , <unary-expr> ] = GOTO 532
M [ 778 , <unary-op> ] = GOTO 533
M [ 778 , CHAR_CONST ] = SHIFT 534
M [ 778 , DELIM_LPAR ] = SHIFT 535
M [ 778 , FLOAT_CONST ] = SHIFT 536
M [ 778 , IDENTIFIER ] = SHIFT 537
M [ 778 , INT_CONST ] = SHIFT 538
M [ 778 , OP_ADD ] = SHIFT 135
M [ 778 , OP_AND ] = SHIFT 136
M [ 778 , OP_DEC ] = SHIFT 539
M [ 778 , OP_INC ] = SHIFT 540
M [ 778 , OP_LNOT ] = SHIFT 139
M [ 778 , OP_MUL ] = SHIFT 140
M [ 778 , OP_NOT ] = SHIFT 141
M [ 778 , OP_SUB ] = SHIFT 142
M [ 778 , STR_LITERAL ] = SHIFT 541
M [ 778 , sizeof ] = SHIFT 542
M [ 779 , <additive-expr> ] = GOTO 412
M [ 779 , <and-expr> ] = GOTO 413
M [ 779 , <cast-expr> ] = GOTO 415
M [ 779 , <constant> ] = GOTO 528
M [ 779 , <eq-expr> ] = GOTO 421
M [ 779 , <exc-or-expr> ] = GOTO 1134
M [ 779 , <multiplicative-expr> ] = GOTO 428
M [ 779 , <num-const> ] = GOTO 529
M [ 779 , <postfix-expr> ] = GOTO 530
M [ 779 , <prim-expr> ] = GOTO 531
M [ 779 , <rel-expr> ] = GOTO 432
M [ 779 , <shift-expr> ] = GOTO 433
M [ 779 , <unary-expr> ] = GOTO 532
M [ 779 , <unary-op> ] = GOTO 533
M [ 779 , CHAR_CONST ] = SHIFT 534
M [ 779 , DELIM_LPAR ] = SHIFT 535
M [ 779 , FLOAT_CONST ] = SHIFT 536
M [ 779 , IDENTIFIER ] = SHIFT 537
M [ 779 , INT_CONST ] = SHIFT 538
M [ 779 , OP_ADD ] = SHIFT 135
M [ 779 , OP_AND ] = SHIFT 136
M [ 779 , OP_DEC ] = SHIFT 539
M [ 779 , OP_INC ] = SHIFT 540
M [ 779 , OP_LNOT ] = SHIFT 139
M [ 779 , OP_MUL ] = SHIFT 140
M [ 779 , OP_NOT ] = SHIFT 141
M [ 779 , OP_SUB ] = SHIFT 142
M [ 779 , STR_LITERAL ] = SHIFT 541
M [ 779 , sizeof ] = SHIFT 542
M [ 780 , <additive-expr> ] = GOTO 412
M [ 780 , <and-expr> ] = GOTO 413
M [ 780 , <asn-expr> ] = GOTO 414
M [ 780 , <cast-expr> ] = GOTO 415
M [ 780 , <cond-expr> ] = GOTO 416
M [ 780 , <constant> ] = GOTO 417
M [ 780 , <designation> ] = GOTO 1135
M [ 780 , <designator-list> ] = GOTO 419
M [ 780 , <designator> ] = GOTO 420
M [ 780 , <eq-expr> ] = GOTO 421
M [ 780 , <exc-or-expr> ] = GOTO 422
M [ 780 , <inc-or-expr> ] = GOTO 423
M [ 780 , <initializer> ] = GOTO 1136
M [ 780 , <land-expr> ] = GOTO 426
M [ 780 , <lor-expr> ] = GOTO 427
M [ 780 , <multiplicative-expr> ] = GOTO 428
M [ 780 , <num-const> ] = GOTO 429
M [ 780 , <postfix-expr> ] = GOTO 430
M [ 780 , <prim-expr> ] = GOTO 431
M [ 780 , <rel-expr> ] = GOTO 432
M [ 780 , <shift-expr> ] = GOTO 433
M [ 780 , <unary-expr> ] = GOTO 434
M [ 780 , <unary-op> ] = GOTO 435
M [ 780 , CHAR_CONST ] = SHIFT 436
M [ 780 , DELIM_LCURBRACE ] = SHIFT 437
M [ 780 , DELIM_LPAR ] = SHIFT 438
M [ 780 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 780 , DELIM_RCURBRACE ] = SHIFT 1137
M [ 780 , FLOAT_CONST ] = SHIFT 440
M [ 780 , IDENTIFIER ] = SHIFT 441
M [ 780 , INT_CONST ] = SHIFT 442
M [ 780 , OP_ADD ] = SHIFT 135
M [ 780 , OP_AND ] = SHIFT 136
M [ 780 , OP_DEC ] = SHIFT 443
M [ 780 , OP_DOT ] = SHIFT 444
M [ 780 , OP_INC ] = SHIFT 445
M [ 780 , OP_LNOT ] = SHIFT 139
M [ 780 , OP_MUL ] = SHIFT 140
M [ 780 , OP_NOT ] = SHIFT 141
M [ 780 , OP_SUB ] = SHIFT 142
M [ 780 , STR_LITERAL ] = SHIFT 446
M [ 780 , sizeof ] = SHIFT 447
M [ 781 , DELIM_COMMA ] = REDUCE <initializer> -> DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 781 , DELIM_SEMICOLON ] = REDUCE <initializer> -> DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 782 , <additive-expr> ] = GOTO 412
M [ 782 , <and-expr> ] = GOTO 413
M [ 782 , <cast-expr> ] = GOTO 415
M [ 782 , <constant> ] = GOTO 528
M [ 782 , <eq-expr> ] = GOTO 421
M [ 782 , <exc-or-expr> ] = GOTO 422
M [ 782 , <inc-or-expr> ] = GOTO 1138
M [ 782 , <multiplicative-expr> ] = GOTO 428
M [ 782 , <num-const> ] = GOTO 529
M [ 782 , <postfix-expr> ] = GOTO 530
M [ 782 , <prim-expr> ] = GOTO 531
M [ 782 , <rel-expr> ] = GOTO 432
M [ 782 , <shift-expr> ] = GOTO 433
M [ 782 , <unary-expr> ] = GOTO 532
M [ 782 , <unary-op> ] = GOTO 533
M [ 782 , CHAR_CONST ] = SHIFT 534
M [ 782 , DELIM_LPAR ] = SHIFT 535
M [ 782 , FLOAT_CONST ] = SHIFT 536
M [ 782 , IDENTIFIER ] = SHIFT 537
M [ 782 , INT_CONST ] = SHIFT 538
M [ 782 , OP_ADD ] = SHIFT 135
M [ 782 , OP_AND ] = SHIFT 136
M [ 782 , OP_DEC ] = SHIFT 539
M [ 782 , OP_INC ] = SHIFT 540
M [ 782 , OP_LNOT ] = SHIFT 139
M [ 782 , OP_MUL ] = SHIFT 140
M [ 782 , OP_NOT ] = SHIFT 141
M [ 782 , OP_SUB ] = SHIFT 142
M [ 782 , STR_LITERAL ] = SHIFT 541
M [ 782 , sizeof ] = SHIFT 542
M [ 783 , <additive-expr> ] = GOTO 579
M [ 783 , <and-expr> ] = GOTO 580
M [ 783 , <asn-expr> ] = GOTO 581
M [ 783 , <cast-expr> ] = GOTO 582
M [ 783 , <cond-expr> ] = GOTO 583
M [ 783 , <constant> ] = GOTO 584
M [ 783 , <eq-expr> ] = GOTO 585
M [ 783 , <exc-or-expr> ] = GOTO 586
M [ 783 , <expr> ] = GOTO 1139
M [ 783 , <inc-or-expr> ] = GOTO 588
M [ 783 , <land-expr> ] = GOTO 589
M [ 783 , <lor-expr> ] = GOTO 590
M [ 783 , <multiplicative-expr> ] = GOTO 591
M [ 783 , <num-const> ] = GOTO 592
M [ 783 , <postfix-expr> ] = GOTO 593
M [ 783 , <prim-expr> ] = GOTO 594
M [ 783 , <rel-expr> ] = GOTO 595
M [ 783 , <shift-expr> ] = GOTO 596
M [ 783 , <unary-expr> ] = GOTO 597
M [ 783 , <unary-op> ] = GOTO 598
M [ 783 , CHAR_CONST ] = SHIFT 599
M [ 783 , DELIM_LPAR ] = SHIFT 600
M [ 783 , FLOAT_CONST ] = SHIFT 601
M [ 783 , IDENTIFIER ] = SHIFT 602
M [ 783 , INT_CONST ] = SHIFT 603
M [ 783 , OP_ADD ] = SHIFT 135
M [ 783 , OP_AND ] = SHIFT 136
M [ 783 , OP_DEC ] = SHIFT 604
M [ 783 , OP_INC ] = SHIFT 605
M [ 783 , OP_LNOT ] = SHIFT 139
M [ 783 , OP_MUL ] = SHIFT 140
M [ 783 , OP_NOT ] = SHIFT 141
M [ 783 , OP_SUB ] = SHIFT 142
M [ 783 , STR_LITERAL ] = SHIFT 606
M [ 783 , sizeof ] = SHIFT 607
M [ 784 , <additive-expr> ] = GOTO 412
M [ 784 , <and-expr> ] = GOTO 413
M [ 784 , <cast-expr> ] = GOTO 415
M [ 784 , <constant> ] = GOTO 528
M [ 784 , <eq-expr> ] = GOTO 421
M [ 784 , <exc-or-expr> ] = GOTO 422
M [ 784 , <inc-or-expr> ] = GOTO 423
M [ 784 , <land-expr> ] = GOTO 1140
M [ 784 , <multiplicative-expr> ] = GOTO 428
M [ 784 , <num-const> ] = GOTO 529
M [ 784 , <postfix-expr> ] = GOTO 530
M [ 784 , <prim-expr> ] = GOTO 531
M [ 784 , <rel-expr> ] = GOTO 432
M [ 784 , <shift-expr> ] = GOTO 433
M [ 784 , <unary-expr> ] = GOTO 532
M [ 784 , <unary-op> ] = GOTO 533
M [ 784 , CHAR_CONST ] = SHIFT 534
M [ 784 , DELIM_LPAR ] = SHIFT 535
M [ 784 , FLOAT_CONST ] = SHIFT 536
M [ 784 , IDENTIFIER ] = SHIFT 537
M [ 784 , INT_CONST ] = SHIFT 538
M [ 784 , OP_ADD ] = SHIFT 135
M [ 784 , OP_AND ] = SHIFT 136
M [ 784 , OP_DEC ] = SHIFT 539
M [ 784 , OP_INC ] = SHIFT 540
M [ 784 , OP_LNOT ] = SHIFT 139
M [ 784 , OP_MUL ] = SHIFT 140
M [ 784 , OP_NOT ] = SHIFT 141
M [ 784 , OP_SUB ] = SHIFT 142
M [ 784 , STR_LITERAL ] = SHIFT 541
M [ 784 , sizeof ] = SHIFT 542
M [ 785 , <cast-expr> ] = GOTO 1141
M [ 785 , <constant> ] = GOTO 528
M [ 785 , <num-const> ] = GOTO 529
M [ 785 , <postfix-expr> ] = GOTO 530
M [ 785 , <prim-expr> ] = GOTO 531
M [ 785 , <unary-expr> ] = GOTO 532
M [ 785 , <unary-op> ] = GOTO 533
M [ 785 , CHAR_CONST ] = SHIFT 534
M [ 785 , DELIM_LPAR ] = SHIFT 535
M [ 785 , FLOAT_CONST ] = SHIFT 536
M [ 785 , IDENTIFIER ] = SHIFT 537
M [ 785 , INT_CONST ] = SHIFT 538
M [ 785 , OP_ADD ] = SHIFT 135
M [ 785 , OP_AND ] = SHIFT 136
M [ 785 , OP_DEC ] = SHIFT 539
M [ 785 , OP_INC ] = SHIFT 540
M [ 785 , OP_LNOT ] = SHIFT 139
M [ 785 , OP_MUL ] = SHIFT 140
M [ 785 , OP_NOT ] = SHIFT 141
M [ 785 , OP_SUB ] = SHIFT 142
M [ 785 , STR_LITERAL ] = SHIFT 541
M [ 785 , sizeof ] = SHIFT 542
M [ 786 , <cast-expr> ] = GOTO 1142
M [ 786 , <constant> ] = GOTO 528
M [ 786 , <num-const> ] = GOTO 529
M [ 786 , <postfix-expr> ] = GOTO 530
M [ 786 , <prim-expr> ] = GOTO 531
M [ 786 , <unary-expr> ] = GOTO 532
M [ 786 , <unary-op> ] = GOTO 533
M [ 786 , CHAR_CONST ] = SHIFT 534
M [ 786 , DELIM_LPAR ] = SHIFT 535
M [ 786 , FLOAT_CONST ] = SHIFT 536
M [ 786 , IDENTIFIER ] = SHIFT 537
M [ 786 , INT_CONST ] = SHIFT 538
M [ 786 , OP_ADD ] = SHIFT 135
M [ 786 , OP_AND ] = SHIFT 136
M [ 786 , OP_DEC ] = SHIFT 539
M [ 786 , OP_INC ] = SHIFT 540
M [ 786 , OP_LNOT ] = SHIFT 139
M [ 786 , OP_MUL ] = SHIFT 140
M [ 786 , OP_NOT ] = SHIFT 141
M [ 786 , OP_SUB ] = SHIFT 142
M [ 786 , STR_LITERAL ] = SHIFT 541
M [ 786 , sizeof ] = SHIFT 542
M [ 787 , <cast-expr> ] = GOTO 1143
M [ 787 , <constant> ] = GOTO 528
M [ 787 , <num-const> ] = GOTO 529
M [ 787 , <postfix-expr> ] = GOTO 530
M [ 787 , <prim-expr> ] = GOTO 531
M [ 787 , <unary-expr> ] = GOTO 532
M [ 787 , <unary-op> ] = GOTO 533
M [ 787 , CHAR_CONST ] = SHIFT 534
M [ 787 , DELIM_LPAR ] = SHIFT 535
M [ 787 , FLOAT_CONST ] = SHIFT 536
M [ 787 , IDENTIFIER ] = SHIFT 537
M [ 787 , INT_CONST ] = SHIFT 538
M [ 787 , OP_ADD ] = SHIFT 135
M [ 787 , OP_AND ] = SHIFT 136
M [ 787 , OP_DEC ] = SHIFT 539
M [ 787 , OP_INC ] = SHIFT 540
M [ 787 , OP_LNOT ] = SHIFT 139
M [ 787 , OP_MUL ] = SHIFT 140
M [ 787 , OP_NOT ] = SHIFT 141
M [ 787 , OP_SUB ] = SHIFT 142
M [ 787 , STR_LITERAL ] = SHIFT 541
M [ 787 , sizeof ] = SHIFT 542
M [ 788 , <additive-expr> ] = GOTO 299
M [ 788 , <and-expr> ] = GOTO 300
M [ 788 , <arg-expr-list> ] = GOTO 1144
M [ 788 , <asn-expr> ] = GOTO 613
M [ 788 , <cast-expr> ] = GOTO 302
M [ 788 , <cond-expr> ] = GOTO 303
M [ 788 , <constant> ] = GOTO 304
M [ 788 , <eq-expr> ] = GOTO 306
M [ 788 , <exc-or-expr> ] = GOTO 307
M [ 788 , <inc-or-expr> ] = GOTO 309
M [ 788 , <land-expr> ] = GOTO 310
M [ 788 , <lor-expr> ] = GOTO 311
M [ 788 , <multiplicative-expr> ] = GOTO 312
M [ 788 , <num-const> ] = GOTO 313
M [ 788 , <postfix-expr> ] = GOTO 314
M [ 788 , <prim-expr> ] = GOTO 315
M [ 788 , <rel-expr> ] = GOTO 316
M [ 788 , <shift-expr> ] = GOTO 317
M [ 788 , <unary-expr> ] = GOTO 324
M [ 788 , <unary-op> ] = GOTO 325
M [ 788 , CHAR_CONST ] = SHIFT 326
M [ 788 , DELIM_LPAR ] = SHIFT 327
M [ 788 , DELIM_RPAR ] = SHIFT 1145
M [ 788 , FLOAT_CONST ] = SHIFT 328
M [ 788 , IDENTIFIER ] = SHIFT 329
M [ 788 , INT_CONST ] = SHIFT 330
M [ 788 , OP_ADD ] = SHIFT 135
M [ 788 , OP_AND ] = SHIFT 136
M [ 788 , OP_DEC ] = SHIFT 331
M [ 788 , OP_INC ] = SHIFT 332
M [ 788 , OP_LNOT ] = SHIFT 139
M [ 788 , OP_MUL ] = SHIFT 140
M [ 788 , OP_NOT ] = SHIFT 141
M [ 788 , OP_SUB ] = SHIFT 142
M [ 788 , STR_LITERAL ] = SHIFT 333
M [ 788 , sizeof ] = SHIFT 343
M [ 789 , <additive-expr> ] = GOTO 615
M [ 789 , <and-expr> ] = GOTO 616
M [ 789 , <asn-expr> ] = GOTO 617
M [ 789 , <cast-expr> ] = GOTO 618
M [ 789 , <cond-expr> ] = GOTO 619
M [ 789 , <constant> ] = GOTO 620
M [ 789 , <eq-expr> ] = GOTO 621
M [ 789 , <exc-or-expr> ] = GOTO 622
M [ 789 , <expr> ] = GOTO 1146
M [ 789 , <inc-or-expr> ] = GOTO 624
M [ 789 , <land-expr> ] = GOTO 625
M [ 789 , <lor-expr> ] = GOTO 626
M [ 789 , <multiplicative-expr> ] = GOTO 627
M [ 789 , <num-const> ] = GOTO 628
M [ 789 , <postfix-expr> ] = GOTO 629
M [ 789 , <prim-expr> ] = GOTO 630
M [ 789 , <rel-expr> ] = GOTO 631
M [ 789 , <shift-expr> ] = GOTO 632
M [ 789 , <unary-expr> ] = GOTO 633
M [ 789 , <unary-op> ] = GOTO 634
M [ 789 , CHAR_CONST ] = SHIFT 635
M [ 789 , DELIM_LPAR ] = SHIFT 636
M [ 789 , FLOAT_CONST ] = SHIFT 637
M [ 789 , IDENTIFIER ] = SHIFT 638
M [ 789 , INT_CONST ] = SHIFT 639
M [ 789 , OP_ADD ] = SHIFT 135
M [ 789 , OP_AND ] = SHIFT 136
M [ 789 , OP_DEC ] = SHIFT 640
M [ 789 , OP_INC ] = SHIFT 641
M [ 789 , OP_LNOT ] = SHIFT 139
M [ 789 , OP_MUL ] = SHIFT 140
M [ 789 , OP_NOT ] = SHIFT 141
M [ 789 , OP_SUB ] = SHIFT 142
M [ 789 , STR_LITERAL ] = SHIFT 642
M [ 789 , sizeof ] = SHIFT 643
M [ 790 , IDENTIFIER ] = SHIFT 1147
M [ 791 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , DELIM_RCURBRACE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 791 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 792 , IDENTIFIER ] = SHIFT 1148
M [ 793 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , DELIM_RCURBRACE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 793 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 794 , <additive-expr> ] = GOTO 412
M [ 794 , <cast-expr> ] = GOTO 415
M [ 794 , <constant> ] = GOTO 528
M [ 794 , <multiplicative-expr> ] = GOTO 428
M [ 794 , <num-const> ] = GOTO 529
M [ 794 , <postfix-expr> ] = GOTO 530
M [ 794 , <prim-expr> ] = GOTO 531
M [ 794 , <shift-expr> ] = GOTO 1149
M [ 794 , <unary-expr> ] = GOTO 532
M [ 794 , <unary-op> ] = GOTO 533
M [ 794 , CHAR_CONST ] = SHIFT 534
M [ 794 , DELIM_LPAR ] = SHIFT 535
M [ 794 , FLOAT_CONST ] = SHIFT 536
M [ 794 , IDENTIFIER ] = SHIFT 537
M [ 794 , INT_CONST ] = SHIFT 538
M [ 794 , OP_ADD ] = SHIFT 135
M [ 794 , OP_AND ] = SHIFT 136
M [ 794 , OP_DEC ] = SHIFT 539
M [ 794 , OP_INC ] = SHIFT 540
M [ 794 , OP_LNOT ] = SHIFT 139
M [ 794 , OP_MUL ] = SHIFT 140
M [ 794 , OP_NOT ] = SHIFT 141
M [ 794 , OP_SUB ] = SHIFT 142
M [ 794 , STR_LITERAL ] = SHIFT 541
M [ 794 , sizeof ] = SHIFT 542
M [ 795 , <additive-expr> ] = GOTO 412
M [ 795 , <cast-expr> ] = GOTO 415
M [ 795 , <constant> ] = GOTO 528
M [ 795 , <multiplicative-expr> ] = GOTO 428
M [ 795 , <num-const> ] = GOTO 529
M [ 795 , <postfix-expr> ] = GOTO 530
M [ 795 , <prim-expr> ] = GOTO 531
M [ 795 , <shift-expr> ] = GOTO 1150
M [ 795 , <unary-expr> ] = GOTO 532
M [ 795 , <unary-op> ] = GOTO 533
M [ 795 , CHAR_CONST ] = SHIFT 534
M [ 795 , DELIM_LPAR ] = SHIFT 535
M [ 795 , FLOAT_CONST ] = SHIFT 536
M [ 795 , IDENTIFIER ] = SHIFT 537
M [ 795 , INT_CONST ] = SHIFT 538
M [ 795 , OP_ADD ] = SHIFT 135
M [ 795 , OP_AND ] = SHIFT 136
M [ 795 , OP_DEC ] = SHIFT 539
M [ 795 , OP_INC ] = SHIFT 540
M [ 795 , OP_LNOT ] = SHIFT 139
M [ 795 , OP_MUL ] = SHIFT 140
M [ 795 , OP_NOT ] = SHIFT 141
M [ 795 , OP_SUB ] = SHIFT 142
M [ 795 , STR_LITERAL ] = SHIFT 541
M [ 795 , sizeof ] = SHIFT 542
M [ 796 , <additive-expr> ] = GOTO 412
M [ 796 , <cast-expr> ] = GOTO 415
M [ 796 , <constant> ] = GOTO 528
M [ 796 , <multiplicative-expr> ] = GOTO 428
M [ 796 , <num-const> ] = GOTO 529
M [ 796 , <postfix-expr> ] = GOTO 530
M [ 796 , <prim-expr> ] = GOTO 531
M [ 796 , <shift-expr> ] = GOTO 1151
M [ 796 , <unary-expr> ] = GOTO 532
M [ 796 , <unary-op> ] = GOTO 533
M [ 796 , CHAR_CONST ] = SHIFT 534
M [ 796 , DELIM_LPAR ] = SHIFT 535
M [ 796 , FLOAT_CONST ] = SHIFT 536
M [ 796 , IDENTIFIER ] = SHIFT 537
M [ 796 , INT_CONST ] = SHIFT 538
M [ 796 , OP_ADD ] = SHIFT 135
M [ 796 , OP_AND ] = SHIFT 136
M [ 796 , OP_DEC ] = SHIFT 539
M [ 796 , OP_INC ] = SHIFT 540
M [ 796 , OP_LNOT ] = SHIFT 139
M [ 796 , OP_MUL ] = SHIFT 140
M [ 796 , OP_NOT ] = SHIFT 141
M [ 796 , OP_SUB ] = SHIFT 142
M [ 796 , STR_LITERAL ] = SHIFT 541
M [ 796 , sizeof ] = SHIFT 542
M [ 797 , <additive-expr> ] = GOTO 412
M [ 797 , <cast-expr> ] = GOTO 415
M [ 797 , <constant> ] = GOTO 528
M [ 797 , <multiplicative-expr> ] = GOTO 428
M [ 797 , <num-const> ] = GOTO 529
M [ 797 , <postfix-expr> ] = GOTO 530
M [ 797 , <prim-expr> ] = GOTO 531
M [ 797 , <shift-expr> ] = GOTO 1152
M [ 797 , <unary-expr> ] = GOTO 532
M [ 797 , <unary-op> ] = GOTO 533
M [ 797 , CHAR_CONST ] = SHIFT 534
M [ 797 , DELIM_LPAR ] = SHIFT 535
M [ 797 , FLOAT_CONST ] = SHIFT 536
M [ 797 , IDENTIFIER ] = SHIFT 537
M [ 797 , INT_CONST ] = SHIFT 538
M [ 797 , OP_ADD ] = SHIFT 135
M [ 797 , OP_AND ] = SHIFT 136
M [ 797 , OP_DEC ] = SHIFT 539
M [ 797 , OP_INC ] = SHIFT 540
M [ 797 , OP_LNOT ] = SHIFT 139
M [ 797 , OP_MUL ] = SHIFT 140
M [ 797 , OP_NOT ] = SHIFT 141
M [ 797 , OP_SUB ] = SHIFT 142
M [ 797 , STR_LITERAL ] = SHIFT 541
M [ 797 , sizeof ] = SHIFT 542
M [ 798 , <additive-expr> ] = GOTO 1153
M [ 798 , <cast-expr> ] = GOTO 415
M [ 798 , <constant> ] = GOTO 528
M [ 798 , <multiplicative-expr> ] = GOTO 428
M [ 798 , <num-const> ] = GOTO 529
M [ 798 , <postfix-expr> ] = GOTO 530
M [ 798 , <prim-expr> ] = GOTO 531
M [ 798 , <unary-expr> ] = GOTO 532
M [ 798 , <unary-op> ] = GOTO 533
M [ 798 , CHAR_CONST ] = SHIFT 534
M [ 798 , DELIM_LPAR ] = SHIFT 535
M [ 798 , FLOAT_CONST ] = SHIFT 536
M [ 798 , IDENTIFIER ] = SHIFT 537
M [ 798 , INT_CONST ] = SHIFT 538
M [ 798 , OP_ADD ] = SHIFT 135
M [ 798 , OP_AND ] = SHIFT 136
M [ 798 , OP_DEC ] = SHIFT 539
M [ 798 , OP_INC ] = SHIFT 540
M [ 798 , OP_LNOT ] = SHIFT 139
M [ 798 , OP_MUL ] = SHIFT 140
M [ 798 , OP_NOT ] = SHIFT 141
M [ 798 , OP_SUB ] = SHIFT 142
M [ 798 , STR_LITERAL ] = SHIFT 541
M [ 798 , sizeof ] = SHIFT 542
M [ 799 , <additive-expr> ] = GOTO 1154
M [ 799 , <cast-expr> ] = GOTO 415
M [ 799 , <constant> ] = GOTO 528
M [ 799 , <multiplicative-expr> ] = GOTO 428
M [ 799 , <num-const> ] = GOTO 529
M [ 799 , <postfix-expr> ] = GOTO 530
M [ 799 , <prim-expr> ] = GOTO 531
M [ 799 , <unary-expr> ] = GOTO 532
M [ 799 , <unary-op> ] = GOTO 533
M [ 799 , CHAR_CONST ] = SHIFT 534
M [ 799 , DELIM_LPAR ] = SHIFT 535
M [ 799 , FLOAT_CONST ] = SHIFT 536
M [ 799 , IDENTIFIER ] = SHIFT 537
M [ 799 , INT_CONST ] = SHIFT 538
M [ 799 , OP_ADD ] = SHIFT 135
M [ 799 , OP_AND ] = SHIFT 136
M [ 799 , OP_DEC ] = SHIFT 539
M [ 799 , OP_INC ] = SHIFT 540
M [ 799 , OP_LNOT ] = SHIFT 139
M [ 799 , OP_MUL ] = SHIFT 140
M [ 799 , OP_NOT ] = SHIFT 141
M [ 799 , OP_SUB ] = SHIFT 142
M [ 799 , STR_LITERAL ] = SHIFT 541
M [ 799 , sizeof ] = SHIFT 542
M [ 800 , <additive-expr> ] = GOTO 412
M [ 800 , <and-expr> ] = GOTO 413
M [ 800 , <asn-expr> ] = GOTO 1155
M [ 800 , <cast-expr> ] = GOTO 415
M [ 800 , <cond-expr> ] = GOTO 416
M [ 800 , <constant> ] = GOTO 417
M [ 800 , <eq-expr> ] = GOTO 421
M [ 800 , <exc-or-expr> ] = GOTO 422
M [ 800 , <inc-or-expr> ] = GOTO 423
M [ 800 , <land-expr> ] = GOTO 426
M [ 800 , <lor-expr> ] = GOTO 427
M [ 800 , <multiplicative-expr> ] = GOTO 428
M [ 800 , <num-const> ] = GOTO 429
M [ 800 , <postfix-expr> ] = GOTO 430
M [ 800 , <prim-expr> ] = GOTO 431
M [ 800 , <rel-expr> ] = GOTO 432
M [ 800 , <shift-expr> ] = GOTO 433
M [ 800 , <unary-expr> ] = GOTO 434
M [ 800 , <unary-op> ] = GOTO 435
M [ 800 , CHAR_CONST ] = SHIFT 436
M [ 800 , DELIM_LPAR ] = SHIFT 438
M [ 800 , FLOAT_CONST ] = SHIFT 440
M [ 800 , IDENTIFIER ] = SHIFT 441
M [ 800 , INT_CONST ] = SHIFT 442
M [ 800 , OP_ADD ] = SHIFT 135
M [ 800 , OP_AND ] = SHIFT 136
M [ 800 , OP_DEC ] = SHIFT 443
M [ 800 , OP_INC ] = SHIFT 445
M [ 800 , OP_LNOT ] = SHIFT 139
M [ 800 , OP_MUL ] = SHIFT 140
M [ 800 , OP_NOT ] = SHIFT 141
M [ 800 , OP_SUB ] = SHIFT 142
M [ 800 , STR_LITERAL ] = SHIFT 446
M [ 800 , sizeof ] = SHIFT 447
M [ 801 , DELIM_COMMA ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , DELIM_QUESTION ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , DELIM_RCURBRACE ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_ADD ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_ADDASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_AND ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_ANDASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_ASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_DIV ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_DIVASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_EQ ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_GE ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_GT ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_LAND ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_LE ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_LOR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_LT ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_MOD ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_MODASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_MUL ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_MULASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_NEQ ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_OR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_ORASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_SHL ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_SHLASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_SHR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_SHRASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_SUB ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_SUBASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_XOR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 801 , OP_XORASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 802 , DELIM_COMMA ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , DELIM_QUESTION ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , DELIM_RCURBRACE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_ADD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_ADDASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_AND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_ANDASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_ASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_DIV ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_DIVASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_EQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_GE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_GT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_LAND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_LE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_LOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_LT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_MOD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_MODASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_MUL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_MULASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_NEQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_OR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_ORASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_SHL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_SHLASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_SHR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_SHRASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_SUB ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_SUBASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_XOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 802 , OP_XORASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 803 , <additive-expr> ] = GOTO 299
M [ 803 , <and-expr> ] = GOTO 300
M [ 803 , <asn-expr> ] = GOTO 301
M [ 803 , <cast-expr> ] = GOTO 302
M [ 803 , <cond-expr> ] = GOTO 303
M [ 803 , <constant> ] = GOTO 304
M [ 803 , <enum-spec> ] = GOTO 305
M [ 803 , <eq-expr> ] = GOTO 306
M [ 803 , <exc-or-expr> ] = GOTO 307
M [ 803 , <expr> ] = GOTO 805
M [ 803 , <inc-or-expr> ] = GOTO 309
M [ 803 , <land-expr> ] = GOTO 310
M [ 803 , <lor-expr> ] = GOTO 311
M [ 803 , <multiplicative-expr> ] = GOTO 312
M [ 803 , <num-const> ] = GOTO 313
M [ 803 , <postfix-expr> ] = GOTO 314
M [ 803 , <prim-expr> ] = GOTO 315
M [ 803 , <rel-expr> ] = GOTO 316
M [ 803 , <shift-expr> ] = GOTO 317
M [ 803 , <spec-qual-list> ] = GOTO 318
M [ 803 , <struct-union-spec> ] = GOTO 319
M [ 803 , <struct-union> ] = GOTO 320
M [ 803 , <type-name> ] = GOTO 1156
M [ 803 , <type-qual> ] = GOTO 322
M [ 803 , <type-spec> ] = GOTO 323
M [ 803 , <unary-expr> ] = GOTO 324
M [ 803 , <unary-op> ] = GOTO 325
M [ 803 , CHAR_CONST ] = SHIFT 326
M [ 803 , DELIM_LPAR ] = SHIFT 327
M [ 803 , FLOAT_CONST ] = SHIFT 328
M [ 803 , IDENTIFIER ] = SHIFT 329
M [ 803 , INT_CONST ] = SHIFT 330
M [ 803 , OP_ADD ] = SHIFT 135
M [ 803 , OP_AND ] = SHIFT 136
M [ 803 , OP_DEC ] = SHIFT 331
M [ 803 , OP_INC ] = SHIFT 332
M [ 803 , OP_LNOT ] = SHIFT 139
M [ 803 , OP_MUL ] = SHIFT 140
M [ 803 , OP_NOT ] = SHIFT 141
M [ 803 , OP_SUB ] = SHIFT 142
M [ 803 , STR_LITERAL ] = SHIFT 333
M [ 803 , char ] = SHIFT 334
M [ 803 , const ] = SHIFT 335
M [ 803 , double ] = SHIFT 336
M [ 803 , enum ] = SHIFT 337
M [ 803 , float ] = SHIFT 338
M [ 803 , int ] = SHIFT 339
M [ 803 , long ] = SHIFT 340
M [ 803 , short ] = SHIFT 341
M [ 803 , signed ] = SHIFT 342
M [ 803 , sizeof ] = SHIFT 343
M [ 803 , struct ] = SHIFT 21
M [ 803 , unsigned ] = SHIFT 344
M [ 803 , void ] = SHIFT 345
M [ 804 , DELIM_COMMA ] = SHIFT 1157
M [ 804 , DELIM_RCURBRACE ] = SHIFT 1158
M [ 805 , DELIM_COMMA ] = SHIFT 661
M [ 805 , DELIM_RPAR ] = SHIFT 1159
M [ 806 , DELIM_RPAR ] = SHIFT 1160
M [ 807 , DELIM_RSQBRACKET ] = REDUCE <const-expr> -> <cond-expr> 
M [ 808 , DELIM_RSQBRACKET ] = SHIFT 1161
M [ 809 , DELIM_LPAR ] = REDUCE <prim-expr> -> <constant> 
M [ 809 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> <constant> 
M [ 809 , DELIM_QUESTION ] = REDUCE <prim-expr> -> <constant> 
M [ 809 , DELIM_RSQBRACKET ] = REDUCE <prim-expr> -> <constant> 
M [ 809 , OP_ADD ] = REDUCE <prim-expr> -> <constant> 
M [ 809 , OP_AND ] = REDUCE <prim-expr> -> <constant> 
M [ 809 , OP_ARROW ] = REDUCE <prim-expr> -> <constant> 
M [ 809 , OP_DEC ] = REDUCE <prim-expr> -> <constant> 
M [ 809 , OP_DIV ] = REDUCE <prim-expr> -> <constant> 
M [ 809 , OP_DOT ] = REDUCE <prim-expr> -> <constant> 
M [ 809 , OP_EQ ] = REDUCE <prim-expr> -> <constant> 
M [ 809 , OP_GE ] = REDUCE <prim-expr> -> <constant> 
M [ 809 , OP_GT ] = REDUCE <prim-expr> -> <constant> 
M [ 809 , OP_INC ] = REDUCE <prim-expr> -> <constant> 
M [ 809 , OP_LAND ] = REDUCE <prim-expr> -> <constant> 
M [ 809 , OP_LE ] = REDUCE <prim-expr> -> <constant> 
M [ 809 , OP_LOR ] = REDUCE <prim-expr> -> <constant> 
M [ 809 , OP_LT ] = REDUCE <prim-expr> -> <constant> 
M [ 809 , OP_MOD ] = REDUCE <prim-expr> -> <constant> 
M [ 809 , OP_MUL ] = REDUCE <prim-expr> -> <constant> 
M [ 809 , OP_NEQ ] = REDUCE <prim-expr> -> <constant> 
M [ 809 , OP_OR ] = REDUCE <prim-expr> -> <constant> 
M [ 809 , OP_SHL ] = REDUCE <prim-expr> -> <constant> 
M [ 809 , OP_SHR ] = REDUCE <prim-expr> -> <constant> 
M [ 809 , OP_SUB ] = REDUCE <prim-expr> -> <constant> 
M [ 809 , OP_XOR ] = REDUCE <prim-expr> -> <constant> 
M [ 810 , DELIM_LPAR ] = REDUCE <constant> -> <num-const> 
M [ 810 , DELIM_LSQBRACKET ] = REDUCE <constant> -> <num-const> 
M [ 810 , DELIM_QUESTION ] = REDUCE <constant> -> <num-const> 
M [ 810 , DELIM_RSQBRACKET ] = REDUCE <constant> -> <num-const> 
M [ 810 , OP_ADD ] = REDUCE <constant> -> <num-const> 
M [ 810 , OP_AND ] = REDUCE <constant> -> <num-const> 
M [ 810 , OP_ARROW ] = REDUCE <constant> -> <num-const> 
M [ 810 , OP_DEC ] = REDUCE <constant> -> <num-const> 
M [ 810 , OP_DIV ] = REDUCE <constant> -> <num-const> 
M [ 810 , OP_DOT ] = REDUCE <constant> -> <num-const> 
M [ 810 , OP_EQ ] = REDUCE <constant> -> <num-const> 
M [ 810 , OP_GE ] = REDUCE <constant> -> <num-const> 
M [ 810 , OP_GT ] = REDUCE <constant> -> <num-const> 
M [ 810 , OP_INC ] = REDUCE <constant> -> <num-const> 
M [ 810 , OP_LAND ] = REDUCE <constant> -> <num-const> 
M [ 810 , OP_LE ] = REDUCE <constant> -> <num-const> 
M [ 810 , OP_LOR ] = REDUCE <constant> -> <num-const> 
M [ 810 , OP_LT ] = REDUCE <constant> -> <num-const> 
M [ 810 , OP_MOD ] = REDUCE <constant> -> <num-const> 
M [ 810 , OP_MUL ] = REDUCE <constant> -> <num-const> 
M [ 810 , OP_NEQ ] = REDUCE <constant> -> <num-const> 
M [ 810 , OP_OR ] = REDUCE <constant> -> <num-const> 
M [ 810 , OP_SHL ] = REDUCE <constant> -> <num-const> 
M [ 810 , OP_SHR ] = REDUCE <constant> -> <num-const> 
M [ 810 , OP_SUB ] = REDUCE <constant> -> <num-const> 
M [ 810 , OP_XOR ] = REDUCE <constant> -> <num-const> 
M [ 811 , DELIM_LPAR ] = SHIFT 1162
M [ 811 , DELIM_LSQBRACKET ] = SHIFT 1163
M [ 811 , DELIM_QUESTION ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 811 , DELIM_RSQBRACKET ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 811 , OP_ADD ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 811 , OP_AND ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 811 , OP_ARROW ] = SHIFT 1164
M [ 811 , OP_DEC ] = SHIFT 1165
M [ 811 , OP_DIV ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 811 , OP_DOT ] = SHIFT 1166
M [ 811 , OP_EQ ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 811 , OP_GE ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 811 , OP_GT ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 811 , OP_INC ] = SHIFT 1167
M [ 811 , OP_LAND ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 811 , OP_LE ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 811 , OP_LOR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 811 , OP_LT ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 811 , OP_MOD ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 811 , OP_MUL ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 811 , OP_NEQ ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 811 , OP_OR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 811 , OP_SHL ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 811 , OP_SHR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 811 , OP_SUB ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 811 , OP_XOR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 812 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 812 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 812 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 812 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 812 , OP_ADD ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 812 , OP_AND ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 812 , OP_ARROW ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 812 , OP_DEC ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 812 , OP_DIV ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 812 , OP_DOT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 812 , OP_EQ ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 812 , OP_GE ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 812 , OP_GT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 812 , OP_INC ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 812 , OP_LAND ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 812 , OP_LE ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 812 , OP_LOR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 812 , OP_LT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 812 , OP_MOD ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 812 , OP_MUL ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 812 , OP_NEQ ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 812 , OP_OR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 812 , OP_SHL ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 812 , OP_SHR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 812 , OP_SUB ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 812 , OP_XOR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 813 , DELIM_QUESTION ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 813 , DELIM_RSQBRACKET ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 813 , OP_ADD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 813 , OP_AND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 813 , OP_DIV ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 813 , OP_EQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 813 , OP_GE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 813 , OP_GT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 813 , OP_LAND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 813 , OP_LE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 813 , OP_LOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 813 , OP_LT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 813 , OP_MOD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 813 , OP_MUL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 813 , OP_NEQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 813 , OP_OR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 813 , OP_SHL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 813 , OP_SHR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 813 , OP_SUB ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 813 , OP_XOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 814 , <cast-expr> ] = GOTO 1168
M [ 814 , <constant> ] = GOTO 809
M [ 814 , <num-const> ] = GOTO 810
M [ 814 , <postfix-expr> ] = GOTO 811
M [ 814 , <prim-expr> ] = GOTO 812
M [ 814 , <unary-expr> ] = GOTO 813
M [ 814 , <unary-op> ] = GOTO 814
M [ 814 , CHAR_CONST ] = SHIFT 815
M [ 814 , DELIM_LPAR ] = SHIFT 816
M [ 814 , FLOAT_CONST ] = SHIFT 817
M [ 814 , IDENTIFIER ] = SHIFT 818
M [ 814 , INT_CONST ] = SHIFT 819
M [ 814 , OP_ADD ] = SHIFT 135
M [ 814 , OP_AND ] = SHIFT 136
M [ 814 , OP_DEC ] = SHIFT 820
M [ 814 , OP_INC ] = SHIFT 821
M [ 814 , OP_LNOT ] = SHIFT 139
M [ 814 , OP_MUL ] = SHIFT 140
M [ 814 , OP_NOT ] = SHIFT 141
M [ 814 , OP_SUB ] = SHIFT 142
M [ 814 , STR_LITERAL ] = SHIFT 822
M [ 814 , sizeof ] = SHIFT 823
M [ 815 , DELIM_LPAR ] = REDUCE <constant> -> CHAR_CONST 
M [ 815 , DELIM_LSQBRACKET ] = REDUCE <constant> -> CHAR_CONST 
M [ 815 , DELIM_QUESTION ] = REDUCE <constant> -> CHAR_CONST 
M [ 815 , DELIM_RSQBRACKET ] = REDUCE <constant> -> CHAR_CONST 
M [ 815 , OP_ADD ] = REDUCE <constant> -> CHAR_CONST 
M [ 815 , OP_AND ] = REDUCE <constant> -> CHAR_CONST 
M [ 815 , OP_ARROW ] = REDUCE <constant> -> CHAR_CONST 
M [ 815 , OP_DEC ] = REDUCE <constant> -> CHAR_CONST 
M [ 815 , OP_DIV ] = REDUCE <constant> -> CHAR_CONST 
M [ 815 , OP_DOT ] = REDUCE <constant> -> CHAR_CONST 
M [ 815 , OP_EQ ] = REDUCE <constant> -> CHAR_CONST 
M [ 815 , OP_GE ] = REDUCE <constant> -> CHAR_CONST 
M [ 815 , OP_GT ] = REDUCE <constant> -> CHAR_CONST 
M [ 815 , OP_INC ] = REDUCE <constant> -> CHAR_CONST 
M [ 815 , OP_LAND ] = REDUCE <constant> -> CHAR_CONST 
M [ 815 , OP_LE ] = REDUCE <constant> -> CHAR_CONST 
M [ 815 , OP_LOR ] = REDUCE <constant> -> CHAR_CONST 
M [ 815 , OP_LT ] = REDUCE <constant> -> CHAR_CONST 
M [ 815 , OP_MOD ] = REDUCE <constant> -> CHAR_CONST 
M [ 815 , OP_MUL ] = REDUCE <constant> -> CHAR_CONST 
M [ 815 , OP_NEQ ] = REDUCE <constant> -> CHAR_CONST 
M [ 815 , OP_OR ] = REDUCE <constant> -> CHAR_CONST 
M [ 815 , OP_SHL ] = REDUCE <constant> -> CHAR_CONST 
M [ 815 , OP_SHR ] = REDUCE <constant> -> CHAR_CONST 
M [ 815 , OP_SUB ] = REDUCE <constant> -> CHAR_CONST 
M [ 815 , OP_XOR ] = REDUCE <constant> -> CHAR_CONST 
M [ 816 , <additive-expr> ] = GOTO 299
M [ 816 , <and-expr> ] = GOTO 300
M [ 816 , <asn-expr> ] = GOTO 301
M [ 816 , <cast-expr> ] = GOTO 302
M [ 816 , <cond-expr> ] = GOTO 303
M [ 816 , <constant> ] = GOTO 304
M [ 816 , <enum-spec> ] = GOTO 305
M [ 816 , <eq-expr> ] = GOTO 306
M [ 816 , <exc-or-expr> ] = GOTO 307
M [ 816 , <expr> ] = GOTO 1169
M [ 816 , <inc-or-expr> ] = GOTO 309
M [ 816 , <land-expr> ] = GOTO 310
M [ 816 , <lor-expr> ] = GOTO 311
M [ 816 , <multiplicative-expr> ] = GOTO 312
M [ 816 , <num-const> ] = GOTO 313
M [ 816 , <postfix-expr> ] = GOTO 314
M [ 816 , <prim-expr> ] = GOTO 315
M [ 816 , <rel-expr> ] = GOTO 316
M [ 816 , <shift-expr> ] = GOTO 317
M [ 816 , <spec-qual-list> ] = GOTO 318
M [ 816 , <struct-union-spec> ] = GOTO 319
M [ 816 , <struct-union> ] = GOTO 320
M [ 816 , <type-name> ] = GOTO 1170
M [ 816 , <type-qual> ] = GOTO 322
M [ 816 , <type-spec> ] = GOTO 323
M [ 816 , <unary-expr> ] = GOTO 324
M [ 816 , <unary-op> ] = GOTO 325
M [ 816 , CHAR_CONST ] = SHIFT 326
M [ 816 , DELIM_LPAR ] = SHIFT 327
M [ 816 , FLOAT_CONST ] = SHIFT 328
M [ 816 , IDENTIFIER ] = SHIFT 329
M [ 816 , INT_CONST ] = SHIFT 330
M [ 816 , OP_ADD ] = SHIFT 135
M [ 816 , OP_AND ] = SHIFT 136
M [ 816 , OP_DEC ] = SHIFT 331
M [ 816 , OP_INC ] = SHIFT 332
M [ 816 , OP_LNOT ] = SHIFT 139
M [ 816 , OP_MUL ] = SHIFT 140
M [ 816 , OP_NOT ] = SHIFT 141
M [ 816 , OP_SUB ] = SHIFT 142
M [ 816 , STR_LITERAL ] = SHIFT 333
M [ 816 , char ] = SHIFT 334
M [ 816 , const ] = SHIFT 335
M [ 816 , double ] = SHIFT 336
M [ 816 , enum ] = SHIFT 337
M [ 816 , float ] = SHIFT 338
M [ 816 , int ] = SHIFT 339
M [ 816 , long ] = SHIFT 340
M [ 816 , short ] = SHIFT 341
M [ 816 , signed ] = SHIFT 342
M [ 816 , sizeof ] = SHIFT 343
M [ 816 , struct ] = SHIFT 21
M [ 816 , unsigned ] = SHIFT 344
M [ 816 , void ] = SHIFT 345
M [ 817 , DELIM_LPAR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 817 , DELIM_LSQBRACKET ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 817 , DELIM_QUESTION ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 817 , DELIM_RSQBRACKET ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 817 , OP_ADD ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 817 , OP_AND ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 817 , OP_ARROW ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 817 , OP_DEC ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 817 , OP_DIV ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 817 , OP_DOT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 817 , OP_EQ ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 817 , OP_GE ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 817 , OP_GT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 817 , OP_INC ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 817 , OP_LAND ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 817 , OP_LE ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 817 , OP_LOR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 817 , OP_LT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 817 , OP_MOD ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 817 , OP_MUL ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 817 , OP_NEQ ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 817 , OP_OR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 817 , OP_SHL ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 817 , OP_SHR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 817 , OP_SUB ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 817 , OP_XOR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 818 , DELIM_LPAR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 818 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 818 , DELIM_QUESTION ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 818 , DELIM_RSQBRACKET ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 818 , OP_ADD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 818 , OP_AND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 818 , OP_ARROW ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 818 , OP_DEC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 818 , OP_DIV ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 818 , OP_DOT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 818 , OP_EQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 818 , OP_GE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 818 , OP_GT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 818 , OP_INC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 818 , OP_LAND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 818 , OP_LE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 818 , OP_LOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 818 , OP_LT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 818 , OP_MOD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 818 , OP_MUL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 818 , OP_NEQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 818 , OP_OR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 818 , OP_SHL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 818 , OP_SHR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 818 , OP_SUB ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 818 , OP_XOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 819 , DELIM_LPAR ] = REDUCE <num-const> -> INT_CONST 
M [ 819 , DELIM_LSQBRACKET ] = REDUCE <num-const> -> INT_CONST 
M [ 819 , DELIM_QUESTION ] = REDUCE <num-const> -> INT_CONST 
M [ 819 , DELIM_RSQBRACKET ] = REDUCE <num-const> -> INT_CONST 
M [ 819 , OP_ADD ] = REDUCE <num-const> -> INT_CONST 
M [ 819 , OP_AND ] = REDUCE <num-const> -> INT_CONST 
M [ 819 , OP_ARROW ] = REDUCE <num-const> -> INT_CONST 
M [ 819 , OP_DEC ] = REDUCE <num-const> -> INT_CONST 
M [ 819 , OP_DIV ] = REDUCE <num-const> -> INT_CONST 
M [ 819 , OP_DOT ] = REDUCE <num-const> -> INT_CONST 
M [ 819 , OP_EQ ] = REDUCE <num-const> -> INT_CONST 
M [ 819 , OP_GE ] = REDUCE <num-const> -> INT_CONST 
M [ 819 , OP_GT ] = REDUCE <num-const> -> INT_CONST 
M [ 819 , OP_INC ] = REDUCE <num-const> -> INT_CONST 
M [ 819 , OP_LAND ] = REDUCE <num-const> -> INT_CONST 
M [ 819 , OP_LE ] = REDUCE <num-const> -> INT_CONST 
M [ 819 , OP_LOR ] = REDUCE <num-const> -> INT_CONST 
M [ 819 , OP_LT ] = REDUCE <num-const> -> INT_CONST 
M [ 819 , OP_MOD ] = REDUCE <num-const> -> INT_CONST 
M [ 819 , OP_MUL ] = REDUCE <num-const> -> INT_CONST 
M [ 819 , OP_NEQ ] = REDUCE <num-const> -> INT_CONST 
M [ 819 , OP_OR ] = REDUCE <num-const> -> INT_CONST 
M [ 819 , OP_SHL ] = REDUCE <num-const> -> INT_CONST 
M [ 819 , OP_SHR ] = REDUCE <num-const> -> INT_CONST 
M [ 819 , OP_SUB ] = REDUCE <num-const> -> INT_CONST 
M [ 819 , OP_XOR ] = REDUCE <num-const> -> INT_CONST 
M [ 820 , <constant> ] = GOTO 809
M [ 820 , <num-const> ] = GOTO 810
M [ 820 , <postfix-expr> ] = GOTO 811
M [ 820 , <prim-expr> ] = GOTO 812
M [ 820 , <unary-expr> ] = GOTO 1171
M [ 820 , <unary-op> ] = GOTO 814
M [ 820 , CHAR_CONST ] = SHIFT 815
M [ 820 , DELIM_LPAR ] = SHIFT 1172
M [ 820 , FLOAT_CONST ] = SHIFT 817
M [ 820 , IDENTIFIER ] = SHIFT 818
M [ 820 , INT_CONST ] = SHIFT 819
M [ 820 , OP_ADD ] = SHIFT 135
M [ 820 , OP_AND ] = SHIFT 136
M [ 820 , OP_DEC ] = SHIFT 820
M [ 820 , OP_INC ] = SHIFT 821
M [ 820 , OP_LNOT ] = SHIFT 139
M [ 820 , OP_MUL ] = SHIFT 140
M [ 820 , OP_NOT ] = SHIFT 141
M [ 820 , OP_SUB ] = SHIFT 142
M [ 820 , STR_LITERAL ] = SHIFT 822
M [ 820 , sizeof ] = SHIFT 823
M [ 821 , <constant> ] = GOTO 809
M [ 821 , <num-const> ] = GOTO 810
M [ 821 , <postfix-expr> ] = GOTO 811
M [ 821 , <prim-expr> ] = GOTO 812
M [ 821 , <unary-expr> ] = GOTO 1173
M [ 821 , <unary-op> ] = GOTO 814
M [ 821 , CHAR_CONST ] = SHIFT 815
M [ 821 , DELIM_LPAR ] = SHIFT 1172
M [ 821 , FLOAT_CONST ] = SHIFT 817
M [ 821 , IDENTIFIER ] = SHIFT 818
M [ 821 , INT_CONST ] = SHIFT 819
M [ 821 , OP_ADD ] = SHIFT 135
M [ 821 , OP_AND ] = SHIFT 136
M [ 821 , OP_DEC ] = SHIFT 820
M [ 821 , OP_INC ] = SHIFT 821
M [ 821 , OP_LNOT ] = SHIFT 139
M [ 821 , OP_MUL ] = SHIFT 140
M [ 821 , OP_NOT ] = SHIFT 141
M [ 821 , OP_SUB ] = SHIFT 142
M [ 821 , STR_LITERAL ] = SHIFT 822
M [ 821 , sizeof ] = SHIFT 823
M [ 822 , DELIM_LPAR ] = REDUCE <constant> -> STR_LITERAL 
M [ 822 , DELIM_LSQBRACKET ] = REDUCE <constant> -> STR_LITERAL 
M [ 822 , DELIM_QUESTION ] = REDUCE <constant> -> STR_LITERAL 
M [ 822 , DELIM_RSQBRACKET ] = REDUCE <constant> -> STR_LITERAL 
M [ 822 , OP_ADD ] = REDUCE <constant> -> STR_LITERAL 
M [ 822 , OP_AND ] = REDUCE <constant> -> STR_LITERAL 
M [ 822 , OP_ARROW ] = REDUCE <constant> -> STR_LITERAL 
M [ 822 , OP_DEC ] = REDUCE <constant> -> STR_LITERAL 
M [ 822 , OP_DIV ] = REDUCE <constant> -> STR_LITERAL 
M [ 822 , OP_DOT ] = REDUCE <constant> -> STR_LITERAL 
M [ 822 , OP_EQ ] = REDUCE <constant> -> STR_LITERAL 
M [ 822 , OP_GE ] = REDUCE <constant> -> STR_LITERAL 
M [ 822 , OP_GT ] = REDUCE <constant> -> STR_LITERAL 
M [ 822 , OP_INC ] = REDUCE <constant> -> STR_LITERAL 
M [ 822 , OP_LAND ] = REDUCE <constant> -> STR_LITERAL 
M [ 822 , OP_LE ] = REDUCE <constant> -> STR_LITERAL 
M [ 822 , OP_LOR ] = REDUCE <constant> -> STR_LITERAL 
M [ 822 , OP_LT ] = REDUCE <constant> -> STR_LITERAL 
M [ 822 , OP_MOD ] = REDUCE <constant> -> STR_LITERAL 
M [ 822 , OP_MUL ] = REDUCE <constant> -> STR_LITERAL 
M [ 822 , OP_NEQ ] = REDUCE <constant> -> STR_LITERAL 
M [ 822 , OP_OR ] = REDUCE <constant> -> STR_LITERAL 
M [ 822 , OP_SHL ] = REDUCE <constant> -> STR_LITERAL 
M [ 822 , OP_SHR ] = REDUCE <constant> -> STR_LITERAL 
M [ 822 , OP_SUB ] = REDUCE <constant> -> STR_LITERAL 
M [ 822 , OP_XOR ] = REDUCE <constant> -> STR_LITERAL 
M [ 823 , <constant> ] = GOTO 809
M [ 823 , <num-const> ] = GOTO 810
M [ 823 , <postfix-expr> ] = GOTO 811
M [ 823 , <prim-expr> ] = GOTO 812
M [ 823 , <unary-expr> ] = GOTO 1174
M [ 823 , <unary-op> ] = GOTO 814
M [ 823 , CHAR_CONST ] = SHIFT 815
M [ 823 , DELIM_LPAR ] = SHIFT 1175
M [ 823 , FLOAT_CONST ] = SHIFT 817
M [ 823 , IDENTIFIER ] = SHIFT 818
M [ 823 , INT_CONST ] = SHIFT 819
M [ 823 , OP_ADD ] = SHIFT 135
M [ 823 , OP_AND ] = SHIFT 136
M [ 823 , OP_DEC ] = SHIFT 820
M [ 823 , OP_INC ] = SHIFT 821
M [ 823 , OP_LNOT ] = SHIFT 139
M [ 823 , OP_MUL ] = SHIFT 140
M [ 823 , OP_NOT ] = SHIFT 141
M [ 823 , OP_SUB ] = SHIFT 142
M [ 823 , STR_LITERAL ] = SHIFT 822
M [ 823 , sizeof ] = SHIFT 823
M [ 824 , DELIM_COMMA ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , DELIM_QUESTION ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , DELIM_RCURBRACE ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_ADD ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_ADDASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_AND ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_ANDASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_ASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_DIV ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_DIVASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_EQ ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_GE ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_GT ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_LAND ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_LE ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_LOR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_LT ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_MOD ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_MODASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_MUL ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_MULASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_NEQ ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_OR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_ORASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_SHL ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_SHLASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_SHR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_SHRASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_SUB ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_SUBASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_XOR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 824 , OP_XORASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 825 , <additive-expr> ] = GOTO 299
M [ 825 , <and-expr> ] = GOTO 300
M [ 825 , <asn-expr> ] = GOTO 301
M [ 825 , <cast-expr> ] = GOTO 302
M [ 825 , <cond-expr> ] = GOTO 303
M [ 825 , <constant> ] = GOTO 304
M [ 825 , <enum-spec> ] = GOTO 305
M [ 825 , <eq-expr> ] = GOTO 306
M [ 825 , <exc-or-expr> ] = GOTO 307
M [ 825 , <expr> ] = GOTO 805
M [ 825 , <inc-or-expr> ] = GOTO 309
M [ 825 , <land-expr> ] = GOTO 310
M [ 825 , <lor-expr> ] = GOTO 311
M [ 825 , <multiplicative-expr> ] = GOTO 312
M [ 825 , <num-const> ] = GOTO 313
M [ 825 , <postfix-expr> ] = GOTO 314
M [ 825 , <prim-expr> ] = GOTO 315
M [ 825 , <rel-expr> ] = GOTO 316
M [ 825 , <shift-expr> ] = GOTO 317
M [ 825 , <spec-qual-list> ] = GOTO 318
M [ 825 , <struct-union-spec> ] = GOTO 319
M [ 825 , <struct-union> ] = GOTO 320
M [ 825 , <type-name> ] = GOTO 1176
M [ 825 , <type-qual> ] = GOTO 322
M [ 825 , <type-spec> ] = GOTO 323
M [ 825 , <unary-expr> ] = GOTO 324
M [ 825 , <unary-op> ] = GOTO 325
M [ 825 , CHAR_CONST ] = SHIFT 326
M [ 825 , DELIM_LPAR ] = SHIFT 327
M [ 825 , FLOAT_CONST ] = SHIFT 328
M [ 825 , IDENTIFIER ] = SHIFT 329
M [ 825 , INT_CONST ] = SHIFT 330
M [ 825 , OP_ADD ] = SHIFT 135
M [ 825 , OP_AND ] = SHIFT 136
M [ 825 , OP_DEC ] = SHIFT 331
M [ 825 , OP_INC ] = SHIFT 332
M [ 825 , OP_LNOT ] = SHIFT 139
M [ 825 , OP_MUL ] = SHIFT 140
M [ 825 , OP_NOT ] = SHIFT 141
M [ 825 , OP_SUB ] = SHIFT 142
M [ 825 , STR_LITERAL ] = SHIFT 333
M [ 825 , char ] = SHIFT 334
M [ 825 , const ] = SHIFT 335
M [ 825 , double ] = SHIFT 336
M [ 825 , enum ] = SHIFT 337
M [ 825 , float ] = SHIFT 338
M [ 825 , int ] = SHIFT 339
M [ 825 , long ] = SHIFT 340
M [ 825 , short ] = SHIFT 341
M [ 825 , signed ] = SHIFT 342
M [ 825 , sizeof ] = SHIFT 343
M [ 825 , struct ] = SHIFT 21
M [ 825 , unsigned ] = SHIFT 344
M [ 825 , void ] = SHIFT 345
M [ 826 , DELIM_LSQBRACKET ] = REDUCE <designator> -> OP_DOT IDENTIFIER 
M [ 826 , OP_ASN ] = REDUCE <designator> -> OP_DOT IDENTIFIER 
M [ 826 , OP_DOT ] = REDUCE <designator> -> OP_DOT IDENTIFIER 
M [ 827 , DELIM_COMMA ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , DELIM_QUESTION ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , DELIM_RCURBRACE ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_ADD ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_ADDASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_AND ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_ANDASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_ASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_DIV ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_DIVASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_EQ ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_GE ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_GT ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_LAND ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_LE ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_LOR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_LT ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_MOD ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_MODASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_MUL ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_MULASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_NEQ ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_OR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_ORASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_SHL ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_SHLASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_SHR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_SHRASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_SUB ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_SUBASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_XOR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 827 , OP_XORASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 828 , DELIM_COMMA ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , DELIM_QUESTION ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , DELIM_RCURBRACE ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_ADD ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_ADDASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_AND ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_ANDASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_ASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_DIV ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_DIVASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_EQ ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_GE ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_GT ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_LAND ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_LE ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_LOR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_LT ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_MOD ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_MODASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_MUL ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_MULASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_NEQ ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_OR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_ORASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_SHL ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_SHLASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_SHR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_SHRASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_SUB ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_SUBASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_XOR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 828 , OP_XORASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 829 , <additive-expr> ] = GOTO 299
M [ 829 , <and-expr> ] = GOTO 300
M [ 829 , <asn-expr> ] = GOTO 301
M [ 829 , <cast-expr> ] = GOTO 302
M [ 829 , <cond-expr> ] = GOTO 303
M [ 829 , <constant> ] = GOTO 304
M [ 829 , <enum-spec> ] = GOTO 305
M [ 829 , <eq-expr> ] = GOTO 306
M [ 829 , <exc-or-expr> ] = GOTO 307
M [ 829 , <expr> ] = GOTO 805
M [ 829 , <inc-or-expr> ] = GOTO 309
M [ 829 , <land-expr> ] = GOTO 310
M [ 829 , <lor-expr> ] = GOTO 311
M [ 829 , <multiplicative-expr> ] = GOTO 312
M [ 829 , <num-const> ] = GOTO 313
M [ 829 , <postfix-expr> ] = GOTO 314
M [ 829 , <prim-expr> ] = GOTO 315
M [ 829 , <rel-expr> ] = GOTO 316
M [ 829 , <shift-expr> ] = GOTO 317
M [ 829 , <spec-qual-list> ] = GOTO 318
M [ 829 , <struct-union-spec> ] = GOTO 319
M [ 829 , <struct-union> ] = GOTO 320
M [ 829 , <type-name> ] = GOTO 1177
M [ 829 , <type-qual> ] = GOTO 322
M [ 829 , <type-spec> ] = GOTO 323
M [ 829 , <unary-expr> ] = GOTO 324
M [ 829 , <unary-op> ] = GOTO 325
M [ 829 , CHAR_CONST ] = SHIFT 326
M [ 829 , DELIM_LPAR ] = SHIFT 327
M [ 829 , FLOAT_CONST ] = SHIFT 328
M [ 829 , IDENTIFIER ] = SHIFT 329
M [ 829 , INT_CONST ] = SHIFT 330
M [ 829 , OP_ADD ] = SHIFT 135
M [ 829 , OP_AND ] = SHIFT 136
M [ 829 , OP_DEC ] = SHIFT 331
M [ 829 , OP_INC ] = SHIFT 332
M [ 829 , OP_LNOT ] = SHIFT 139
M [ 829 , OP_MUL ] = SHIFT 140
M [ 829 , OP_NOT ] = SHIFT 141
M [ 829 , OP_SUB ] = SHIFT 142
M [ 829 , STR_LITERAL ] = SHIFT 333
M [ 829 , char ] = SHIFT 334
M [ 829 , const ] = SHIFT 335
M [ 829 , double ] = SHIFT 336
M [ 829 , enum ] = SHIFT 337
M [ 829 , float ] = SHIFT 338
M [ 829 , int ] = SHIFT 339
M [ 829 , long ] = SHIFT 340
M [ 829 , short ] = SHIFT 341
M [ 829 , signed ] = SHIFT 342
M [ 829 , sizeof ] = SHIFT 343
M [ 829 , struct ] = SHIFT 21
M [ 829 , unsigned ] = SHIFT 344
M [ 829 , void ] = SHIFT 345
M [ 830 , <decl-spec> ] = GOTO 160
M [ 830 , <enum-spec> ] = GOTO 161
M [ 830 , <identifier-list> ] = GOTO 1178
M [ 830 , <param-decl> ] = GOTO 163
M [ 830 , <param-list> ] = GOTO 164
M [ 830 , <param-type-list> ] = GOTO 1179
M [ 830 , <storage-class-spec> ] = GOTO 166
M [ 830 , <struct-union-spec> ] = GOTO 167
M [ 830 , <struct-union> ] = GOTO 168
M [ 830 , <type-qual> ] = GOTO 169
M [ 830 , <type-spec> ] = GOTO 170
M [ 830 , DELIM_RPAR ] = SHIFT 1180
M [ 830 , IDENTIFIER ] = SHIFT 172
M [ 830 , char ] = SHIFT 173
M [ 830 , const ] = SHIFT 174
M [ 830 , double ] = SHIFT 175
M [ 830 , enum ] = SHIFT 176
M [ 830 , float ] = SHIFT 177
M [ 830 , int ] = SHIFT 178
M [ 830 , long ] = SHIFT 179
M [ 830 , short ] = SHIFT 180
M [ 830 , signed ] = SHIFT 181
M [ 830 , struct ] = SHIFT 21
M [ 830 , typedef ] = SHIFT 182
M [ 830 , unsigned ] = SHIFT 183
M [ 830 , void ] = SHIFT 184
M [ 831 , <additive-expr> ] = GOTO 185
M [ 831 , <and-expr> ] = GOTO 186
M [ 831 , <asn-expr> ] = GOTO 1181
M [ 831 , <cast-expr> ] = GOTO 188
M [ 831 , <cond-expr> ] = GOTO 189
M [ 831 , <constant> ] = GOTO 190
M [ 831 , <eq-expr> ] = GOTO 191
M [ 831 , <exc-or-expr> ] = GOTO 192
M [ 831 , <inc-or-expr> ] = GOTO 193
M [ 831 , <land-expr> ] = GOTO 194
M [ 831 , <lor-expr> ] = GOTO 195
M [ 831 , <multiplicative-expr> ] = GOTO 196
M [ 831 , <num-const> ] = GOTO 197
M [ 831 , <postfix-expr> ] = GOTO 198
M [ 831 , <prim-expr> ] = GOTO 199
M [ 831 , <rel-expr> ] = GOTO 200
M [ 831 , <shift-expr> ] = GOTO 201
M [ 831 , <type-qual-list> ] = GOTO 1182
M [ 831 , <type-qual> ] = GOTO 203
M [ 831 , <unary-expr> ] = GOTO 204
M [ 831 , <unary-op> ] = GOTO 205
M [ 831 , CHAR_CONST ] = SHIFT 206
M [ 831 , DELIM_LPAR ] = SHIFT 207
M [ 831 , DELIM_RSQBRACKET ] = SHIFT 1183
M [ 831 , FLOAT_CONST ] = SHIFT 209
M [ 831 , IDENTIFIER ] = SHIFT 210
M [ 831 , INT_CONST ] = SHIFT 211
M [ 831 , OP_ADD ] = SHIFT 135
M [ 831 , OP_AND ] = SHIFT 136
M [ 831 , OP_DEC ] = SHIFT 212
M [ 831 , OP_INC ] = SHIFT 213
M [ 831 , OP_LNOT ] = SHIFT 139
M [ 831 , OP_MUL ] = SHIFT 140
M [ 831 , OP_NOT ] = SHIFT 141
M [ 831 , OP_SUB ] = SHIFT 142
M [ 831 , STR_LITERAL ] = SHIFT 214
M [ 831 , const ] = SHIFT 215
M [ 831 , sizeof ] = SHIFT 216
M [ 832 , DELIM_COMMA ] = REDUCE <abstract-declarator> -> <pointer> <direct-abstract-declarator> 
M [ 832 , DELIM_RPAR ] = REDUCE <abstract-declarator> -> <pointer> <direct-abstract-declarator> 
M [ 833 , DELIM_COMMA ] = REDUCE <declarator> -> <pointer> <direct-declarator> 
M [ 833 , DELIM_LPAR ] = SHIFT 830
M [ 833 , DELIM_LSQBRACKET ] = SHIFT 831
M [ 833 , DELIM_RPAR ] = REDUCE <declarator> -> <pointer> <direct-declarator> 
M [ 834 , DELIM_RPAR ] = SHIFT 1184
M [ 835 , DELIM_RPAR ] = SHIFT 1185
M [ 836 , <direct-abstract-declarator> ] = GOTO 1054
M [ 836 , <direct-declarator> ] = GOTO 221
M [ 836 , DELIM_LPAR ] = SHIFT 837
M [ 836 , DELIM_LSQBRACKET ] = SHIFT 686
M [ 836 , DELIM_RPAR ] = REDUCE <abstract-declarator> -> <pointer> 
M [ 836 , IDENTIFIER ] = SHIFT 57
M [ 837 , <abstract-declarator> ] = GOTO 1055
M [ 837 , <declarator> ] = GOTO 222
M [ 837 , <direct-abstract-declarator> ] = GOTO 683
M [ 837 , <direct-declarator> ] = GOTO 54
M [ 837 , <pointer> ] = GOTO 836
M [ 837 , DELIM_LPAR ] = SHIFT 837
M [ 837 , DELIM_LSQBRACKET ] = SHIFT 686
M [ 837 , IDENTIFIER ] = SHIFT 57
M [ 837 , OP_MUL ] = SHIFT 838
M [ 838 , <pointer> ] = GOTO 1186
M [ 838 , <type-qual-list> ] = GOTO 1187
M [ 838 , <type-qual> ] = GOTO 1188
M [ 838 , DELIM_LPAR ] = REDUCE <pointer> -> OP_MUL 
M [ 838 , DELIM_LSQBRACKET ] = REDUCE <pointer> -> OP_MUL 
M [ 838 , DELIM_RPAR ] = REDUCE <pointer> -> OP_MUL 
M [ 838 , IDENTIFIER ] = REDUCE <pointer> -> OP_MUL 
M [ 838 , OP_MUL ] = SHIFT 838
M [ 838 , const ] = SHIFT 1189
M [ 839 , DELIM_RSQBRACKET ] = SHIFT 1190
M [ 840 , <additive-expr> ] = GOTO 185
M [ 840 , <and-expr> ] = GOTO 186
M [ 840 , <asn-expr> ] = GOTO 1191
M [ 840 , <cast-expr> ] = GOTO 188
M [ 840 , <cond-expr> ] = GOTO 189
M [ 840 , <constant> ] = GOTO 190
M [ 840 , <eq-expr> ] = GOTO 191
M [ 840 , <exc-or-expr> ] = GOTO 192
M [ 840 , <inc-or-expr> ] = GOTO 193
M [ 840 , <land-expr> ] = GOTO 194
M [ 840 , <lor-expr> ] = GOTO 195
M [ 840 , <multiplicative-expr> ] = GOTO 196
M [ 840 , <num-const> ] = GOTO 197
M [ 840 , <postfix-expr> ] = GOTO 198
M [ 840 , <prim-expr> ] = GOTO 199
M [ 840 , <rel-expr> ] = GOTO 200
M [ 840 , <shift-expr> ] = GOTO 201
M [ 840 , <type-qual> ] = GOTO 495
M [ 840 , <unary-expr> ] = GOTO 204
M [ 840 , <unary-op> ] = GOTO 205
M [ 840 , CHAR_CONST ] = SHIFT 206
M [ 840 , DELIM_LPAR ] = SHIFT 207
M [ 840 , DELIM_RSQBRACKET ] = SHIFT 1192
M [ 840 , FLOAT_CONST ] = SHIFT 209
M [ 840 , IDENTIFIER ] = SHIFT 210
M [ 840 , INT_CONST ] = SHIFT 211
M [ 840 , OP_ADD ] = SHIFT 135
M [ 840 , OP_AND ] = SHIFT 136
M [ 840 , OP_DEC ] = SHIFT 212
M [ 840 , OP_INC ] = SHIFT 213
M [ 840 , OP_LNOT ] = SHIFT 139
M [ 840 , OP_MUL ] = SHIFT 140
M [ 840 , OP_NOT ] = SHIFT 141
M [ 840 , OP_SUB ] = SHIFT 142
M [ 840 , STR_LITERAL ] = SHIFT 214
M [ 840 , const ] = SHIFT 215
M [ 840 , sizeof ] = SHIFT 216
M [ 841 , DELIM_COMMA ] = REDUCE <direct-abstract-declarator> -> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 841 , DELIM_RPAR ] = REDUCE <direct-abstract-declarator> -> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 842 , DELIM_COMMA ] = REDUCE <pointer> -> OP_MUL <pointer> 
M [ 842 , DELIM_LPAR ] = REDUCE <pointer> -> OP_MUL <pointer> 
M [ 842 , DELIM_LSQBRACKET ] = REDUCE <pointer> -> OP_MUL <pointer> 
M [ 842 , DELIM_RPAR ] = REDUCE <pointer> -> OP_MUL <pointer> 
M [ 842 , IDENTIFIER ] = REDUCE <pointer> -> OP_MUL <pointer> 
M [ 843 , <pointer> ] = GOTO 1193
M [ 843 , <type-qual> ] = GOTO 1194
M [ 843 , DELIM_COMMA ] = REDUCE <pointer> -> OP_MUL <type-qual-list> 
M [ 843 , DELIM_LPAR ] = REDUCE <pointer> -> OP_MUL <type-qual-list> 
M [ 843 , DELIM_LSQBRACKET ] = REDUCE <pointer> -> OP_MUL <type-qual-list> 
M [ 843 , DELIM_RPAR ] = REDUCE <pointer> -> OP_MUL <type-qual-list> 
M [ 843 , IDENTIFIER ] = REDUCE <pointer> -> OP_MUL <type-qual-list> 
M [ 843 , OP_MUL ] = SHIFT 456
M [ 843 , const ] = SHIFT 845
M [ 844 , DELIM_COMMA ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 844 , DELIM_LPAR ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 844 , DELIM_LSQBRACKET ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 844 , DELIM_RPAR ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 844 , IDENTIFIER ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 844 , OP_MUL ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 844 , const ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 845 , DELIM_COMMA ] = REDUCE <type-qual> -> const 
M [ 845 , DELIM_LPAR ] = REDUCE <type-qual> -> const 
M [ 845 , DELIM_LSQBRACKET ] = REDUCE <type-qual> -> const 
M [ 845 , DELIM_RPAR ] = REDUCE <type-qual> -> const 
M [ 845 , IDENTIFIER ] = REDUCE <type-qual> -> const 
M [ 845 , OP_MUL ] = REDUCE <type-qual> -> const 
M [ 845 , const ] = REDUCE <type-qual> -> const 
M [ 846 , DELIM_COMMA ] = REDUCE <identifier-list> -> <identifier-list> DELIM_COMMA IDENTIFIER 
M [ 846 , DELIM_RPAR ] = REDUCE <identifier-list> -> <identifier-list> DELIM_COMMA IDENTIFIER 
M [ 847 , DELIM_COMMA ] = REDUCE <param-list> -> <param-list> DELIM_COMMA <param-decl> 
M [ 847 , DELIM_RPAR ] = REDUCE <param-list> -> <param-list> DELIM_COMMA <param-decl> 
M [ 848 , <enum-spec> ] = GOTO 62
M [ 848 , <spec-qual-list> ] = GOTO 63
M [ 848 , <struct-decl> ] = GOTO 233
M [ 848 , <struct-union-spec> ] = GOTO 66
M [ 848 , <struct-union> ] = GOTO 67
M [ 848 , <type-qual> ] = GOTO 68
M [ 848 , <type-spec> ] = GOTO 69
M [ 848 , DELIM_RCURBRACE ] = SHIFT 1195
M [ 848 , char ] = SHIFT 70
M [ 848 , const ] = SHIFT 71
M [ 848 , double ] = SHIFT 72
M [ 848 , enum ] = SHIFT 73
M [ 848 , float ] = SHIFT 74
M [ 848 , int ] = SHIFT 75
M [ 848 , long ] = SHIFT 76
M [ 848 , short ] = SHIFT 77
M [ 848 , signed ] = SHIFT 78
M [ 848 , struct ] = SHIFT 21
M [ 848 , unsigned ] = SHIFT 79
M [ 848 , void ] = SHIFT 80
M [ 849 , <enum-spec> ] = GOTO 62
M [ 849 , <spec-qual-list> ] = GOTO 63
M [ 849 , <struct-decl-list> ] = GOTO 1196
M [ 849 , <struct-decl> ] = GOTO 65
M [ 849 , <struct-union-spec> ] = GOTO 66
M [ 849 , <struct-union> ] = GOTO 67
M [ 849 , <type-qual> ] = GOTO 68
M [ 849 , <type-spec> ] = GOTO 69
M [ 849 , char ] = SHIFT 70
M [ 849 , const ] = SHIFT 71
M [ 849 , double ] = SHIFT 72
M [ 849 , enum ] = SHIFT 73
M [ 849 , float ] = SHIFT 74
M [ 849 , int ] = SHIFT 75
M [ 849 , long ] = SHIFT 76
M [ 849 , short ] = SHIFT 77
M [ 849 , signed ] = SHIFT 78
M [ 849 , struct ] = SHIFT 21
M [ 849 , unsigned ] = SHIFT 79
M [ 849 , void ] = SHIFT 80
M [ 850 , DELIM_COMMA ] = SHIFT 1197
M [ 850 , DELIM_RCURBRACE ] = SHIFT 1198
M [ 851 , <enumeration-const> ] = GOTO 82
M [ 851 , <enumerator-list> ] = GOTO 1199
M [ 851 , <enumerator> ] = GOTO 84
M [ 851 , IDENTIFIER ] = SHIFT 85
M [ 852 , DELIM_QUESTION ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 852 , DELIM_RSQBRACKET ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 852 , OP_ADD ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 852 , OP_AND ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 852 , OP_DIV ] = SHIFT 479
M [ 852 , OP_EQ ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 852 , OP_GE ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 852 , OP_GT ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 852 , OP_LAND ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 852 , OP_LE ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 852 , OP_LOR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 852 , OP_LT ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 852 , OP_MOD ] = SHIFT 480
M [ 852 , OP_MUL ] = SHIFT 481
M [ 852 , OP_NEQ ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 852 , OP_OR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 852 , OP_SHL ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 852 , OP_SHR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 852 , OP_SUB ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 852 , OP_XOR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 853 , DELIM_QUESTION ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 853 , DELIM_RSQBRACKET ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 853 , OP_ADD ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 853 , OP_AND ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 853 , OP_DIV ] = SHIFT 479
M [ 853 , OP_EQ ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 853 , OP_GE ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 853 , OP_GT ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 853 , OP_LAND ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 853 , OP_LE ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 853 , OP_LOR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 853 , OP_LT ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 853 , OP_MOD ] = SHIFT 480
M [ 853 , OP_MUL ] = SHIFT 481
M [ 853 , OP_NEQ ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 853 , OP_OR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 853 , OP_SHL ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 853 , OP_SHR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 853 , OP_SUB ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 853 , OP_XOR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 854 , DELIM_QUESTION ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 854 , DELIM_RSQBRACKET ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 854 , OP_AND ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 854 , OP_EQ ] = SHIFT 472
M [ 854 , OP_LAND ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 854 , OP_LOR ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 854 , OP_NEQ ] = SHIFT 473
M [ 854 , OP_OR ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 854 , OP_XOR ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 855 , DELIM_QUESTION ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 855 , DELIM_RSQBRACKET ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 855 , OP_AND ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 855 , OP_EQ ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 855 , OP_GE ] = SHIFT 488
M [ 855 , OP_GT ] = SHIFT 489
M [ 855 , OP_LAND ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 855 , OP_LE ] = SHIFT 490
M [ 855 , OP_LOR ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 855 , OP_LT ] = SHIFT 491
M [ 855 , OP_NEQ ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 855 , OP_OR ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 855 , OP_XOR ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 856 , DELIM_QUESTION ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 856 , DELIM_RSQBRACKET ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 856 , OP_AND ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 856 , OP_EQ ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 856 , OP_GE ] = SHIFT 488
M [ 856 , OP_GT ] = SHIFT 489
M [ 856 , OP_LAND ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 856 , OP_LE ] = SHIFT 490
M [ 856 , OP_LOR ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 856 , OP_LT ] = SHIFT 491
M [ 856 , OP_NEQ ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 856 , OP_OR ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 856 , OP_XOR ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 857 , DELIM_QUESTION ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 857 , DELIM_RSQBRACKET ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 857 , OP_AND ] = SHIFT 470
M [ 857 , OP_LAND ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 857 , OP_LOR ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 857 , OP_OR ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 857 , OP_XOR ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 858 , DELIM_QUESTION ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 858 , DELIM_RSQBRACKET ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 858 , OP_LAND ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 858 , OP_LOR ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 858 , OP_OR ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 858 , OP_XOR ] = SHIFT 474
M [ 859 , DELIM_QUESTION ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 859 , DELIM_RSQBRACKET ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 859 , OP_LAND ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 859 , OP_LOR ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 859 , OP_OR ] = SHIFT 475
M [ 860 , DELIM_COLON ] = SHIFT 1200
M [ 860 , DELIM_COMMA ] = SHIFT 942
M [ 861 , DELIM_QUESTION ] = REDUCE <lor-expr> -> <lor-expr> OP_LOR <land-expr> 
M [ 861 , DELIM_RSQBRACKET ] = REDUCE <lor-expr> -> <lor-expr> OP_LOR <land-expr> 
M [ 861 , OP_LAND ] = SHIFT 476
M [ 861 , OP_LOR ] = REDUCE <lor-expr> -> <lor-expr> OP_LOR <land-expr> 
M [ 862 , DELIM_QUESTION ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 862 , DELIM_RSQBRACKET ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 862 , OP_ADD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 862 , OP_AND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 862 , OP_DIV ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 862 , OP_EQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 862 , OP_GE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 862 , OP_GT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 862 , OP_LAND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 862 , OP_LE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 862 , OP_LOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 862 , OP_LT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 862 , OP_MOD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 862 , OP_MUL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 862 , OP_NEQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 862 , OP_OR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 862 , OP_SHL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 862 , OP_SHR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 862 , OP_SUB ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 862 , OP_XOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 863 , DELIM_QUESTION ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 863 , DELIM_RSQBRACKET ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 863 , OP_ADD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 863 , OP_AND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 863 , OP_DIV ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 863 , OP_EQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 863 , OP_GE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 863 , OP_GT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 863 , OP_LAND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 863 , OP_LE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 863 , OP_LOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 863 , OP_LT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 863 , OP_MOD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 863 , OP_MUL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 863 , OP_NEQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 863 , OP_OR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 863 , OP_SHL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 863 , OP_SHR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 863 , OP_SUB ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 863 , OP_XOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 864 , DELIM_QUESTION ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 864 , DELIM_RSQBRACKET ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 864 , OP_ADD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 864 , OP_AND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 864 , OP_DIV ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 864 , OP_EQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 864 , OP_GE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 864 , OP_GT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 864 , OP_LAND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 864 , OP_LE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 864 , OP_LOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 864 , OP_LT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 864 , OP_MOD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 864 , OP_MUL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 864 , OP_NEQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 864 , OP_OR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 864 , OP_SHL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 864 , OP_SHR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 864 , OP_SUB ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 864 , OP_XOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 865 , DELIM_COMMA ] = SHIFT 973
M [ 865 , DELIM_RPAR ] = SHIFT 1201
M [ 866 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 866 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 867 , DELIM_COMMA ] = SHIFT 981
M [ 867 , DELIM_RSQBRACKET ] = SHIFT 1202
M [ 868 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 868 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 869 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 869 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 870 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 870 , DELIM_RSQBRACKET ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 870 , OP_AND ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 870 , OP_EQ ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 870 , OP_GE ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 870 , OP_GT ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 870 , OP_LAND ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 870 , OP_LE ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 870 , OP_LOR ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 870 , OP_LT ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 870 , OP_NEQ ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 870 , OP_OR ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 870 , OP_SHL ] = SHIFT 492
M [ 870 , OP_SHR ] = SHIFT 493
M [ 870 , OP_XOR ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 871 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 871 , DELIM_RSQBRACKET ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 871 , OP_AND ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 871 , OP_EQ ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 871 , OP_GE ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 871 , OP_GT ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 871 , OP_LAND ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 871 , OP_LE ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 871 , OP_LOR ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 871 , OP_LT ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 871 , OP_NEQ ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 871 , OP_OR ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 871 , OP_SHL ] = SHIFT 492
M [ 871 , OP_SHR ] = SHIFT 493
M [ 871 , OP_XOR ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 872 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 872 , DELIM_RSQBRACKET ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 872 , OP_AND ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 872 , OP_EQ ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 872 , OP_GE ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 872 , OP_GT ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 872 , OP_LAND ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 872 , OP_LE ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 872 , OP_LOR ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 872 , OP_LT ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 872 , OP_NEQ ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 872 , OP_OR ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 872 , OP_SHL ] = SHIFT 492
M [ 872 , OP_SHR ] = SHIFT 493
M [ 872 , OP_XOR ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 873 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 873 , DELIM_RSQBRACKET ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 873 , OP_AND ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 873 , OP_EQ ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 873 , OP_GE ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 873 , OP_GT ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 873 , OP_LAND ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 873 , OP_LE ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 873 , OP_LOR ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 873 , OP_LT ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 873 , OP_NEQ ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 873 , OP_OR ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 873 , OP_SHL ] = SHIFT 492
M [ 873 , OP_SHR ] = SHIFT 493
M [ 873 , OP_XOR ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 874 , DELIM_QUESTION ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 874 , DELIM_RSQBRACKET ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 874 , OP_ADD ] = SHIFT 468
M [ 874 , OP_AND ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 874 , OP_EQ ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 874 , OP_GE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 874 , OP_GT ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 874 , OP_LAND ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 874 , OP_LE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 874 , OP_LOR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 874 , OP_LT ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 874 , OP_NEQ ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 874 , OP_OR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 874 , OP_SHL ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 874 , OP_SHR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 874 , OP_SUB ] = SHIFT 469
M [ 874 , OP_XOR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 875 , DELIM_QUESTION ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 875 , DELIM_RSQBRACKET ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 875 , OP_ADD ] = SHIFT 468
M [ 875 , OP_AND ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 875 , OP_EQ ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 875 , OP_GE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 875 , OP_GT ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 875 , OP_LAND ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 875 , OP_LE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 875 , OP_LOR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 875 , OP_LT ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 875 , OP_NEQ ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 875 , OP_OR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 875 , OP_SHL ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 875 , OP_SHR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 875 , OP_SUB ] = SHIFT 469
M [ 875 , OP_XOR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 876 , DELIM_COMMA ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 876 , DELIM_LCURBRACE ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 876 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 876 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 876 , DELIM_SEMICOLON ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 876 , OP_ASN ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 876 , char ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 876 , const ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 876 , double ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 876 , enum ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 876 , float ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 876 , int ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 876 , long ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 876 , short ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 876 , signed ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 876 , struct ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 876 , typedef ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 876 , unsigned ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 876 , void ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 877 , DELIM_RSQBRACKET ] = REDUCE <asn-expr> -> <unary-expr> <asn-op> <asn-expr> 
M [ 878 , DELIM_RPAR ] = SHIFT 1203
M [ 879 , DELIM_LPAR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , DELIM_QUESTION ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , DELIM_RSQBRACKET ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_ADD ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_ADDASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_AND ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_ANDASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_ARROW ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_ASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_DEC ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_DIV ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_DIVASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_DOT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_EQ ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_GE ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_GT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_INC ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_LAND ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_LE ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_LOR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_LT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_MOD ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_MODASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_MUL ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_MULASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_NEQ ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_OR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_ORASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_SHL ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_SHLASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_SHR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_SHRASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_SUB ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_SUBASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_XOR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 879 , OP_XORASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 880 , <cast-expr> ] = GOTO 1204
M [ 880 , <constant> ] = GOTO 809
M [ 880 , <num-const> ] = GOTO 810
M [ 880 , <postfix-expr> ] = GOTO 811
M [ 880 , <prim-expr> ] = GOTO 812
M [ 880 , <unary-expr> ] = GOTO 813
M [ 880 , <unary-op> ] = GOTO 814
M [ 880 , CHAR_CONST ] = SHIFT 815
M [ 880 , DELIM_LCURBRACE ] = SHIFT 1205
M [ 880 , DELIM_LPAR ] = SHIFT 816
M [ 880 , FLOAT_CONST ] = SHIFT 817
M [ 880 , IDENTIFIER ] = SHIFT 818
M [ 880 , INT_CONST ] = SHIFT 819
M [ 880 , OP_ADD ] = SHIFT 135
M [ 880 , OP_AND ] = SHIFT 136
M [ 880 , OP_DEC ] = SHIFT 820
M [ 880 , OP_INC ] = SHIFT 821
M [ 880 , OP_LNOT ] = SHIFT 139
M [ 880 , OP_MUL ] = SHIFT 140
M [ 880 , OP_NOT ] = SHIFT 141
M [ 880 , OP_SUB ] = SHIFT 142
M [ 880 , STR_LITERAL ] = SHIFT 822
M [ 880 , sizeof ] = SHIFT 823
M [ 881 , DELIM_RPAR ] = SHIFT 1206
M [ 882 , DELIM_RPAR ] = SHIFT 1207
M [ 883 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 883 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 883 , DELIM_RPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 884 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 884 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 884 , DELIM_RPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 885 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 885 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 885 , DELIM_RPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 886 , DELIM_RSQBRACKET ] = SHIFT 1208
M [ 887 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 887 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 887 , DELIM_RPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 888 , DELIM_COMMA ] = SHIFT 457
M [ 888 , DELIM_RPAR ] = SHIFT 1209
M [ 889 , DELIM_RPAR ] = SHIFT 1210
M [ 890 , DELIM_COMMA ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 890 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 890 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 890 , DELIM_SEMICOLON ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 891 , DELIM_RSQBRACKET ] = SHIFT 1211
M [ 892 , <additive-expr> ] = GOTO 185
M [ 892 , <and-expr> ] = GOTO 186
M [ 892 , <asn-expr> ] = GOTO 1212
M [ 892 , <cast-expr> ] = GOTO 188
M [ 892 , <cond-expr> ] = GOTO 189
M [ 892 , <constant> ] = GOTO 190
M [ 892 , <eq-expr> ] = GOTO 191
M [ 892 , <exc-or-expr> ] = GOTO 192
M [ 892 , <inc-or-expr> ] = GOTO 193
M [ 892 , <land-expr> ] = GOTO 194
M [ 892 , <lor-expr> ] = GOTO 195
M [ 892 , <multiplicative-expr> ] = GOTO 196
M [ 892 , <num-const> ] = GOTO 197
M [ 892 , <postfix-expr> ] = GOTO 198
M [ 892 , <prim-expr> ] = GOTO 199
M [ 892 , <rel-expr> ] = GOTO 200
M [ 892 , <shift-expr> ] = GOTO 201
M [ 892 , <type-qual> ] = GOTO 495
M [ 892 , <unary-expr> ] = GOTO 204
M [ 892 , <unary-op> ] = GOTO 205
M [ 892 , CHAR_CONST ] = SHIFT 206
M [ 892 , DELIM_LPAR ] = SHIFT 207
M [ 892 , DELIM_RSQBRACKET ] = SHIFT 1213
M [ 892 , FLOAT_CONST ] = SHIFT 209
M [ 892 , IDENTIFIER ] = SHIFT 210
M [ 892 , INT_CONST ] = SHIFT 211
M [ 892 , OP_ADD ] = SHIFT 135
M [ 892 , OP_AND ] = SHIFT 136
M [ 892 , OP_DEC ] = SHIFT 212
M [ 892 , OP_INC ] = SHIFT 213
M [ 892 , OP_LNOT ] = SHIFT 139
M [ 892 , OP_MUL ] = SHIFT 140
M [ 892 , OP_NOT ] = SHIFT 141
M [ 892 , OP_SUB ] = SHIFT 142
M [ 892 , STR_LITERAL ] = SHIFT 214
M [ 892 , const ] = SHIFT 215
M [ 892 , sizeof ] = SHIFT 216
M [ 893 , DELIM_COMMA ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 893 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 893 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 893 , DELIM_SEMICOLON ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 894 , DELIM_COMMA ] = REDUCE <struct-declarator-list> -> <struct-declarator-list> DELIM_COMMA <struct-declarator> 
M [ 894 , DELIM_SEMICOLON ] = REDUCE <struct-declarator-list> -> <struct-declarator-list> DELIM_COMMA <struct-declarator> 
M [ 895 , DELIM_COMMA ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 895 , DELIM_LPAR ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 895 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 895 , DELIM_SEMICOLON ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 896 , DELIM_LPAR ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 896 , DELIM_SEMICOLON ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 896 , IDENTIFIER ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 896 , OP_MUL ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 896 , char ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 896 , const ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 896 , double ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 896 , enum ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 896 , float ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 896 , int ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 896 , long ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 896 , short ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 896 , signed ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 896 , struct ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 896 , unsigned ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 896 , void ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 897 , <enum-spec> ] = GOTO 62
M [ 897 , <spec-qual-list> ] = GOTO 63
M [ 897 , <struct-decl> ] = GOTO 233
M [ 897 , <struct-union-spec> ] = GOTO 66
M [ 897 , <struct-union> ] = GOTO 67
M [ 897 , <type-qual> ] = GOTO 68
M [ 897 , <type-spec> ] = GOTO 69
M [ 897 , DELIM_RCURBRACE ] = SHIFT 1214
M [ 897 , char ] = SHIFT 70
M [ 897 , const ] = SHIFT 71
M [ 897 , double ] = SHIFT 72
M [ 897 , enum ] = SHIFT 73
M [ 897 , float ] = SHIFT 74
M [ 897 , int ] = SHIFT 75
M [ 897 , long ] = SHIFT 76
M [ 897 , short ] = SHIFT 77
M [ 897 , signed ] = SHIFT 78
M [ 897 , struct ] = SHIFT 21
M [ 897 , unsigned ] = SHIFT 79
M [ 897 , void ] = SHIFT 80
M [ 898 , <enumeration-const> ] = GOTO 82
M [ 898 , <enumerator> ] = GOTO 543
M [ 898 , DELIM_RCURBRACE ] = SHIFT 1215
M [ 898 , IDENTIFIER ] = SHIFT 85
M [ 899 , DELIM_LPAR ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 899 , DELIM_SEMICOLON ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 899 , IDENTIFIER ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 899 , OP_MUL ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 899 , char ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 899 , const ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 899 , double ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 899 , enum ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 899 , float ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 899 , int ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 899 , long ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 899 , short ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 899 , signed ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 899 , struct ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 899 , unsigned ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 899 , void ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 900 , DELIM_COMMA ] = SHIFT 1216
M [ 900 , DELIM_RCURBRACE ] = SHIFT 1217
M [ 901 , <additive-expr> ] = GOTO 299
M [ 901 , <and-expr> ] = GOTO 300
M [ 901 , <arg-expr-list> ] = GOTO 1218
M [ 901 , <asn-expr> ] = GOTO 613
M [ 901 , <cast-expr> ] = GOTO 302
M [ 901 , <cond-expr> ] = GOTO 303
M [ 901 , <constant> ] = GOTO 304
M [ 901 , <eq-expr> ] = GOTO 306
M [ 901 , <exc-or-expr> ] = GOTO 307
M [ 901 , <inc-or-expr> ] = GOTO 309
M [ 901 , <land-expr> ] = GOTO 310
M [ 901 , <lor-expr> ] = GOTO 311
M [ 901 , <multiplicative-expr> ] = GOTO 312
M [ 901 , <num-const> ] = GOTO 313
M [ 901 , <postfix-expr> ] = GOTO 314
M [ 901 , <prim-expr> ] = GOTO 315
M [ 901 , <rel-expr> ] = GOTO 316
M [ 901 , <shift-expr> ] = GOTO 317
M [ 901 , <unary-expr> ] = GOTO 324
M [ 901 , <unary-op> ] = GOTO 325
M [ 901 , CHAR_CONST ] = SHIFT 326
M [ 901 , DELIM_LPAR ] = SHIFT 327
M [ 901 , DELIM_RPAR ] = SHIFT 1219
M [ 901 , FLOAT_CONST ] = SHIFT 328
M [ 901 , IDENTIFIER ] = SHIFT 329
M [ 901 , INT_CONST ] = SHIFT 330
M [ 901 , OP_ADD ] = SHIFT 135
M [ 901 , OP_AND ] = SHIFT 136
M [ 901 , OP_DEC ] = SHIFT 331
M [ 901 , OP_INC ] = SHIFT 332
M [ 901 , OP_LNOT ] = SHIFT 139
M [ 901 , OP_MUL ] = SHIFT 140
M [ 901 , OP_NOT ] = SHIFT 141
M [ 901 , OP_SUB ] = SHIFT 142
M [ 901 , STR_LITERAL ] = SHIFT 333
M [ 901 , sizeof ] = SHIFT 343
M [ 902 , <additive-expr> ] = GOTO 615
M [ 902 , <and-expr> ] = GOTO 616
M [ 902 , <asn-expr> ] = GOTO 617
M [ 902 , <cast-expr> ] = GOTO 618
M [ 902 , <cond-expr> ] = GOTO 619
M [ 902 , <constant> ] = GOTO 620
M [ 902 , <eq-expr> ] = GOTO 621
M [ 902 , <exc-or-expr> ] = GOTO 622
M [ 902 , <expr> ] = GOTO 1220
M [ 902 , <inc-or-expr> ] = GOTO 624
M [ 902 , <land-expr> ] = GOTO 625
M [ 902 , <lor-expr> ] = GOTO 626
M [ 902 , <multiplicative-expr> ] = GOTO 627
M [ 902 , <num-const> ] = GOTO 628
M [ 902 , <postfix-expr> ] = GOTO 629
M [ 902 , <prim-expr> ] = GOTO 630
M [ 902 , <rel-expr> ] = GOTO 631
M [ 902 , <shift-expr> ] = GOTO 632
M [ 902 , <unary-expr> ] = GOTO 633
M [ 902 , <unary-op> ] = GOTO 634
M [ 902 , CHAR_CONST ] = SHIFT 635
M [ 902 , DELIM_LPAR ] = SHIFT 636
M [ 902 , FLOAT_CONST ] = SHIFT 637
M [ 902 , IDENTIFIER ] = SHIFT 638
M [ 902 , INT_CONST ] = SHIFT 639
M [ 902 , OP_ADD ] = SHIFT 135
M [ 902 , OP_AND ] = SHIFT 136
M [ 902 , OP_DEC ] = SHIFT 640
M [ 902 , OP_INC ] = SHIFT 641
M [ 902 , OP_LNOT ] = SHIFT 139
M [ 902 , OP_MUL ] = SHIFT 140
M [ 902 , OP_NOT ] = SHIFT 141
M [ 902 , OP_SUB ] = SHIFT 142
M [ 902 , STR_LITERAL ] = SHIFT 642
M [ 902 , sizeof ] = SHIFT 643
M [ 903 , IDENTIFIER ] = SHIFT 1221
M [ 904 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 904 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 904 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 904 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 904 , DELIM_RCURBRACE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 904 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 904 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 904 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 904 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 904 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 904 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 904 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 904 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 904 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 904 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 904 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 904 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 904 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 904 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 904 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 904 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 904 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 904 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 904 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 904 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 904 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 904 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 905 , IDENTIFIER ] = SHIFT 1222
M [ 906 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 906 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 906 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 906 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 906 , DELIM_RCURBRACE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 906 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 906 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 906 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 906 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 906 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 906 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 906 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 906 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 906 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 906 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 906 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 906 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 906 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 906 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 906 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 906 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 906 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 906 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 906 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 906 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 906 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 906 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 907 , DELIM_COMMA ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 907 , DELIM_QUESTION ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 907 , DELIM_RCURBRACE ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 907 , OP_ADD ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 907 , OP_AND ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 907 , OP_DIV ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 907 , OP_EQ ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 907 , OP_GE ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 907 , OP_GT ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 907 , OP_LAND ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 907 , OP_LE ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 907 , OP_LOR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 907 , OP_LT ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 907 , OP_MOD ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 907 , OP_MUL ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 907 , OP_NEQ ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 907 , OP_OR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 907 , OP_SHL ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 907 , OP_SHR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 907 , OP_SUB ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 907 , OP_XOR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 908 , DELIM_COMMA ] = SHIFT 661
M [ 908 , DELIM_RPAR ] = SHIFT 1223
M [ 909 , DELIM_RPAR ] = SHIFT 1224
M [ 910 , DELIM_COMMA ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 910 , DELIM_QUESTION ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 910 , DELIM_RCURBRACE ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 910 , OP_ADD ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 910 , OP_AND ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 910 , OP_DIV ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 910 , OP_EQ ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 910 , OP_GE ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 910 , OP_GT ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 910 , OP_LAND ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 910 , OP_LE ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 910 , OP_LOR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 910 , OP_LT ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 910 , OP_MOD ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 910 , OP_MUL ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 910 , OP_NEQ ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 910 , OP_OR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 910 , OP_SHL ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 910 , OP_SHR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 910 , OP_SUB ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 910 , OP_XOR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 911 , <additive-expr> ] = GOTO 299
M [ 911 , <and-expr> ] = GOTO 300
M [ 911 , <asn-expr> ] = GOTO 301
M [ 911 , <cast-expr> ] = GOTO 302
M [ 911 , <cond-expr> ] = GOTO 303
M [ 911 , <constant> ] = GOTO 304
M [ 911 , <enum-spec> ] = GOTO 305
M [ 911 , <eq-expr> ] = GOTO 306
M [ 911 , <exc-or-expr> ] = GOTO 307
M [ 911 , <expr> ] = GOTO 908
M [ 911 , <inc-or-expr> ] = GOTO 309
M [ 911 , <land-expr> ] = GOTO 310
M [ 911 , <lor-expr> ] = GOTO 311
M [ 911 , <multiplicative-expr> ] = GOTO 312
M [ 911 , <num-const> ] = GOTO 313
M [ 911 , <postfix-expr> ] = GOTO 314
M [ 911 , <prim-expr> ] = GOTO 315
M [ 911 , <rel-expr> ] = GOTO 316
M [ 911 , <shift-expr> ] = GOTO 317
M [ 911 , <spec-qual-list> ] = GOTO 318
M [ 911 , <struct-union-spec> ] = GOTO 319
M [ 911 , <struct-union> ] = GOTO 320
M [ 911 , <type-name> ] = GOTO 1225
M [ 911 , <type-qual> ] = GOTO 322
M [ 911 , <type-spec> ] = GOTO 323
M [ 911 , <unary-expr> ] = GOTO 324
M [ 911 , <unary-op> ] = GOTO 325
M [ 911 , CHAR_CONST ] = SHIFT 326
M [ 911 , DELIM_LPAR ] = SHIFT 327
M [ 911 , FLOAT_CONST ] = SHIFT 328
M [ 911 , IDENTIFIER ] = SHIFT 329
M [ 911 , INT_CONST ] = SHIFT 330
M [ 911 , OP_ADD ] = SHIFT 135
M [ 911 , OP_AND ] = SHIFT 136
M [ 911 , OP_DEC ] = SHIFT 331
M [ 911 , OP_INC ] = SHIFT 332
M [ 911 , OP_LNOT ] = SHIFT 139
M [ 911 , OP_MUL ] = SHIFT 140
M [ 911 , OP_NOT ] = SHIFT 141
M [ 911 , OP_SUB ] = SHIFT 142
M [ 911 , STR_LITERAL ] = SHIFT 333
M [ 911 , char ] = SHIFT 334
M [ 911 , const ] = SHIFT 335
M [ 911 , double ] = SHIFT 336
M [ 911 , enum ] = SHIFT 337
M [ 911 , float ] = SHIFT 338
M [ 911 , int ] = SHIFT 339
M [ 911 , long ] = SHIFT 340
M [ 911 , short ] = SHIFT 341
M [ 911 , signed ] = SHIFT 342
M [ 911 , sizeof ] = SHIFT 343
M [ 911 , struct ] = SHIFT 21
M [ 911 , unsigned ] = SHIFT 344
M [ 911 , void ] = SHIFT 345
M [ 912 , DELIM_COMMA ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 912 , DELIM_QUESTION ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 912 , DELIM_RCURBRACE ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 912 , OP_ADD ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 912 , OP_AND ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 912 , OP_DIV ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 912 , OP_EQ ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 912 , OP_GE ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 912 , OP_GT ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 912 , OP_LAND ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 912 , OP_LE ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 912 , OP_LOR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 912 , OP_LT ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 912 , OP_MOD ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 912 , OP_MUL ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 912 , OP_NEQ ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 912 , OP_OR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 912 , OP_SHL ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 912 , OP_SHR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 912 , OP_SUB ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 912 , OP_XOR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 913 , DELIM_COMMA ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 913 , DELIM_QUESTION ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 913 , DELIM_RCURBRACE ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 913 , OP_ADD ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 913 , OP_AND ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 913 , OP_DIV ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 913 , OP_EQ ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 913 , OP_GE ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 913 , OP_GT ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 913 , OP_LAND ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 913 , OP_LE ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 913 , OP_LOR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 913 , OP_LT ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 913 , OP_MOD ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 913 , OP_MUL ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 913 , OP_NEQ ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 913 , OP_OR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 913 , OP_SHL ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 913 , OP_SHR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 913 , OP_SUB ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 913 , OP_XOR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 914 , <additive-expr> ] = GOTO 299
M [ 914 , <and-expr> ] = GOTO 300
M [ 914 , <asn-expr> ] = GOTO 301
M [ 914 , <cast-expr> ] = GOTO 302
M [ 914 , <cond-expr> ] = GOTO 303
M [ 914 , <constant> ] = GOTO 304
M [ 914 , <enum-spec> ] = GOTO 305
M [ 914 , <eq-expr> ] = GOTO 306
M [ 914 , <exc-or-expr> ] = GOTO 307
M [ 914 , <expr> ] = GOTO 908
M [ 914 , <inc-or-expr> ] = GOTO 309
M [ 914 , <land-expr> ] = GOTO 310
M [ 914 , <lor-expr> ] = GOTO 311
M [ 914 , <multiplicative-expr> ] = GOTO 312
M [ 914 , <num-const> ] = GOTO 313
M [ 914 , <postfix-expr> ] = GOTO 314
M [ 914 , <prim-expr> ] = GOTO 315
M [ 914 , <rel-expr> ] = GOTO 316
M [ 914 , <shift-expr> ] = GOTO 317
M [ 914 , <spec-qual-list> ] = GOTO 318
M [ 914 , <struct-union-spec> ] = GOTO 319
M [ 914 , <struct-union> ] = GOTO 320
M [ 914 , <type-name> ] = GOTO 1226
M [ 914 , <type-qual> ] = GOTO 322
M [ 914 , <type-spec> ] = GOTO 323
M [ 914 , <unary-expr> ] = GOTO 324
M [ 914 , <unary-op> ] = GOTO 325
M [ 914 , CHAR_CONST ] = SHIFT 326
M [ 914 , DELIM_LPAR ] = SHIFT 327
M [ 914 , FLOAT_CONST ] = SHIFT 328
M [ 914 , IDENTIFIER ] = SHIFT 329
M [ 914 , INT_CONST ] = SHIFT 330
M [ 914 , OP_ADD ] = SHIFT 135
M [ 914 , OP_AND ] = SHIFT 136
M [ 914 , OP_DEC ] = SHIFT 331
M [ 914 , OP_INC ] = SHIFT 332
M [ 914 , OP_LNOT ] = SHIFT 139
M [ 914 , OP_MUL ] = SHIFT 140
M [ 914 , OP_NOT ] = SHIFT 141
M [ 914 , OP_SUB ] = SHIFT 142
M [ 914 , STR_LITERAL ] = SHIFT 333
M [ 914 , char ] = SHIFT 334
M [ 914 , const ] = SHIFT 335
M [ 914 , double ] = SHIFT 336
M [ 914 , enum ] = SHIFT 337
M [ 914 , float ] = SHIFT 338
M [ 914 , int ] = SHIFT 339
M [ 914 , long ] = SHIFT 340
M [ 914 , short ] = SHIFT 341
M [ 914 , signed ] = SHIFT 342
M [ 914 , sizeof ] = SHIFT 343
M [ 914 , struct ] = SHIFT 21
M [ 914 , unsigned ] = SHIFT 344
M [ 914 , void ] = SHIFT 345
M [ 915 , DELIM_LPAR ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 915 , DELIM_SEMICOLON ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 915 , IDENTIFIER ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 915 , OP_MUL ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 915 , char ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 915 , const ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 915 , double ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 915 , enum ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 915 , float ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 915 , int ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 915 , long ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 915 , short ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 915 , signed ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 915 , struct ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 915 , typedef ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 915 , unsigned ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 915 , void ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 916 , DELIM_COMMA ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 916 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 916 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 916 , DELIM_SEMICOLON ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 916 , OP_ASN ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 917 , DELIM_COMMA ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 917 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 917 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 917 , DELIM_SEMICOLON ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 917 , OP_ASN ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 918 , DELIM_COMMA ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 918 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 918 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 918 , DELIM_SEMICOLON ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 918 , OP_ASN ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 919 , DELIM_RSQBRACKET ] = SHIFT 1227
M [ 920 , DELIM_COMMA ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 920 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 920 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 920 , DELIM_SEMICOLON ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 920 , OP_ASN ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 921 , <additive-expr> ] = GOTO 299
M [ 921 , <and-expr> ] = GOTO 300
M [ 921 , <arg-expr-list> ] = GOTO 1228
M [ 921 , <asn-expr> ] = GOTO 613
M [ 921 , <cast-expr> ] = GOTO 302
M [ 921 , <cond-expr> ] = GOTO 303
M [ 921 , <constant> ] = GOTO 304
M [ 921 , <eq-expr> ] = GOTO 306
M [ 921 , <exc-or-expr> ] = GOTO 307
M [ 921 , <inc-or-expr> ] = GOTO 309
M [ 921 , <land-expr> ] = GOTO 310
M [ 921 , <lor-expr> ] = GOTO 311
M [ 921 , <multiplicative-expr> ] = GOTO 312
M [ 921 , <num-const> ] = GOTO 313
M [ 921 , <postfix-expr> ] = GOTO 314
M [ 921 , <prim-expr> ] = GOTO 315
M [ 921 , <rel-expr> ] = GOTO 316
M [ 921 , <shift-expr> ] = GOTO 317
M [ 921 , <unary-expr> ] = GOTO 324
M [ 921 , <unary-op> ] = GOTO 325
M [ 921 , CHAR_CONST ] = SHIFT 326
M [ 921 , DELIM_LPAR ] = SHIFT 327
M [ 921 , DELIM_RPAR ] = SHIFT 1229
M [ 921 , FLOAT_CONST ] = SHIFT 328
M [ 921 , IDENTIFIER ] = SHIFT 329
M [ 921 , INT_CONST ] = SHIFT 330
M [ 921 , OP_ADD ] = SHIFT 135
M [ 921 , OP_AND ] = SHIFT 136
M [ 921 , OP_DEC ] = SHIFT 331
M [ 921 , OP_INC ] = SHIFT 332
M [ 921 , OP_LNOT ] = SHIFT 139
M [ 921 , OP_MUL ] = SHIFT 140
M [ 921 , OP_NOT ] = SHIFT 141
M [ 921 , OP_SUB ] = SHIFT 142
M [ 921 , STR_LITERAL ] = SHIFT 333
M [ 921 , sizeof ] = SHIFT 343
M [ 922 , <additive-expr> ] = GOTO 615
M [ 922 , <and-expr> ] = GOTO 616
M [ 922 , <asn-expr> ] = GOTO 617
M [ 922 , <cast-expr> ] = GOTO 618
M [ 922 , <cond-expr> ] = GOTO 619
M [ 922 , <constant> ] = GOTO 620
M [ 922 , <eq-expr> ] = GOTO 621
M [ 922 , <exc-or-expr> ] = GOTO 622
M [ 922 , <expr> ] = GOTO 1230
M [ 922 , <inc-or-expr> ] = GOTO 624
M [ 922 , <land-expr> ] = GOTO 625
M [ 922 , <lor-expr> ] = GOTO 626
M [ 922 , <multiplicative-expr> ] = GOTO 627
M [ 922 , <num-const> ] = GOTO 628
M [ 922 , <postfix-expr> ] = GOTO 629
M [ 922 , <prim-expr> ] = GOTO 630
M [ 922 , <rel-expr> ] = GOTO 631
M [ 922 , <shift-expr> ] = GOTO 632
M [ 922 , <unary-expr> ] = GOTO 633
M [ 922 , <unary-op> ] = GOTO 634
M [ 922 , CHAR_CONST ] = SHIFT 635
M [ 922 , DELIM_LPAR ] = SHIFT 636
M [ 922 , FLOAT_CONST ] = SHIFT 637
M [ 922 , IDENTIFIER ] = SHIFT 638
M [ 922 , INT_CONST ] = SHIFT 639
M [ 922 , OP_ADD ] = SHIFT 135
M [ 922 , OP_AND ] = SHIFT 136
M [ 922 , OP_DEC ] = SHIFT 640
M [ 922 , OP_INC ] = SHIFT 641
M [ 922 , OP_LNOT ] = SHIFT 139
M [ 922 , OP_MUL ] = SHIFT 140
M [ 922 , OP_NOT ] = SHIFT 141
M [ 922 , OP_SUB ] = SHIFT 142
M [ 922 , STR_LITERAL ] = SHIFT 642
M [ 922 , sizeof ] = SHIFT 643
M [ 923 , IDENTIFIER ] = SHIFT 1231
M [ 924 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 924 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 924 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 924 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 924 , DELIM_SEMICOLON ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 924 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 924 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 924 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 924 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 924 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 924 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 924 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 924 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 924 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 924 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 924 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 924 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 924 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 924 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 924 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 924 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 924 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 924 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 924 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 924 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 924 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 924 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 925 , IDENTIFIER ] = SHIFT 1232
M [ 926 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 926 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 926 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 926 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 926 , DELIM_SEMICOLON ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 926 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 926 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 926 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 926 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 926 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 926 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 926 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 926 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 926 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 926 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 926 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 926 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 926 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 926 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 926 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 926 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 926 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 926 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 926 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 926 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 926 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 926 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 927 , DELIM_COMMA ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 927 , DELIM_QUESTION ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 927 , DELIM_SEMICOLON ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 927 , OP_ADD ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 927 , OP_AND ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 927 , OP_DIV ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 927 , OP_EQ ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 927 , OP_GE ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 927 , OP_GT ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 927 , OP_LAND ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 927 , OP_LE ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 927 , OP_LOR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 927 , OP_LT ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 927 , OP_MOD ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 927 , OP_MUL ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 927 , OP_NEQ ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 927 , OP_OR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 927 , OP_SHL ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 927 , OP_SHR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 927 , OP_SUB ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 927 , OP_XOR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 928 , DELIM_COMMA ] = SHIFT 661
M [ 928 , DELIM_RPAR ] = SHIFT 1233
M [ 929 , DELIM_RPAR ] = SHIFT 1234
M [ 930 , DELIM_COMMA ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 930 , DELIM_QUESTION ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 930 , DELIM_SEMICOLON ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 930 , OP_ADD ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 930 , OP_AND ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 930 , OP_DIV ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 930 , OP_EQ ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 930 , OP_GE ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 930 , OP_GT ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 930 , OP_LAND ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 930 , OP_LE ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 930 , OP_LOR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 930 , OP_LT ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 930 , OP_MOD ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 930 , OP_MUL ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 930 , OP_NEQ ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 930 , OP_OR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 930 , OP_SHL ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 930 , OP_SHR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 930 , OP_SUB ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 930 , OP_XOR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 931 , <additive-expr> ] = GOTO 299
M [ 931 , <and-expr> ] = GOTO 300
M [ 931 , <asn-expr> ] = GOTO 301
M [ 931 , <cast-expr> ] = GOTO 302
M [ 931 , <cond-expr> ] = GOTO 303
M [ 931 , <constant> ] = GOTO 304
M [ 931 , <enum-spec> ] = GOTO 305
M [ 931 , <eq-expr> ] = GOTO 306
M [ 931 , <exc-or-expr> ] = GOTO 307
M [ 931 , <expr> ] = GOTO 928
M [ 931 , <inc-or-expr> ] = GOTO 309
M [ 931 , <land-expr> ] = GOTO 310
M [ 931 , <lor-expr> ] = GOTO 311
M [ 931 , <multiplicative-expr> ] = GOTO 312
M [ 931 , <num-const> ] = GOTO 313
M [ 931 , <postfix-expr> ] = GOTO 314
M [ 931 , <prim-expr> ] = GOTO 315
M [ 931 , <rel-expr> ] = GOTO 316
M [ 931 , <shift-expr> ] = GOTO 317
M [ 931 , <spec-qual-list> ] = GOTO 318
M [ 931 , <struct-union-spec> ] = GOTO 319
M [ 931 , <struct-union> ] = GOTO 320
M [ 931 , <type-name> ] = GOTO 1235
M [ 931 , <type-qual> ] = GOTO 322
M [ 931 , <type-spec> ] = GOTO 323
M [ 931 , <unary-expr> ] = GOTO 324
M [ 931 , <unary-op> ] = GOTO 325
M [ 931 , CHAR_CONST ] = SHIFT 326
M [ 931 , DELIM_LPAR ] = SHIFT 327
M [ 931 , FLOAT_CONST ] = SHIFT 328
M [ 931 , IDENTIFIER ] = SHIFT 329
M [ 931 , INT_CONST ] = SHIFT 330
M [ 931 , OP_ADD ] = SHIFT 135
M [ 931 , OP_AND ] = SHIFT 136
M [ 931 , OP_DEC ] = SHIFT 331
M [ 931 , OP_INC ] = SHIFT 332
M [ 931 , OP_LNOT ] = SHIFT 139
M [ 931 , OP_MUL ] = SHIFT 140
M [ 931 , OP_NOT ] = SHIFT 141
M [ 931 , OP_SUB ] = SHIFT 142
M [ 931 , STR_LITERAL ] = SHIFT 333
M [ 931 , char ] = SHIFT 334
M [ 931 , const ] = SHIFT 335
M [ 931 , double ] = SHIFT 336
M [ 931 , enum ] = SHIFT 337
M [ 931 , float ] = SHIFT 338
M [ 931 , int ] = SHIFT 339
M [ 931 , long ] = SHIFT 340
M [ 931 , short ] = SHIFT 341
M [ 931 , signed ] = SHIFT 342
M [ 931 , sizeof ] = SHIFT 343
M [ 931 , struct ] = SHIFT 21
M [ 931 , unsigned ] = SHIFT 344
M [ 931 , void ] = SHIFT 345
M [ 932 , DELIM_COMMA ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 932 , DELIM_QUESTION ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 932 , DELIM_SEMICOLON ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 932 , OP_ADD ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 932 , OP_AND ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 932 , OP_DIV ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 932 , OP_EQ ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 932 , OP_GE ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 932 , OP_GT ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 932 , OP_LAND ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 932 , OP_LE ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 932 , OP_LOR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 932 , OP_LT ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 932 , OP_MOD ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 932 , OP_MUL ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 932 , OP_NEQ ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 932 , OP_OR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 932 , OP_SHL ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 932 , OP_SHR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 932 , OP_SUB ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 932 , OP_XOR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 933 , DELIM_COMMA ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 933 , DELIM_QUESTION ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 933 , DELIM_SEMICOLON ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 933 , OP_ADD ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 933 , OP_AND ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 933 , OP_DIV ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 933 , OP_EQ ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 933 , OP_GE ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 933 , OP_GT ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 933 , OP_LAND ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 933 , OP_LE ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 933 , OP_LOR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 933 , OP_LT ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 933 , OP_MOD ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 933 , OP_MUL ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 933 , OP_NEQ ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 933 , OP_OR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 933 , OP_SHL ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 933 , OP_SHR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 933 , OP_SUB ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 933 , OP_XOR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 934 , <additive-expr> ] = GOTO 299
M [ 934 , <and-expr> ] = GOTO 300
M [ 934 , <asn-expr> ] = GOTO 301
M [ 934 , <cast-expr> ] = GOTO 302
M [ 934 , <cond-expr> ] = GOTO 303
M [ 934 , <constant> ] = GOTO 304
M [ 934 , <enum-spec> ] = GOTO 305
M [ 934 , <eq-expr> ] = GOTO 306
M [ 934 , <exc-or-expr> ] = GOTO 307
M [ 934 , <expr> ] = GOTO 928
M [ 934 , <inc-or-expr> ] = GOTO 309
M [ 934 , <land-expr> ] = GOTO 310
M [ 934 , <lor-expr> ] = GOTO 311
M [ 934 , <multiplicative-expr> ] = GOTO 312
M [ 934 , <num-const> ] = GOTO 313
M [ 934 , <postfix-expr> ] = GOTO 314
M [ 934 , <prim-expr> ] = GOTO 315
M [ 934 , <rel-expr> ] = GOTO 316
M [ 934 , <shift-expr> ] = GOTO 317
M [ 934 , <spec-qual-list> ] = GOTO 318
M [ 934 , <struct-union-spec> ] = GOTO 319
M [ 934 , <struct-union> ] = GOTO 320
M [ 934 , <type-name> ] = GOTO 1236
M [ 934 , <type-qual> ] = GOTO 322
M [ 934 , <type-spec> ] = GOTO 323
M [ 934 , <unary-expr> ] = GOTO 324
M [ 934 , <unary-op> ] = GOTO 325
M [ 934 , CHAR_CONST ] = SHIFT 326
M [ 934 , DELIM_LPAR ] = SHIFT 327
M [ 934 , FLOAT_CONST ] = SHIFT 328
M [ 934 , IDENTIFIER ] = SHIFT 329
M [ 934 , INT_CONST ] = SHIFT 330
M [ 934 , OP_ADD ] = SHIFT 135
M [ 934 , OP_AND ] = SHIFT 136
M [ 934 , OP_DEC ] = SHIFT 331
M [ 934 , OP_INC ] = SHIFT 332
M [ 934 , OP_LNOT ] = SHIFT 139
M [ 934 , OP_MUL ] = SHIFT 140
M [ 934 , OP_NOT ] = SHIFT 141
M [ 934 , OP_SUB ] = SHIFT 142
M [ 934 , STR_LITERAL ] = SHIFT 333
M [ 934 , char ] = SHIFT 334
M [ 934 , const ] = SHIFT 335
M [ 934 , double ] = SHIFT 336
M [ 934 , enum ] = SHIFT 337
M [ 934 , float ] = SHIFT 338
M [ 934 , int ] = SHIFT 339
M [ 934 , long ] = SHIFT 340
M [ 934 , short ] = SHIFT 341
M [ 934 , signed ] = SHIFT 342
M [ 934 , sizeof ] = SHIFT 343
M [ 934 , struct ] = SHIFT 21
M [ 934 , unsigned ] = SHIFT 344
M [ 934 , void ] = SHIFT 345
M [ 935 , <cast-expr> ] = GOTO 582
M [ 935 , <constant> ] = GOTO 1237
M [ 935 , <multiplicative-expr> ] = GOTO 1238
M [ 935 , <num-const> ] = GOTO 1239
M [ 935 , <postfix-expr> ] = GOTO 1240
M [ 935 , <prim-expr> ] = GOTO 1241
M [ 935 , <unary-expr> ] = GOTO 1242
M [ 935 , <unary-op> ] = GOTO 1243
M [ 935 , CHAR_CONST ] = SHIFT 1244
M [ 935 , DELIM_LPAR ] = SHIFT 1245
M [ 935 , FLOAT_CONST ] = SHIFT 1246
M [ 935 , IDENTIFIER ] = SHIFT 1247
M [ 935 , INT_CONST ] = SHIFT 1248
M [ 935 , OP_ADD ] = SHIFT 135
M [ 935 , OP_AND ] = SHIFT 136
M [ 935 , OP_DEC ] = SHIFT 1249
M [ 935 , OP_INC ] = SHIFT 1250
M [ 935 , OP_LNOT ] = SHIFT 139
M [ 935 , OP_MUL ] = SHIFT 140
M [ 935 , OP_NOT ] = SHIFT 141
M [ 935 , OP_SUB ] = SHIFT 142
M [ 935 , STR_LITERAL ] = SHIFT 1251
M [ 935 , sizeof ] = SHIFT 1252
M [ 936 , <cast-expr> ] = GOTO 582
M [ 936 , <constant> ] = GOTO 1237
M [ 936 , <multiplicative-expr> ] = GOTO 1253
M [ 936 , <num-const> ] = GOTO 1239
M [ 936 , <postfix-expr> ] = GOTO 1240
M [ 936 , <prim-expr> ] = GOTO 1241
M [ 936 , <unary-expr> ] = GOTO 1242
M [ 936 , <unary-op> ] = GOTO 1243
M [ 936 , CHAR_CONST ] = SHIFT 1244
M [ 936 , DELIM_LPAR ] = SHIFT 1245
M [ 936 , FLOAT_CONST ] = SHIFT 1246
M [ 936 , IDENTIFIER ] = SHIFT 1247
M [ 936 , INT_CONST ] = SHIFT 1248
M [ 936 , OP_ADD ] = SHIFT 135
M [ 936 , OP_AND ] = SHIFT 136
M [ 936 , OP_DEC ] = SHIFT 1249
M [ 936 , OP_INC ] = SHIFT 1250
M [ 936 , OP_LNOT ] = SHIFT 139
M [ 936 , OP_MUL ] = SHIFT 140
M [ 936 , OP_NOT ] = SHIFT 141
M [ 936 , OP_SUB ] = SHIFT 142
M [ 936 , STR_LITERAL ] = SHIFT 1251
M [ 936 , sizeof ] = SHIFT 1252
M [ 937 , <additive-expr> ] = GOTO 579
M [ 937 , <cast-expr> ] = GOTO 582
M [ 937 , <constant> ] = GOTO 1237
M [ 937 , <eq-expr> ] = GOTO 1254
M [ 937 , <multiplicative-expr> ] = GOTO 591
M [ 937 , <num-const> ] = GOTO 1239
M [ 937 , <postfix-expr> ] = GOTO 1240
M [ 937 , <prim-expr> ] = GOTO 1241
M [ 937 , <rel-expr> ] = GOTO 595
M [ 937 , <shift-expr> ] = GOTO 596
M [ 937 , <unary-expr> ] = GOTO 1242
M [ 937 , <unary-op> ] = GOTO 1243
M [ 937 , CHAR_CONST ] = SHIFT 1244
M [ 937 , DELIM_LPAR ] = SHIFT 1245
M [ 937 , FLOAT_CONST ] = SHIFT 1246
M [ 937 , IDENTIFIER ] = SHIFT 1247
M [ 937 , INT_CONST ] = SHIFT 1248
M [ 937 , OP_ADD ] = SHIFT 135
M [ 937 , OP_AND ] = SHIFT 136
M [ 937 , OP_DEC ] = SHIFT 1249
M [ 937 , OP_INC ] = SHIFT 1250
M [ 937 , OP_LNOT ] = SHIFT 139
M [ 937 , OP_MUL ] = SHIFT 140
M [ 937 , OP_NOT ] = SHIFT 141
M [ 937 , OP_SUB ] = SHIFT 142
M [ 937 , STR_LITERAL ] = SHIFT 1251
M [ 937 , sizeof ] = SHIFT 1252
M [ 938 , <additive-expr> ] = GOTO 579
M [ 938 , <cast-expr> ] = GOTO 582
M [ 938 , <constant> ] = GOTO 1237
M [ 938 , <multiplicative-expr> ] = GOTO 591
M [ 938 , <num-const> ] = GOTO 1239
M [ 938 , <postfix-expr> ] = GOTO 1240
M [ 938 , <prim-expr> ] = GOTO 1241
M [ 938 , <rel-expr> ] = GOTO 1255
M [ 938 , <shift-expr> ] = GOTO 596
M [ 938 , <unary-expr> ] = GOTO 1242
M [ 938 , <unary-op> ] = GOTO 1243
M [ 938 , CHAR_CONST ] = SHIFT 1244
M [ 938 , DELIM_LPAR ] = SHIFT 1245
M [ 938 , FLOAT_CONST ] = SHIFT 1246
M [ 938 , IDENTIFIER ] = SHIFT 1247
M [ 938 , INT_CONST ] = SHIFT 1248
M [ 938 , OP_ADD ] = SHIFT 135
M [ 938 , OP_AND ] = SHIFT 136
M [ 938 , OP_DEC ] = SHIFT 1249
M [ 938 , OP_INC ] = SHIFT 1250
M [ 938 , OP_LNOT ] = SHIFT 139
M [ 938 , OP_MUL ] = SHIFT 140
M [ 938 , OP_NOT ] = SHIFT 141
M [ 938 , OP_SUB ] = SHIFT 142
M [ 938 , STR_LITERAL ] = SHIFT 1251
M [ 938 , sizeof ] = SHIFT 1252
M [ 939 , <additive-expr> ] = GOTO 579
M [ 939 , <cast-expr> ] = GOTO 582
M [ 939 , <constant> ] = GOTO 1237
M [ 939 , <multiplicative-expr> ] = GOTO 591
M [ 939 , <num-const> ] = GOTO 1239
M [ 939 , <postfix-expr> ] = GOTO 1240
M [ 939 , <prim-expr> ] = GOTO 1241
M [ 939 , <rel-expr> ] = GOTO 1256
M [ 939 , <shift-expr> ] = GOTO 596
M [ 939 , <unary-expr> ] = GOTO 1242
M [ 939 , <unary-op> ] = GOTO 1243
M [ 939 , CHAR_CONST ] = SHIFT 1244
M [ 939 , DELIM_LPAR ] = SHIFT 1245
M [ 939 , FLOAT_CONST ] = SHIFT 1246
M [ 939 , IDENTIFIER ] = SHIFT 1247
M [ 939 , INT_CONST ] = SHIFT 1248
M [ 939 , OP_ADD ] = SHIFT 135
M [ 939 , OP_AND ] = SHIFT 136
M [ 939 , OP_DEC ] = SHIFT 1249
M [ 939 , OP_INC ] = SHIFT 1250
M [ 939 , OP_LNOT ] = SHIFT 139
M [ 939 , OP_MUL ] = SHIFT 140
M [ 939 , OP_NOT ] = SHIFT 141
M [ 939 , OP_SUB ] = SHIFT 142
M [ 939 , STR_LITERAL ] = SHIFT 1251
M [ 939 , sizeof ] = SHIFT 1252
M [ 940 , <additive-expr> ] = GOTO 579
M [ 940 , <and-expr> ] = GOTO 1257
M [ 940 , <cast-expr> ] = GOTO 582
M [ 940 , <constant> ] = GOTO 1237
M [ 940 , <eq-expr> ] = GOTO 585
M [ 940 , <multiplicative-expr> ] = GOTO 591
M [ 940 , <num-const> ] = GOTO 1239
M [ 940 , <postfix-expr> ] = GOTO 1240
M [ 940 , <prim-expr> ] = GOTO 1241
M [ 940 , <rel-expr> ] = GOTO 595
M [ 940 , <shift-expr> ] = GOTO 596
M [ 940 , <unary-expr> ] = GOTO 1242
M [ 940 , <unary-op> ] = GOTO 1243
M [ 940 , CHAR_CONST ] = SHIFT 1244
M [ 940 , DELIM_LPAR ] = SHIFT 1245
M [ 940 , FLOAT_CONST ] = SHIFT 1246
M [ 940 , IDENTIFIER ] = SHIFT 1247
M [ 940 , INT_CONST ] = SHIFT 1248
M [ 940 , OP_ADD ] = SHIFT 135
M [ 940 , OP_AND ] = SHIFT 136
M [ 940 , OP_DEC ] = SHIFT 1249
M [ 940 , OP_INC ] = SHIFT 1250
M [ 940 , OP_LNOT ] = SHIFT 139
M [ 940 , OP_MUL ] = SHIFT 140
M [ 940 , OP_NOT ] = SHIFT 141
M [ 940 , OP_SUB ] = SHIFT 142
M [ 940 , STR_LITERAL ] = SHIFT 1251
M [ 940 , sizeof ] = SHIFT 1252
M [ 941 , <additive-expr> ] = GOTO 96
M [ 941 , <and-expr> ] = GOTO 97
M [ 941 , <cast-expr> ] = GOTO 101
M [ 941 , <cond-expr> ] = GOTO 1258
M [ 941 , <constant> ] = GOTO 554
M [ 941 , <eq-expr> ] = GOTO 107
M [ 941 , <exc-or-expr> ] = GOTO 108
M [ 941 , <inc-or-expr> ] = GOTO 111
M [ 941 , <land-expr> ] = GOTO 115
M [ 941 , <lor-expr> ] = GOTO 116
M [ 941 , <multiplicative-expr> ] = GOTO 117
M [ 941 , <num-const> ] = GOTO 556
M [ 941 , <postfix-expr> ] = GOTO 557
M [ 941 , <prim-expr> ] = GOTO 558
M [ 941 , <rel-expr> ] = GOTO 121
M [ 941 , <shift-expr> ] = GOTO 123
M [ 941 , <unary-expr> ] = GOTO 559
M [ 941 , <unary-op> ] = GOTO 560
M [ 941 , CHAR_CONST ] = SHIFT 561
M [ 941 , DELIM_LPAR ] = SHIFT 562
M [ 941 , FLOAT_CONST ] = SHIFT 563
M [ 941 , IDENTIFIER ] = SHIFT 564
M [ 941 , INT_CONST ] = SHIFT 565
M [ 941 , OP_ADD ] = SHIFT 135
M [ 941 , OP_AND ] = SHIFT 136
M [ 941 , OP_DEC ] = SHIFT 566
M [ 941 , OP_INC ] = SHIFT 567
M [ 941 , OP_LNOT ] = SHIFT 139
M [ 941 , OP_MUL ] = SHIFT 140
M [ 941 , OP_NOT ] = SHIFT 141
M [ 941 , OP_SUB ] = SHIFT 142
M [ 941 , STR_LITERAL ] = SHIFT 568
M [ 941 , sizeof ] = SHIFT 569
M [ 942 , <additive-expr> ] = GOTO 579
M [ 942 , <and-expr> ] = GOTO 580
M [ 942 , <asn-expr> ] = GOTO 1259
M [ 942 , <cast-expr> ] = GOTO 582
M [ 942 , <cond-expr> ] = GOTO 583
M [ 942 , <constant> ] = GOTO 584
M [ 942 , <eq-expr> ] = GOTO 585
M [ 942 , <exc-or-expr> ] = GOTO 586
M [ 942 , <inc-or-expr> ] = GOTO 588
M [ 942 , <land-expr> ] = GOTO 589
M [ 942 , <lor-expr> ] = GOTO 590
M [ 942 , <multiplicative-expr> ] = GOTO 591
M [ 942 , <num-const> ] = GOTO 592
M [ 942 , <postfix-expr> ] = GOTO 593
M [ 942 , <prim-expr> ] = GOTO 594
M [ 942 , <rel-expr> ] = GOTO 595
M [ 942 , <shift-expr> ] = GOTO 596
M [ 942 , <unary-expr> ] = GOTO 597
M [ 942 , <unary-op> ] = GOTO 598
M [ 942 , CHAR_CONST ] = SHIFT 599
M [ 942 , DELIM_LPAR ] = SHIFT 600
M [ 942 , FLOAT_CONST ] = SHIFT 601
M [ 942 , IDENTIFIER ] = SHIFT 602
M [ 942 , INT_CONST ] = SHIFT 603
M [ 942 , OP_ADD ] = SHIFT 135
M [ 942 , OP_AND ] = SHIFT 136
M [ 942 , OP_DEC ] = SHIFT 604
M [ 942 , OP_INC ] = SHIFT 605
M [ 942 , OP_LNOT ] = SHIFT 139
M [ 942 , OP_MUL ] = SHIFT 140
M [ 942 , OP_NOT ] = SHIFT 141
M [ 942 , OP_SUB ] = SHIFT 142
M [ 942 , STR_LITERAL ] = SHIFT 606
M [ 942 , sizeof ] = SHIFT 607
M [ 943 , <additive-expr> ] = GOTO 579
M [ 943 , <and-expr> ] = GOTO 580
M [ 943 , <cast-expr> ] = GOTO 582
M [ 943 , <constant> ] = GOTO 1237
M [ 943 , <eq-expr> ] = GOTO 585
M [ 943 , <exc-or-expr> ] = GOTO 1260
M [ 943 , <multiplicative-expr> ] = GOTO 591
M [ 943 , <num-const> ] = GOTO 1239
M [ 943 , <postfix-expr> ] = GOTO 1240
M [ 943 , <prim-expr> ] = GOTO 1241
M [ 943 , <rel-expr> ] = GOTO 595
M [ 943 , <shift-expr> ] = GOTO 596
M [ 943 , <unary-expr> ] = GOTO 1242
M [ 943 , <unary-op> ] = GOTO 1243
M [ 943 , CHAR_CONST ] = SHIFT 1244
M [ 943 , DELIM_LPAR ] = SHIFT 1245
M [ 943 , FLOAT_CONST ] = SHIFT 1246
M [ 943 , IDENTIFIER ] = SHIFT 1247
M [ 943 , INT_CONST ] = SHIFT 1248
M [ 943 , OP_ADD ] = SHIFT 135
M [ 943 , OP_AND ] = SHIFT 136
M [ 943 , OP_DEC ] = SHIFT 1249
M [ 943 , OP_INC ] = SHIFT 1250
M [ 943 , OP_LNOT ] = SHIFT 139
M [ 943 , OP_MUL ] = SHIFT 140
M [ 943 , OP_NOT ] = SHIFT 141
M [ 943 , OP_SUB ] = SHIFT 142
M [ 943 , STR_LITERAL ] = SHIFT 1251
M [ 943 , sizeof ] = SHIFT 1252
M [ 944 , <additive-expr> ] = GOTO 579
M [ 944 , <and-expr> ] = GOTO 580
M [ 944 , <cast-expr> ] = GOTO 582
M [ 944 , <constant> ] = GOTO 1237
M [ 944 , <eq-expr> ] = GOTO 585
M [ 944 , <exc-or-expr> ] = GOTO 586
M [ 944 , <inc-or-expr> ] = GOTO 1261
M [ 944 , <multiplicative-expr> ] = GOTO 591
M [ 944 , <num-const> ] = GOTO 1239
M [ 944 , <postfix-expr> ] = GOTO 1240
M [ 944 , <prim-expr> ] = GOTO 1241
M [ 944 , <rel-expr> ] = GOTO 595
M [ 944 , <shift-expr> ] = GOTO 596
M [ 944 , <unary-expr> ] = GOTO 1242
M [ 944 , <unary-op> ] = GOTO 1243
M [ 944 , CHAR_CONST ] = SHIFT 1244
M [ 944 , DELIM_LPAR ] = SHIFT 1245
M [ 944 , FLOAT_CONST ] = SHIFT 1246
M [ 944 , IDENTIFIER ] = SHIFT 1247
M [ 944 , INT_CONST ] = SHIFT 1248
M [ 944 , OP_ADD ] = SHIFT 135
M [ 944 , OP_AND ] = SHIFT 136
M [ 944 , OP_DEC ] = SHIFT 1249
M [ 944 , OP_INC ] = SHIFT 1250
M [ 944 , OP_LNOT ] = SHIFT 139
M [ 944 , OP_MUL ] = SHIFT 140
M [ 944 , OP_NOT ] = SHIFT 141
M [ 944 , OP_SUB ] = SHIFT 142
M [ 944 , STR_LITERAL ] = SHIFT 1251
M [ 944 , sizeof ] = SHIFT 1252
M [ 945 , <additive-expr> ] = GOTO 579
M [ 945 , <and-expr> ] = GOTO 580
M [ 945 , <asn-expr> ] = GOTO 581
M [ 945 , <cast-expr> ] = GOTO 582
M [ 945 , <cond-expr> ] = GOTO 583
M [ 945 , <constant> ] = GOTO 584
M [ 945 , <eq-expr> ] = GOTO 585
M [ 945 , <exc-or-expr> ] = GOTO 586
M [ 945 , <expr> ] = GOTO 1262
M [ 945 , <inc-or-expr> ] = GOTO 588
M [ 945 , <land-expr> ] = GOTO 589
M [ 945 , <lor-expr> ] = GOTO 590
M [ 945 , <multiplicative-expr> ] = GOTO 591
M [ 945 , <num-const> ] = GOTO 592
M [ 945 , <postfix-expr> ] = GOTO 593
M [ 945 , <prim-expr> ] = GOTO 594
M [ 945 , <rel-expr> ] = GOTO 595
M [ 945 , <shift-expr> ] = GOTO 596
M [ 945 , <unary-expr> ] = GOTO 597
M [ 945 , <unary-op> ] = GOTO 598
M [ 945 , CHAR_CONST ] = SHIFT 599
M [ 945 , DELIM_LPAR ] = SHIFT 600
M [ 945 , FLOAT_CONST ] = SHIFT 601
M [ 945 , IDENTIFIER ] = SHIFT 602
M [ 945 , INT_CONST ] = SHIFT 603
M [ 945 , OP_ADD ] = SHIFT 135
M [ 945 , OP_AND ] = SHIFT 136
M [ 945 , OP_DEC ] = SHIFT 604
M [ 945 , OP_INC ] = SHIFT 605
M [ 945 , OP_LNOT ] = SHIFT 139
M [ 945 , OP_MUL ] = SHIFT 140
M [ 945 , OP_NOT ] = SHIFT 141
M [ 945 , OP_SUB ] = SHIFT 142
M [ 945 , STR_LITERAL ] = SHIFT 606
M [ 945 , sizeof ] = SHIFT 607
M [ 946 , <additive-expr> ] = GOTO 579
M [ 946 , <and-expr> ] = GOTO 580
M [ 946 , <cast-expr> ] = GOTO 582
M [ 946 , <constant> ] = GOTO 1237
M [ 946 , <eq-expr> ] = GOTO 585
M [ 946 , <exc-or-expr> ] = GOTO 586
M [ 946 , <inc-or-expr> ] = GOTO 588
M [ 946 , <land-expr> ] = GOTO 1263
M [ 946 , <multiplicative-expr> ] = GOTO 591
M [ 946 , <num-const> ] = GOTO 1239
M [ 946 , <postfix-expr> ] = GOTO 1240
M [ 946 , <prim-expr> ] = GOTO 1241
M [ 946 , <rel-expr> ] = GOTO 595
M [ 946 , <shift-expr> ] = GOTO 596
M [ 946 , <unary-expr> ] = GOTO 1242
M [ 946 , <unary-op> ] = GOTO 1243
M [ 946 , CHAR_CONST ] = SHIFT 1244
M [ 946 , DELIM_LPAR ] = SHIFT 1245
M [ 946 , FLOAT_CONST ] = SHIFT 1246
M [ 946 , IDENTIFIER ] = SHIFT 1247
M [ 946 , INT_CONST ] = SHIFT 1248
M [ 946 , OP_ADD ] = SHIFT 135
M [ 946 , OP_AND ] = SHIFT 136
M [ 946 , OP_DEC ] = SHIFT 1249
M [ 946 , OP_INC ] = SHIFT 1250
M [ 946 , OP_LNOT ] = SHIFT 139
M [ 946 , OP_MUL ] = SHIFT 140
M [ 946 , OP_NOT ] = SHIFT 141
M [ 946 , OP_SUB ] = SHIFT 142
M [ 946 , STR_LITERAL ] = SHIFT 1251
M [ 946 , sizeof ] = SHIFT 1252
M [ 947 , <cast-expr> ] = GOTO 1264
M [ 947 , <constant> ] = GOTO 1237
M [ 947 , <num-const> ] = GOTO 1239
M [ 947 , <postfix-expr> ] = GOTO 1240
M [ 947 , <prim-expr> ] = GOTO 1241
M [ 947 , <unary-expr> ] = GOTO 1242
M [ 947 , <unary-op> ] = GOTO 1243
M [ 947 , CHAR_CONST ] = SHIFT 1244
M [ 947 , DELIM_LPAR ] = SHIFT 1245
M [ 947 , FLOAT_CONST ] = SHIFT 1246
M [ 947 , IDENTIFIER ] = SHIFT 1247
M [ 947 , INT_CONST ] = SHIFT 1248
M [ 947 , OP_ADD ] = SHIFT 135
M [ 947 , OP_AND ] = SHIFT 136
M [ 947 , OP_DEC ] = SHIFT 1249
M [ 947 , OP_INC ] = SHIFT 1250
M [ 947 , OP_LNOT ] = SHIFT 139
M [ 947 , OP_MUL ] = SHIFT 140
M [ 947 , OP_NOT ] = SHIFT 141
M [ 947 , OP_SUB ] = SHIFT 142
M [ 947 , STR_LITERAL ] = SHIFT 1251
M [ 947 , sizeof ] = SHIFT 1252
M [ 948 , <cast-expr> ] = GOTO 1265
M [ 948 , <constant> ] = GOTO 1237
M [ 948 , <num-const> ] = GOTO 1239
M [ 948 , <postfix-expr> ] = GOTO 1240
M [ 948 , <prim-expr> ] = GOTO 1241
M [ 948 , <unary-expr> ] = GOTO 1242
M [ 948 , <unary-op> ] = GOTO 1243
M [ 948 , CHAR_CONST ] = SHIFT 1244
M [ 948 , DELIM_LPAR ] = SHIFT 1245
M [ 948 , FLOAT_CONST ] = SHIFT 1246
M [ 948 , IDENTIFIER ] = SHIFT 1247
M [ 948 , INT_CONST ] = SHIFT 1248
M [ 948 , OP_ADD ] = SHIFT 135
M [ 948 , OP_AND ] = SHIFT 136
M [ 948 , OP_DEC ] = SHIFT 1249
M [ 948 , OP_INC ] = SHIFT 1250
M [ 948 , OP_LNOT ] = SHIFT 139
M [ 948 , OP_MUL ] = SHIFT 140
M [ 948 , OP_NOT ] = SHIFT 141
M [ 948 , OP_SUB ] = SHIFT 142
M [ 948 , STR_LITERAL ] = SHIFT 1251
M [ 948 , sizeof ] = SHIFT 1252
M [ 949 , <cast-expr> ] = GOTO 1266
M [ 949 , <constant> ] = GOTO 1237
M [ 949 , <num-const> ] = GOTO 1239
M [ 949 , <postfix-expr> ] = GOTO 1240
M [ 949 , <prim-expr> ] = GOTO 1241
M [ 949 , <unary-expr> ] = GOTO 1242
M [ 949 , <unary-op> ] = GOTO 1243
M [ 949 , CHAR_CONST ] = SHIFT 1244
M [ 949 , DELIM_LPAR ] = SHIFT 1245
M [ 949 , FLOAT_CONST ] = SHIFT 1246
M [ 949 , IDENTIFIER ] = SHIFT 1247
M [ 949 , INT_CONST ] = SHIFT 1248
M [ 949 , OP_ADD ] = SHIFT 135
M [ 949 , OP_AND ] = SHIFT 136
M [ 949 , OP_DEC ] = SHIFT 1249
M [ 949 , OP_INC ] = SHIFT 1250
M [ 949 , OP_LNOT ] = SHIFT 139
M [ 949 , OP_MUL ] = SHIFT 140
M [ 949 , OP_NOT ] = SHIFT 141
M [ 949 , OP_SUB ] = SHIFT 142
M [ 949 , STR_LITERAL ] = SHIFT 1251
M [ 949 , sizeof ] = SHIFT 1252
M [ 950 , <additive-expr> ] = GOTO 299
M [ 950 , <and-expr> ] = GOTO 300
M [ 950 , <arg-expr-list> ] = GOTO 1267
M [ 950 , <asn-expr> ] = GOTO 613
M [ 950 , <cast-expr> ] = GOTO 302
M [ 950 , <cond-expr> ] = GOTO 303
M [ 950 , <constant> ] = GOTO 304
M [ 950 , <eq-expr> ] = GOTO 306
M [ 950 , <exc-or-expr> ] = GOTO 307
M [ 950 , <inc-or-expr> ] = GOTO 309
M [ 950 , <land-expr> ] = GOTO 310
M [ 950 , <lor-expr> ] = GOTO 311
M [ 950 , <multiplicative-expr> ] = GOTO 312
M [ 950 , <num-const> ] = GOTO 313
M [ 950 , <postfix-expr> ] = GOTO 314
M [ 950 , <prim-expr> ] = GOTO 315
M [ 950 , <rel-expr> ] = GOTO 316
M [ 950 , <shift-expr> ] = GOTO 317
M [ 950 , <unary-expr> ] = GOTO 324
M [ 950 , <unary-op> ] = GOTO 325
M [ 950 , CHAR_CONST ] = SHIFT 326
M [ 950 , DELIM_LPAR ] = SHIFT 327
M [ 950 , DELIM_RPAR ] = SHIFT 1268
M [ 950 , FLOAT_CONST ] = SHIFT 328
M [ 950 , IDENTIFIER ] = SHIFT 329
M [ 950 , INT_CONST ] = SHIFT 330
M [ 950 , OP_ADD ] = SHIFT 135
M [ 950 , OP_AND ] = SHIFT 136
M [ 950 , OP_DEC ] = SHIFT 331
M [ 950 , OP_INC ] = SHIFT 332
M [ 950 , OP_LNOT ] = SHIFT 139
M [ 950 , OP_MUL ] = SHIFT 140
M [ 950 , OP_NOT ] = SHIFT 141
M [ 950 , OP_SUB ] = SHIFT 142
M [ 950 , STR_LITERAL ] = SHIFT 333
M [ 950 , sizeof ] = SHIFT 343
M [ 951 , <additive-expr> ] = GOTO 615
M [ 951 , <and-expr> ] = GOTO 616
M [ 951 , <asn-expr> ] = GOTO 617
M [ 951 , <cast-expr> ] = GOTO 618
M [ 951 , <cond-expr> ] = GOTO 619
M [ 951 , <constant> ] = GOTO 620
M [ 951 , <eq-expr> ] = GOTO 621
M [ 951 , <exc-or-expr> ] = GOTO 622
M [ 951 , <expr> ] = GOTO 1269
M [ 951 , <inc-or-expr> ] = GOTO 624
M [ 951 , <land-expr> ] = GOTO 625
M [ 951 , <lor-expr> ] = GOTO 626
M [ 951 , <multiplicative-expr> ] = GOTO 627
M [ 951 , <num-const> ] = GOTO 628
M [ 951 , <postfix-expr> ] = GOTO 629
M [ 951 , <prim-expr> ] = GOTO 630
M [ 951 , <rel-expr> ] = GOTO 631
M [ 951 , <shift-expr> ] = GOTO 632
M [ 951 , <unary-expr> ] = GOTO 633
M [ 951 , <unary-op> ] = GOTO 634
M [ 951 , CHAR_CONST ] = SHIFT 635
M [ 951 , DELIM_LPAR ] = SHIFT 636
M [ 951 , FLOAT_CONST ] = SHIFT 637
M [ 951 , IDENTIFIER ] = SHIFT 638
M [ 951 , INT_CONST ] = SHIFT 639
M [ 951 , OP_ADD ] = SHIFT 135
M [ 951 , OP_AND ] = SHIFT 136
M [ 951 , OP_DEC ] = SHIFT 640
M [ 951 , OP_INC ] = SHIFT 641
M [ 951 , OP_LNOT ] = SHIFT 139
M [ 951 , OP_MUL ] = SHIFT 140
M [ 951 , OP_NOT ] = SHIFT 141
M [ 951 , OP_SUB ] = SHIFT 142
M [ 951 , STR_LITERAL ] = SHIFT 642
M [ 951 , sizeof ] = SHIFT 643
M [ 952 , IDENTIFIER ] = SHIFT 1270
M [ 953 , DELIM_COLON ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 953 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 954 , IDENTIFIER ] = SHIFT 1271
M [ 955 , DELIM_COLON ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 955 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 956 , <additive-expr> ] = GOTO 579
M [ 956 , <cast-expr> ] = GOTO 582
M [ 956 , <constant> ] = GOTO 1237
M [ 956 , <multiplicative-expr> ] = GOTO 591
M [ 956 , <num-const> ] = GOTO 1239
M [ 956 , <postfix-expr> ] = GOTO 1240
M [ 956 , <prim-expr> ] = GOTO 1241
M [ 956 , <shift-expr> ] = GOTO 1272
M [ 956 , <unary-expr> ] = GOTO 1242
M [ 956 , <unary-op> ] = GOTO 1243
M [ 956 , CHAR_CONST ] = SHIFT 1244
M [ 956 , DELIM_LPAR ] = SHIFT 1245
M [ 956 , FLOAT_CONST ] = SHIFT 1246
M [ 956 , IDENTIFIER ] = SHIFT 1247
M [ 956 , INT_CONST ] = SHIFT 1248
M [ 956 , OP_ADD ] = SHIFT 135
M [ 956 , OP_AND ] = SHIFT 136
M [ 956 , OP_DEC ] = SHIFT 1249
M [ 956 , OP_INC ] = SHIFT 1250
M [ 956 , OP_LNOT ] = SHIFT 139
M [ 956 , OP_MUL ] = SHIFT 140
M [ 956 , OP_NOT ] = SHIFT 141
M [ 956 , OP_SUB ] = SHIFT 142
M [ 956 , STR_LITERAL ] = SHIFT 1251
M [ 956 , sizeof ] = SHIFT 1252
M [ 957 , <additive-expr> ] = GOTO 579
M [ 957 , <cast-expr> ] = GOTO 582
M [ 957 , <constant> ] = GOTO 1237
M [ 957 , <multiplicative-expr> ] = GOTO 591
M [ 957 , <num-const> ] = GOTO 1239
M [ 957 , <postfix-expr> ] = GOTO 1240
M [ 957 , <prim-expr> ] = GOTO 1241
M [ 957 , <shift-expr> ] = GOTO 1273
M [ 957 , <unary-expr> ] = GOTO 1242
M [ 957 , <unary-op> ] = GOTO 1243
M [ 957 , CHAR_CONST ] = SHIFT 1244
M [ 957 , DELIM_LPAR ] = SHIFT 1245
M [ 957 , FLOAT_CONST ] = SHIFT 1246
M [ 957 , IDENTIFIER ] = SHIFT 1247
M [ 957 , INT_CONST ] = SHIFT 1248
M [ 957 , OP_ADD ] = SHIFT 135
M [ 957 , OP_AND ] = SHIFT 136
M [ 957 , OP_DEC ] = SHIFT 1249
M [ 957 , OP_INC ] = SHIFT 1250
M [ 957 , OP_LNOT ] = SHIFT 139
M [ 957 , OP_MUL ] = SHIFT 140
M [ 957 , OP_NOT ] = SHIFT 141
M [ 957 , OP_SUB ] = SHIFT 142
M [ 957 , STR_LITERAL ] = SHIFT 1251
M [ 957 , sizeof ] = SHIFT 1252
M [ 958 , <additive-expr> ] = GOTO 579
M [ 958 , <cast-expr> ] = GOTO 582
M [ 958 , <constant> ] = GOTO 1237
M [ 958 , <multiplicative-expr> ] = GOTO 591
M [ 958 , <num-const> ] = GOTO 1239
M [ 958 , <postfix-expr> ] = GOTO 1240
M [ 958 , <prim-expr> ] = GOTO 1241
M [ 958 , <shift-expr> ] = GOTO 1274
M [ 958 , <unary-expr> ] = GOTO 1242
M [ 958 , <unary-op> ] = GOTO 1243
M [ 958 , CHAR_CONST ] = SHIFT 1244
M [ 958 , DELIM_LPAR ] = SHIFT 1245
M [ 958 , FLOAT_CONST ] = SHIFT 1246
M [ 958 , IDENTIFIER ] = SHIFT 1247
M [ 958 , INT_CONST ] = SHIFT 1248
M [ 958 , OP_ADD ] = SHIFT 135
M [ 958 , OP_AND ] = SHIFT 136
M [ 958 , OP_DEC ] = SHIFT 1249
M [ 958 , OP_INC ] = SHIFT 1250
M [ 958 , OP_LNOT ] = SHIFT 139
M [ 958 , OP_MUL ] = SHIFT 140
M [ 958 , OP_NOT ] = SHIFT 141
M [ 958 , OP_SUB ] = SHIFT 142
M [ 958 , STR_LITERAL ] = SHIFT 1251
M [ 958 , sizeof ] = SHIFT 1252
M [ 959 , <additive-expr> ] = GOTO 579
M [ 959 , <cast-expr> ] = GOTO 582
M [ 959 , <constant> ] = GOTO 1237
M [ 959 , <multiplicative-expr> ] = GOTO 591
M [ 959 , <num-const> ] = GOTO 1239
M [ 959 , <postfix-expr> ] = GOTO 1240
M [ 959 , <prim-expr> ] = GOTO 1241
M [ 959 , <shift-expr> ] = GOTO 1275
M [ 959 , <unary-expr> ] = GOTO 1242
M [ 959 , <unary-op> ] = GOTO 1243
M [ 959 , CHAR_CONST ] = SHIFT 1244
M [ 959 , DELIM_LPAR ] = SHIFT 1245
M [ 959 , FLOAT_CONST ] = SHIFT 1246
M [ 959 , IDENTIFIER ] = SHIFT 1247
M [ 959 , INT_CONST ] = SHIFT 1248
M [ 959 , OP_ADD ] = SHIFT 135
M [ 959 , OP_AND ] = SHIFT 136
M [ 959 , OP_DEC ] = SHIFT 1249
M [ 959 , OP_INC ] = SHIFT 1250
M [ 959 , OP_LNOT ] = SHIFT 139
M [ 959 , OP_MUL ] = SHIFT 140
M [ 959 , OP_NOT ] = SHIFT 141
M [ 959 , OP_SUB ] = SHIFT 142
M [ 959 , STR_LITERAL ] = SHIFT 1251
M [ 959 , sizeof ] = SHIFT 1252
M [ 960 , <additive-expr> ] = GOTO 1276
M [ 960 , <cast-expr> ] = GOTO 582
M [ 960 , <constant> ] = GOTO 1237
M [ 960 , <multiplicative-expr> ] = GOTO 591
M [ 960 , <num-const> ] = GOTO 1239
M [ 960 , <postfix-expr> ] = GOTO 1240
M [ 960 , <prim-expr> ] = GOTO 1241
M [ 960 , <unary-expr> ] = GOTO 1242
M [ 960 , <unary-op> ] = GOTO 1243
M [ 960 , CHAR_CONST ] = SHIFT 1244
M [ 960 , DELIM_LPAR ] = SHIFT 1245
M [ 960 , FLOAT_CONST ] = SHIFT 1246
M [ 960 , IDENTIFIER ] = SHIFT 1247
M [ 960 , INT_CONST ] = SHIFT 1248
M [ 960 , OP_ADD ] = SHIFT 135
M [ 960 , OP_AND ] = SHIFT 136
M [ 960 , OP_DEC ] = SHIFT 1249
M [ 960 , OP_INC ] = SHIFT 1250
M [ 960 , OP_LNOT ] = SHIFT 139
M [ 960 , OP_MUL ] = SHIFT 140
M [ 960 , OP_NOT ] = SHIFT 141
M [ 960 , OP_SUB ] = SHIFT 142
M [ 960 , STR_LITERAL ] = SHIFT 1251
M [ 960 , sizeof ] = SHIFT 1252
M [ 961 , <additive-expr> ] = GOTO 1277
M [ 961 , <cast-expr> ] = GOTO 582
M [ 961 , <constant> ] = GOTO 1237
M [ 961 , <multiplicative-expr> ] = GOTO 591
M [ 961 , <num-const> ] = GOTO 1239
M [ 961 , <postfix-expr> ] = GOTO 1240
M [ 961 , <prim-expr> ] = GOTO 1241
M [ 961 , <unary-expr> ] = GOTO 1242
M [ 961 , <unary-op> ] = GOTO 1243
M [ 961 , CHAR_CONST ] = SHIFT 1244
M [ 961 , DELIM_LPAR ] = SHIFT 1245
M [ 961 , FLOAT_CONST ] = SHIFT 1246
M [ 961 , IDENTIFIER ] = SHIFT 1247
M [ 961 , INT_CONST ] = SHIFT 1248
M [ 961 , OP_ADD ] = SHIFT 135
M [ 961 , OP_AND ] = SHIFT 136
M [ 961 , OP_DEC ] = SHIFT 1249
M [ 961 , OP_INC ] = SHIFT 1250
M [ 961 , OP_LNOT ] = SHIFT 139
M [ 961 , OP_MUL ] = SHIFT 140
M [ 961 , OP_NOT ] = SHIFT 141
M [ 961 , OP_SUB ] = SHIFT 142
M [ 961 , STR_LITERAL ] = SHIFT 1251
M [ 961 , sizeof ] = SHIFT 1252
M [ 962 , <additive-expr> ] = GOTO 579
M [ 962 , <and-expr> ] = GOTO 580
M [ 962 , <asn-expr> ] = GOTO 1278
M [ 962 , <cast-expr> ] = GOTO 582
M [ 962 , <cond-expr> ] = GOTO 583
M [ 962 , <constant> ] = GOTO 584
M [ 962 , <eq-expr> ] = GOTO 585
M [ 962 , <exc-or-expr> ] = GOTO 586
M [ 962 , <inc-or-expr> ] = GOTO 588
M [ 962 , <land-expr> ] = GOTO 589
M [ 962 , <lor-expr> ] = GOTO 590
M [ 962 , <multiplicative-expr> ] = GOTO 591
M [ 962 , <num-const> ] = GOTO 592
M [ 962 , <postfix-expr> ] = GOTO 593
M [ 962 , <prim-expr> ] = GOTO 594
M [ 962 , <rel-expr> ] = GOTO 595
M [ 962 , <shift-expr> ] = GOTO 596
M [ 962 , <unary-expr> ] = GOTO 597
M [ 962 , <unary-op> ] = GOTO 598
M [ 962 , CHAR_CONST ] = SHIFT 599
M [ 962 , DELIM_LPAR ] = SHIFT 600
M [ 962 , FLOAT_CONST ] = SHIFT 601
M [ 962 , IDENTIFIER ] = SHIFT 602
M [ 962 , INT_CONST ] = SHIFT 603
M [ 962 , OP_ADD ] = SHIFT 135
M [ 962 , OP_AND ] = SHIFT 136
M [ 962 , OP_DEC ] = SHIFT 604
M [ 962 , OP_INC ] = SHIFT 605
M [ 962 , OP_LNOT ] = SHIFT 139
M [ 962 , OP_MUL ] = SHIFT 140
M [ 962 , OP_NOT ] = SHIFT 141
M [ 962 , OP_SUB ] = SHIFT 142
M [ 962 , STR_LITERAL ] = SHIFT 606
M [ 962 , sizeof ] = SHIFT 607
M [ 963 , DELIM_COLON ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , DELIM_COMMA ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , DELIM_QUESTION ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_ADD ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_ADDASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_AND ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_ANDASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_ASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_DIV ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_DIVASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_EQ ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_GE ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_GT ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_LAND ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_LE ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_LOR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_LT ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_MOD ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_MODASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_MUL ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_MULASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_NEQ ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_OR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_ORASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_SHL ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_SHLASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_SHR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_SHRASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_SUB ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_SUBASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_XOR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 963 , OP_XORASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 964 , DELIM_COLON ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , DELIM_COMMA ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , DELIM_QUESTION ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_ADD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_ADDASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_AND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_ANDASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_ASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_DIV ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_DIVASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_EQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_GE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_GT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_LAND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_LE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_LOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_LT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_MOD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_MODASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_MUL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_MULASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_NEQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_OR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_ORASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_SHL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_SHLASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_SHR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_SHRASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_SUB ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_SUBASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_XOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 964 , OP_XORASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 965 , <additive-expr> ] = GOTO 299
M [ 965 , <and-expr> ] = GOTO 300
M [ 965 , <asn-expr> ] = GOTO 301
M [ 965 , <cast-expr> ] = GOTO 302
M [ 965 , <cond-expr> ] = GOTO 303
M [ 965 , <constant> ] = GOTO 304
M [ 965 , <enum-spec> ] = GOTO 305
M [ 965 , <eq-expr> ] = GOTO 306
M [ 965 , <exc-or-expr> ] = GOTO 307
M [ 965 , <expr> ] = GOTO 966
M [ 965 , <inc-or-expr> ] = GOTO 309
M [ 965 , <land-expr> ] = GOTO 310
M [ 965 , <lor-expr> ] = GOTO 311
M [ 965 , <multiplicative-expr> ] = GOTO 312
M [ 965 , <num-const> ] = GOTO 313
M [ 965 , <postfix-expr> ] = GOTO 314
M [ 965 , <prim-expr> ] = GOTO 315
M [ 965 , <rel-expr> ] = GOTO 316
M [ 965 , <shift-expr> ] = GOTO 317
M [ 965 , <spec-qual-list> ] = GOTO 318
M [ 965 , <struct-union-spec> ] = GOTO 319
M [ 965 , <struct-union> ] = GOTO 320
M [ 965 , <type-name> ] = GOTO 1279
M [ 965 , <type-qual> ] = GOTO 322
M [ 965 , <type-spec> ] = GOTO 323
M [ 965 , <unary-expr> ] = GOTO 324
M [ 965 , <unary-op> ] = GOTO 325
M [ 965 , CHAR_CONST ] = SHIFT 326
M [ 965 , DELIM_LPAR ] = SHIFT 327
M [ 965 , FLOAT_CONST ] = SHIFT 328
M [ 965 , IDENTIFIER ] = SHIFT 329
M [ 965 , INT_CONST ] = SHIFT 330
M [ 965 , OP_ADD ] = SHIFT 135
M [ 965 , OP_AND ] = SHIFT 136
M [ 965 , OP_DEC ] = SHIFT 331
M [ 965 , OP_INC ] = SHIFT 332
M [ 965 , OP_LNOT ] = SHIFT 139
M [ 965 , OP_MUL ] = SHIFT 140
M [ 965 , OP_NOT ] = SHIFT 141
M [ 965 , OP_SUB ] = SHIFT 142
M [ 965 , STR_LITERAL ] = SHIFT 333
M [ 965 , char ] = SHIFT 334
M [ 965 , const ] = SHIFT 335
M [ 965 , double ] = SHIFT 336
M [ 965 , enum ] = SHIFT 337
M [ 965 , float ] = SHIFT 338
M [ 965 , int ] = SHIFT 339
M [ 965 , long ] = SHIFT 340
M [ 965 , short ] = SHIFT 341
M [ 965 , signed ] = SHIFT 342
M [ 965 , sizeof ] = SHIFT 343
M [ 965 , struct ] = SHIFT 21
M [ 965 , unsigned ] = SHIFT 344
M [ 965 , void ] = SHIFT 345
M [ 966 , DELIM_COMMA ] = SHIFT 661
M [ 966 , DELIM_RPAR ] = SHIFT 1280
M [ 967 , DELIM_RPAR ] = SHIFT 1281
M [ 968 , DELIM_COLON ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , DELIM_COMMA ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , DELIM_QUESTION ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_ADD ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_ADDASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_AND ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_ANDASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_ASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_DIV ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_DIVASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_EQ ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_GE ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_GT ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_LAND ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_LE ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_LOR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_LT ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_MOD ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_MODASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_MUL ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_MULASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_NEQ ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_OR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_ORASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_SHL ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_SHLASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_SHR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_SHRASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_SUB ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_SUBASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_XOR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 968 , OP_XORASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 969 , <additive-expr> ] = GOTO 299
M [ 969 , <and-expr> ] = GOTO 300
M [ 969 , <asn-expr> ] = GOTO 301
M [ 969 , <cast-expr> ] = GOTO 302
M [ 969 , <cond-expr> ] = GOTO 303
M [ 969 , <constant> ] = GOTO 304
M [ 969 , <enum-spec> ] = GOTO 305
M [ 969 , <eq-expr> ] = GOTO 306
M [ 969 , <exc-or-expr> ] = GOTO 307
M [ 969 , <expr> ] = GOTO 966
M [ 969 , <inc-or-expr> ] = GOTO 309
M [ 969 , <land-expr> ] = GOTO 310
M [ 969 , <lor-expr> ] = GOTO 311
M [ 969 , <multiplicative-expr> ] = GOTO 312
M [ 969 , <num-const> ] = GOTO 313
M [ 969 , <postfix-expr> ] = GOTO 314
M [ 969 , <prim-expr> ] = GOTO 315
M [ 969 , <rel-expr> ] = GOTO 316
M [ 969 , <shift-expr> ] = GOTO 317
M [ 969 , <spec-qual-list> ] = GOTO 318
M [ 969 , <struct-union-spec> ] = GOTO 319
M [ 969 , <struct-union> ] = GOTO 320
M [ 969 , <type-name> ] = GOTO 1282
M [ 969 , <type-qual> ] = GOTO 322
M [ 969 , <type-spec> ] = GOTO 323
M [ 969 , <unary-expr> ] = GOTO 324
M [ 969 , <unary-op> ] = GOTO 325
M [ 969 , CHAR_CONST ] = SHIFT 326
M [ 969 , DELIM_LPAR ] = SHIFT 327
M [ 969 , FLOAT_CONST ] = SHIFT 328
M [ 969 , IDENTIFIER ] = SHIFT 329
M [ 969 , INT_CONST ] = SHIFT 330
M [ 969 , OP_ADD ] = SHIFT 135
M [ 969 , OP_AND ] = SHIFT 136
M [ 969 , OP_DEC ] = SHIFT 331
M [ 969 , OP_INC ] = SHIFT 332
M [ 969 , OP_LNOT ] = SHIFT 139
M [ 969 , OP_MUL ] = SHIFT 140
M [ 969 , OP_NOT ] = SHIFT 141
M [ 969 , OP_SUB ] = SHIFT 142
M [ 969 , STR_LITERAL ] = SHIFT 333
M [ 969 , char ] = SHIFT 334
M [ 969 , const ] = SHIFT 335
M [ 969 , double ] = SHIFT 336
M [ 969 , enum ] = SHIFT 337
M [ 969 , float ] = SHIFT 338
M [ 969 , int ] = SHIFT 339
M [ 969 , long ] = SHIFT 340
M [ 969 , short ] = SHIFT 341
M [ 969 , signed ] = SHIFT 342
M [ 969 , sizeof ] = SHIFT 343
M [ 969 , struct ] = SHIFT 21
M [ 969 , unsigned ] = SHIFT 344
M [ 969 , void ] = SHIFT 345
M [ 970 , DELIM_COLON ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , DELIM_COMMA ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , DELIM_QUESTION ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_ADD ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_ADDASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_AND ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_ANDASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_ASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_DIV ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_DIVASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_EQ ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_GE ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_GT ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_LAND ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_LE ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_LOR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_LT ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_MOD ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_MODASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_MUL ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_MULASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_NEQ ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_OR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_ORASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_SHL ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_SHLASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_SHR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_SHRASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_SUB ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_SUBASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_XOR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 970 , OP_XORASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 971 , DELIM_COLON ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , DELIM_COMMA ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , DELIM_QUESTION ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_ADD ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_ADDASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_AND ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_ANDASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_ASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_DIV ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_DIVASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_EQ ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_GE ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_GT ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_LAND ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_LE ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_LOR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_LT ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_MOD ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_MODASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_MUL ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_MULASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_NEQ ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_OR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_ORASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_SHL ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_SHLASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_SHR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_SHRASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_SUB ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_SUBASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_XOR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 971 , OP_XORASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 972 , <additive-expr> ] = GOTO 299
M [ 972 , <and-expr> ] = GOTO 300
M [ 972 , <asn-expr> ] = GOTO 301
M [ 972 , <cast-expr> ] = GOTO 302
M [ 972 , <cond-expr> ] = GOTO 303
M [ 972 , <constant> ] = GOTO 304
M [ 972 , <enum-spec> ] = GOTO 305
M [ 972 , <eq-expr> ] = GOTO 306
M [ 972 , <exc-or-expr> ] = GOTO 307
M [ 972 , <expr> ] = GOTO 966
M [ 972 , <inc-or-expr> ] = GOTO 309
M [ 972 , <land-expr> ] = GOTO 310
M [ 972 , <lor-expr> ] = GOTO 311
M [ 972 , <multiplicative-expr> ] = GOTO 312
M [ 972 , <num-const> ] = GOTO 313
M [ 972 , <postfix-expr> ] = GOTO 314
M [ 972 , <prim-expr> ] = GOTO 315
M [ 972 , <rel-expr> ] = GOTO 316
M [ 972 , <shift-expr> ] = GOTO 317
M [ 972 , <spec-qual-list> ] = GOTO 318
M [ 972 , <struct-union-spec> ] = GOTO 319
M [ 972 , <struct-union> ] = GOTO 320
M [ 972 , <type-name> ] = GOTO 1283
M [ 972 , <type-qual> ] = GOTO 322
M [ 972 , <type-spec> ] = GOTO 323
M [ 972 , <unary-expr> ] = GOTO 324
M [ 972 , <unary-op> ] = GOTO 325
M [ 972 , CHAR_CONST ] = SHIFT 326
M [ 972 , DELIM_LPAR ] = SHIFT 327
M [ 972 , FLOAT_CONST ] = SHIFT 328
M [ 972 , IDENTIFIER ] = SHIFT 329
M [ 972 , INT_CONST ] = SHIFT 330
M [ 972 , OP_ADD ] = SHIFT 135
M [ 972 , OP_AND ] = SHIFT 136
M [ 972 , OP_DEC ] = SHIFT 331
M [ 972 , OP_INC ] = SHIFT 332
M [ 972 , OP_LNOT ] = SHIFT 139
M [ 972 , OP_MUL ] = SHIFT 140
M [ 972 , OP_NOT ] = SHIFT 141
M [ 972 , OP_SUB ] = SHIFT 142
M [ 972 , STR_LITERAL ] = SHIFT 333
M [ 972 , char ] = SHIFT 334
M [ 972 , const ] = SHIFT 335
M [ 972 , double ] = SHIFT 336
M [ 972 , enum ] = SHIFT 337
M [ 972 , float ] = SHIFT 338
M [ 972 , int ] = SHIFT 339
M [ 972 , long ] = SHIFT 340
M [ 972 , short ] = SHIFT 341
M [ 972 , signed ] = SHIFT 342
M [ 972 , sizeof ] = SHIFT 343
M [ 972 , struct ] = SHIFT 21
M [ 972 , unsigned ] = SHIFT 344
M [ 972 , void ] = SHIFT 345
M [ 973 , <additive-expr> ] = GOTO 299
M [ 973 , <and-expr> ] = GOTO 300
M [ 973 , <asn-expr> ] = GOTO 1284
M [ 973 , <cast-expr> ] = GOTO 302
M [ 973 , <cond-expr> ] = GOTO 303
M [ 973 , <constant> ] = GOTO 304
M [ 973 , <eq-expr> ] = GOTO 306
M [ 973 , <exc-or-expr> ] = GOTO 307
M [ 973 , <inc-or-expr> ] = GOTO 309
M [ 973 , <land-expr> ] = GOTO 310
M [ 973 , <lor-expr> ] = GOTO 311
M [ 973 , <multiplicative-expr> ] = GOTO 312
M [ 973 , <num-const> ] = GOTO 313
M [ 973 , <postfix-expr> ] = GOTO 314
M [ 973 , <prim-expr> ] = GOTO 315
M [ 973 , <rel-expr> ] = GOTO 316
M [ 973 , <shift-expr> ] = GOTO 317
M [ 973 , <unary-expr> ] = GOTO 324
M [ 973 , <unary-op> ] = GOTO 325
M [ 973 , CHAR_CONST ] = SHIFT 326
M [ 973 , DELIM_LPAR ] = SHIFT 327
M [ 973 , FLOAT_CONST ] = SHIFT 328
M [ 973 , IDENTIFIER ] = SHIFT 329
M [ 973 , INT_CONST ] = SHIFT 330
M [ 973 , OP_ADD ] = SHIFT 135
M [ 973 , OP_AND ] = SHIFT 136
M [ 973 , OP_DEC ] = SHIFT 331
M [ 973 , OP_INC ] = SHIFT 332
M [ 973 , OP_LNOT ] = SHIFT 139
M [ 973 , OP_MUL ] = SHIFT 140
M [ 973 , OP_NOT ] = SHIFT 141
M [ 973 , OP_SUB ] = SHIFT 142
M [ 973 , STR_LITERAL ] = SHIFT 333
M [ 973 , sizeof ] = SHIFT 343
M [ 974 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , DELIM_SEMICOLON ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 974 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 975 , <cast-expr> ] = GOTO 618
M [ 975 , <constant> ] = GOTO 1285
M [ 975 , <multiplicative-expr> ] = GOTO 1286
M [ 975 , <num-const> ] = GOTO 1287
M [ 975 , <postfix-expr> ] = GOTO 1288
M [ 975 , <prim-expr> ] = GOTO 1289
M [ 975 , <unary-expr> ] = GOTO 1290
M [ 975 , <unary-op> ] = GOTO 1291
M [ 975 , CHAR_CONST ] = SHIFT 1292
M [ 975 , DELIM_LPAR ] = SHIFT 1293
M [ 975 , FLOAT_CONST ] = SHIFT 1294
M [ 975 , IDENTIFIER ] = SHIFT 1295
M [ 975 , INT_CONST ] = SHIFT 1296
M [ 975 , OP_ADD ] = SHIFT 135
M [ 975 , OP_AND ] = SHIFT 136
M [ 975 , OP_DEC ] = SHIFT 1297
M [ 975 , OP_INC ] = SHIFT 1298
M [ 975 , OP_LNOT ] = SHIFT 139
M [ 975 , OP_MUL ] = SHIFT 140
M [ 975 , OP_NOT ] = SHIFT 141
M [ 975 , OP_SUB ] = SHIFT 142
M [ 975 , STR_LITERAL ] = SHIFT 1299
M [ 975 , sizeof ] = SHIFT 1300
M [ 976 , <cast-expr> ] = GOTO 618
M [ 976 , <constant> ] = GOTO 1285
M [ 976 , <multiplicative-expr> ] = GOTO 1301
M [ 976 , <num-const> ] = GOTO 1287
M [ 976 , <postfix-expr> ] = GOTO 1288
M [ 976 , <prim-expr> ] = GOTO 1289
M [ 976 , <unary-expr> ] = GOTO 1290
M [ 976 , <unary-op> ] = GOTO 1291
M [ 976 , CHAR_CONST ] = SHIFT 1292
M [ 976 , DELIM_LPAR ] = SHIFT 1293
M [ 976 , FLOAT_CONST ] = SHIFT 1294
M [ 976 , IDENTIFIER ] = SHIFT 1295
M [ 976 , INT_CONST ] = SHIFT 1296
M [ 976 , OP_ADD ] = SHIFT 135
M [ 976 , OP_AND ] = SHIFT 136
M [ 976 , OP_DEC ] = SHIFT 1297
M [ 976 , OP_INC ] = SHIFT 1298
M [ 976 , OP_LNOT ] = SHIFT 139
M [ 976 , OP_MUL ] = SHIFT 140
M [ 976 , OP_NOT ] = SHIFT 141
M [ 976 , OP_SUB ] = SHIFT 142
M [ 976 , STR_LITERAL ] = SHIFT 1299
M [ 976 , sizeof ] = SHIFT 1300
M [ 977 , <additive-expr> ] = GOTO 615
M [ 977 , <cast-expr> ] = GOTO 618
M [ 977 , <constant> ] = GOTO 1285
M [ 977 , <eq-expr> ] = GOTO 1302
M [ 977 , <multiplicative-expr> ] = GOTO 627
M [ 977 , <num-const> ] = GOTO 1287
M [ 977 , <postfix-expr> ] = GOTO 1288
M [ 977 , <prim-expr> ] = GOTO 1289
M [ 977 , <rel-expr> ] = GOTO 631
M [ 977 , <shift-expr> ] = GOTO 632
M [ 977 , <unary-expr> ] = GOTO 1290
M [ 977 , <unary-op> ] = GOTO 1291
M [ 977 , CHAR_CONST ] = SHIFT 1292
M [ 977 , DELIM_LPAR ] = SHIFT 1293
M [ 977 , FLOAT_CONST ] = SHIFT 1294
M [ 977 , IDENTIFIER ] = SHIFT 1295
M [ 977 , INT_CONST ] = SHIFT 1296
M [ 977 , OP_ADD ] = SHIFT 135
M [ 977 , OP_AND ] = SHIFT 136
M [ 977 , OP_DEC ] = SHIFT 1297
M [ 977 , OP_INC ] = SHIFT 1298
M [ 977 , OP_LNOT ] = SHIFT 139
M [ 977 , OP_MUL ] = SHIFT 140
M [ 977 , OP_NOT ] = SHIFT 141
M [ 977 , OP_SUB ] = SHIFT 142
M [ 977 , STR_LITERAL ] = SHIFT 1299
M [ 977 , sizeof ] = SHIFT 1300
M [ 978 , <additive-expr> ] = GOTO 615
M [ 978 , <cast-expr> ] = GOTO 618
M [ 978 , <constant> ] = GOTO 1285
M [ 978 , <multiplicative-expr> ] = GOTO 627
M [ 978 , <num-const> ] = GOTO 1287
M [ 978 , <postfix-expr> ] = GOTO 1288
M [ 978 , <prim-expr> ] = GOTO 1289
M [ 978 , <rel-expr> ] = GOTO 1303
M [ 978 , <shift-expr> ] = GOTO 632
M [ 978 , <unary-expr> ] = GOTO 1290
M [ 978 , <unary-op> ] = GOTO 1291
M [ 978 , CHAR_CONST ] = SHIFT 1292
M [ 978 , DELIM_LPAR ] = SHIFT 1293
M [ 978 , FLOAT_CONST ] = SHIFT 1294
M [ 978 , IDENTIFIER ] = SHIFT 1295
M [ 978 , INT_CONST ] = SHIFT 1296
M [ 978 , OP_ADD ] = SHIFT 135
M [ 978 , OP_AND ] = SHIFT 136
M [ 978 , OP_DEC ] = SHIFT 1297
M [ 978 , OP_INC ] = SHIFT 1298
M [ 978 , OP_LNOT ] = SHIFT 139
M [ 978 , OP_MUL ] = SHIFT 140
M [ 978 , OP_NOT ] = SHIFT 141
M [ 978 , OP_SUB ] = SHIFT 142
M [ 978 , STR_LITERAL ] = SHIFT 1299
M [ 978 , sizeof ] = SHIFT 1300
M [ 979 , <additive-expr> ] = GOTO 615
M [ 979 , <cast-expr> ] = GOTO 618
M [ 979 , <constant> ] = GOTO 1285
M [ 979 , <multiplicative-expr> ] = GOTO 627
M [ 979 , <num-const> ] = GOTO 1287
M [ 979 , <postfix-expr> ] = GOTO 1288
M [ 979 , <prim-expr> ] = GOTO 1289
M [ 979 , <rel-expr> ] = GOTO 1304
M [ 979 , <shift-expr> ] = GOTO 632
M [ 979 , <unary-expr> ] = GOTO 1290
M [ 979 , <unary-op> ] = GOTO 1291
M [ 979 , CHAR_CONST ] = SHIFT 1292
M [ 979 , DELIM_LPAR ] = SHIFT 1293
M [ 979 , FLOAT_CONST ] = SHIFT 1294
M [ 979 , IDENTIFIER ] = SHIFT 1295
M [ 979 , INT_CONST ] = SHIFT 1296
M [ 979 , OP_ADD ] = SHIFT 135
M [ 979 , OP_AND ] = SHIFT 136
M [ 979 , OP_DEC ] = SHIFT 1297
M [ 979 , OP_INC ] = SHIFT 1298
M [ 979 , OP_LNOT ] = SHIFT 139
M [ 979 , OP_MUL ] = SHIFT 140
M [ 979 , OP_NOT ] = SHIFT 141
M [ 979 , OP_SUB ] = SHIFT 142
M [ 979 , STR_LITERAL ] = SHIFT 1299
M [ 979 , sizeof ] = SHIFT 1300
M [ 980 , <additive-expr> ] = GOTO 615
M [ 980 , <and-expr> ] = GOTO 1305
M [ 980 , <cast-expr> ] = GOTO 618
M [ 980 , <constant> ] = GOTO 1285
M [ 980 , <eq-expr> ] = GOTO 621
M [ 980 , <multiplicative-expr> ] = GOTO 627
M [ 980 , <num-const> ] = GOTO 1287
M [ 980 , <postfix-expr> ] = GOTO 1288
M [ 980 , <prim-expr> ] = GOTO 1289
M [ 980 , <rel-expr> ] = GOTO 631
M [ 980 , <shift-expr> ] = GOTO 632
M [ 980 , <unary-expr> ] = GOTO 1290
M [ 980 , <unary-op> ] = GOTO 1291
M [ 980 , CHAR_CONST ] = SHIFT 1292
M [ 980 , DELIM_LPAR ] = SHIFT 1293
M [ 980 , FLOAT_CONST ] = SHIFT 1294
M [ 980 , IDENTIFIER ] = SHIFT 1295
M [ 980 , INT_CONST ] = SHIFT 1296
M [ 980 , OP_ADD ] = SHIFT 135
M [ 980 , OP_AND ] = SHIFT 136
M [ 980 , OP_DEC ] = SHIFT 1297
M [ 980 , OP_INC ] = SHIFT 1298
M [ 980 , OP_LNOT ] = SHIFT 139
M [ 980 , OP_MUL ] = SHIFT 140
M [ 980 , OP_NOT ] = SHIFT 141
M [ 980 , OP_SUB ] = SHIFT 142
M [ 980 , STR_LITERAL ] = SHIFT 1299
M [ 980 , sizeof ] = SHIFT 1300
M [ 981 , <additive-expr> ] = GOTO 615
M [ 981 , <and-expr> ] = GOTO 616
M [ 981 , <asn-expr> ] = GOTO 1306
M [ 981 , <cast-expr> ] = GOTO 618
M [ 981 , <cond-expr> ] = GOTO 619
M [ 981 , <constant> ] = GOTO 620
M [ 981 , <eq-expr> ] = GOTO 621
M [ 981 , <exc-or-expr> ] = GOTO 622
M [ 981 , <inc-or-expr> ] = GOTO 624
M [ 981 , <land-expr> ] = GOTO 625
M [ 981 , <lor-expr> ] = GOTO 626
M [ 981 , <multiplicative-expr> ] = GOTO 627
M [ 981 , <num-const> ] = GOTO 628
M [ 981 , <postfix-expr> ] = GOTO 629
M [ 981 , <prim-expr> ] = GOTO 630
M [ 981 , <rel-expr> ] = GOTO 631
M [ 981 , <shift-expr> ] = GOTO 632
M [ 981 , <unary-expr> ] = GOTO 633
M [ 981 , <unary-op> ] = GOTO 634
M [ 981 , CHAR_CONST ] = SHIFT 635
M [ 981 , DELIM_LPAR ] = SHIFT 636
M [ 981 , FLOAT_CONST ] = SHIFT 637
M [ 981 , IDENTIFIER ] = SHIFT 638
M [ 981 , INT_CONST ] = SHIFT 639
M [ 981 , OP_ADD ] = SHIFT 135
M [ 981 , OP_AND ] = SHIFT 136
M [ 981 , OP_DEC ] = SHIFT 640
M [ 981 , OP_INC ] = SHIFT 641
M [ 981 , OP_LNOT ] = SHIFT 139
M [ 981 , OP_MUL ] = SHIFT 140
M [ 981 , OP_NOT ] = SHIFT 141
M [ 981 , OP_SUB ] = SHIFT 142
M [ 981 , STR_LITERAL ] = SHIFT 642
M [ 981 , sizeof ] = SHIFT 643
M [ 982 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , DELIM_SEMICOLON ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 982 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 983 , <additive-expr> ] = GOTO 615
M [ 983 , <and-expr> ] = GOTO 616
M [ 983 , <cast-expr> ] = GOTO 618
M [ 983 , <constant> ] = GOTO 1285
M [ 983 , <eq-expr> ] = GOTO 621
M [ 983 , <exc-or-expr> ] = GOTO 1307
M [ 983 , <multiplicative-expr> ] = GOTO 627
M [ 983 , <num-const> ] = GOTO 1287
M [ 983 , <postfix-expr> ] = GOTO 1288
M [ 983 , <prim-expr> ] = GOTO 1289
M [ 983 , <rel-expr> ] = GOTO 631
M [ 983 , <shift-expr> ] = GOTO 632
M [ 983 , <unary-expr> ] = GOTO 1290
M [ 983 , <unary-op> ] = GOTO 1291
M [ 983 , CHAR_CONST ] = SHIFT 1292
M [ 983 , DELIM_LPAR ] = SHIFT 1293
M [ 983 , FLOAT_CONST ] = SHIFT 1294
M [ 983 , IDENTIFIER ] = SHIFT 1295
M [ 983 , INT_CONST ] = SHIFT 1296
M [ 983 , OP_ADD ] = SHIFT 135
M [ 983 , OP_AND ] = SHIFT 136
M [ 983 , OP_DEC ] = SHIFT 1297
M [ 983 , OP_INC ] = SHIFT 1298
M [ 983 , OP_LNOT ] = SHIFT 139
M [ 983 , OP_MUL ] = SHIFT 140
M [ 983 , OP_NOT ] = SHIFT 141
M [ 983 , OP_SUB ] = SHIFT 142
M [ 983 , STR_LITERAL ] = SHIFT 1299
M [ 983 , sizeof ] = SHIFT 1300
M [ 984 , <additive-expr> ] = GOTO 615
M [ 984 , <and-expr> ] = GOTO 616
M [ 984 , <cast-expr> ] = GOTO 618
M [ 984 , <constant> ] = GOTO 1285
M [ 984 , <eq-expr> ] = GOTO 621
M [ 984 , <exc-or-expr> ] = GOTO 622
M [ 984 , <inc-or-expr> ] = GOTO 1308
M [ 984 , <multiplicative-expr> ] = GOTO 627
M [ 984 , <num-const> ] = GOTO 1287
M [ 984 , <postfix-expr> ] = GOTO 1288
M [ 984 , <prim-expr> ] = GOTO 1289
M [ 984 , <rel-expr> ] = GOTO 631
M [ 984 , <shift-expr> ] = GOTO 632
M [ 984 , <unary-expr> ] = GOTO 1290
M [ 984 , <unary-op> ] = GOTO 1291
M [ 984 , CHAR_CONST ] = SHIFT 1292
M [ 984 , DELIM_LPAR ] = SHIFT 1293
M [ 984 , FLOAT_CONST ] = SHIFT 1294
M [ 984 , IDENTIFIER ] = SHIFT 1295
M [ 984 , INT_CONST ] = SHIFT 1296
M [ 984 , OP_ADD ] = SHIFT 135
M [ 984 , OP_AND ] = SHIFT 136
M [ 984 , OP_DEC ] = SHIFT 1297
M [ 984 , OP_INC ] = SHIFT 1298
M [ 984 , OP_LNOT ] = SHIFT 139
M [ 984 , OP_MUL ] = SHIFT 140
M [ 984 , OP_NOT ] = SHIFT 141
M [ 984 , OP_SUB ] = SHIFT 142
M [ 984 , STR_LITERAL ] = SHIFT 1299
M [ 984 , sizeof ] = SHIFT 1300
M [ 985 , <additive-expr> ] = GOTO 579
M [ 985 , <and-expr> ] = GOTO 580
M [ 985 , <asn-expr> ] = GOTO 581
M [ 985 , <cast-expr> ] = GOTO 582
M [ 985 , <cond-expr> ] = GOTO 583
M [ 985 , <constant> ] = GOTO 584
M [ 985 , <eq-expr> ] = GOTO 585
M [ 985 , <exc-or-expr> ] = GOTO 586
M [ 985 , <expr> ] = GOTO 1309
M [ 985 , <inc-or-expr> ] = GOTO 588
M [ 985 , <land-expr> ] = GOTO 589
M [ 985 , <lor-expr> ] = GOTO 590
M [ 985 , <multiplicative-expr> ] = GOTO 591
M [ 985 , <num-const> ] = GOTO 592
M [ 985 , <postfix-expr> ] = GOTO 593
M [ 985 , <prim-expr> ] = GOTO 594
M [ 985 , <rel-expr> ] = GOTO 595
M [ 985 , <shift-expr> ] = GOTO 596
M [ 985 , <unary-expr> ] = GOTO 597
M [ 985 , <unary-op> ] = GOTO 598
M [ 985 , CHAR_CONST ] = SHIFT 599
M [ 985 , DELIM_LPAR ] = SHIFT 600
M [ 985 , FLOAT_CONST ] = SHIFT 601
M [ 985 , IDENTIFIER ] = SHIFT 602
M [ 985 , INT_CONST ] = SHIFT 603
M [ 985 , OP_ADD ] = SHIFT 135
M [ 985 , OP_AND ] = SHIFT 136
M [ 985 , OP_DEC ] = SHIFT 604
M [ 985 , OP_INC ] = SHIFT 605
M [ 985 , OP_LNOT ] = SHIFT 139
M [ 985 , OP_MUL ] = SHIFT 140
M [ 985 , OP_NOT ] = SHIFT 141
M [ 985 , OP_SUB ] = SHIFT 142
M [ 985 , STR_LITERAL ] = SHIFT 606
M [ 985 , sizeof ] = SHIFT 607
M [ 986 , <additive-expr> ] = GOTO 615
M [ 986 , <and-expr> ] = GOTO 616
M [ 986 , <cast-expr> ] = GOTO 618
M [ 986 , <constant> ] = GOTO 1285
M [ 986 , <eq-expr> ] = GOTO 621
M [ 986 , <exc-or-expr> ] = GOTO 622
M [ 986 , <inc-or-expr> ] = GOTO 624
M [ 986 , <land-expr> ] = GOTO 1310
M [ 986 , <multiplicative-expr> ] = GOTO 627
M [ 986 , <num-const> ] = GOTO 1287
M [ 986 , <postfix-expr> ] = GOTO 1288
M [ 986 , <prim-expr> ] = GOTO 1289
M [ 986 , <rel-expr> ] = GOTO 631
M [ 986 , <shift-expr> ] = GOTO 632
M [ 986 , <unary-expr> ] = GOTO 1290
M [ 986 , <unary-op> ] = GOTO 1291
M [ 986 , CHAR_CONST ] = SHIFT 1292
M [ 986 , DELIM_LPAR ] = SHIFT 1293
M [ 986 , FLOAT_CONST ] = SHIFT 1294
M [ 986 , IDENTIFIER ] = SHIFT 1295
M [ 986 , INT_CONST ] = SHIFT 1296
M [ 986 , OP_ADD ] = SHIFT 135
M [ 986 , OP_AND ] = SHIFT 136
M [ 986 , OP_DEC ] = SHIFT 1297
M [ 986 , OP_INC ] = SHIFT 1298
M [ 986 , OP_LNOT ] = SHIFT 139
M [ 986 , OP_MUL ] = SHIFT 140
M [ 986 , OP_NOT ] = SHIFT 141
M [ 986 , OP_SUB ] = SHIFT 142
M [ 986 , STR_LITERAL ] = SHIFT 1299
M [ 986 , sizeof ] = SHIFT 1300
M [ 987 , <cast-expr> ] = GOTO 1311
M [ 987 , <constant> ] = GOTO 1285
M [ 987 , <num-const> ] = GOTO 1287
M [ 987 , <postfix-expr> ] = GOTO 1288
M [ 987 , <prim-expr> ] = GOTO 1289
M [ 987 , <unary-expr> ] = GOTO 1290
M [ 987 , <unary-op> ] = GOTO 1291
M [ 987 , CHAR_CONST ] = SHIFT 1292
M [ 987 , DELIM_LPAR ] = SHIFT 1293
M [ 987 , FLOAT_CONST ] = SHIFT 1294
M [ 987 , IDENTIFIER ] = SHIFT 1295
M [ 987 , INT_CONST ] = SHIFT 1296
M [ 987 , OP_ADD ] = SHIFT 135
M [ 987 , OP_AND ] = SHIFT 136
M [ 987 , OP_DEC ] = SHIFT 1297
M [ 987 , OP_INC ] = SHIFT 1298
M [ 987 , OP_LNOT ] = SHIFT 139
M [ 987 , OP_MUL ] = SHIFT 140
M [ 987 , OP_NOT ] = SHIFT 141
M [ 987 , OP_SUB ] = SHIFT 142
M [ 987 , STR_LITERAL ] = SHIFT 1299
M [ 987 , sizeof ] = SHIFT 1300
M [ 988 , <cast-expr> ] = GOTO 1312
M [ 988 , <constant> ] = GOTO 1285
M [ 988 , <num-const> ] = GOTO 1287
M [ 988 , <postfix-expr> ] = GOTO 1288
M [ 988 , <prim-expr> ] = GOTO 1289
M [ 988 , <unary-expr> ] = GOTO 1290
M [ 988 , <unary-op> ] = GOTO 1291
M [ 988 , CHAR_CONST ] = SHIFT 1292
M [ 988 , DELIM_LPAR ] = SHIFT 1293
M [ 988 , FLOAT_CONST ] = SHIFT 1294
M [ 988 , IDENTIFIER ] = SHIFT 1295
M [ 988 , INT_CONST ] = SHIFT 1296
M [ 988 , OP_ADD ] = SHIFT 135
M [ 988 , OP_AND ] = SHIFT 136
M [ 988 , OP_DEC ] = SHIFT 1297
M [ 988 , OP_INC ] = SHIFT 1298
M [ 988 , OP_LNOT ] = SHIFT 139
M [ 988 , OP_MUL ] = SHIFT 140
M [ 988 , OP_NOT ] = SHIFT 141
M [ 988 , OP_SUB ] = SHIFT 142
M [ 988 , STR_LITERAL ] = SHIFT 1299
M [ 988 , sizeof ] = SHIFT 1300
M [ 989 , <cast-expr> ] = GOTO 1313
M [ 989 , <constant> ] = GOTO 1285
M [ 989 , <num-const> ] = GOTO 1287
M [ 989 , <postfix-expr> ] = GOTO 1288
M [ 989 , <prim-expr> ] = GOTO 1289
M [ 989 , <unary-expr> ] = GOTO 1290
M [ 989 , <unary-op> ] = GOTO 1291
M [ 989 , CHAR_CONST ] = SHIFT 1292
M [ 989 , DELIM_LPAR ] = SHIFT 1293
M [ 989 , FLOAT_CONST ] = SHIFT 1294
M [ 989 , IDENTIFIER ] = SHIFT 1295
M [ 989 , INT_CONST ] = SHIFT 1296
M [ 989 , OP_ADD ] = SHIFT 135
M [ 989 , OP_AND ] = SHIFT 136
M [ 989 , OP_DEC ] = SHIFT 1297
M [ 989 , OP_INC ] = SHIFT 1298
M [ 989 , OP_LNOT ] = SHIFT 139
M [ 989 , OP_MUL ] = SHIFT 140
M [ 989 , OP_NOT ] = SHIFT 141
M [ 989 , OP_SUB ] = SHIFT 142
M [ 989 , STR_LITERAL ] = SHIFT 1299
M [ 989 , sizeof ] = SHIFT 1300
M [ 990 , <additive-expr> ] = GOTO 299
M [ 990 , <and-expr> ] = GOTO 300
M [ 990 , <arg-expr-list> ] = GOTO 1314
M [ 990 , <asn-expr> ] = GOTO 613
M [ 990 , <cast-expr> ] = GOTO 302
M [ 990 , <cond-expr> ] = GOTO 303
M [ 990 , <constant> ] = GOTO 304
M [ 990 , <eq-expr> ] = GOTO 306
M [ 990 , <exc-or-expr> ] = GOTO 307
M [ 990 , <inc-or-expr> ] = GOTO 309
M [ 990 , <land-expr> ] = GOTO 310
M [ 990 , <lor-expr> ] = GOTO 311
M [ 990 , <multiplicative-expr> ] = GOTO 312
M [ 990 , <num-const> ] = GOTO 313
M [ 990 , <postfix-expr> ] = GOTO 314
M [ 990 , <prim-expr> ] = GOTO 315
M [ 990 , <rel-expr> ] = GOTO 316
M [ 990 , <shift-expr> ] = GOTO 317
M [ 990 , <unary-expr> ] = GOTO 324
M [ 990 , <unary-op> ] = GOTO 325
M [ 990 , CHAR_CONST ] = SHIFT 326
M [ 990 , DELIM_LPAR ] = SHIFT 327
M [ 990 , DELIM_RPAR ] = SHIFT 1315
M [ 990 , FLOAT_CONST ] = SHIFT 328
M [ 990 , IDENTIFIER ] = SHIFT 329
M [ 990 , INT_CONST ] = SHIFT 330
M [ 990 , OP_ADD ] = SHIFT 135
M [ 990 , OP_AND ] = SHIFT 136
M [ 990 , OP_DEC ] = SHIFT 331
M [ 990 , OP_INC ] = SHIFT 332
M [ 990 , OP_LNOT ] = SHIFT 139
M [ 990 , OP_MUL ] = SHIFT 140
M [ 990 , OP_NOT ] = SHIFT 141
M [ 990 , OP_SUB ] = SHIFT 142
M [ 990 , STR_LITERAL ] = SHIFT 333
M [ 990 , sizeof ] = SHIFT 343
M [ 991 , <additive-expr> ] = GOTO 615
M [ 991 , <and-expr> ] = GOTO 616
M [ 991 , <asn-expr> ] = GOTO 617
M [ 991 , <cast-expr> ] = GOTO 618
M [ 991 , <cond-expr> ] = GOTO 619
M [ 991 , <constant> ] = GOTO 620
M [ 991 , <eq-expr> ] = GOTO 621
M [ 991 , <exc-or-expr> ] = GOTO 622
M [ 991 , <expr> ] = GOTO 1316
M [ 991 , <inc-or-expr> ] = GOTO 624
M [ 991 , <land-expr> ] = GOTO 625
M [ 991 , <lor-expr> ] = GOTO 626
M [ 991 , <multiplicative-expr> ] = GOTO 627
M [ 991 , <num-const> ] = GOTO 628
M [ 991 , <postfix-expr> ] = GOTO 629
M [ 991 , <prim-expr> ] = GOTO 630
M [ 991 , <rel-expr> ] = GOTO 631
M [ 991 , <shift-expr> ] = GOTO 632
M [ 991 , <unary-expr> ] = GOTO 633
M [ 991 , <unary-op> ] = GOTO 634
M [ 991 , CHAR_CONST ] = SHIFT 635
M [ 991 , DELIM_LPAR ] = SHIFT 636
M [ 991 , FLOAT_CONST ] = SHIFT 637
M [ 991 , IDENTIFIER ] = SHIFT 638
M [ 991 , INT_CONST ] = SHIFT 639
M [ 991 , OP_ADD ] = SHIFT 135
M [ 991 , OP_AND ] = SHIFT 136
M [ 991 , OP_DEC ] = SHIFT 640
M [ 991 , OP_INC ] = SHIFT 641
M [ 991 , OP_LNOT ] = SHIFT 139
M [ 991 , OP_MUL ] = SHIFT 140
M [ 991 , OP_NOT ] = SHIFT 141
M [ 991 , OP_SUB ] = SHIFT 142
M [ 991 , STR_LITERAL ] = SHIFT 642
M [ 991 , sizeof ] = SHIFT 643
M [ 992 , IDENTIFIER ] = SHIFT 1317
M [ 993 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 993 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 994 , IDENTIFIER ] = SHIFT 1318
M [ 995 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 995 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 996 , <additive-expr> ] = GOTO 615
M [ 996 , <cast-expr> ] = GOTO 618
M [ 996 , <constant> ] = GOTO 1285
M [ 996 , <multiplicative-expr> ] = GOTO 627
M [ 996 , <num-const> ] = GOTO 1287
M [ 996 , <postfix-expr> ] = GOTO 1288
M [ 996 , <prim-expr> ] = GOTO 1289
M [ 996 , <shift-expr> ] = GOTO 1319
M [ 996 , <unary-expr> ] = GOTO 1290
M [ 996 , <unary-op> ] = GOTO 1291
M [ 996 , CHAR_CONST ] = SHIFT 1292
M [ 996 , DELIM_LPAR ] = SHIFT 1293
M [ 996 , FLOAT_CONST ] = SHIFT 1294
M [ 996 , IDENTIFIER ] = SHIFT 1295
M [ 996 , INT_CONST ] = SHIFT 1296
M [ 996 , OP_ADD ] = SHIFT 135
M [ 996 , OP_AND ] = SHIFT 136
M [ 996 , OP_DEC ] = SHIFT 1297
M [ 996 , OP_INC ] = SHIFT 1298
M [ 996 , OP_LNOT ] = SHIFT 139
M [ 996 , OP_MUL ] = SHIFT 140
M [ 996 , OP_NOT ] = SHIFT 141
M [ 996 , OP_SUB ] = SHIFT 142
M [ 996 , STR_LITERAL ] = SHIFT 1299
M [ 996 , sizeof ] = SHIFT 1300
M [ 997 , <additive-expr> ] = GOTO 615
M [ 997 , <cast-expr> ] = GOTO 618
M [ 997 , <constant> ] = GOTO 1285
M [ 997 , <multiplicative-expr> ] = GOTO 627
M [ 997 , <num-const> ] = GOTO 1287
M [ 997 , <postfix-expr> ] = GOTO 1288
M [ 997 , <prim-expr> ] = GOTO 1289
M [ 997 , <shift-expr> ] = GOTO 1320
M [ 997 , <unary-expr> ] = GOTO 1290
M [ 997 , <unary-op> ] = GOTO 1291
M [ 997 , CHAR_CONST ] = SHIFT 1292
M [ 997 , DELIM_LPAR ] = SHIFT 1293
M [ 997 , FLOAT_CONST ] = SHIFT 1294
M [ 997 , IDENTIFIER ] = SHIFT 1295
M [ 997 , INT_CONST ] = SHIFT 1296
M [ 997 , OP_ADD ] = SHIFT 135
M [ 997 , OP_AND ] = SHIFT 136
M [ 997 , OP_DEC ] = SHIFT 1297
M [ 997 , OP_INC ] = SHIFT 1298
M [ 997 , OP_LNOT ] = SHIFT 139
M [ 997 , OP_MUL ] = SHIFT 140
M [ 997 , OP_NOT ] = SHIFT 141
M [ 997 , OP_SUB ] = SHIFT 142
M [ 997 , STR_LITERAL ] = SHIFT 1299
M [ 997 , sizeof ] = SHIFT 1300
M [ 998 , <additive-expr> ] = GOTO 615
M [ 998 , <cast-expr> ] = GOTO 618
M [ 998 , <constant> ] = GOTO 1285
M [ 998 , <multiplicative-expr> ] = GOTO 627
M [ 998 , <num-const> ] = GOTO 1287
M [ 998 , <postfix-expr> ] = GOTO 1288
M [ 998 , <prim-expr> ] = GOTO 1289
M [ 998 , <shift-expr> ] = GOTO 1321
M [ 998 , <unary-expr> ] = GOTO 1290
M [ 998 , <unary-op> ] = GOTO 1291
M [ 998 , CHAR_CONST ] = SHIFT 1292
M [ 998 , DELIM_LPAR ] = SHIFT 1293
M [ 998 , FLOAT_CONST ] = SHIFT 1294
M [ 998 , IDENTIFIER ] = SHIFT 1295
M [ 998 , INT_CONST ] = SHIFT 1296
M [ 998 , OP_ADD ] = SHIFT 135
M [ 998 , OP_AND ] = SHIFT 136
M [ 998 , OP_DEC ] = SHIFT 1297
M [ 998 , OP_INC ] = SHIFT 1298
M [ 998 , OP_LNOT ] = SHIFT 139
M [ 998 , OP_MUL ] = SHIFT 140
M [ 998 , OP_NOT ] = SHIFT 141
M [ 998 , OP_SUB ] = SHIFT 142
M [ 998 , STR_LITERAL ] = SHIFT 1299
M [ 998 , sizeof ] = SHIFT 1300
M [ 999 , <additive-expr> ] = GOTO 615
M [ 999 , <cast-expr> ] = GOTO 618
M [ 999 , <constant> ] = GOTO 1285
M [ 999 , <multiplicative-expr> ] = GOTO 627
M [ 999 , <num-const> ] = GOTO 1287
M [ 999 , <postfix-expr> ] = GOTO 1288
M [ 999 , <prim-expr> ] = GOTO 1289
M [ 999 , <shift-expr> ] = GOTO 1322
M [ 999 , <unary-expr> ] = GOTO 1290
M [ 999 , <unary-op> ] = GOTO 1291
M [ 999 , CHAR_CONST ] = SHIFT 1292
M [ 999 , DELIM_LPAR ] = SHIFT 1293
M [ 999 , FLOAT_CONST ] = SHIFT 1294
M [ 999 , IDENTIFIER ] = SHIFT 1295
M [ 999 , INT_CONST ] = SHIFT 1296
M [ 999 , OP_ADD ] = SHIFT 135
M [ 999 , OP_AND ] = SHIFT 136
M [ 999 , OP_DEC ] = SHIFT 1297
M [ 999 , OP_INC ] = SHIFT 1298
M [ 999 , OP_LNOT ] = SHIFT 139
M [ 999 , OP_MUL ] = SHIFT 140
M [ 999 , OP_NOT ] = SHIFT 141
M [ 999 , OP_SUB ] = SHIFT 142
M [ 999 , STR_LITERAL ] = SHIFT 1299
M [ 999 , sizeof ] = SHIFT 1300
M [ 1000 , <additive-expr> ] = GOTO 1323
M [ 1000 , <cast-expr> ] = GOTO 618
M [ 1000 , <constant> ] = GOTO 1285
M [ 1000 , <multiplicative-expr> ] = GOTO 627
M [ 1000 , <num-const> ] = GOTO 1287
M [ 1000 , <postfix-expr> ] = GOTO 1288
M [ 1000 , <prim-expr> ] = GOTO 1289
M [ 1000 , <unary-expr> ] = GOTO 1290
M [ 1000 , <unary-op> ] = GOTO 1291
M [ 1000 , CHAR_CONST ] = SHIFT 1292
M [ 1000 , DELIM_LPAR ] = SHIFT 1293
M [ 1000 , FLOAT_CONST ] = SHIFT 1294
M [ 1000 , IDENTIFIER ] = SHIFT 1295
M [ 1000 , INT_CONST ] = SHIFT 1296
M [ 1000 , OP_ADD ] = SHIFT 135
M [ 1000 , OP_AND ] = SHIFT 136
M [ 1000 , OP_DEC ] = SHIFT 1297
M [ 1000 , OP_INC ] = SHIFT 1298
M [ 1000 , OP_LNOT ] = SHIFT 139
M [ 1000 , OP_MUL ] = SHIFT 140
M [ 1000 , OP_NOT ] = SHIFT 141
M [ 1000 , OP_SUB ] = SHIFT 142
M [ 1000 , STR_LITERAL ] = SHIFT 1299
M [ 1000 , sizeof ] = SHIFT 1300
M [ 1001 , <additive-expr> ] = GOTO 1324
M [ 1001 , <cast-expr> ] = GOTO 618
M [ 1001 , <constant> ] = GOTO 1285
M [ 1001 , <multiplicative-expr> ] = GOTO 627
M [ 1001 , <num-const> ] = GOTO 1287
M [ 1001 , <postfix-expr> ] = GOTO 1288
M [ 1001 , <prim-expr> ] = GOTO 1289
M [ 1001 , <unary-expr> ] = GOTO 1290
M [ 1001 , <unary-op> ] = GOTO 1291
M [ 1001 , CHAR_CONST ] = SHIFT 1292
M [ 1001 , DELIM_LPAR ] = SHIFT 1293
M [ 1001 , FLOAT_CONST ] = SHIFT 1294
M [ 1001 , IDENTIFIER ] = SHIFT 1295
M [ 1001 , INT_CONST ] = SHIFT 1296
M [ 1001 , OP_ADD ] = SHIFT 135
M [ 1001 , OP_AND ] = SHIFT 136
M [ 1001 , OP_DEC ] = SHIFT 1297
M [ 1001 , OP_INC ] = SHIFT 1298
M [ 1001 , OP_LNOT ] = SHIFT 139
M [ 1001 , OP_MUL ] = SHIFT 140
M [ 1001 , OP_NOT ] = SHIFT 141
M [ 1001 , OP_SUB ] = SHIFT 142
M [ 1001 , STR_LITERAL ] = SHIFT 1299
M [ 1001 , sizeof ] = SHIFT 1300
M [ 1002 , <additive-expr> ] = GOTO 615
M [ 1002 , <and-expr> ] = GOTO 616
M [ 1002 , <asn-expr> ] = GOTO 1325
M [ 1002 , <cast-expr> ] = GOTO 618
M [ 1002 , <cond-expr> ] = GOTO 619
M [ 1002 , <constant> ] = GOTO 620
M [ 1002 , <eq-expr> ] = GOTO 621
M [ 1002 , <exc-or-expr> ] = GOTO 622
M [ 1002 , <inc-or-expr> ] = GOTO 624
M [ 1002 , <land-expr> ] = GOTO 625
M [ 1002 , <lor-expr> ] = GOTO 626
M [ 1002 , <multiplicative-expr> ] = GOTO 627
M [ 1002 , <num-const> ] = GOTO 628
M [ 1002 , <postfix-expr> ] = GOTO 629
M [ 1002 , <prim-expr> ] = GOTO 630
M [ 1002 , <rel-expr> ] = GOTO 631
M [ 1002 , <shift-expr> ] = GOTO 632
M [ 1002 , <unary-expr> ] = GOTO 633
M [ 1002 , <unary-op> ] = GOTO 634
M [ 1002 , CHAR_CONST ] = SHIFT 635
M [ 1002 , DELIM_LPAR ] = SHIFT 636
M [ 1002 , FLOAT_CONST ] = SHIFT 637
M [ 1002 , IDENTIFIER ] = SHIFT 638
M [ 1002 , INT_CONST ] = SHIFT 639
M [ 1002 , OP_ADD ] = SHIFT 135
M [ 1002 , OP_AND ] = SHIFT 136
M [ 1002 , OP_DEC ] = SHIFT 640
M [ 1002 , OP_INC ] = SHIFT 641
M [ 1002 , OP_LNOT ] = SHIFT 139
M [ 1002 , OP_MUL ] = SHIFT 140
M [ 1002 , OP_NOT ] = SHIFT 141
M [ 1002 , OP_SUB ] = SHIFT 142
M [ 1002 , STR_LITERAL ] = SHIFT 642
M [ 1002 , sizeof ] = SHIFT 643
M [ 1003 , DELIM_COMMA ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , DELIM_QUESTION ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , DELIM_RSQBRACKET ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_ADD ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_ADDASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_AND ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_ANDASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_ASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_DIV ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_DIVASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_EQ ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_GE ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_GT ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_LAND ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_LE ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_LOR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_LT ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_MOD ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_MODASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_MUL ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_MULASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_NEQ ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_OR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_ORASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_SHL ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_SHLASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_SHR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_SHRASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_SUB ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_SUBASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_XOR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1003 , OP_XORASN ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1004 , DELIM_COMMA ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , DELIM_QUESTION ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , DELIM_RSQBRACKET ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_ADD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_ADDASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_AND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_ANDASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_ASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_DIV ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_DIVASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_EQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_GE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_GT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_LAND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_LE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_LOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_LT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_MOD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_MODASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_MUL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_MULASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_NEQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_OR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_ORASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_SHL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_SHLASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_SHR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_SHRASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_SUB ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_SUBASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_XOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1004 , OP_XORASN ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1005 , <additive-expr> ] = GOTO 299
M [ 1005 , <and-expr> ] = GOTO 300
M [ 1005 , <asn-expr> ] = GOTO 301
M [ 1005 , <cast-expr> ] = GOTO 302
M [ 1005 , <cond-expr> ] = GOTO 303
M [ 1005 , <constant> ] = GOTO 304
M [ 1005 , <enum-spec> ] = GOTO 305
M [ 1005 , <eq-expr> ] = GOTO 306
M [ 1005 , <exc-or-expr> ] = GOTO 307
M [ 1005 , <expr> ] = GOTO 1006
M [ 1005 , <inc-or-expr> ] = GOTO 309
M [ 1005 , <land-expr> ] = GOTO 310
M [ 1005 , <lor-expr> ] = GOTO 311
M [ 1005 , <multiplicative-expr> ] = GOTO 312
M [ 1005 , <num-const> ] = GOTO 313
M [ 1005 , <postfix-expr> ] = GOTO 314
M [ 1005 , <prim-expr> ] = GOTO 315
M [ 1005 , <rel-expr> ] = GOTO 316
M [ 1005 , <shift-expr> ] = GOTO 317
M [ 1005 , <spec-qual-list> ] = GOTO 318
M [ 1005 , <struct-union-spec> ] = GOTO 319
M [ 1005 , <struct-union> ] = GOTO 320
M [ 1005 , <type-name> ] = GOTO 1326
M [ 1005 , <type-qual> ] = GOTO 322
M [ 1005 , <type-spec> ] = GOTO 323
M [ 1005 , <unary-expr> ] = GOTO 324
M [ 1005 , <unary-op> ] = GOTO 325
M [ 1005 , CHAR_CONST ] = SHIFT 326
M [ 1005 , DELIM_LPAR ] = SHIFT 327
M [ 1005 , FLOAT_CONST ] = SHIFT 328
M [ 1005 , IDENTIFIER ] = SHIFT 329
M [ 1005 , INT_CONST ] = SHIFT 330
M [ 1005 , OP_ADD ] = SHIFT 135
M [ 1005 , OP_AND ] = SHIFT 136
M [ 1005 , OP_DEC ] = SHIFT 331
M [ 1005 , OP_INC ] = SHIFT 332
M [ 1005 , OP_LNOT ] = SHIFT 139
M [ 1005 , OP_MUL ] = SHIFT 140
M [ 1005 , OP_NOT ] = SHIFT 141
M [ 1005 , OP_SUB ] = SHIFT 142
M [ 1005 , STR_LITERAL ] = SHIFT 333
M [ 1005 , char ] = SHIFT 334
M [ 1005 , const ] = SHIFT 335
M [ 1005 , double ] = SHIFT 336
M [ 1005 , enum ] = SHIFT 337
M [ 1005 , float ] = SHIFT 338
M [ 1005 , int ] = SHIFT 339
M [ 1005 , long ] = SHIFT 340
M [ 1005 , short ] = SHIFT 341
M [ 1005 , signed ] = SHIFT 342
M [ 1005 , sizeof ] = SHIFT 343
M [ 1005 , struct ] = SHIFT 21
M [ 1005 , unsigned ] = SHIFT 344
M [ 1005 , void ] = SHIFT 345
M [ 1006 , DELIM_COMMA ] = SHIFT 661
M [ 1006 , DELIM_RPAR ] = SHIFT 1327
M [ 1007 , DELIM_RPAR ] = SHIFT 1328
M [ 1008 , DELIM_COMMA ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , DELIM_QUESTION ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , DELIM_RSQBRACKET ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_ADD ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_ADDASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_AND ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_ANDASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_ASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_DIV ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_DIVASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_EQ ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_GE ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_GT ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_LAND ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_LE ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_LOR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_LT ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_MOD ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_MODASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_MUL ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_MULASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_NEQ ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_OR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_ORASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_SHL ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_SHLASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_SHR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_SHRASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_SUB ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_SUBASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_XOR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1008 , OP_XORASN ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1009 , <additive-expr> ] = GOTO 299
M [ 1009 , <and-expr> ] = GOTO 300
M [ 1009 , <asn-expr> ] = GOTO 301
M [ 1009 , <cast-expr> ] = GOTO 302
M [ 1009 , <cond-expr> ] = GOTO 303
M [ 1009 , <constant> ] = GOTO 304
M [ 1009 , <enum-spec> ] = GOTO 305
M [ 1009 , <eq-expr> ] = GOTO 306
M [ 1009 , <exc-or-expr> ] = GOTO 307
M [ 1009 , <expr> ] = GOTO 1006
M [ 1009 , <inc-or-expr> ] = GOTO 309
M [ 1009 , <land-expr> ] = GOTO 310
M [ 1009 , <lor-expr> ] = GOTO 311
M [ 1009 , <multiplicative-expr> ] = GOTO 312
M [ 1009 , <num-const> ] = GOTO 313
M [ 1009 , <postfix-expr> ] = GOTO 314
M [ 1009 , <prim-expr> ] = GOTO 315
M [ 1009 , <rel-expr> ] = GOTO 316
M [ 1009 , <shift-expr> ] = GOTO 317
M [ 1009 , <spec-qual-list> ] = GOTO 318
M [ 1009 , <struct-union-spec> ] = GOTO 319
M [ 1009 , <struct-union> ] = GOTO 320
M [ 1009 , <type-name> ] = GOTO 1329
M [ 1009 , <type-qual> ] = GOTO 322
M [ 1009 , <type-spec> ] = GOTO 323
M [ 1009 , <unary-expr> ] = GOTO 324
M [ 1009 , <unary-op> ] = GOTO 325
M [ 1009 , CHAR_CONST ] = SHIFT 326
M [ 1009 , DELIM_LPAR ] = SHIFT 327
M [ 1009 , FLOAT_CONST ] = SHIFT 328
M [ 1009 , IDENTIFIER ] = SHIFT 329
M [ 1009 , INT_CONST ] = SHIFT 330
M [ 1009 , OP_ADD ] = SHIFT 135
M [ 1009 , OP_AND ] = SHIFT 136
M [ 1009 , OP_DEC ] = SHIFT 331
M [ 1009 , OP_INC ] = SHIFT 332
M [ 1009 , OP_LNOT ] = SHIFT 139
M [ 1009 , OP_MUL ] = SHIFT 140
M [ 1009 , OP_NOT ] = SHIFT 141
M [ 1009 , OP_SUB ] = SHIFT 142
M [ 1009 , STR_LITERAL ] = SHIFT 333
M [ 1009 , char ] = SHIFT 334
M [ 1009 , const ] = SHIFT 335
M [ 1009 , double ] = SHIFT 336
M [ 1009 , enum ] = SHIFT 337
M [ 1009 , float ] = SHIFT 338
M [ 1009 , int ] = SHIFT 339
M [ 1009 , long ] = SHIFT 340
M [ 1009 , short ] = SHIFT 341
M [ 1009 , signed ] = SHIFT 342
M [ 1009 , sizeof ] = SHIFT 343
M [ 1009 , struct ] = SHIFT 21
M [ 1009 , unsigned ] = SHIFT 344
M [ 1009 , void ] = SHIFT 345
M [ 1010 , DELIM_COMMA ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , DELIM_QUESTION ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , DELIM_RSQBRACKET ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_ADD ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_ADDASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_AND ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_ANDASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_ASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_DIV ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_DIVASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_EQ ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_GE ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_GT ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_LAND ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_LE ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_LOR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_LT ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_MOD ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_MODASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_MUL ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_MULASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_NEQ ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_OR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_ORASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_SHL ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_SHLASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_SHR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_SHRASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_SUB ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_SUBASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_XOR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1010 , OP_XORASN ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1011 , DELIM_COMMA ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , DELIM_QUESTION ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , DELIM_RSQBRACKET ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_ADD ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_ADDASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_AND ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_ANDASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_ASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_DIV ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_DIVASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_EQ ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_GE ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_GT ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_LAND ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_LE ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_LOR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_LT ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_MOD ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_MODASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_MUL ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_MULASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_NEQ ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_OR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_ORASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_SHL ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_SHLASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_SHR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_SHRASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_SUB ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_SUBASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_XOR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1011 , OP_XORASN ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1012 , <additive-expr> ] = GOTO 299
M [ 1012 , <and-expr> ] = GOTO 300
M [ 1012 , <asn-expr> ] = GOTO 301
M [ 1012 , <cast-expr> ] = GOTO 302
M [ 1012 , <cond-expr> ] = GOTO 303
M [ 1012 , <constant> ] = GOTO 304
M [ 1012 , <enum-spec> ] = GOTO 305
M [ 1012 , <eq-expr> ] = GOTO 306
M [ 1012 , <exc-or-expr> ] = GOTO 307
M [ 1012 , <expr> ] = GOTO 1006
M [ 1012 , <inc-or-expr> ] = GOTO 309
M [ 1012 , <land-expr> ] = GOTO 310
M [ 1012 , <lor-expr> ] = GOTO 311
M [ 1012 , <multiplicative-expr> ] = GOTO 312
M [ 1012 , <num-const> ] = GOTO 313
M [ 1012 , <postfix-expr> ] = GOTO 314
M [ 1012 , <prim-expr> ] = GOTO 315
M [ 1012 , <rel-expr> ] = GOTO 316
M [ 1012 , <shift-expr> ] = GOTO 317
M [ 1012 , <spec-qual-list> ] = GOTO 318
M [ 1012 , <struct-union-spec> ] = GOTO 319
M [ 1012 , <struct-union> ] = GOTO 320
M [ 1012 , <type-name> ] = GOTO 1330
M [ 1012 , <type-qual> ] = GOTO 322
M [ 1012 , <type-spec> ] = GOTO 323
M [ 1012 , <unary-expr> ] = GOTO 324
M [ 1012 , <unary-op> ] = GOTO 325
M [ 1012 , CHAR_CONST ] = SHIFT 326
M [ 1012 , DELIM_LPAR ] = SHIFT 327
M [ 1012 , FLOAT_CONST ] = SHIFT 328
M [ 1012 , IDENTIFIER ] = SHIFT 329
M [ 1012 , INT_CONST ] = SHIFT 330
M [ 1012 , OP_ADD ] = SHIFT 135
M [ 1012 , OP_AND ] = SHIFT 136
M [ 1012 , OP_DEC ] = SHIFT 331
M [ 1012 , OP_INC ] = SHIFT 332
M [ 1012 , OP_LNOT ] = SHIFT 139
M [ 1012 , OP_MUL ] = SHIFT 140
M [ 1012 , OP_NOT ] = SHIFT 141
M [ 1012 , OP_SUB ] = SHIFT 142
M [ 1012 , STR_LITERAL ] = SHIFT 333
M [ 1012 , char ] = SHIFT 334
M [ 1012 , const ] = SHIFT 335
M [ 1012 , double ] = SHIFT 336
M [ 1012 , enum ] = SHIFT 337
M [ 1012 , float ] = SHIFT 338
M [ 1012 , int ] = SHIFT 339
M [ 1012 , long ] = SHIFT 340
M [ 1012 , short ] = SHIFT 341
M [ 1012 , signed ] = SHIFT 342
M [ 1012 , sizeof ] = SHIFT 343
M [ 1012 , struct ] = SHIFT 21
M [ 1012 , unsigned ] = SHIFT 344
M [ 1012 , void ] = SHIFT 345
M [ 1013 , <cast-expr> ] = GOTO 1331
M [ 1013 , <constant> ] = GOTO 104
M [ 1013 , <num-const> ] = GOTO 118
M [ 1013 , <postfix-expr> ] = GOTO 119
M [ 1013 , <prim-expr> ] = GOTO 120
M [ 1013 , <unary-expr> ] = GOTO 295
M [ 1013 , <unary-op> ] = GOTO 126
M [ 1013 , CHAR_CONST ] = SHIFT 127
M [ 1013 , DELIM_LCURBRACE ] = SHIFT 1066
M [ 1013 , DELIM_LPAR ] = SHIFT 296
M [ 1013 , FLOAT_CONST ] = SHIFT 132
M [ 1013 , IDENTIFIER ] = SHIFT 159
M [ 1013 , INT_CONST ] = SHIFT 134
M [ 1013 , OP_ADD ] = SHIFT 135
M [ 1013 , OP_AND ] = SHIFT 136
M [ 1013 , OP_DEC ] = SHIFT 137
M [ 1013 , OP_INC ] = SHIFT 138
M [ 1013 , OP_LNOT ] = SHIFT 139
M [ 1013 , OP_MUL ] = SHIFT 140
M [ 1013 , OP_NOT ] = SHIFT 141
M [ 1013 , OP_SUB ] = SHIFT 142
M [ 1013 , STR_LITERAL ] = SHIFT 143
M [ 1013 , sizeof ] = SHIFT 153
M [ 1014 , DELIM_COMMA ] = REDUCE <prim-expr> -> <constant> 
M [ 1014 , DELIM_LPAR ] = REDUCE <prim-expr> -> <constant> 
M [ 1014 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> <constant> 
M [ 1014 , DELIM_QUESTION ] = REDUCE <prim-expr> -> <constant> 
M [ 1014 , DELIM_RPAR ] = REDUCE <prim-expr> -> <constant> 
M [ 1014 , OP_ADD ] = REDUCE <prim-expr> -> <constant> 
M [ 1014 , OP_AND ] = REDUCE <prim-expr> -> <constant> 
M [ 1014 , OP_ARROW ] = REDUCE <prim-expr> -> <constant> 
M [ 1014 , OP_DEC ] = REDUCE <prim-expr> -> <constant> 
M [ 1014 , OP_DIV ] = REDUCE <prim-expr> -> <constant> 
M [ 1014 , OP_DOT ] = REDUCE <prim-expr> -> <constant> 
M [ 1014 , OP_EQ ] = REDUCE <prim-expr> -> <constant> 
M [ 1014 , OP_GE ] = REDUCE <prim-expr> -> <constant> 
M [ 1014 , OP_GT ] = REDUCE <prim-expr> -> <constant> 
M [ 1014 , OP_INC ] = REDUCE <prim-expr> -> <constant> 
M [ 1014 , OP_LAND ] = REDUCE <prim-expr> -> <constant> 
M [ 1014 , OP_LE ] = REDUCE <prim-expr> -> <constant> 
M [ 1014 , OP_LOR ] = REDUCE <prim-expr> -> <constant> 
M [ 1014 , OP_LT ] = REDUCE <prim-expr> -> <constant> 
M [ 1014 , OP_MOD ] = REDUCE <prim-expr> -> <constant> 
M [ 1014 , OP_MUL ] = REDUCE <prim-expr> -> <constant> 
M [ 1014 , OP_NEQ ] = REDUCE <prim-expr> -> <constant> 
M [ 1014 , OP_OR ] = REDUCE <prim-expr> -> <constant> 
M [ 1014 , OP_SHL ] = REDUCE <prim-expr> -> <constant> 
M [ 1014 , OP_SHR ] = REDUCE <prim-expr> -> <constant> 
M [ 1014 , OP_SUB ] = REDUCE <prim-expr> -> <constant> 
M [ 1014 , OP_XOR ] = REDUCE <prim-expr> -> <constant> 
M [ 1015 , DELIM_COMMA ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1015 , DELIM_QUESTION ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1015 , DELIM_RPAR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1015 , OP_ADD ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1015 , OP_AND ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1015 , OP_DIV ] = SHIFT 667
M [ 1015 , OP_EQ ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1015 , OP_GE ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1015 , OP_GT ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1015 , OP_LAND ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1015 , OP_LE ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1015 , OP_LOR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1015 , OP_LT ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1015 , OP_MOD ] = SHIFT 668
M [ 1015 , OP_MUL ] = SHIFT 669
M [ 1015 , OP_NEQ ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1015 , OP_OR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1015 , OP_SHL ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1015 , OP_SHR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1015 , OP_SUB ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1015 , OP_XOR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1016 , DELIM_COMMA ] = REDUCE <constant> -> <num-const> 
M [ 1016 , DELIM_LPAR ] = REDUCE <constant> -> <num-const> 
M [ 1016 , DELIM_LSQBRACKET ] = REDUCE <constant> -> <num-const> 
M [ 1016 , DELIM_QUESTION ] = REDUCE <constant> -> <num-const> 
M [ 1016 , DELIM_RPAR ] = REDUCE <constant> -> <num-const> 
M [ 1016 , OP_ADD ] = REDUCE <constant> -> <num-const> 
M [ 1016 , OP_AND ] = REDUCE <constant> -> <num-const> 
M [ 1016 , OP_ARROW ] = REDUCE <constant> -> <num-const> 
M [ 1016 , OP_DEC ] = REDUCE <constant> -> <num-const> 
M [ 1016 , OP_DIV ] = REDUCE <constant> -> <num-const> 
M [ 1016 , OP_DOT ] = REDUCE <constant> -> <num-const> 
M [ 1016 , OP_EQ ] = REDUCE <constant> -> <num-const> 
M [ 1016 , OP_GE ] = REDUCE <constant> -> <num-const> 
M [ 1016 , OP_GT ] = REDUCE <constant> -> <num-const> 
M [ 1016 , OP_INC ] = REDUCE <constant> -> <num-const> 
M [ 1016 , OP_LAND ] = REDUCE <constant> -> <num-const> 
M [ 1016 , OP_LE ] = REDUCE <constant> -> <num-const> 
M [ 1016 , OP_LOR ] = REDUCE <constant> -> <num-const> 
M [ 1016 , OP_LT ] = REDUCE <constant> -> <num-const> 
M [ 1016 , OP_MOD ] = REDUCE <constant> -> <num-const> 
M [ 1016 , OP_MUL ] = REDUCE <constant> -> <num-const> 
M [ 1016 , OP_NEQ ] = REDUCE <constant> -> <num-const> 
M [ 1016 , OP_OR ] = REDUCE <constant> -> <num-const> 
M [ 1016 , OP_SHL ] = REDUCE <constant> -> <num-const> 
M [ 1016 , OP_SHR ] = REDUCE <constant> -> <num-const> 
M [ 1016 , OP_SUB ] = REDUCE <constant> -> <num-const> 
M [ 1016 , OP_XOR ] = REDUCE <constant> -> <num-const> 
M [ 1017 , DELIM_COMMA ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1017 , DELIM_LPAR ] = SHIFT 1332
M [ 1017 , DELIM_LSQBRACKET ] = SHIFT 1333
M [ 1017 , DELIM_QUESTION ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1017 , DELIM_RPAR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1017 , OP_ADD ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1017 , OP_AND ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1017 , OP_ARROW ] = SHIFT 1334
M [ 1017 , OP_DEC ] = SHIFT 1335
M [ 1017 , OP_DIV ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1017 , OP_DOT ] = SHIFT 1336
M [ 1017 , OP_EQ ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1017 , OP_GE ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1017 , OP_GT ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1017 , OP_INC ] = SHIFT 1337
M [ 1017 , OP_LAND ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1017 , OP_LE ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1017 , OP_LOR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1017 , OP_LT ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1017 , OP_MOD ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1017 , OP_MUL ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1017 , OP_NEQ ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1017 , OP_OR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1017 , OP_SHL ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1017 , OP_SHR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1017 , OP_SUB ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1017 , OP_XOR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1018 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1018 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1018 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1018 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1018 , DELIM_RPAR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1018 , OP_ADD ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1018 , OP_AND ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1018 , OP_ARROW ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1018 , OP_DEC ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1018 , OP_DIV ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1018 , OP_DOT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1018 , OP_EQ ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1018 , OP_GE ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1018 , OP_GT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1018 , OP_INC ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1018 , OP_LAND ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1018 , OP_LE ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1018 , OP_LOR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1018 , OP_LT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1018 , OP_MOD ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1018 , OP_MUL ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1018 , OP_NEQ ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1018 , OP_OR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1018 , OP_SHL ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1018 , OP_SHR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1018 , OP_SUB ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1018 , OP_XOR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1019 , DELIM_COMMA ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1019 , DELIM_QUESTION ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1019 , DELIM_RPAR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1019 , OP_ADD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1019 , OP_AND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1019 , OP_DIV ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1019 , OP_EQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1019 , OP_GE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1019 , OP_GT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1019 , OP_LAND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1019 , OP_LE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1019 , OP_LOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1019 , OP_LT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1019 , OP_MOD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1019 , OP_MUL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1019 , OP_NEQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1019 , OP_OR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1019 , OP_SHL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1019 , OP_SHR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1019 , OP_SUB ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1019 , OP_XOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1020 , <cast-expr> ] = GOTO 1338
M [ 1020 , <constant> ] = GOTO 1014
M [ 1020 , <num-const> ] = GOTO 1016
M [ 1020 , <postfix-expr> ] = GOTO 1017
M [ 1020 , <prim-expr> ] = GOTO 1018
M [ 1020 , <unary-expr> ] = GOTO 1019
M [ 1020 , <unary-op> ] = GOTO 1020
M [ 1020 , CHAR_CONST ] = SHIFT 1021
M [ 1020 , DELIM_LPAR ] = SHIFT 1022
M [ 1020 , FLOAT_CONST ] = SHIFT 1023
M [ 1020 , IDENTIFIER ] = SHIFT 1024
M [ 1020 , INT_CONST ] = SHIFT 1025
M [ 1020 , OP_ADD ] = SHIFT 135
M [ 1020 , OP_AND ] = SHIFT 136
M [ 1020 , OP_DEC ] = SHIFT 1026
M [ 1020 , OP_INC ] = SHIFT 1027
M [ 1020 , OP_LNOT ] = SHIFT 139
M [ 1020 , OP_MUL ] = SHIFT 140
M [ 1020 , OP_NOT ] = SHIFT 141
M [ 1020 , OP_SUB ] = SHIFT 142
M [ 1020 , STR_LITERAL ] = SHIFT 1028
M [ 1020 , sizeof ] = SHIFT 1029
M [ 1021 , DELIM_COMMA ] = REDUCE <constant> -> CHAR_CONST 
M [ 1021 , DELIM_LPAR ] = REDUCE <constant> -> CHAR_CONST 
M [ 1021 , DELIM_LSQBRACKET ] = REDUCE <constant> -> CHAR_CONST 
M [ 1021 , DELIM_QUESTION ] = REDUCE <constant> -> CHAR_CONST 
M [ 1021 , DELIM_RPAR ] = REDUCE <constant> -> CHAR_CONST 
M [ 1021 , OP_ADD ] = REDUCE <constant> -> CHAR_CONST 
M [ 1021 , OP_AND ] = REDUCE <constant> -> CHAR_CONST 
M [ 1021 , OP_ARROW ] = REDUCE <constant> -> CHAR_CONST 
M [ 1021 , OP_DEC ] = REDUCE <constant> -> CHAR_CONST 
M [ 1021 , OP_DIV ] = REDUCE <constant> -> CHAR_CONST 
M [ 1021 , OP_DOT ] = REDUCE <constant> -> CHAR_CONST 
M [ 1021 , OP_EQ ] = REDUCE <constant> -> CHAR_CONST 
M [ 1021 , OP_GE ] = REDUCE <constant> -> CHAR_CONST 
M [ 1021 , OP_GT ] = REDUCE <constant> -> CHAR_CONST 
M [ 1021 , OP_INC ] = REDUCE <constant> -> CHAR_CONST 
M [ 1021 , OP_LAND ] = REDUCE <constant> -> CHAR_CONST 
M [ 1021 , OP_LE ] = REDUCE <constant> -> CHAR_CONST 
M [ 1021 , OP_LOR ] = REDUCE <constant> -> CHAR_CONST 
M [ 1021 , OP_LT ] = REDUCE <constant> -> CHAR_CONST 
M [ 1021 , OP_MOD ] = REDUCE <constant> -> CHAR_CONST 
M [ 1021 , OP_MUL ] = REDUCE <constant> -> CHAR_CONST 
M [ 1021 , OP_NEQ ] = REDUCE <constant> -> CHAR_CONST 
M [ 1021 , OP_OR ] = REDUCE <constant> -> CHAR_CONST 
M [ 1021 , OP_SHL ] = REDUCE <constant> -> CHAR_CONST 
M [ 1021 , OP_SHR ] = REDUCE <constant> -> CHAR_CONST 
M [ 1021 , OP_SUB ] = REDUCE <constant> -> CHAR_CONST 
M [ 1021 , OP_XOR ] = REDUCE <constant> -> CHAR_CONST 
M [ 1022 , <additive-expr> ] = GOTO 299
M [ 1022 , <and-expr> ] = GOTO 300
M [ 1022 , <asn-expr> ] = GOTO 301
M [ 1022 , <cast-expr> ] = GOTO 302
M [ 1022 , <cond-expr> ] = GOTO 303
M [ 1022 , <constant> ] = GOTO 304
M [ 1022 , <enum-spec> ] = GOTO 305
M [ 1022 , <eq-expr> ] = GOTO 306
M [ 1022 , <exc-or-expr> ] = GOTO 307
M [ 1022 , <expr> ] = GOTO 1339
M [ 1022 , <inc-or-expr> ] = GOTO 309
M [ 1022 , <land-expr> ] = GOTO 310
M [ 1022 , <lor-expr> ] = GOTO 311
M [ 1022 , <multiplicative-expr> ] = GOTO 312
M [ 1022 , <num-const> ] = GOTO 313
M [ 1022 , <postfix-expr> ] = GOTO 314
M [ 1022 , <prim-expr> ] = GOTO 315
M [ 1022 , <rel-expr> ] = GOTO 316
M [ 1022 , <shift-expr> ] = GOTO 317
M [ 1022 , <spec-qual-list> ] = GOTO 318
M [ 1022 , <struct-union-spec> ] = GOTO 319
M [ 1022 , <struct-union> ] = GOTO 320
M [ 1022 , <type-name> ] = GOTO 1340
M [ 1022 , <type-qual> ] = GOTO 322
M [ 1022 , <type-spec> ] = GOTO 323
M [ 1022 , <unary-expr> ] = GOTO 324
M [ 1022 , <unary-op> ] = GOTO 325
M [ 1022 , CHAR_CONST ] = SHIFT 326
M [ 1022 , DELIM_LPAR ] = SHIFT 327
M [ 1022 , FLOAT_CONST ] = SHIFT 328
M [ 1022 , IDENTIFIER ] = SHIFT 329
M [ 1022 , INT_CONST ] = SHIFT 330
M [ 1022 , OP_ADD ] = SHIFT 135
M [ 1022 , OP_AND ] = SHIFT 136
M [ 1022 , OP_DEC ] = SHIFT 331
M [ 1022 , OP_INC ] = SHIFT 332
M [ 1022 , OP_LNOT ] = SHIFT 139
M [ 1022 , OP_MUL ] = SHIFT 140
M [ 1022 , OP_NOT ] = SHIFT 141
M [ 1022 , OP_SUB ] = SHIFT 142
M [ 1022 , STR_LITERAL ] = SHIFT 333
M [ 1022 , char ] = SHIFT 334
M [ 1022 , const ] = SHIFT 335
M [ 1022 , double ] = SHIFT 336
M [ 1022 , enum ] = SHIFT 337
M [ 1022 , float ] = SHIFT 338
M [ 1022 , int ] = SHIFT 339
M [ 1022 , long ] = SHIFT 340
M [ 1022 , short ] = SHIFT 341
M [ 1022 , signed ] = SHIFT 342
M [ 1022 , sizeof ] = SHIFT 343
M [ 1022 , struct ] = SHIFT 21
M [ 1022 , unsigned ] = SHIFT 344
M [ 1022 , void ] = SHIFT 345
M [ 1023 , DELIM_COMMA ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1023 , DELIM_LPAR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1023 , DELIM_LSQBRACKET ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1023 , DELIM_QUESTION ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1023 , DELIM_RPAR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1023 , OP_ADD ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1023 , OP_AND ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1023 , OP_ARROW ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1023 , OP_DEC ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1023 , OP_DIV ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1023 , OP_DOT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1023 , OP_EQ ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1023 , OP_GE ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1023 , OP_GT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1023 , OP_INC ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1023 , OP_LAND ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1023 , OP_LE ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1023 , OP_LOR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1023 , OP_LT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1023 , OP_MOD ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1023 , OP_MUL ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1023 , OP_NEQ ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1023 , OP_OR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1023 , OP_SHL ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1023 , OP_SHR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1023 , OP_SUB ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1023 , OP_XOR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1024 , DELIM_COMMA ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1024 , DELIM_LPAR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1024 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1024 , DELIM_QUESTION ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1024 , DELIM_RPAR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1024 , OP_ADD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1024 , OP_AND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1024 , OP_ARROW ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1024 , OP_DEC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1024 , OP_DIV ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1024 , OP_DOT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1024 , OP_EQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1024 , OP_GE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1024 , OP_GT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1024 , OP_INC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1024 , OP_LAND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1024 , OP_LE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1024 , OP_LOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1024 , OP_LT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1024 , OP_MOD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1024 , OP_MUL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1024 , OP_NEQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1024 , OP_OR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1024 , OP_SHL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1024 , OP_SHR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1024 , OP_SUB ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1024 , OP_XOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1025 , DELIM_COMMA ] = REDUCE <num-const> -> INT_CONST 
M [ 1025 , DELIM_LPAR ] = REDUCE <num-const> -> INT_CONST 
M [ 1025 , DELIM_LSQBRACKET ] = REDUCE <num-const> -> INT_CONST 
M [ 1025 , DELIM_QUESTION ] = REDUCE <num-const> -> INT_CONST 
M [ 1025 , DELIM_RPAR ] = REDUCE <num-const> -> INT_CONST 
M [ 1025 , OP_ADD ] = REDUCE <num-const> -> INT_CONST 
M [ 1025 , OP_AND ] = REDUCE <num-const> -> INT_CONST 
M [ 1025 , OP_ARROW ] = REDUCE <num-const> -> INT_CONST 
M [ 1025 , OP_DEC ] = REDUCE <num-const> -> INT_CONST 
M [ 1025 , OP_DIV ] = REDUCE <num-const> -> INT_CONST 
M [ 1025 , OP_DOT ] = REDUCE <num-const> -> INT_CONST 
M [ 1025 , OP_EQ ] = REDUCE <num-const> -> INT_CONST 
M [ 1025 , OP_GE ] = REDUCE <num-const> -> INT_CONST 
M [ 1025 , OP_GT ] = REDUCE <num-const> -> INT_CONST 
M [ 1025 , OP_INC ] = REDUCE <num-const> -> INT_CONST 
M [ 1025 , OP_LAND ] = REDUCE <num-const> -> INT_CONST 
M [ 1025 , OP_LE ] = REDUCE <num-const> -> INT_CONST 
M [ 1025 , OP_LOR ] = REDUCE <num-const> -> INT_CONST 
M [ 1025 , OP_LT ] = REDUCE <num-const> -> INT_CONST 
M [ 1025 , OP_MOD ] = REDUCE <num-const> -> INT_CONST 
M [ 1025 , OP_MUL ] = REDUCE <num-const> -> INT_CONST 
M [ 1025 , OP_NEQ ] = REDUCE <num-const> -> INT_CONST 
M [ 1025 , OP_OR ] = REDUCE <num-const> -> INT_CONST 
M [ 1025 , OP_SHL ] = REDUCE <num-const> -> INT_CONST 
M [ 1025 , OP_SHR ] = REDUCE <num-const> -> INT_CONST 
M [ 1025 , OP_SUB ] = REDUCE <num-const> -> INT_CONST 
M [ 1025 , OP_XOR ] = REDUCE <num-const> -> INT_CONST 
M [ 1026 , <constant> ] = GOTO 1014
M [ 1026 , <num-const> ] = GOTO 1016
M [ 1026 , <postfix-expr> ] = GOTO 1017
M [ 1026 , <prim-expr> ] = GOTO 1018
M [ 1026 , <unary-expr> ] = GOTO 1341
M [ 1026 , <unary-op> ] = GOTO 1020
M [ 1026 , CHAR_CONST ] = SHIFT 1021
M [ 1026 , DELIM_LPAR ] = SHIFT 1342
M [ 1026 , FLOAT_CONST ] = SHIFT 1023
M [ 1026 , IDENTIFIER ] = SHIFT 1024
M [ 1026 , INT_CONST ] = SHIFT 1025
M [ 1026 , OP_ADD ] = SHIFT 135
M [ 1026 , OP_AND ] = SHIFT 136
M [ 1026 , OP_DEC ] = SHIFT 1026
M [ 1026 , OP_INC ] = SHIFT 1027
M [ 1026 , OP_LNOT ] = SHIFT 139
M [ 1026 , OP_MUL ] = SHIFT 140
M [ 1026 , OP_NOT ] = SHIFT 141
M [ 1026 , OP_SUB ] = SHIFT 142
M [ 1026 , STR_LITERAL ] = SHIFT 1028
M [ 1026 , sizeof ] = SHIFT 1029
M [ 1027 , <constant> ] = GOTO 1014
M [ 1027 , <num-const> ] = GOTO 1016
M [ 1027 , <postfix-expr> ] = GOTO 1017
M [ 1027 , <prim-expr> ] = GOTO 1018
M [ 1027 , <unary-expr> ] = GOTO 1343
M [ 1027 , <unary-op> ] = GOTO 1020
M [ 1027 , CHAR_CONST ] = SHIFT 1021
M [ 1027 , DELIM_LPAR ] = SHIFT 1342
M [ 1027 , FLOAT_CONST ] = SHIFT 1023
M [ 1027 , IDENTIFIER ] = SHIFT 1024
M [ 1027 , INT_CONST ] = SHIFT 1025
M [ 1027 , OP_ADD ] = SHIFT 135
M [ 1027 , OP_AND ] = SHIFT 136
M [ 1027 , OP_DEC ] = SHIFT 1026
M [ 1027 , OP_INC ] = SHIFT 1027
M [ 1027 , OP_LNOT ] = SHIFT 139
M [ 1027 , OP_MUL ] = SHIFT 140
M [ 1027 , OP_NOT ] = SHIFT 141
M [ 1027 , OP_SUB ] = SHIFT 142
M [ 1027 , STR_LITERAL ] = SHIFT 1028
M [ 1027 , sizeof ] = SHIFT 1029
M [ 1028 , DELIM_COMMA ] = REDUCE <constant> -> STR_LITERAL 
M [ 1028 , DELIM_LPAR ] = REDUCE <constant> -> STR_LITERAL 
M [ 1028 , DELIM_LSQBRACKET ] = REDUCE <constant> -> STR_LITERAL 
M [ 1028 , DELIM_QUESTION ] = REDUCE <constant> -> STR_LITERAL 
M [ 1028 , DELIM_RPAR ] = REDUCE <constant> -> STR_LITERAL 
M [ 1028 , OP_ADD ] = REDUCE <constant> -> STR_LITERAL 
M [ 1028 , OP_AND ] = REDUCE <constant> -> STR_LITERAL 
M [ 1028 , OP_ARROW ] = REDUCE <constant> -> STR_LITERAL 
M [ 1028 , OP_DEC ] = REDUCE <constant> -> STR_LITERAL 
M [ 1028 , OP_DIV ] = REDUCE <constant> -> STR_LITERAL 
M [ 1028 , OP_DOT ] = REDUCE <constant> -> STR_LITERAL 
M [ 1028 , OP_EQ ] = REDUCE <constant> -> STR_LITERAL 
M [ 1028 , OP_GE ] = REDUCE <constant> -> STR_LITERAL 
M [ 1028 , OP_GT ] = REDUCE <constant> -> STR_LITERAL 
M [ 1028 , OP_INC ] = REDUCE <constant> -> STR_LITERAL 
M [ 1028 , OP_LAND ] = REDUCE <constant> -> STR_LITERAL 
M [ 1028 , OP_LE ] = REDUCE <constant> -> STR_LITERAL 
M [ 1028 , OP_LOR ] = REDUCE <constant> -> STR_LITERAL 
M [ 1028 , OP_LT ] = REDUCE <constant> -> STR_LITERAL 
M [ 1028 , OP_MOD ] = REDUCE <constant> -> STR_LITERAL 
M [ 1028 , OP_MUL ] = REDUCE <constant> -> STR_LITERAL 
M [ 1028 , OP_NEQ ] = REDUCE <constant> -> STR_LITERAL 
M [ 1028 , OP_OR ] = REDUCE <constant> -> STR_LITERAL 
M [ 1028 , OP_SHL ] = REDUCE <constant> -> STR_LITERAL 
M [ 1028 , OP_SHR ] = REDUCE <constant> -> STR_LITERAL 
M [ 1028 , OP_SUB ] = REDUCE <constant> -> STR_LITERAL 
M [ 1028 , OP_XOR ] = REDUCE <constant> -> STR_LITERAL 
M [ 1029 , <constant> ] = GOTO 1014
M [ 1029 , <num-const> ] = GOTO 1016
M [ 1029 , <postfix-expr> ] = GOTO 1017
M [ 1029 , <prim-expr> ] = GOTO 1018
M [ 1029 , <unary-expr> ] = GOTO 1344
M [ 1029 , <unary-op> ] = GOTO 1020
M [ 1029 , CHAR_CONST ] = SHIFT 1021
M [ 1029 , DELIM_LPAR ] = SHIFT 1345
M [ 1029 , FLOAT_CONST ] = SHIFT 1023
M [ 1029 , IDENTIFIER ] = SHIFT 1024
M [ 1029 , INT_CONST ] = SHIFT 1025
M [ 1029 , OP_ADD ] = SHIFT 135
M [ 1029 , OP_AND ] = SHIFT 136
M [ 1029 , OP_DEC ] = SHIFT 1026
M [ 1029 , OP_INC ] = SHIFT 1027
M [ 1029 , OP_LNOT ] = SHIFT 139
M [ 1029 , OP_MUL ] = SHIFT 140
M [ 1029 , OP_NOT ] = SHIFT 141
M [ 1029 , OP_SUB ] = SHIFT 142
M [ 1029 , STR_LITERAL ] = SHIFT 1028
M [ 1029 , sizeof ] = SHIFT 1029
M [ 1030 , DELIM_COMMA ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1030 , DELIM_QUESTION ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1030 , DELIM_RPAR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1030 , OP_ADD ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1030 , OP_AND ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1030 , OP_DIV ] = SHIFT 667
M [ 1030 , OP_EQ ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1030 , OP_GE ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1030 , OP_GT ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1030 , OP_LAND ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1030 , OP_LE ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1030 , OP_LOR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1030 , OP_LT ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1030 , OP_MOD ] = SHIFT 668
M [ 1030 , OP_MUL ] = SHIFT 669
M [ 1030 , OP_NEQ ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1030 , OP_OR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1030 , OP_SHL ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1030 , OP_SHR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1030 , OP_SUB ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1030 , OP_XOR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1031 , DELIM_COMMA ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1031 , DELIM_QUESTION ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1031 , DELIM_RPAR ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1031 , OP_AND ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1031 , OP_EQ ] = SHIFT 658
M [ 1031 , OP_LAND ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1031 , OP_LOR ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1031 , OP_NEQ ] = SHIFT 659
M [ 1031 , OP_OR ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1031 , OP_XOR ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1032 , DELIM_COMMA ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1032 , DELIM_QUESTION ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1032 , DELIM_RPAR ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1032 , OP_AND ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1032 , OP_EQ ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1032 , OP_GE ] = SHIFT 676
M [ 1032 , OP_GT ] = SHIFT 677
M [ 1032 , OP_LAND ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1032 , OP_LE ] = SHIFT 678
M [ 1032 , OP_LOR ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1032 , OP_LT ] = SHIFT 679
M [ 1032 , OP_NEQ ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1032 , OP_OR ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1032 , OP_XOR ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1033 , DELIM_COMMA ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1033 , DELIM_QUESTION ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1033 , DELIM_RPAR ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1033 , OP_AND ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1033 , OP_EQ ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1033 , OP_GE ] = SHIFT 676
M [ 1033 , OP_GT ] = SHIFT 677
M [ 1033 , OP_LAND ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1033 , OP_LE ] = SHIFT 678
M [ 1033 , OP_LOR ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1033 , OP_LT ] = SHIFT 679
M [ 1033 , OP_NEQ ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1033 , OP_OR ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1033 , OP_XOR ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1034 , DELIM_COMMA ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1034 , DELIM_QUESTION ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1034 , DELIM_RPAR ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1034 , OP_AND ] = SHIFT 657
M [ 1034 , OP_LAND ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1034 , OP_LOR ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1034 , OP_OR ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1034 , OP_XOR ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1035 , DELIM_COMMA ] = REDUCE <expr> -> <expr> DELIM_COMMA <asn-expr> 
M [ 1035 , DELIM_RPAR ] = REDUCE <expr> -> <expr> DELIM_COMMA <asn-expr> 
M [ 1036 , DELIM_COMMA ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1036 , DELIM_QUESTION ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1036 , DELIM_RPAR ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1036 , OP_LAND ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1036 , OP_LOR ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1036 , OP_OR ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1036 , OP_XOR ] = SHIFT 660
M [ 1037 , DELIM_COMMA ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 1037 , DELIM_QUESTION ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 1037 , DELIM_RPAR ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 1037 , OP_LAND ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 1037 , OP_LOR ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 1037 , OP_OR ] = SHIFT 663
M [ 1038 , DELIM_COLON ] = SHIFT 1346
M [ 1038 , DELIM_COMMA ] = SHIFT 942
M [ 1039 , DELIM_COMMA ] = REDUCE <lor-expr> -> <lor-expr> OP_LOR <land-expr> 
M [ 1039 , DELIM_QUESTION ] = REDUCE <lor-expr> -> <lor-expr> OP_LOR <land-expr> 
M [ 1039 , DELIM_RPAR ] = REDUCE <lor-expr> -> <lor-expr> OP_LOR <land-expr> 
M [ 1039 , OP_LAND ] = SHIFT 664
M [ 1039 , OP_LOR ] = REDUCE <lor-expr> -> <lor-expr> OP_LOR <land-expr> 
M [ 1040 , DELIM_COMMA ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1040 , DELIM_QUESTION ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1040 , DELIM_RPAR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1040 , OP_ADD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1040 , OP_AND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1040 , OP_DIV ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1040 , OP_EQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1040 , OP_GE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1040 , OP_GT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1040 , OP_LAND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1040 , OP_LE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1040 , OP_LOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1040 , OP_LT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1040 , OP_MOD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1040 , OP_MUL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1040 , OP_NEQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1040 , OP_OR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1040 , OP_SHL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1040 , OP_SHR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1040 , OP_SUB ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1040 , OP_XOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1041 , DELIM_COMMA ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1041 , DELIM_QUESTION ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1041 , DELIM_RPAR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1041 , OP_ADD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1041 , OP_AND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1041 , OP_DIV ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1041 , OP_EQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1041 , OP_GE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1041 , OP_GT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1041 , OP_LAND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1041 , OP_LE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1041 , OP_LOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1041 , OP_LT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1041 , OP_MOD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1041 , OP_MUL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1041 , OP_NEQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1041 , OP_OR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1041 , OP_SHL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1041 , OP_SHR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1041 , OP_SUB ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1041 , OP_XOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1042 , DELIM_COMMA ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1042 , DELIM_QUESTION ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1042 , DELIM_RPAR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1042 , OP_ADD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1042 , OP_AND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1042 , OP_DIV ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1042 , OP_EQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1042 , OP_GE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1042 , OP_GT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1042 , OP_LAND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1042 , OP_LE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1042 , OP_LOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1042 , OP_LT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1042 , OP_MOD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1042 , OP_MUL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1042 , OP_NEQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1042 , OP_OR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1042 , OP_SHL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1042 , OP_SHR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1042 , OP_SUB ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1042 , OP_XOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1043 , DELIM_COMMA ] = SHIFT 973
M [ 1043 , DELIM_RPAR ] = SHIFT 1347
M [ 1044 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , DELIM_RPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1044 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1045 , DELIM_COMMA ] = SHIFT 981
M [ 1045 , DELIM_RSQBRACKET ] = SHIFT 1348
M [ 1046 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , DELIM_RPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1046 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1047 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , DELIM_RPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1047 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1048 , DELIM_COMMA ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1048 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1048 , DELIM_RPAR ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1048 , OP_AND ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1048 , OP_EQ ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1048 , OP_GE ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1048 , OP_GT ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1048 , OP_LAND ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1048 , OP_LE ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1048 , OP_LOR ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1048 , OP_LT ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1048 , OP_NEQ ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1048 , OP_OR ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1048 , OP_SHL ] = SHIFT 680
M [ 1048 , OP_SHR ] = SHIFT 681
M [ 1048 , OP_XOR ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1049 , DELIM_COMMA ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1049 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1049 , DELIM_RPAR ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1049 , OP_AND ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1049 , OP_EQ ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1049 , OP_GE ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1049 , OP_GT ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1049 , OP_LAND ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1049 , OP_LE ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1049 , OP_LOR ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1049 , OP_LT ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1049 , OP_NEQ ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1049 , OP_OR ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1049 , OP_SHL ] = SHIFT 680
M [ 1049 , OP_SHR ] = SHIFT 681
M [ 1049 , OP_XOR ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1050 , DELIM_COMMA ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1050 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1050 , DELIM_RPAR ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1050 , OP_AND ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1050 , OP_EQ ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1050 , OP_GE ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1050 , OP_GT ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1050 , OP_LAND ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1050 , OP_LE ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1050 , OP_LOR ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1050 , OP_LT ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1050 , OP_NEQ ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1050 , OP_OR ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1050 , OP_SHL ] = SHIFT 680
M [ 1050 , OP_SHR ] = SHIFT 681
M [ 1050 , OP_XOR ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1051 , DELIM_COMMA ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1051 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1051 , DELIM_RPAR ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1051 , OP_AND ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1051 , OP_EQ ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1051 , OP_GE ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1051 , OP_GT ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1051 , OP_LAND ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1051 , OP_LE ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1051 , OP_LOR ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1051 , OP_LT ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1051 , OP_NEQ ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1051 , OP_OR ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1051 , OP_SHL ] = SHIFT 680
M [ 1051 , OP_SHR ] = SHIFT 681
M [ 1051 , OP_XOR ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1052 , DELIM_COMMA ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1052 , DELIM_QUESTION ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1052 , DELIM_RPAR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1052 , OP_ADD ] = SHIFT 655
M [ 1052 , OP_AND ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1052 , OP_EQ ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1052 , OP_GE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1052 , OP_GT ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1052 , OP_LAND ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1052 , OP_LE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1052 , OP_LOR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1052 , OP_LT ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1052 , OP_NEQ ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1052 , OP_OR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1052 , OP_SHL ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1052 , OP_SHR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1052 , OP_SUB ] = SHIFT 656
M [ 1052 , OP_XOR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1053 , DELIM_COMMA ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1053 , DELIM_QUESTION ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1053 , DELIM_RPAR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1053 , OP_ADD ] = SHIFT 655
M [ 1053 , OP_AND ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1053 , OP_EQ ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1053 , OP_GE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1053 , OP_GT ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1053 , OP_LAND ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1053 , OP_LE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1053 , OP_LOR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1053 , OP_LT ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1053 , OP_NEQ ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1053 , OP_OR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1053 , OP_SHL ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1053 , OP_SHR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1053 , OP_SUB ] = SHIFT 656
M [ 1053 , OP_XOR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1054 , DELIM_RPAR ] = REDUCE <abstract-declarator> -> <pointer> <direct-abstract-declarator> 
M [ 1055 , DELIM_RPAR ] = SHIFT 1349
M [ 1056 , DELIM_RSQBRACKET ] = SHIFT 1350
M [ 1057 , <additive-expr> ] = GOTO 185
M [ 1057 , <and-expr> ] = GOTO 186
M [ 1057 , <asn-expr> ] = GOTO 1351
M [ 1057 , <cast-expr> ] = GOTO 188
M [ 1057 , <cond-expr> ] = GOTO 189
M [ 1057 , <constant> ] = GOTO 190
M [ 1057 , <eq-expr> ] = GOTO 191
M [ 1057 , <exc-or-expr> ] = GOTO 192
M [ 1057 , <inc-or-expr> ] = GOTO 193
M [ 1057 , <land-expr> ] = GOTO 194
M [ 1057 , <lor-expr> ] = GOTO 195
M [ 1057 , <multiplicative-expr> ] = GOTO 196
M [ 1057 , <num-const> ] = GOTO 197
M [ 1057 , <postfix-expr> ] = GOTO 198
M [ 1057 , <prim-expr> ] = GOTO 199
M [ 1057 , <rel-expr> ] = GOTO 200
M [ 1057 , <shift-expr> ] = GOTO 201
M [ 1057 , <type-qual> ] = GOTO 495
M [ 1057 , <unary-expr> ] = GOTO 204
M [ 1057 , <unary-op> ] = GOTO 205
M [ 1057 , CHAR_CONST ] = SHIFT 206
M [ 1057 , DELIM_LPAR ] = SHIFT 207
M [ 1057 , DELIM_RSQBRACKET ] = SHIFT 1352
M [ 1057 , FLOAT_CONST ] = SHIFT 209
M [ 1057 , IDENTIFIER ] = SHIFT 210
M [ 1057 , INT_CONST ] = SHIFT 211
M [ 1057 , OP_ADD ] = SHIFT 135
M [ 1057 , OP_AND ] = SHIFT 136
M [ 1057 , OP_DEC ] = SHIFT 212
M [ 1057 , OP_INC ] = SHIFT 213
M [ 1057 , OP_LNOT ] = SHIFT 139
M [ 1057 , OP_MUL ] = SHIFT 140
M [ 1057 , OP_NOT ] = SHIFT 141
M [ 1057 , OP_SUB ] = SHIFT 142
M [ 1057 , STR_LITERAL ] = SHIFT 214
M [ 1057 , const ] = SHIFT 215
M [ 1057 , sizeof ] = SHIFT 216
M [ 1058 , DELIM_RPAR ] = REDUCE <direct-abstract-declarator> -> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 1059 , DELIM_LPAR ] = REDUCE <pointer> -> OP_MUL <pointer> 
M [ 1059 , DELIM_LSQBRACKET ] = REDUCE <pointer> -> OP_MUL <pointer> 
M [ 1059 , DELIM_RPAR ] = REDUCE <pointer> -> OP_MUL <pointer> 
M [ 1060 , <pointer> ] = GOTO 1353
M [ 1060 , <type-qual> ] = GOTO 1354
M [ 1060 , DELIM_LPAR ] = REDUCE <pointer> -> OP_MUL <type-qual-list> 
M [ 1060 , DELIM_LSQBRACKET ] = REDUCE <pointer> -> OP_MUL <type-qual-list> 
M [ 1060 , DELIM_RPAR ] = REDUCE <pointer> -> OP_MUL <type-qual-list> 
M [ 1060 , OP_MUL ] = SHIFT 687
M [ 1060 , const ] = SHIFT 1062
M [ 1061 , DELIM_LPAR ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 1061 , DELIM_LSQBRACKET ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 1061 , DELIM_RPAR ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 1061 , OP_MUL ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 1061 , const ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 1062 , DELIM_LPAR ] = REDUCE <type-qual> -> const 
M [ 1062 , DELIM_LSQBRACKET ] = REDUCE <type-qual> -> const 
M [ 1062 , DELIM_RPAR ] = REDUCE <type-qual> -> const 
M [ 1062 , OP_MUL ] = REDUCE <type-qual> -> const 
M [ 1062 , const ] = REDUCE <type-qual> -> const 
M [ 1063 , <enum-spec> ] = GOTO 62
M [ 1063 , <spec-qual-list> ] = GOTO 63
M [ 1063 , <struct-decl> ] = GOTO 233
M [ 1063 , <struct-union-spec> ] = GOTO 66
M [ 1063 , <struct-union> ] = GOTO 67
M [ 1063 , <type-qual> ] = GOTO 68
M [ 1063 , <type-spec> ] = GOTO 69
M [ 1063 , DELIM_RCURBRACE ] = SHIFT 1355
M [ 1063 , char ] = SHIFT 70
M [ 1063 , const ] = SHIFT 71
M [ 1063 , double ] = SHIFT 72
M [ 1063 , enum ] = SHIFT 73
M [ 1063 , float ] = SHIFT 74
M [ 1063 , int ] = SHIFT 75
M [ 1063 , long ] = SHIFT 76
M [ 1063 , short ] = SHIFT 77
M [ 1063 , signed ] = SHIFT 78
M [ 1063 , struct ] = SHIFT 21
M [ 1063 , unsigned ] = SHIFT 79
M [ 1063 , void ] = SHIFT 80
M [ 1064 , <enum-spec> ] = GOTO 62
M [ 1064 , <spec-qual-list> ] = GOTO 63
M [ 1064 , <struct-decl-list> ] = GOTO 1356
M [ 1064 , <struct-decl> ] = GOTO 65
M [ 1064 , <struct-union-spec> ] = GOTO 66
M [ 1064 , <struct-union> ] = GOTO 67
M [ 1064 , <type-qual> ] = GOTO 68
M [ 1064 , <type-spec> ] = GOTO 69
M [ 1064 , char ] = SHIFT 70
M [ 1064 , const ] = SHIFT 71
M [ 1064 , double ] = SHIFT 72
M [ 1064 , enum ] = SHIFT 73
M [ 1064 , float ] = SHIFT 74
M [ 1064 , int ] = SHIFT 75
M [ 1064 , long ] = SHIFT 76
M [ 1064 , short ] = SHIFT 77
M [ 1064 , signed ] = SHIFT 78
M [ 1064 , struct ] = SHIFT 21
M [ 1064 , unsigned ] = SHIFT 79
M [ 1064 , void ] = SHIFT 80
M [ 1065 , DELIM_COMMA ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1065 , DELIM_QUESTION ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1065 , DELIM_SEMICOLON ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1065 , OP_ADD ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1065 , OP_AND ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1065 , OP_DIV ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1065 , OP_EQ ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1065 , OP_GE ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1065 , OP_GT ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1065 , OP_LAND ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1065 , OP_LE ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1065 , OP_LOR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1065 , OP_LT ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1065 , OP_MOD ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1065 , OP_MUL ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1065 , OP_NEQ ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1065 , OP_OR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1065 , OP_SHL ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1065 , OP_SHR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1065 , OP_SUB ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1065 , OP_XOR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1066 , <additive-expr> ] = GOTO 412
M [ 1066 , <and-expr> ] = GOTO 413
M [ 1066 , <asn-expr> ] = GOTO 414
M [ 1066 , <cast-expr> ] = GOTO 415
M [ 1066 , <cond-expr> ] = GOTO 416
M [ 1066 , <constant> ] = GOTO 417
M [ 1066 , <designation> ] = GOTO 418
M [ 1066 , <designator-list> ] = GOTO 419
M [ 1066 , <designator> ] = GOTO 420
M [ 1066 , <eq-expr> ] = GOTO 421
M [ 1066 , <exc-or-expr> ] = GOTO 422
M [ 1066 , <inc-or-expr> ] = GOTO 423
M [ 1066 , <initializer-list> ] = GOTO 1357
M [ 1066 , <initializer> ] = GOTO 425
M [ 1066 , <land-expr> ] = GOTO 426
M [ 1066 , <lor-expr> ] = GOTO 427
M [ 1066 , <multiplicative-expr> ] = GOTO 428
M [ 1066 , <num-const> ] = GOTO 429
M [ 1066 , <postfix-expr> ] = GOTO 430
M [ 1066 , <prim-expr> ] = GOTO 431
M [ 1066 , <rel-expr> ] = GOTO 432
M [ 1066 , <shift-expr> ] = GOTO 433
M [ 1066 , <unary-expr> ] = GOTO 434
M [ 1066 , <unary-op> ] = GOTO 435
M [ 1066 , CHAR_CONST ] = SHIFT 436
M [ 1066 , DELIM_LCURBRACE ] = SHIFT 437
M [ 1066 , DELIM_LPAR ] = SHIFT 438
M [ 1066 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 1066 , FLOAT_CONST ] = SHIFT 440
M [ 1066 , IDENTIFIER ] = SHIFT 441
M [ 1066 , INT_CONST ] = SHIFT 442
M [ 1066 , OP_ADD ] = SHIFT 135
M [ 1066 , OP_AND ] = SHIFT 136
M [ 1066 , OP_DEC ] = SHIFT 443
M [ 1066 , OP_DOT ] = SHIFT 444
M [ 1066 , OP_INC ] = SHIFT 445
M [ 1066 , OP_LNOT ] = SHIFT 139
M [ 1066 , OP_MUL ] = SHIFT 140
M [ 1066 , OP_NOT ] = SHIFT 141
M [ 1066 , OP_SUB ] = SHIFT 142
M [ 1066 , STR_LITERAL ] = SHIFT 446
M [ 1066 , sizeof ] = SHIFT 447
M [ 1067 , DELIM_COMMA ] = REDUCE <asn-expr> -> <unary-expr> <asn-op> <asn-expr> 
M [ 1067 , DELIM_RPAR ] = REDUCE <asn-expr> -> <unary-expr> <asn-op> <asn-expr> 
M [ 1068 , DELIM_RPAR ] = SHIFT 1358
M [ 1069 , DELIM_COMMA ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , DELIM_LPAR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , DELIM_QUESTION ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , DELIM_RPAR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_ADD ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_ADDASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_AND ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_ANDASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_ARROW ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_ASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_DEC ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_DIV ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_DIVASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_DOT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_EQ ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_GE ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_GT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_INC ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_LAND ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_LE ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_LOR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_LT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_MOD ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_MODASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_MUL ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_MULASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_NEQ ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_OR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_ORASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_SHL ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_SHLASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_SHR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_SHRASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_SUB ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_SUBASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_XOR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1069 , OP_XORASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1070 , <cast-expr> ] = GOTO 1359
M [ 1070 , <constant> ] = GOTO 1014
M [ 1070 , <num-const> ] = GOTO 1016
M [ 1070 , <postfix-expr> ] = GOTO 1017
M [ 1070 , <prim-expr> ] = GOTO 1018
M [ 1070 , <unary-expr> ] = GOTO 1019
M [ 1070 , <unary-op> ] = GOTO 1020
M [ 1070 , CHAR_CONST ] = SHIFT 1021
M [ 1070 , DELIM_LCURBRACE ] = SHIFT 1360
M [ 1070 , DELIM_LPAR ] = SHIFT 1022
M [ 1070 , FLOAT_CONST ] = SHIFT 1023
M [ 1070 , IDENTIFIER ] = SHIFT 1024
M [ 1070 , INT_CONST ] = SHIFT 1025
M [ 1070 , OP_ADD ] = SHIFT 135
M [ 1070 , OP_AND ] = SHIFT 136
M [ 1070 , OP_DEC ] = SHIFT 1026
M [ 1070 , OP_INC ] = SHIFT 1027
M [ 1070 , OP_LNOT ] = SHIFT 139
M [ 1070 , OP_MUL ] = SHIFT 140
M [ 1070 , OP_NOT ] = SHIFT 141
M [ 1070 , OP_SUB ] = SHIFT 142
M [ 1070 , STR_LITERAL ] = SHIFT 1028
M [ 1070 , sizeof ] = SHIFT 1029
M [ 1071 , DELIM_RPAR ] = SHIFT 1361
M [ 1072 , DELIM_COMMA ] = SHIFT 1362
M [ 1072 , DELIM_RCURBRACE ] = SHIFT 1363
M [ 1073 , <enumeration-const> ] = GOTO 82
M [ 1073 , <enumerator-list> ] = GOTO 1364
M [ 1073 , <enumerator> ] = GOTO 84
M [ 1073 , IDENTIFIER ] = SHIFT 85
M [ 1074 , DELIM_RPAR ] = SHIFT 1365
M [ 1075 , DELIM_LCURBRACE ] = SHIFT 1066
M [ 1076 , DELIM_COLON ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1076 , DELIM_QUESTION ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1076 , OP_ADD ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1076 , OP_AND ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1076 , OP_DIV ] = SHIFT 719
M [ 1076 , OP_EQ ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1076 , OP_GE ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1076 , OP_GT ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1076 , OP_LAND ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1076 , OP_LE ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1076 , OP_LOR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1076 , OP_LT ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1076 , OP_MOD ] = SHIFT 720
M [ 1076 , OP_MUL ] = SHIFT 721
M [ 1076 , OP_NEQ ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1076 , OP_OR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1076 , OP_SHL ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1076 , OP_SHR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1076 , OP_SUB ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1076 , OP_XOR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1077 , DELIM_COLON ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1077 , DELIM_QUESTION ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1077 , OP_ADD ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1077 , OP_AND ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1077 , OP_DIV ] = SHIFT 719
M [ 1077 , OP_EQ ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1077 , OP_GE ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1077 , OP_GT ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1077 , OP_LAND ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1077 , OP_LE ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1077 , OP_LOR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1077 , OP_LT ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1077 , OP_MOD ] = SHIFT 720
M [ 1077 , OP_MUL ] = SHIFT 721
M [ 1077 , OP_NEQ ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1077 , OP_OR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1077 , OP_SHL ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1077 , OP_SHR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1077 , OP_SUB ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1077 , OP_XOR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1078 , DELIM_COLON ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1078 , DELIM_QUESTION ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1078 , OP_AND ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1078 , OP_EQ ] = SHIFT 712
M [ 1078 , OP_LAND ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1078 , OP_LOR ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1078 , OP_NEQ ] = SHIFT 713
M [ 1078 , OP_OR ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1078 , OP_XOR ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1079 , CHAR_CONST ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , DELIM_LCURBRACE ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , DELIM_LPAR ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , DELIM_RCURBRACE ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , DELIM_SEMICOLON ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , FLOAT_CONST ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , IDENTIFIER ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , INT_CONST ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , OP_ADD ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , OP_AND ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , OP_DEC ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , OP_INC ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , OP_LNOT ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , OP_MUL ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , OP_NOT ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , OP_SUB ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , STR_LITERAL ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , break ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , case ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , char ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , const ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , continue ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , default ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , do ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , double ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , enum ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , float ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , for ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , goto ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , if ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , int ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , long ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , return ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , short ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , signed ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , sizeof ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , struct ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , switch ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , typedef ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , unsigned ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , void ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1079 , while ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1080 , DELIM_COLON ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1080 , DELIM_QUESTION ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1080 , OP_AND ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1080 , OP_EQ ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1080 , OP_GE ] = SHIFT 728
M [ 1080 , OP_GT ] = SHIFT 729
M [ 1080 , OP_LAND ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1080 , OP_LE ] = SHIFT 730
M [ 1080 , OP_LOR ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1080 , OP_LT ] = SHIFT 731
M [ 1080 , OP_NEQ ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1080 , OP_OR ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1080 , OP_XOR ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1081 , DELIM_COLON ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1081 , DELIM_QUESTION ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1081 , OP_AND ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1081 , OP_EQ ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1081 , OP_GE ] = SHIFT 728
M [ 1081 , OP_GT ] = SHIFT 729
M [ 1081 , OP_LAND ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1081 , OP_LE ] = SHIFT 730
M [ 1081 , OP_LOR ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1081 , OP_LT ] = SHIFT 731
M [ 1081 , OP_NEQ ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1081 , OP_OR ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1081 , OP_XOR ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1082 , DELIM_COLON ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1082 , DELIM_QUESTION ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1082 , OP_AND ] = SHIFT 710
M [ 1082 , OP_LAND ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1082 , OP_LOR ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1082 , OP_OR ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1082 , OP_XOR ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1083 , DELIM_COLON ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1083 , DELIM_QUESTION ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1083 , OP_LAND ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1083 , OP_LOR ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1083 , OP_OR ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1083 , OP_XOR ] = SHIFT 714
M [ 1084 , DELIM_COLON ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 1084 , DELIM_QUESTION ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 1084 , OP_LAND ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 1084 , OP_LOR ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 1084 , OP_OR ] = SHIFT 715
M [ 1085 , DELIM_COLON ] = SHIFT 1366
M [ 1085 , DELIM_COMMA ] = SHIFT 942
M [ 1086 , DELIM_COLON ] = REDUCE <lor-expr> -> <lor-expr> OP_LOR <land-expr> 
M [ 1086 , DELIM_QUESTION ] = REDUCE <lor-expr> -> <lor-expr> OP_LOR <land-expr> 
M [ 1086 , OP_LAND ] = SHIFT 716
M [ 1086 , OP_LOR ] = REDUCE <lor-expr> -> <lor-expr> OP_LOR <land-expr> 
M [ 1087 , DELIM_COLON ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1087 , DELIM_QUESTION ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1087 , OP_ADD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1087 , OP_AND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1087 , OP_DIV ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1087 , OP_EQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1087 , OP_GE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1087 , OP_GT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1087 , OP_LAND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1087 , OP_LE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1087 , OP_LOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1087 , OP_LT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1087 , OP_MOD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1087 , OP_MUL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1087 , OP_NEQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1087 , OP_OR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1087 , OP_SHL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1087 , OP_SHR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1087 , OP_SUB ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1087 , OP_XOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1088 , DELIM_COLON ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1088 , DELIM_QUESTION ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1088 , OP_ADD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1088 , OP_AND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1088 , OP_DIV ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1088 , OP_EQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1088 , OP_GE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1088 , OP_GT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1088 , OP_LAND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1088 , OP_LE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1088 , OP_LOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1088 , OP_LT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1088 , OP_MOD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1088 , OP_MUL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1088 , OP_NEQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1088 , OP_OR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1088 , OP_SHL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1088 , OP_SHR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1088 , OP_SUB ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1088 , OP_XOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1089 , DELIM_COLON ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1089 , DELIM_QUESTION ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1089 , OP_ADD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1089 , OP_AND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1089 , OP_DIV ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1089 , OP_EQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1089 , OP_GE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1089 , OP_GT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1089 , OP_LAND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1089 , OP_LE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1089 , OP_LOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1089 , OP_LT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1089 , OP_MOD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1089 , OP_MUL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1089 , OP_NEQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1089 , OP_OR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1089 , OP_SHL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1089 , OP_SHR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1089 , OP_SUB ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1089 , OP_XOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1090 , DELIM_COMMA ] = SHIFT 973
M [ 1090 , DELIM_RPAR ] = SHIFT 1367
M [ 1091 , DELIM_COLON ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1091 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1091 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1091 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1091 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1091 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1091 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1091 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1091 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1091 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1091 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1091 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1091 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1091 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1091 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1091 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1091 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1091 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1091 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1091 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1091 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1091 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1091 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1091 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1091 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1091 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1092 , DELIM_COMMA ] = SHIFT 981
M [ 1092 , DELIM_RSQBRACKET ] = SHIFT 1368
M [ 1093 , DELIM_COLON ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1093 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1093 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1093 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1093 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1093 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1093 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1093 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1093 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1093 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1093 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1093 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1093 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1093 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1093 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1093 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1093 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1093 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1093 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1093 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1093 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1093 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1093 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1093 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1093 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1093 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1094 , DELIM_COLON ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1094 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1094 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1094 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1094 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1094 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1094 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1094 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1094 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1094 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1094 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1094 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1094 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1094 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1094 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1094 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1094 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1094 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1094 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1094 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1094 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1094 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1094 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1094 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1094 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1094 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1095 , DELIM_COLON ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1095 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1095 , OP_AND ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1095 , OP_EQ ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1095 , OP_GE ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1095 , OP_GT ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1095 , OP_LAND ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1095 , OP_LE ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1095 , OP_LOR ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1095 , OP_LT ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1095 , OP_NEQ ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1095 , OP_OR ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1095 , OP_SHL ] = SHIFT 732
M [ 1095 , OP_SHR ] = SHIFT 733
M [ 1095 , OP_XOR ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1096 , DELIM_COLON ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1096 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1096 , OP_AND ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1096 , OP_EQ ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1096 , OP_GE ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1096 , OP_GT ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1096 , OP_LAND ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1096 , OP_LE ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1096 , OP_LOR ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1096 , OP_LT ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1096 , OP_NEQ ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1096 , OP_OR ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1096 , OP_SHL ] = SHIFT 732
M [ 1096 , OP_SHR ] = SHIFT 733
M [ 1096 , OP_XOR ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1097 , DELIM_COLON ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1097 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1097 , OP_AND ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1097 , OP_EQ ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1097 , OP_GE ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1097 , OP_GT ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1097 , OP_LAND ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1097 , OP_LE ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1097 , OP_LOR ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1097 , OP_LT ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1097 , OP_NEQ ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1097 , OP_OR ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1097 , OP_SHL ] = SHIFT 732
M [ 1097 , OP_SHR ] = SHIFT 733
M [ 1097 , OP_XOR ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1098 , DELIM_COLON ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1098 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1098 , OP_AND ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1098 , OP_EQ ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1098 , OP_GE ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1098 , OP_GT ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1098 , OP_LAND ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1098 , OP_LE ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1098 , OP_LOR ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1098 , OP_LT ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1098 , OP_NEQ ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1098 , OP_OR ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1098 , OP_SHL ] = SHIFT 732
M [ 1098 , OP_SHR ] = SHIFT 733
M [ 1098 , OP_XOR ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1099 , DELIM_COLON ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1099 , DELIM_QUESTION ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1099 , OP_ADD ] = SHIFT 708
M [ 1099 , OP_AND ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1099 , OP_EQ ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1099 , OP_GE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1099 , OP_GT ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1099 , OP_LAND ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1099 , OP_LE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1099 , OP_LOR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1099 , OP_LT ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1099 , OP_NEQ ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1099 , OP_OR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1099 , OP_SHL ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1099 , OP_SHR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1099 , OP_SUB ] = SHIFT 709
M [ 1099 , OP_XOR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1100 , DELIM_COLON ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1100 , DELIM_QUESTION ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1100 , OP_ADD ] = SHIFT 708
M [ 1100 , OP_AND ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1100 , OP_EQ ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1100 , OP_GE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1100 , OP_GT ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1100 , OP_LAND ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1100 , OP_LE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1100 , OP_LOR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1100 , OP_LT ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1100 , OP_NEQ ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1100 , OP_OR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1100 , OP_SHL ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1100 , OP_SHR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1100 , OP_SUB ] = SHIFT 709
M [ 1100 , OP_XOR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1101 , DELIM_COLON ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1101 , DELIM_LPAR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1101 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1101 , DELIM_QUESTION ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1101 , OP_ADD ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1101 , OP_AND ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1101 , OP_ARROW ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1101 , OP_DEC ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1101 , OP_DIV ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1101 , OP_DOT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1101 , OP_EQ ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1101 , OP_GE ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1101 , OP_GT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1101 , OP_INC ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1101 , OP_LAND ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1101 , OP_LE ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1101 , OP_LOR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1101 , OP_LT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1101 , OP_MOD ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1101 , OP_MUL ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1101 , OP_NEQ ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1101 , OP_OR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1101 , OP_SHL ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1101 , OP_SHR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1101 , OP_SUB ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1101 , OP_XOR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1102 , <cast-expr> ] = GOTO 1369
M [ 1102 , <constant> ] = GOTO 356
M [ 1102 , <num-const> ] = GOTO 363
M [ 1102 , <postfix-expr> ] = GOTO 364
M [ 1102 , <prim-expr> ] = GOTO 365
M [ 1102 , <unary-expr> ] = GOTO 368
M [ 1102 , <unary-op> ] = GOTO 369
M [ 1102 , CHAR_CONST ] = SHIFT 370
M [ 1102 , DELIM_LCURBRACE ] = SHIFT 1370
M [ 1102 , DELIM_LPAR ] = SHIFT 371
M [ 1102 , FLOAT_CONST ] = SHIFT 372
M [ 1102 , IDENTIFIER ] = SHIFT 373
M [ 1102 , INT_CONST ] = SHIFT 374
M [ 1102 , OP_ADD ] = SHIFT 135
M [ 1102 , OP_AND ] = SHIFT 136
M [ 1102 , OP_DEC ] = SHIFT 375
M [ 1102 , OP_INC ] = SHIFT 376
M [ 1102 , OP_LNOT ] = SHIFT 139
M [ 1102 , OP_MUL ] = SHIFT 140
M [ 1102 , OP_NOT ] = SHIFT 141
M [ 1102 , OP_SUB ] = SHIFT 142
M [ 1102 , STR_LITERAL ] = SHIFT 377
M [ 1102 , sizeof ] = SHIFT 378
M [ 1103 , DELIM_RPAR ] = SHIFT 1371
M [ 1104 , DELIM_RPAR ] = SHIFT 1372
M [ 1105 , <additive-expr> ] = GOTO 299
M [ 1105 , <and-expr> ] = GOTO 300
M [ 1105 , <asn-expr> ] = GOTO 301
M [ 1105 , <cast-expr> ] = GOTO 302
M [ 1105 , <cond-expr> ] = GOTO 303
M [ 1105 , <constant> ] = GOTO 304
M [ 1105 , <eq-expr> ] = GOTO 306
M [ 1105 , <exc-or-expr> ] = GOTO 307
M [ 1105 , <expr> ] = GOTO 1373
M [ 1105 , <inc-or-expr> ] = GOTO 309
M [ 1105 , <land-expr> ] = GOTO 310
M [ 1105 , <lor-expr> ] = GOTO 311
M [ 1105 , <multiplicative-expr> ] = GOTO 312
M [ 1105 , <num-const> ] = GOTO 313
M [ 1105 , <postfix-expr> ] = GOTO 314
M [ 1105 , <prim-expr> ] = GOTO 315
M [ 1105 , <rel-expr> ] = GOTO 316
M [ 1105 , <shift-expr> ] = GOTO 317
M [ 1105 , <unary-expr> ] = GOTO 324
M [ 1105 , <unary-op> ] = GOTO 325
M [ 1105 , CHAR_CONST ] = SHIFT 326
M [ 1105 , DELIM_LPAR ] = SHIFT 327
M [ 1105 , FLOAT_CONST ] = SHIFT 328
M [ 1105 , IDENTIFIER ] = SHIFT 329
M [ 1105 , INT_CONST ] = SHIFT 330
M [ 1105 , OP_ADD ] = SHIFT 135
M [ 1105 , OP_AND ] = SHIFT 136
M [ 1105 , OP_DEC ] = SHIFT 331
M [ 1105 , OP_INC ] = SHIFT 332
M [ 1105 , OP_LNOT ] = SHIFT 139
M [ 1105 , OP_MUL ] = SHIFT 140
M [ 1105 , OP_NOT ] = SHIFT 141
M [ 1105 , OP_SUB ] = SHIFT 142
M [ 1105 , STR_LITERAL ] = SHIFT 333
M [ 1105 , sizeof ] = SHIFT 343
M [ 1106 , while ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1107 , while ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1108 , <additive-expr> ] = GOTO 96
M [ 1108 , <and-expr> ] = GOTO 97
M [ 1108 , <asn-expr> ] = GOTO 98
M [ 1108 , <cast-expr> ] = GOTO 101
M [ 1108 , <comp-stmt> ] = GOTO 381
M [ 1108 , <cond-expr> ] = GOTO 103
M [ 1108 , <constant> ] = GOTO 104
M [ 1108 , <eq-expr> ] = GOTO 107
M [ 1108 , <exc-or-expr> ] = GOTO 108
M [ 1108 , <expr-stmt> ] = GOTO 382
M [ 1108 , <expr> ] = GOTO 383
M [ 1108 , <inc-or-expr> ] = GOTO 111
M [ 1108 , <iter-stmt> ] = GOTO 384
M [ 1108 , <jump-stmt> ] = GOTO 385
M [ 1108 , <labeled-stmt> ] = GOTO 386
M [ 1108 , <land-expr> ] = GOTO 115
M [ 1108 , <lor-expr> ] = GOTO 116
M [ 1108 , <multiplicative-expr> ] = GOTO 117
M [ 1108 , <num-const> ] = GOTO 118
M [ 1108 , <postfix-expr> ] = GOTO 119
M [ 1108 , <prim-expr> ] = GOTO 120
M [ 1108 , <rel-expr> ] = GOTO 121
M [ 1108 , <sele-stmt> ] = GOTO 387
M [ 1108 , <shift-expr> ] = GOTO 123
M [ 1108 , <stmt> ] = GOTO 1374
M [ 1108 , <unary-expr> ] = GOTO 125
M [ 1108 , <unary-op> ] = GOTO 126
M [ 1108 , CHAR_CONST ] = SHIFT 127
M [ 1108 , DELIM_LCURBRACE ] = SHIFT 389
M [ 1108 , DELIM_LPAR ] = SHIFT 129
M [ 1108 , DELIM_SEMICOLON ] = SHIFT 390
M [ 1108 , FLOAT_CONST ] = SHIFT 132
M [ 1108 , IDENTIFIER ] = SHIFT 391
M [ 1108 , INT_CONST ] = SHIFT 134
M [ 1108 , OP_ADD ] = SHIFT 135
M [ 1108 , OP_AND ] = SHIFT 136
M [ 1108 , OP_DEC ] = SHIFT 137
M [ 1108 , OP_INC ] = SHIFT 138
M [ 1108 , OP_LNOT ] = SHIFT 139
M [ 1108 , OP_MUL ] = SHIFT 140
M [ 1108 , OP_NOT ] = SHIFT 141
M [ 1108 , OP_SUB ] = SHIFT 142
M [ 1108 , STR_LITERAL ] = SHIFT 143
M [ 1108 , break ] = SHIFT 392
M [ 1108 , case ] = SHIFT 393
M [ 1108 , continue ] = SHIFT 394
M [ 1108 , default ] = SHIFT 395
M [ 1108 , do ] = SHIFT 396
M [ 1108 , for ] = SHIFT 397
M [ 1108 , goto ] = SHIFT 398
M [ 1108 , if ] = SHIFT 399
M [ 1108 , return ] = SHIFT 400
M [ 1108 , sizeof ] = SHIFT 153
M [ 1108 , switch ] = SHIFT 401
M [ 1108 , while ] = SHIFT 402
M [ 1109 , while ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1110 , DELIM_LPAR ] = SHIFT 1375
M [ 1111 , DELIM_RPAR ] = SHIFT 1376
M [ 1112 , DELIM_COMMA ] = SHIFT 661
M [ 1112 , DELIM_RPAR ] = SHIFT 1377
M [ 1113 , while ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1114 , DELIM_COMMA ] = SHIFT 661
M [ 1114 , DELIM_RPAR ] = SHIFT 1378
M [ 1115 , DELIM_COMMA ] = SHIFT 661
M [ 1115 , DELIM_RPAR ] = SHIFT 1379
M [ 1116 , DELIM_COMMA ] = SHIFT 50
M [ 1116 , DELIM_SEMICOLON ] = SHIFT 1380
M [ 1117 , CHAR_CONST ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 1117 , DELIM_LPAR ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 1117 , DELIM_SEMICOLON ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 1117 , FLOAT_CONST ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 1117 , IDENTIFIER ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 1117 , INT_CONST ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 1117 , OP_ADD ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 1117 , OP_AND ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 1117 , OP_DEC ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 1117 , OP_INC ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 1117 , OP_LNOT ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 1117 , OP_MUL ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 1117 , OP_NOT ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 1117 , OP_SUB ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 1117 , STR_LITERAL ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 1117 , sizeof ] = REDUCE <decl> -> <decl-spec> DELIM_SEMICOLON 
M [ 1118 , DELIM_COMMA ] = SHIFT 261
M [ 1118 , DELIM_SEMICOLON ] = SHIFT 1381
M [ 1119 , <additive-expr> ] = GOTO 299
M [ 1119 , <and-expr> ] = GOTO 300
M [ 1119 , <asn-expr> ] = GOTO 301
M [ 1119 , <cast-expr> ] = GOTO 302
M [ 1119 , <cond-expr> ] = GOTO 303
M [ 1119 , <constant> ] = GOTO 304
M [ 1119 , <eq-expr> ] = GOTO 306
M [ 1119 , <exc-or-expr> ] = GOTO 307
M [ 1119 , <expr> ] = GOTO 1382
M [ 1119 , <inc-or-expr> ] = GOTO 309
M [ 1119 , <land-expr> ] = GOTO 310
M [ 1119 , <lor-expr> ] = GOTO 311
M [ 1119 , <multiplicative-expr> ] = GOTO 312
M [ 1119 , <num-const> ] = GOTO 313
M [ 1119 , <postfix-expr> ] = GOTO 314
M [ 1119 , <prim-expr> ] = GOTO 315
M [ 1119 , <rel-expr> ] = GOTO 316
M [ 1119 , <shift-expr> ] = GOTO 317
M [ 1119 , <unary-expr> ] = GOTO 324
M [ 1119 , <unary-op> ] = GOTO 325
M [ 1119 , CHAR_CONST ] = SHIFT 326
M [ 1119 , DELIM_LPAR ] = SHIFT 327
M [ 1119 , DELIM_RPAR ] = REDUCE <for-cond> -> <decl> DELIM_SEMICOLON 
M [ 1119 , FLOAT_CONST ] = SHIFT 328
M [ 1119 , IDENTIFIER ] = SHIFT 329
M [ 1119 , INT_CONST ] = SHIFT 330
M [ 1119 , OP_ADD ] = SHIFT 135
M [ 1119 , OP_AND ] = SHIFT 136
M [ 1119 , OP_DEC ] = SHIFT 331
M [ 1119 , OP_INC ] = SHIFT 332
M [ 1119 , OP_LNOT ] = SHIFT 139
M [ 1119 , OP_MUL ] = SHIFT 140
M [ 1119 , OP_NOT ] = SHIFT 141
M [ 1119 , OP_SUB ] = SHIFT 142
M [ 1119 , STR_LITERAL ] = SHIFT 333
M [ 1119 , sizeof ] = SHIFT 343
M [ 1120 , <additive-expr> ] = GOTO 96
M [ 1120 , <and-expr> ] = GOTO 97
M [ 1120 , <asn-expr> ] = GOTO 98
M [ 1120 , <cast-expr> ] = GOTO 101
M [ 1120 , <cond-expr> ] = GOTO 103
M [ 1120 , <constant> ] = GOTO 104
M [ 1120 , <eq-expr> ] = GOTO 107
M [ 1120 , <exc-or-expr> ] = GOTO 108
M [ 1120 , <expr> ] = GOTO 1383
M [ 1120 , <inc-or-expr> ] = GOTO 111
M [ 1120 , <land-expr> ] = GOTO 115
M [ 1120 , <lor-expr> ] = GOTO 116
M [ 1120 , <multiplicative-expr> ] = GOTO 117
M [ 1120 , <num-const> ] = GOTO 118
M [ 1120 , <postfix-expr> ] = GOTO 119
M [ 1120 , <prim-expr> ] = GOTO 120
M [ 1120 , <rel-expr> ] = GOTO 121
M [ 1120 , <shift-expr> ] = GOTO 123
M [ 1120 , <unary-expr> ] = GOTO 125
M [ 1120 , <unary-op> ] = GOTO 126
M [ 1120 , CHAR_CONST ] = SHIFT 127
M [ 1120 , DELIM_LPAR ] = SHIFT 129
M [ 1120 , DELIM_SEMICOLON ] = SHIFT 1384
M [ 1120 , FLOAT_CONST ] = SHIFT 132
M [ 1120 , IDENTIFIER ] = SHIFT 159
M [ 1120 , INT_CONST ] = SHIFT 134
M [ 1120 , OP_ADD ] = SHIFT 135
M [ 1120 , OP_AND ] = SHIFT 136
M [ 1120 , OP_DEC ] = SHIFT 137
M [ 1120 , OP_INC ] = SHIFT 138
M [ 1120 , OP_LNOT ] = SHIFT 139
M [ 1120 , OP_MUL ] = SHIFT 140
M [ 1120 , OP_NOT ] = SHIFT 141
M [ 1120 , OP_SUB ] = SHIFT 142
M [ 1120 , STR_LITERAL ] = SHIFT 143
M [ 1120 , sizeof ] = SHIFT 153
M [ 1121 , <additive-expr> ] = GOTO 96
M [ 1121 , <and-expr> ] = GOTO 97
M [ 1121 , <asn-expr> ] = GOTO 98
M [ 1121 , <cast-expr> ] = GOTO 101
M [ 1121 , <comp-stmt> ] = GOTO 102
M [ 1121 , <cond-expr> ] = GOTO 103
M [ 1121 , <constant> ] = GOTO 104
M [ 1121 , <eq-expr> ] = GOTO 107
M [ 1121 , <exc-or-expr> ] = GOTO 108
M [ 1121 , <expr-stmt> ] = GOTO 109
M [ 1121 , <expr> ] = GOTO 110
M [ 1121 , <inc-or-expr> ] = GOTO 111
M [ 1121 , <iter-stmt> ] = GOTO 112
M [ 1121 , <jump-stmt> ] = GOTO 113
M [ 1121 , <labeled-stmt> ] = GOTO 114
M [ 1121 , <land-expr> ] = GOTO 115
M [ 1121 , <lor-expr> ] = GOTO 116
M [ 1121 , <multiplicative-expr> ] = GOTO 117
M [ 1121 , <num-const> ] = GOTO 118
M [ 1121 , <postfix-expr> ] = GOTO 119
M [ 1121 , <prim-expr> ] = GOTO 120
M [ 1121 , <rel-expr> ] = GOTO 121
M [ 1121 , <sele-stmt> ] = GOTO 122
M [ 1121 , <shift-expr> ] = GOTO 123
M [ 1121 , <stmt> ] = GOTO 1385
M [ 1121 , <unary-expr> ] = GOTO 125
M [ 1121 , <unary-op> ] = GOTO 126
M [ 1121 , CHAR_CONST ] = SHIFT 127
M [ 1121 , DELIM_LCURBRACE ] = SHIFT 128
M [ 1121 , DELIM_LPAR ] = SHIFT 129
M [ 1121 , DELIM_SEMICOLON ] = SHIFT 131
M [ 1121 , FLOAT_CONST ] = SHIFT 132
M [ 1121 , IDENTIFIER ] = SHIFT 133
M [ 1121 , INT_CONST ] = SHIFT 134
M [ 1121 , OP_ADD ] = SHIFT 135
M [ 1121 , OP_AND ] = SHIFT 136
M [ 1121 , OP_DEC ] = SHIFT 137
M [ 1121 , OP_INC ] = SHIFT 138
M [ 1121 , OP_LNOT ] = SHIFT 139
M [ 1121 , OP_MUL ] = SHIFT 140
M [ 1121 , OP_NOT ] = SHIFT 141
M [ 1121 , OP_SUB ] = SHIFT 142
M [ 1121 , STR_LITERAL ] = SHIFT 143
M [ 1121 , break ] = SHIFT 144
M [ 1121 , case ] = SHIFT 145
M [ 1121 , continue ] = SHIFT 146
M [ 1121 , default ] = SHIFT 147
M [ 1121 , do ] = SHIFT 148
M [ 1121 , for ] = SHIFT 149
M [ 1121 , goto ] = SHIFT 150
M [ 1121 , if ] = SHIFT 151
M [ 1121 , return ] = SHIFT 152
M [ 1121 , sizeof ] = SHIFT 153
M [ 1121 , switch ] = SHIFT 154
M [ 1121 , while ] = SHIFT 155
M [ 1122 , DELIM_COMMA ] = SHIFT 261
M [ 1122 , DELIM_SEMICOLON ] = SHIFT 1386
M [ 1123 , <additive-expr> ] = GOTO 299
M [ 1123 , <and-expr> ] = GOTO 300
M [ 1123 , <asn-expr> ] = GOTO 301
M [ 1123 , <cast-expr> ] = GOTO 302
M [ 1123 , <cond-expr> ] = GOTO 303
M [ 1123 , <constant> ] = GOTO 304
M [ 1123 , <eq-expr> ] = GOTO 306
M [ 1123 , <exc-or-expr> ] = GOTO 307
M [ 1123 , <expr> ] = GOTO 1387
M [ 1123 , <inc-or-expr> ] = GOTO 309
M [ 1123 , <land-expr> ] = GOTO 310
M [ 1123 , <lor-expr> ] = GOTO 311
M [ 1123 , <multiplicative-expr> ] = GOTO 312
M [ 1123 , <num-const> ] = GOTO 313
M [ 1123 , <postfix-expr> ] = GOTO 314
M [ 1123 , <prim-expr> ] = GOTO 315
M [ 1123 , <rel-expr> ] = GOTO 316
M [ 1123 , <shift-expr> ] = GOTO 317
M [ 1123 , <unary-expr> ] = GOTO 324
M [ 1123 , <unary-op> ] = GOTO 325
M [ 1123 , CHAR_CONST ] = SHIFT 326
M [ 1123 , DELIM_LPAR ] = SHIFT 327
M [ 1123 , DELIM_RPAR ] = REDUCE <for-cond> -> DELIM_SEMICOLON DELIM_SEMICOLON 
M [ 1123 , FLOAT_CONST ] = SHIFT 328
M [ 1123 , IDENTIFIER ] = SHIFT 329
M [ 1123 , INT_CONST ] = SHIFT 330
M [ 1123 , OP_ADD ] = SHIFT 135
M [ 1123 , OP_AND ] = SHIFT 136
M [ 1123 , OP_DEC ] = SHIFT 331
M [ 1123 , OP_INC ] = SHIFT 332
M [ 1123 , OP_LNOT ] = SHIFT 139
M [ 1123 , OP_MUL ] = SHIFT 140
M [ 1123 , OP_NOT ] = SHIFT 141
M [ 1123 , OP_SUB ] = SHIFT 142
M [ 1123 , STR_LITERAL ] = SHIFT 333
M [ 1123 , sizeof ] = SHIFT 343
M [ 1124 , <additive-expr> ] = GOTO 96
M [ 1124 , <and-expr> ] = GOTO 97
M [ 1124 , <asn-expr> ] = GOTO 98
M [ 1124 , <cast-expr> ] = GOTO 101
M [ 1124 , <comp-stmt> ] = GOTO 1388
M [ 1124 , <cond-expr> ] = GOTO 103
M [ 1124 , <constant> ] = GOTO 104
M [ 1124 , <eq-expr> ] = GOTO 107
M [ 1124 , <exc-or-expr> ] = GOTO 108
M [ 1124 , <expr-stmt> ] = GOTO 1389
M [ 1124 , <expr> ] = GOTO 1390
M [ 1124 , <inc-or-expr> ] = GOTO 111
M [ 1124 , <iter-stmt> ] = GOTO 1391
M [ 1124 , <jump-stmt> ] = GOTO 1392
M [ 1124 , <labeled-stmt> ] = GOTO 1393
M [ 1124 , <land-expr> ] = GOTO 115
M [ 1124 , <lor-expr> ] = GOTO 116
M [ 1124 , <multiplicative-expr> ] = GOTO 117
M [ 1124 , <num-const> ] = GOTO 118
M [ 1124 , <postfix-expr> ] = GOTO 119
M [ 1124 , <prim-expr> ] = GOTO 120
M [ 1124 , <rel-expr> ] = GOTO 121
M [ 1124 , <sele-stmt> ] = GOTO 1394
M [ 1124 , <shift-expr> ] = GOTO 123
M [ 1124 , <stmt> ] = GOTO 1395
M [ 1124 , <unary-expr> ] = GOTO 125
M [ 1124 , <unary-op> ] = GOTO 126
M [ 1124 , CHAR_CONST ] = SHIFT 127
M [ 1124 , DELIM_LCURBRACE ] = SHIFT 1396
M [ 1124 , DELIM_LPAR ] = SHIFT 129
M [ 1124 , DELIM_SEMICOLON ] = SHIFT 1397
M [ 1124 , FLOAT_CONST ] = SHIFT 132
M [ 1124 , IDENTIFIER ] = SHIFT 1398
M [ 1124 , INT_CONST ] = SHIFT 134
M [ 1124 , OP_ADD ] = SHIFT 135
M [ 1124 , OP_AND ] = SHIFT 136
M [ 1124 , OP_DEC ] = SHIFT 137
M [ 1124 , OP_INC ] = SHIFT 138
M [ 1124 , OP_LNOT ] = SHIFT 139
M [ 1124 , OP_MUL ] = SHIFT 140
M [ 1124 , OP_NOT ] = SHIFT 141
M [ 1124 , OP_SUB ] = SHIFT 142
M [ 1124 , STR_LITERAL ] = SHIFT 143
M [ 1124 , break ] = SHIFT 1399
M [ 1124 , case ] = SHIFT 1400
M [ 1124 , continue ] = SHIFT 1401
M [ 1124 , default ] = SHIFT 1402
M [ 1124 , do ] = SHIFT 1403
M [ 1124 , for ] = SHIFT 1404
M [ 1124 , goto ] = SHIFT 1405
M [ 1124 , if ] = SHIFT 1406
M [ 1124 , return ] = SHIFT 1407
M [ 1124 , sizeof ] = SHIFT 153
M [ 1124 , switch ] = SHIFT 1408
M [ 1124 , while ] = SHIFT 1409
M [ 1125 , DELIM_COMMA ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , DELIM_LCURBRACE ] = SHIFT 1066
M [ 1125 , DELIM_QUESTION ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , DELIM_SEMICOLON ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_ADD ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_ADDASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_AND ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_ANDASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_ASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_DIV ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_DIVASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_EQ ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_GE ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_GT ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_LAND ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_LE ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_LOR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_LT ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_MOD ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_MODASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_MUL ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_MULASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_NEQ ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_OR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_ORASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_SHL ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_SHLASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_SHR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_SHRASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_SUB ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_SUBASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_XOR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1125 , OP_XORASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1126 , <additive-expr> ] = GOTO 96
M [ 1126 , <and-expr> ] = GOTO 97
M [ 1126 , <asn-expr> ] = GOTO 98
M [ 1126 , <cast-expr> ] = GOTO 101
M [ 1126 , <comp-stmt> ] = GOTO 102
M [ 1126 , <cond-expr> ] = GOTO 103
M [ 1126 , <constant> ] = GOTO 104
M [ 1126 , <eq-expr> ] = GOTO 107
M [ 1126 , <exc-or-expr> ] = GOTO 108
M [ 1126 , <expr-stmt> ] = GOTO 109
M [ 1126 , <expr> ] = GOTO 110
M [ 1126 , <inc-or-expr> ] = GOTO 111
M [ 1126 , <iter-stmt> ] = GOTO 112
M [ 1126 , <jump-stmt> ] = GOTO 113
M [ 1126 , <labeled-stmt> ] = GOTO 114
M [ 1126 , <land-expr> ] = GOTO 115
M [ 1126 , <lor-expr> ] = GOTO 116
M [ 1126 , <multiplicative-expr> ] = GOTO 117
M [ 1126 , <num-const> ] = GOTO 118
M [ 1126 , <postfix-expr> ] = GOTO 119
M [ 1126 , <prim-expr> ] = GOTO 120
M [ 1126 , <rel-expr> ] = GOTO 121
M [ 1126 , <sele-stmt> ] = GOTO 122
M [ 1126 , <shift-expr> ] = GOTO 123
M [ 1126 , <stmt> ] = GOTO 1410
M [ 1126 , <unary-expr> ] = GOTO 125
M [ 1126 , <unary-op> ] = GOTO 126
M [ 1126 , CHAR_CONST ] = SHIFT 127
M [ 1126 , DELIM_LCURBRACE ] = SHIFT 128
M [ 1126 , DELIM_LPAR ] = SHIFT 129
M [ 1126 , DELIM_SEMICOLON ] = SHIFT 131
M [ 1126 , FLOAT_CONST ] = SHIFT 132
M [ 1126 , IDENTIFIER ] = SHIFT 133
M [ 1126 , INT_CONST ] = SHIFT 134
M [ 1126 , OP_ADD ] = SHIFT 135
M [ 1126 , OP_AND ] = SHIFT 136
M [ 1126 , OP_DEC ] = SHIFT 137
M [ 1126 , OP_INC ] = SHIFT 138
M [ 1126 , OP_LNOT ] = SHIFT 139
M [ 1126 , OP_MUL ] = SHIFT 140
M [ 1126 , OP_NOT ] = SHIFT 141
M [ 1126 , OP_SUB ] = SHIFT 142
M [ 1126 , STR_LITERAL ] = SHIFT 143
M [ 1126 , break ] = SHIFT 144
M [ 1126 , case ] = SHIFT 145
M [ 1126 , continue ] = SHIFT 146
M [ 1126 , default ] = SHIFT 147
M [ 1126 , do ] = SHIFT 148
M [ 1126 , for ] = SHIFT 149
M [ 1126 , goto ] = SHIFT 150
M [ 1126 , if ] = SHIFT 151
M [ 1126 , return ] = SHIFT 152
M [ 1126 , sizeof ] = SHIFT 153
M [ 1126 , switch ] = SHIFT 154
M [ 1126 , while ] = SHIFT 155
M [ 1127 , <additive-expr> ] = GOTO 96
M [ 1127 , <and-expr> ] = GOTO 97
M [ 1127 , <asn-expr> ] = GOTO 98
M [ 1127 , <cast-expr> ] = GOTO 101
M [ 1127 , <comp-stmt> ] = GOTO 102
M [ 1127 , <cond-expr> ] = GOTO 103
M [ 1127 , <constant> ] = GOTO 104
M [ 1127 , <eq-expr> ] = GOTO 107
M [ 1127 , <exc-or-expr> ] = GOTO 108
M [ 1127 , <expr-stmt> ] = GOTO 109
M [ 1127 , <expr> ] = GOTO 110
M [ 1127 , <inc-or-expr> ] = GOTO 111
M [ 1127 , <iter-stmt> ] = GOTO 112
M [ 1127 , <jump-stmt> ] = GOTO 113
M [ 1127 , <labeled-stmt> ] = GOTO 114
M [ 1127 , <land-expr> ] = GOTO 115
M [ 1127 , <lor-expr> ] = GOTO 116
M [ 1127 , <multiplicative-expr> ] = GOTO 117
M [ 1127 , <num-const> ] = GOTO 118
M [ 1127 , <postfix-expr> ] = GOTO 119
M [ 1127 , <prim-expr> ] = GOTO 120
M [ 1127 , <rel-expr> ] = GOTO 121
M [ 1127 , <sele-stmt> ] = GOTO 122
M [ 1127 , <shift-expr> ] = GOTO 123
M [ 1127 , <stmt> ] = GOTO 1411
M [ 1127 , <unary-expr> ] = GOTO 125
M [ 1127 , <unary-op> ] = GOTO 126
M [ 1127 , CHAR_CONST ] = SHIFT 127
M [ 1127 , DELIM_LCURBRACE ] = SHIFT 128
M [ 1127 , DELIM_LPAR ] = SHIFT 129
M [ 1127 , DELIM_SEMICOLON ] = SHIFT 131
M [ 1127 , FLOAT_CONST ] = SHIFT 132
M [ 1127 , IDENTIFIER ] = SHIFT 133
M [ 1127 , INT_CONST ] = SHIFT 134
M [ 1127 , OP_ADD ] = SHIFT 135
M [ 1127 , OP_AND ] = SHIFT 136
M [ 1127 , OP_DEC ] = SHIFT 137
M [ 1127 , OP_INC ] = SHIFT 138
M [ 1127 , OP_LNOT ] = SHIFT 139
M [ 1127 , OP_MUL ] = SHIFT 140
M [ 1127 , OP_NOT ] = SHIFT 141
M [ 1127 , OP_SUB ] = SHIFT 142
M [ 1127 , STR_LITERAL ] = SHIFT 143
M [ 1127 , break ] = SHIFT 144
M [ 1127 , case ] = SHIFT 145
M [ 1127 , continue ] = SHIFT 146
M [ 1127 , default ] = SHIFT 147
M [ 1127 , do ] = SHIFT 148
M [ 1127 , for ] = SHIFT 149
M [ 1127 , goto ] = SHIFT 150
M [ 1127 , if ] = SHIFT 151
M [ 1127 , return ] = SHIFT 152
M [ 1127 , sizeof ] = SHIFT 153
M [ 1127 , switch ] = SHIFT 154
M [ 1127 , while ] = SHIFT 155
M [ 1128 , DELIM_COMMA ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1128 , DELIM_QUESTION ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1128 , DELIM_RCURBRACE ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1128 , OP_ADD ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1128 , OP_AND ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1128 , OP_DIV ] = SHIFT 785
M [ 1128 , OP_EQ ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1128 , OP_GE ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1128 , OP_GT ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1128 , OP_LAND ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1128 , OP_LE ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1128 , OP_LOR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1128 , OP_LT ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1128 , OP_MOD ] = SHIFT 786
M [ 1128 , OP_MUL ] = SHIFT 787
M [ 1128 , OP_NEQ ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1128 , OP_OR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1128 , OP_SHL ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1128 , OP_SHR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1128 , OP_SUB ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1128 , OP_XOR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1129 , DELIM_COMMA ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1129 , DELIM_QUESTION ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1129 , DELIM_RCURBRACE ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1129 , OP_ADD ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1129 , OP_AND ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1129 , OP_DIV ] = SHIFT 785
M [ 1129 , OP_EQ ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1129 , OP_GE ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1129 , OP_GT ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1129 , OP_LAND ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1129 , OP_LE ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1129 , OP_LOR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1129 , OP_LT ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1129 , OP_MOD ] = SHIFT 786
M [ 1129 , OP_MUL ] = SHIFT 787
M [ 1129 , OP_NEQ ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1129 , OP_OR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1129 , OP_SHL ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1129 , OP_SHR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1129 , OP_SUB ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1129 , OP_XOR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1130 , DELIM_COMMA ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1130 , DELIM_QUESTION ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1130 , DELIM_RCURBRACE ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1130 , OP_AND ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1130 , OP_EQ ] = SHIFT 776
M [ 1130 , OP_LAND ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1130 , OP_LOR ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1130 , OP_NEQ ] = SHIFT 777
M [ 1130 , OP_OR ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1130 , OP_XOR ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1131 , DELIM_COMMA ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1131 , DELIM_QUESTION ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1131 , DELIM_RCURBRACE ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1131 , OP_AND ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1131 , OP_EQ ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1131 , OP_GE ] = SHIFT 794
M [ 1131 , OP_GT ] = SHIFT 795
M [ 1131 , OP_LAND ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1131 , OP_LE ] = SHIFT 796
M [ 1131 , OP_LOR ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1131 , OP_LT ] = SHIFT 797
M [ 1131 , OP_NEQ ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1131 , OP_OR ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1131 , OP_XOR ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1132 , DELIM_COMMA ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1132 , DELIM_QUESTION ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1132 , DELIM_RCURBRACE ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1132 , OP_AND ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1132 , OP_EQ ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1132 , OP_GE ] = SHIFT 794
M [ 1132 , OP_GT ] = SHIFT 795
M [ 1132 , OP_LAND ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1132 , OP_LE ] = SHIFT 796
M [ 1132 , OP_LOR ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1132 , OP_LT ] = SHIFT 797
M [ 1132 , OP_NEQ ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1132 , OP_OR ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1132 , OP_XOR ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1133 , DELIM_COMMA ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1133 , DELIM_QUESTION ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1133 , DELIM_RCURBRACE ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1133 , OP_AND ] = SHIFT 772
M [ 1133 , OP_LAND ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1133 , OP_LOR ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1133 , OP_OR ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1133 , OP_XOR ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1134 , DELIM_COMMA ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1134 , DELIM_QUESTION ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1134 , DELIM_RCURBRACE ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1134 , OP_LAND ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1134 , OP_LOR ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1134 , OP_OR ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1134 , OP_XOR ] = SHIFT 778
M [ 1135 , <additive-expr> ] = GOTO 412
M [ 1135 , <and-expr> ] = GOTO 413
M [ 1135 , <asn-expr> ] = GOTO 414
M [ 1135 , <cast-expr> ] = GOTO 415
M [ 1135 , <cond-expr> ] = GOTO 416
M [ 1135 , <constant> ] = GOTO 417
M [ 1135 , <eq-expr> ] = GOTO 421
M [ 1135 , <exc-or-expr> ] = GOTO 422
M [ 1135 , <inc-or-expr> ] = GOTO 423
M [ 1135 , <initializer> ] = GOTO 1412
M [ 1135 , <land-expr> ] = GOTO 426
M [ 1135 , <lor-expr> ] = GOTO 427
M [ 1135 , <multiplicative-expr> ] = GOTO 428
M [ 1135 , <num-const> ] = GOTO 429
M [ 1135 , <postfix-expr> ] = GOTO 430
M [ 1135 , <prim-expr> ] = GOTO 431
M [ 1135 , <rel-expr> ] = GOTO 432
M [ 1135 , <shift-expr> ] = GOTO 433
M [ 1135 , <unary-expr> ] = GOTO 434
M [ 1135 , <unary-op> ] = GOTO 435
M [ 1135 , CHAR_CONST ] = SHIFT 436
M [ 1135 , DELIM_LCURBRACE ] = SHIFT 437
M [ 1135 , DELIM_LPAR ] = SHIFT 438
M [ 1135 , FLOAT_CONST ] = SHIFT 440
M [ 1135 , IDENTIFIER ] = SHIFT 441
M [ 1135 , INT_CONST ] = SHIFT 442
M [ 1135 , OP_ADD ] = SHIFT 135
M [ 1135 , OP_AND ] = SHIFT 136
M [ 1135 , OP_DEC ] = SHIFT 443
M [ 1135 , OP_INC ] = SHIFT 445
M [ 1135 , OP_LNOT ] = SHIFT 139
M [ 1135 , OP_MUL ] = SHIFT 140
M [ 1135 , OP_NOT ] = SHIFT 141
M [ 1135 , OP_SUB ] = SHIFT 142
M [ 1135 , STR_LITERAL ] = SHIFT 446
M [ 1135 , sizeof ] = SHIFT 447
M [ 1136 , DELIM_COMMA ] = REDUCE <initializer-list> -> <initializer-list> DELIM_COMMA <initializer> 
M [ 1136 , DELIM_RCURBRACE ] = REDUCE <initializer-list> -> <initializer-list> DELIM_COMMA <initializer> 
M [ 1137 , DELIM_COMMA ] = REDUCE <initializer> -> DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1137 , DELIM_SEMICOLON ] = REDUCE <initializer> -> DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1138 , DELIM_COMMA ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 1138 , DELIM_QUESTION ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 1138 , DELIM_RCURBRACE ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 1138 , OP_LAND ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 1138 , OP_LOR ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 1138 , OP_OR ] = SHIFT 779
M [ 1139 , DELIM_COLON ] = SHIFT 1413
M [ 1139 , DELIM_COMMA ] = SHIFT 942
M [ 1140 , DELIM_COMMA ] = REDUCE <lor-expr> -> <lor-expr> OP_LOR <land-expr> 
M [ 1140 , DELIM_QUESTION ] = REDUCE <lor-expr> -> <lor-expr> OP_LOR <land-expr> 
M [ 1140 , DELIM_RCURBRACE ] = REDUCE <lor-expr> -> <lor-expr> OP_LOR <land-expr> 
M [ 1140 , OP_LAND ] = SHIFT 782
M [ 1140 , OP_LOR ] = REDUCE <lor-expr> -> <lor-expr> OP_LOR <land-expr> 
M [ 1141 , DELIM_COMMA ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1141 , DELIM_QUESTION ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1141 , DELIM_RCURBRACE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1141 , OP_ADD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1141 , OP_AND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1141 , OP_DIV ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1141 , OP_EQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1141 , OP_GE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1141 , OP_GT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1141 , OP_LAND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1141 , OP_LE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1141 , OP_LOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1141 , OP_LT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1141 , OP_MOD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1141 , OP_MUL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1141 , OP_NEQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1141 , OP_OR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1141 , OP_SHL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1141 , OP_SHR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1141 , OP_SUB ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1141 , OP_XOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1142 , DELIM_COMMA ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1142 , DELIM_QUESTION ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1142 , DELIM_RCURBRACE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1142 , OP_ADD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1142 , OP_AND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1142 , OP_DIV ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1142 , OP_EQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1142 , OP_GE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1142 , OP_GT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1142 , OP_LAND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1142 , OP_LE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1142 , OP_LOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1142 , OP_LT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1142 , OP_MOD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1142 , OP_MUL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1142 , OP_NEQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1142 , OP_OR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1142 , OP_SHL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1142 , OP_SHR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1142 , OP_SUB ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1142 , OP_XOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1143 , DELIM_COMMA ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1143 , DELIM_QUESTION ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1143 , DELIM_RCURBRACE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1143 , OP_ADD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1143 , OP_AND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1143 , OP_DIV ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1143 , OP_EQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1143 , OP_GE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1143 , OP_GT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1143 , OP_LAND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1143 , OP_LE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1143 , OP_LOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1143 , OP_LT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1143 , OP_MOD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1143 , OP_MUL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1143 , OP_NEQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1143 , OP_OR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1143 , OP_SHL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1143 , OP_SHR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1143 , OP_SUB ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1143 , OP_XOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1144 , DELIM_COMMA ] = SHIFT 973
M [ 1144 , DELIM_RPAR ] = SHIFT 1414
M [ 1145 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , DELIM_RCURBRACE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1145 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1146 , DELIM_COMMA ] = SHIFT 981
M [ 1146 , DELIM_RSQBRACKET ] = SHIFT 1415
M [ 1147 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , DELIM_RCURBRACE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1147 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1148 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , DELIM_RCURBRACE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1148 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1149 , DELIM_COMMA ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1149 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1149 , DELIM_RCURBRACE ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1149 , OP_AND ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1149 , OP_EQ ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1149 , OP_GE ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1149 , OP_GT ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1149 , OP_LAND ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1149 , OP_LE ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1149 , OP_LOR ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1149 , OP_LT ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1149 , OP_NEQ ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1149 , OP_OR ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1149 , OP_SHL ] = SHIFT 798
M [ 1149 , OP_SHR ] = SHIFT 799
M [ 1149 , OP_XOR ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1150 , DELIM_COMMA ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1150 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1150 , DELIM_RCURBRACE ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1150 , OP_AND ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1150 , OP_EQ ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1150 , OP_GE ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1150 , OP_GT ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1150 , OP_LAND ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1150 , OP_LE ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1150 , OP_LOR ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1150 , OP_LT ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1150 , OP_NEQ ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1150 , OP_OR ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1150 , OP_SHL ] = SHIFT 798
M [ 1150 , OP_SHR ] = SHIFT 799
M [ 1150 , OP_XOR ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1151 , DELIM_COMMA ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1151 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1151 , DELIM_RCURBRACE ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1151 , OP_AND ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1151 , OP_EQ ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1151 , OP_GE ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1151 , OP_GT ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1151 , OP_LAND ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1151 , OP_LE ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1151 , OP_LOR ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1151 , OP_LT ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1151 , OP_NEQ ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1151 , OP_OR ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1151 , OP_SHL ] = SHIFT 798
M [ 1151 , OP_SHR ] = SHIFT 799
M [ 1151 , OP_XOR ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1152 , DELIM_COMMA ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1152 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1152 , DELIM_RCURBRACE ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1152 , OP_AND ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1152 , OP_EQ ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1152 , OP_GE ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1152 , OP_GT ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1152 , OP_LAND ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1152 , OP_LE ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1152 , OP_LOR ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1152 , OP_LT ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1152 , OP_NEQ ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1152 , OP_OR ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1152 , OP_SHL ] = SHIFT 798
M [ 1152 , OP_SHR ] = SHIFT 799
M [ 1152 , OP_XOR ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1153 , DELIM_COMMA ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1153 , DELIM_QUESTION ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1153 , DELIM_RCURBRACE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1153 , OP_ADD ] = SHIFT 770
M [ 1153 , OP_AND ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1153 , OP_EQ ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1153 , OP_GE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1153 , OP_GT ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1153 , OP_LAND ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1153 , OP_LE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1153 , OP_LOR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1153 , OP_LT ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1153 , OP_NEQ ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1153 , OP_OR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1153 , OP_SHL ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1153 , OP_SHR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1153 , OP_SUB ] = SHIFT 771
M [ 1153 , OP_XOR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1154 , DELIM_COMMA ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1154 , DELIM_QUESTION ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1154 , DELIM_RCURBRACE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1154 , OP_ADD ] = SHIFT 770
M [ 1154 , OP_AND ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1154 , OP_EQ ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1154 , OP_GE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1154 , OP_GT ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1154 , OP_LAND ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1154 , OP_LE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1154 , OP_LOR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1154 , OP_LT ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1154 , OP_NEQ ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1154 , OP_OR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1154 , OP_SHL ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1154 , OP_SHR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1154 , OP_SUB ] = SHIFT 771
M [ 1154 , OP_XOR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1155 , DELIM_COMMA ] = REDUCE <asn-expr> -> <unary-expr> <asn-op> <asn-expr> 
M [ 1155 , DELIM_RCURBRACE ] = REDUCE <asn-expr> -> <unary-expr> <asn-op> <asn-expr> 
M [ 1156 , DELIM_RPAR ] = SHIFT 1416
M [ 1157 , <additive-expr> ] = GOTO 412
M [ 1157 , <and-expr> ] = GOTO 413
M [ 1157 , <asn-expr> ] = GOTO 414
M [ 1157 , <cast-expr> ] = GOTO 415
M [ 1157 , <cond-expr> ] = GOTO 416
M [ 1157 , <constant> ] = GOTO 417
M [ 1157 , <designation> ] = GOTO 1135
M [ 1157 , <designator-list> ] = GOTO 419
M [ 1157 , <designator> ] = GOTO 420
M [ 1157 , <eq-expr> ] = GOTO 421
M [ 1157 , <exc-or-expr> ] = GOTO 422
M [ 1157 , <inc-or-expr> ] = GOTO 423
M [ 1157 , <initializer> ] = GOTO 1136
M [ 1157 , <land-expr> ] = GOTO 426
M [ 1157 , <lor-expr> ] = GOTO 427
M [ 1157 , <multiplicative-expr> ] = GOTO 428
M [ 1157 , <num-const> ] = GOTO 429
M [ 1157 , <postfix-expr> ] = GOTO 430
M [ 1157 , <prim-expr> ] = GOTO 431
M [ 1157 , <rel-expr> ] = GOTO 432
M [ 1157 , <shift-expr> ] = GOTO 433
M [ 1157 , <unary-expr> ] = GOTO 434
M [ 1157 , <unary-op> ] = GOTO 435
M [ 1157 , CHAR_CONST ] = SHIFT 436
M [ 1157 , DELIM_LCURBRACE ] = SHIFT 437
M [ 1157 , DELIM_LPAR ] = SHIFT 438
M [ 1157 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 1157 , DELIM_RCURBRACE ] = SHIFT 1417
M [ 1157 , FLOAT_CONST ] = SHIFT 440
M [ 1157 , IDENTIFIER ] = SHIFT 441
M [ 1157 , INT_CONST ] = SHIFT 442
M [ 1157 , OP_ADD ] = SHIFT 135
M [ 1157 , OP_AND ] = SHIFT 136
M [ 1157 , OP_DEC ] = SHIFT 443
M [ 1157 , OP_DOT ] = SHIFT 444
M [ 1157 , OP_INC ] = SHIFT 445
M [ 1157 , OP_LNOT ] = SHIFT 139
M [ 1157 , OP_MUL ] = SHIFT 140
M [ 1157 , OP_NOT ] = SHIFT 141
M [ 1157 , OP_SUB ] = SHIFT 142
M [ 1157 , STR_LITERAL ] = SHIFT 446
M [ 1157 , sizeof ] = SHIFT 447
M [ 1158 , DELIM_COMMA ] = REDUCE <initializer> -> DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1158 , DELIM_RCURBRACE ] = REDUCE <initializer> -> DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1159 , DELIM_COMMA ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , DELIM_LPAR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , DELIM_QUESTION ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , DELIM_RCURBRACE ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_ADD ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_ADDASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_AND ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_ANDASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_ARROW ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_ASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_DEC ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_DIV ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_DIVASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_DOT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_EQ ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_GE ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_GT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_INC ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_LAND ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_LE ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_LOR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_LT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_MOD ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_MODASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_MUL ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_MULASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_NEQ ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_OR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_ORASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_SHL ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_SHLASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_SHR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_SHRASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_SUB ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_SUBASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_XOR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1159 , OP_XORASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1160 , <cast-expr> ] = GOTO 1418
M [ 1160 , <constant> ] = GOTO 528
M [ 1160 , <num-const> ] = GOTO 529
M [ 1160 , <postfix-expr> ] = GOTO 530
M [ 1160 , <prim-expr> ] = GOTO 531
M [ 1160 , <unary-expr> ] = GOTO 532
M [ 1160 , <unary-op> ] = GOTO 533
M [ 1160 , CHAR_CONST ] = SHIFT 534
M [ 1160 , DELIM_LCURBRACE ] = SHIFT 1419
M [ 1160 , DELIM_LPAR ] = SHIFT 535
M [ 1160 , FLOAT_CONST ] = SHIFT 536
M [ 1160 , IDENTIFIER ] = SHIFT 537
M [ 1160 , INT_CONST ] = SHIFT 538
M [ 1160 , OP_ADD ] = SHIFT 135
M [ 1160 , OP_AND ] = SHIFT 136
M [ 1160 , OP_DEC ] = SHIFT 539
M [ 1160 , OP_INC ] = SHIFT 540
M [ 1160 , OP_LNOT ] = SHIFT 139
M [ 1160 , OP_MUL ] = SHIFT 140
M [ 1160 , OP_NOT ] = SHIFT 141
M [ 1160 , OP_SUB ] = SHIFT 142
M [ 1160 , STR_LITERAL ] = SHIFT 541
M [ 1160 , sizeof ] = SHIFT 542
M [ 1161 , DELIM_LSQBRACKET ] = REDUCE <designator> -> DELIM_LSQBRACKET <const-expr> DELIM_RSQBRACKET 
M [ 1161 , OP_ASN ] = REDUCE <designator> -> DELIM_LSQBRACKET <const-expr> DELIM_RSQBRACKET 
M [ 1161 , OP_DOT ] = REDUCE <designator> -> DELIM_LSQBRACKET <const-expr> DELIM_RSQBRACKET 
M [ 1162 , <additive-expr> ] = GOTO 299
M [ 1162 , <and-expr> ] = GOTO 300
M [ 1162 , <arg-expr-list> ] = GOTO 1420
M [ 1162 , <asn-expr> ] = GOTO 613
M [ 1162 , <cast-expr> ] = GOTO 302
M [ 1162 , <cond-expr> ] = GOTO 303
M [ 1162 , <constant> ] = GOTO 304
M [ 1162 , <eq-expr> ] = GOTO 306
M [ 1162 , <exc-or-expr> ] = GOTO 307
M [ 1162 , <inc-or-expr> ] = GOTO 309
M [ 1162 , <land-expr> ] = GOTO 310
M [ 1162 , <lor-expr> ] = GOTO 311
M [ 1162 , <multiplicative-expr> ] = GOTO 312
M [ 1162 , <num-const> ] = GOTO 313
M [ 1162 , <postfix-expr> ] = GOTO 314
M [ 1162 , <prim-expr> ] = GOTO 315
M [ 1162 , <rel-expr> ] = GOTO 316
M [ 1162 , <shift-expr> ] = GOTO 317
M [ 1162 , <unary-expr> ] = GOTO 324
M [ 1162 , <unary-op> ] = GOTO 325
M [ 1162 , CHAR_CONST ] = SHIFT 326
M [ 1162 , DELIM_LPAR ] = SHIFT 327
M [ 1162 , DELIM_RPAR ] = SHIFT 1421
M [ 1162 , FLOAT_CONST ] = SHIFT 328
M [ 1162 , IDENTIFIER ] = SHIFT 329
M [ 1162 , INT_CONST ] = SHIFT 330
M [ 1162 , OP_ADD ] = SHIFT 135
M [ 1162 , OP_AND ] = SHIFT 136
M [ 1162 , OP_DEC ] = SHIFT 331
M [ 1162 , OP_INC ] = SHIFT 332
M [ 1162 , OP_LNOT ] = SHIFT 139
M [ 1162 , OP_MUL ] = SHIFT 140
M [ 1162 , OP_NOT ] = SHIFT 141
M [ 1162 , OP_SUB ] = SHIFT 142
M [ 1162 , STR_LITERAL ] = SHIFT 333
M [ 1162 , sizeof ] = SHIFT 343
M [ 1163 , <additive-expr> ] = GOTO 615
M [ 1163 , <and-expr> ] = GOTO 616
M [ 1163 , <asn-expr> ] = GOTO 617
M [ 1163 , <cast-expr> ] = GOTO 618
M [ 1163 , <cond-expr> ] = GOTO 619
M [ 1163 , <constant> ] = GOTO 620
M [ 1163 , <eq-expr> ] = GOTO 621
M [ 1163 , <exc-or-expr> ] = GOTO 622
M [ 1163 , <expr> ] = GOTO 1422
M [ 1163 , <inc-or-expr> ] = GOTO 624
M [ 1163 , <land-expr> ] = GOTO 625
M [ 1163 , <lor-expr> ] = GOTO 626
M [ 1163 , <multiplicative-expr> ] = GOTO 627
M [ 1163 , <num-const> ] = GOTO 628
M [ 1163 , <postfix-expr> ] = GOTO 629
M [ 1163 , <prim-expr> ] = GOTO 630
M [ 1163 , <rel-expr> ] = GOTO 631
M [ 1163 , <shift-expr> ] = GOTO 632
M [ 1163 , <unary-expr> ] = GOTO 633
M [ 1163 , <unary-op> ] = GOTO 634
M [ 1163 , CHAR_CONST ] = SHIFT 635
M [ 1163 , DELIM_LPAR ] = SHIFT 636
M [ 1163 , FLOAT_CONST ] = SHIFT 637
M [ 1163 , IDENTIFIER ] = SHIFT 638
M [ 1163 , INT_CONST ] = SHIFT 639
M [ 1163 , OP_ADD ] = SHIFT 135
M [ 1163 , OP_AND ] = SHIFT 136
M [ 1163 , OP_DEC ] = SHIFT 640
M [ 1163 , OP_INC ] = SHIFT 641
M [ 1163 , OP_LNOT ] = SHIFT 139
M [ 1163 , OP_MUL ] = SHIFT 140
M [ 1163 , OP_NOT ] = SHIFT 141
M [ 1163 , OP_SUB ] = SHIFT 142
M [ 1163 , STR_LITERAL ] = SHIFT 642
M [ 1163 , sizeof ] = SHIFT 643
M [ 1164 , IDENTIFIER ] = SHIFT 1423
M [ 1165 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1165 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1165 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1165 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1165 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1165 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1165 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1165 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1165 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1165 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1165 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1165 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1165 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1165 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1165 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1165 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1165 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1165 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1165 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1165 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1165 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1165 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1165 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1165 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1165 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1165 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1166 , IDENTIFIER ] = SHIFT 1424
M [ 1167 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1167 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1167 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1167 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1167 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1167 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1167 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1167 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1167 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1167 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1167 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1167 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1167 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1167 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1167 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1167 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1167 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1167 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1167 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1167 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1167 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1167 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1167 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1167 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1167 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1167 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1168 , DELIM_QUESTION ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1168 , DELIM_RSQBRACKET ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1168 , OP_ADD ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1168 , OP_AND ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1168 , OP_DIV ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1168 , OP_EQ ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1168 , OP_GE ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1168 , OP_GT ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1168 , OP_LAND ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1168 , OP_LE ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1168 , OP_LOR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1168 , OP_LT ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1168 , OP_MOD ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1168 , OP_MUL ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1168 , OP_NEQ ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1168 , OP_OR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1168 , OP_SHL ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1168 , OP_SHR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1168 , OP_SUB ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1168 , OP_XOR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1169 , DELIM_COMMA ] = SHIFT 661
M [ 1169 , DELIM_RPAR ] = SHIFT 1425
M [ 1170 , DELIM_RPAR ] = SHIFT 1426
M [ 1171 , DELIM_QUESTION ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1171 , DELIM_RSQBRACKET ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1171 , OP_ADD ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1171 , OP_AND ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1171 , OP_DIV ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1171 , OP_EQ ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1171 , OP_GE ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1171 , OP_GT ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1171 , OP_LAND ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1171 , OP_LE ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1171 , OP_LOR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1171 , OP_LT ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1171 , OP_MOD ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1171 , OP_MUL ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1171 , OP_NEQ ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1171 , OP_OR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1171 , OP_SHL ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1171 , OP_SHR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1171 , OP_SUB ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1171 , OP_XOR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1172 , <additive-expr> ] = GOTO 299
M [ 1172 , <and-expr> ] = GOTO 300
M [ 1172 , <asn-expr> ] = GOTO 301
M [ 1172 , <cast-expr> ] = GOTO 302
M [ 1172 , <cond-expr> ] = GOTO 303
M [ 1172 , <constant> ] = GOTO 304
M [ 1172 , <enum-spec> ] = GOTO 305
M [ 1172 , <eq-expr> ] = GOTO 306
M [ 1172 , <exc-or-expr> ] = GOTO 307
M [ 1172 , <expr> ] = GOTO 1169
M [ 1172 , <inc-or-expr> ] = GOTO 309
M [ 1172 , <land-expr> ] = GOTO 310
M [ 1172 , <lor-expr> ] = GOTO 311
M [ 1172 , <multiplicative-expr> ] = GOTO 312
M [ 1172 , <num-const> ] = GOTO 313
M [ 1172 , <postfix-expr> ] = GOTO 314
M [ 1172 , <prim-expr> ] = GOTO 315
M [ 1172 , <rel-expr> ] = GOTO 316
M [ 1172 , <shift-expr> ] = GOTO 317
M [ 1172 , <spec-qual-list> ] = GOTO 318
M [ 1172 , <struct-union-spec> ] = GOTO 319
M [ 1172 , <struct-union> ] = GOTO 320
M [ 1172 , <type-name> ] = GOTO 1427
M [ 1172 , <type-qual> ] = GOTO 322
M [ 1172 , <type-spec> ] = GOTO 323
M [ 1172 , <unary-expr> ] = GOTO 324
M [ 1172 , <unary-op> ] = GOTO 325
M [ 1172 , CHAR_CONST ] = SHIFT 326
M [ 1172 , DELIM_LPAR ] = SHIFT 327
M [ 1172 , FLOAT_CONST ] = SHIFT 328
M [ 1172 , IDENTIFIER ] = SHIFT 329
M [ 1172 , INT_CONST ] = SHIFT 330
M [ 1172 , OP_ADD ] = SHIFT 135
M [ 1172 , OP_AND ] = SHIFT 136
M [ 1172 , OP_DEC ] = SHIFT 331
M [ 1172 , OP_INC ] = SHIFT 332
M [ 1172 , OP_LNOT ] = SHIFT 139
M [ 1172 , OP_MUL ] = SHIFT 140
M [ 1172 , OP_NOT ] = SHIFT 141
M [ 1172 , OP_SUB ] = SHIFT 142
M [ 1172 , STR_LITERAL ] = SHIFT 333
M [ 1172 , char ] = SHIFT 334
M [ 1172 , const ] = SHIFT 335
M [ 1172 , double ] = SHIFT 336
M [ 1172 , enum ] = SHIFT 337
M [ 1172 , float ] = SHIFT 338
M [ 1172 , int ] = SHIFT 339
M [ 1172 , long ] = SHIFT 340
M [ 1172 , short ] = SHIFT 341
M [ 1172 , signed ] = SHIFT 342
M [ 1172 , sizeof ] = SHIFT 343
M [ 1172 , struct ] = SHIFT 21
M [ 1172 , unsigned ] = SHIFT 344
M [ 1172 , void ] = SHIFT 345
M [ 1173 , DELIM_QUESTION ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1173 , DELIM_RSQBRACKET ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1173 , OP_ADD ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1173 , OP_AND ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1173 , OP_DIV ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1173 , OP_EQ ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1173 , OP_GE ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1173 , OP_GT ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1173 , OP_LAND ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1173 , OP_LE ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1173 , OP_LOR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1173 , OP_LT ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1173 , OP_MOD ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1173 , OP_MUL ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1173 , OP_NEQ ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1173 , OP_OR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1173 , OP_SHL ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1173 , OP_SHR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1173 , OP_SUB ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1173 , OP_XOR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1174 , DELIM_QUESTION ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1174 , DELIM_RSQBRACKET ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1174 , OP_ADD ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1174 , OP_AND ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1174 , OP_DIV ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1174 , OP_EQ ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1174 , OP_GE ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1174 , OP_GT ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1174 , OP_LAND ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1174 , OP_LE ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1174 , OP_LOR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1174 , OP_LT ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1174 , OP_MOD ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1174 , OP_MUL ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1174 , OP_NEQ ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1174 , OP_OR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1174 , OP_SHL ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1174 , OP_SHR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1174 , OP_SUB ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1174 , OP_XOR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1175 , <additive-expr> ] = GOTO 299
M [ 1175 , <and-expr> ] = GOTO 300
M [ 1175 , <asn-expr> ] = GOTO 301
M [ 1175 , <cast-expr> ] = GOTO 302
M [ 1175 , <cond-expr> ] = GOTO 303
M [ 1175 , <constant> ] = GOTO 304
M [ 1175 , <enum-spec> ] = GOTO 305
M [ 1175 , <eq-expr> ] = GOTO 306
M [ 1175 , <exc-or-expr> ] = GOTO 307
M [ 1175 , <expr> ] = GOTO 1169
M [ 1175 , <inc-or-expr> ] = GOTO 309
M [ 1175 , <land-expr> ] = GOTO 310
M [ 1175 , <lor-expr> ] = GOTO 311
M [ 1175 , <multiplicative-expr> ] = GOTO 312
M [ 1175 , <num-const> ] = GOTO 313
M [ 1175 , <postfix-expr> ] = GOTO 314
M [ 1175 , <prim-expr> ] = GOTO 315
M [ 1175 , <rel-expr> ] = GOTO 316
M [ 1175 , <shift-expr> ] = GOTO 317
M [ 1175 , <spec-qual-list> ] = GOTO 318
M [ 1175 , <struct-union-spec> ] = GOTO 319
M [ 1175 , <struct-union> ] = GOTO 320
M [ 1175 , <type-name> ] = GOTO 1428
M [ 1175 , <type-qual> ] = GOTO 322
M [ 1175 , <type-spec> ] = GOTO 323
M [ 1175 , <unary-expr> ] = GOTO 324
M [ 1175 , <unary-op> ] = GOTO 325
M [ 1175 , CHAR_CONST ] = SHIFT 326
M [ 1175 , DELIM_LPAR ] = SHIFT 327
M [ 1175 , FLOAT_CONST ] = SHIFT 328
M [ 1175 , IDENTIFIER ] = SHIFT 329
M [ 1175 , INT_CONST ] = SHIFT 330
M [ 1175 , OP_ADD ] = SHIFT 135
M [ 1175 , OP_AND ] = SHIFT 136
M [ 1175 , OP_DEC ] = SHIFT 331
M [ 1175 , OP_INC ] = SHIFT 332
M [ 1175 , OP_LNOT ] = SHIFT 139
M [ 1175 , OP_MUL ] = SHIFT 140
M [ 1175 , OP_NOT ] = SHIFT 141
M [ 1175 , OP_SUB ] = SHIFT 142
M [ 1175 , STR_LITERAL ] = SHIFT 333
M [ 1175 , char ] = SHIFT 334
M [ 1175 , const ] = SHIFT 335
M [ 1175 , double ] = SHIFT 336
M [ 1175 , enum ] = SHIFT 337
M [ 1175 , float ] = SHIFT 338
M [ 1175 , int ] = SHIFT 339
M [ 1175 , long ] = SHIFT 340
M [ 1175 , short ] = SHIFT 341
M [ 1175 , signed ] = SHIFT 342
M [ 1175 , sizeof ] = SHIFT 343
M [ 1175 , struct ] = SHIFT 21
M [ 1175 , unsigned ] = SHIFT 344
M [ 1175 , void ] = SHIFT 345
M [ 1176 , DELIM_RPAR ] = SHIFT 1429
M [ 1177 , DELIM_RPAR ] = SHIFT 1430
M [ 1178 , DELIM_COMMA ] = SHIFT 457
M [ 1178 , DELIM_RPAR ] = SHIFT 1431
M [ 1179 , DELIM_RPAR ] = SHIFT 1432
M [ 1180 , DELIM_COMMA ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 1180 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 1180 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 1180 , DELIM_RPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR DELIM_RPAR 
M [ 1181 , DELIM_RSQBRACKET ] = SHIFT 1433
M [ 1182 , <additive-expr> ] = GOTO 185
M [ 1182 , <and-expr> ] = GOTO 186
M [ 1182 , <asn-expr> ] = GOTO 1434
M [ 1182 , <cast-expr> ] = GOTO 188
M [ 1182 , <cond-expr> ] = GOTO 189
M [ 1182 , <constant> ] = GOTO 190
M [ 1182 , <eq-expr> ] = GOTO 191
M [ 1182 , <exc-or-expr> ] = GOTO 192
M [ 1182 , <inc-or-expr> ] = GOTO 193
M [ 1182 , <land-expr> ] = GOTO 194
M [ 1182 , <lor-expr> ] = GOTO 195
M [ 1182 , <multiplicative-expr> ] = GOTO 196
M [ 1182 , <num-const> ] = GOTO 197
M [ 1182 , <postfix-expr> ] = GOTO 198
M [ 1182 , <prim-expr> ] = GOTO 199
M [ 1182 , <rel-expr> ] = GOTO 200
M [ 1182 , <shift-expr> ] = GOTO 201
M [ 1182 , <type-qual> ] = GOTO 495
M [ 1182 , <unary-expr> ] = GOTO 204
M [ 1182 , <unary-op> ] = GOTO 205
M [ 1182 , CHAR_CONST ] = SHIFT 206
M [ 1182 , DELIM_LPAR ] = SHIFT 207
M [ 1182 , DELIM_RSQBRACKET ] = SHIFT 1435
M [ 1182 , FLOAT_CONST ] = SHIFT 209
M [ 1182 , IDENTIFIER ] = SHIFT 210
M [ 1182 , INT_CONST ] = SHIFT 211
M [ 1182 , OP_ADD ] = SHIFT 135
M [ 1182 , OP_AND ] = SHIFT 136
M [ 1182 , OP_DEC ] = SHIFT 212
M [ 1182 , OP_INC ] = SHIFT 213
M [ 1182 , OP_LNOT ] = SHIFT 139
M [ 1182 , OP_MUL ] = SHIFT 140
M [ 1182 , OP_NOT ] = SHIFT 141
M [ 1182 , OP_SUB ] = SHIFT 142
M [ 1182 , STR_LITERAL ] = SHIFT 214
M [ 1182 , const ] = SHIFT 215
M [ 1182 , sizeof ] = SHIFT 216
M [ 1183 , DELIM_COMMA ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 1183 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 1183 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 1183 , DELIM_RPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET DELIM_RSQBRACKET 
M [ 1184 , DELIM_COMMA ] = REDUCE <direct-abstract-declarator> -> DELIM_LPAR <abstract-declarator> DELIM_RPAR 
M [ 1184 , DELIM_RPAR ] = REDUCE <direct-abstract-declarator> -> DELIM_LPAR <abstract-declarator> DELIM_RPAR 
M [ 1185 , DELIM_COMMA ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 1185 , DELIM_LPAR ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 1185 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 1185 , DELIM_RPAR ] = REDUCE <direct-declarator> -> DELIM_LPAR <declarator> DELIM_RPAR 
M [ 1186 , DELIM_LPAR ] = REDUCE <pointer> -> OP_MUL <pointer> 
M [ 1186 , DELIM_LSQBRACKET ] = REDUCE <pointer> -> OP_MUL <pointer> 
M [ 1186 , DELIM_RPAR ] = REDUCE <pointer> -> OP_MUL <pointer> 
M [ 1186 , IDENTIFIER ] = REDUCE <pointer> -> OP_MUL <pointer> 
M [ 1187 , <pointer> ] = GOTO 1436
M [ 1187 , <type-qual> ] = GOTO 1437
M [ 1187 , DELIM_LPAR ] = REDUCE <pointer> -> OP_MUL <type-qual-list> 
M [ 1187 , DELIM_LSQBRACKET ] = REDUCE <pointer> -> OP_MUL <type-qual-list> 
M [ 1187 , DELIM_RPAR ] = REDUCE <pointer> -> OP_MUL <type-qual-list> 
M [ 1187 , IDENTIFIER ] = REDUCE <pointer> -> OP_MUL <type-qual-list> 
M [ 1187 , OP_MUL ] = SHIFT 838
M [ 1187 , const ] = SHIFT 1189
M [ 1188 , DELIM_LPAR ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 1188 , DELIM_LSQBRACKET ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 1188 , DELIM_RPAR ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 1188 , IDENTIFIER ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 1188 , OP_MUL ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 1188 , const ] = REDUCE <type-qual-list> -> <type-qual> 
M [ 1189 , DELIM_LPAR ] = REDUCE <type-qual> -> const 
M [ 1189 , DELIM_LSQBRACKET ] = REDUCE <type-qual> -> const 
M [ 1189 , DELIM_RPAR ] = REDUCE <type-qual> -> const 
M [ 1189 , IDENTIFIER ] = REDUCE <type-qual> -> const 
M [ 1189 , OP_MUL ] = REDUCE <type-qual> -> const 
M [ 1189 , const ] = REDUCE <type-qual> -> const 
M [ 1190 , DELIM_COMMA ] = REDUCE <direct-abstract-declarator> -> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 1190 , DELIM_RPAR ] = REDUCE <direct-abstract-declarator> -> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 1191 , DELIM_RSQBRACKET ] = SHIFT 1438
M [ 1192 , DELIM_COMMA ] = REDUCE <direct-abstract-declarator> -> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 1192 , DELIM_RPAR ] = REDUCE <direct-abstract-declarator> -> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 1193 , DELIM_COMMA ] = REDUCE <pointer> -> OP_MUL <type-qual-list> <pointer> 
M [ 1193 , DELIM_LPAR ] = REDUCE <pointer> -> OP_MUL <type-qual-list> <pointer> 
M [ 1193 , DELIM_LSQBRACKET ] = REDUCE <pointer> -> OP_MUL <type-qual-list> <pointer> 
M [ 1193 , DELIM_RPAR ] = REDUCE <pointer> -> OP_MUL <type-qual-list> <pointer> 
M [ 1193 , IDENTIFIER ] = REDUCE <pointer> -> OP_MUL <type-qual-list> <pointer> 
M [ 1194 , DELIM_COMMA ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 1194 , DELIM_LPAR ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 1194 , DELIM_LSQBRACKET ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 1194 , DELIM_RPAR ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 1194 , IDENTIFIER ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 1194 , OP_MUL ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 1194 , const ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 1195 , DELIM_COMMA ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1195 , DELIM_LPAR ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1195 , DELIM_LSQBRACKET ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1195 , DELIM_RPAR ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1195 , IDENTIFIER ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1195 , OP_MUL ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1195 , char ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1195 , const ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1195 , double ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1195 , enum ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1195 , float ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1195 , int ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1195 , long ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1195 , short ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1195 , signed ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1195 , struct ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1195 , typedef ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1195 , unsigned ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1195 , void ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1196 , <enum-spec> ] = GOTO 62
M [ 1196 , <spec-qual-list> ] = GOTO 63
M [ 1196 , <struct-decl> ] = GOTO 233
M [ 1196 , <struct-union-spec> ] = GOTO 66
M [ 1196 , <struct-union> ] = GOTO 67
M [ 1196 , <type-qual> ] = GOTO 68
M [ 1196 , <type-spec> ] = GOTO 69
M [ 1196 , DELIM_RCURBRACE ] = SHIFT 1439
M [ 1196 , char ] = SHIFT 70
M [ 1196 , const ] = SHIFT 71
M [ 1196 , double ] = SHIFT 72
M [ 1196 , enum ] = SHIFT 73
M [ 1196 , float ] = SHIFT 74
M [ 1196 , int ] = SHIFT 75
M [ 1196 , long ] = SHIFT 76
M [ 1196 , short ] = SHIFT 77
M [ 1196 , signed ] = SHIFT 78
M [ 1196 , struct ] = SHIFT 21
M [ 1196 , unsigned ] = SHIFT 79
M [ 1196 , void ] = SHIFT 80
M [ 1197 , <enumeration-const> ] = GOTO 82
M [ 1197 , <enumerator> ] = GOTO 543
M [ 1197 , DELIM_RCURBRACE ] = SHIFT 1440
M [ 1197 , IDENTIFIER ] = SHIFT 85
M [ 1198 , DELIM_COMMA ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1198 , DELIM_LPAR ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1198 , DELIM_LSQBRACKET ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1198 , DELIM_RPAR ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1198 , IDENTIFIER ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1198 , OP_MUL ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1198 , char ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1198 , const ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1198 , double ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1198 , enum ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1198 , float ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1198 , int ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1198 , long ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1198 , short ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1198 , signed ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1198 , struct ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1198 , typedef ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1198 , unsigned ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1198 , void ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1199 , DELIM_COMMA ] = SHIFT 1441
M [ 1199 , DELIM_RCURBRACE ] = SHIFT 1442
M [ 1200 , <additive-expr> ] = GOTO 185
M [ 1200 , <and-expr> ] = GOTO 186
M [ 1200 , <cast-expr> ] = GOTO 188
M [ 1200 , <cond-expr> ] = GOTO 1443
M [ 1200 , <constant> ] = GOTO 809
M [ 1200 , <eq-expr> ] = GOTO 191
M [ 1200 , <exc-or-expr> ] = GOTO 192
M [ 1200 , <inc-or-expr> ] = GOTO 193
M [ 1200 , <land-expr> ] = GOTO 194
M [ 1200 , <lor-expr> ] = GOTO 195
M [ 1200 , <multiplicative-expr> ] = GOTO 196
M [ 1200 , <num-const> ] = GOTO 810
M [ 1200 , <postfix-expr> ] = GOTO 811
M [ 1200 , <prim-expr> ] = GOTO 812
M [ 1200 , <rel-expr> ] = GOTO 200
M [ 1200 , <shift-expr> ] = GOTO 201
M [ 1200 , <unary-expr> ] = GOTO 813
M [ 1200 , <unary-op> ] = GOTO 814
M [ 1200 , CHAR_CONST ] = SHIFT 815
M [ 1200 , DELIM_LPAR ] = SHIFT 816
M [ 1200 , FLOAT_CONST ] = SHIFT 817
M [ 1200 , IDENTIFIER ] = SHIFT 818
M [ 1200 , INT_CONST ] = SHIFT 819
M [ 1200 , OP_ADD ] = SHIFT 135
M [ 1200 , OP_AND ] = SHIFT 136
M [ 1200 , OP_DEC ] = SHIFT 820
M [ 1200 , OP_INC ] = SHIFT 821
M [ 1200 , OP_LNOT ] = SHIFT 139
M [ 1200 , OP_MUL ] = SHIFT 140
M [ 1200 , OP_NOT ] = SHIFT 141
M [ 1200 , OP_SUB ] = SHIFT 142
M [ 1200 , STR_LITERAL ] = SHIFT 822
M [ 1200 , sizeof ] = SHIFT 823
M [ 1201 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1201 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1202 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1202 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1203 , <cast-expr> ] = GOTO 1444
M [ 1203 , <constant> ] = GOTO 190
M [ 1203 , <num-const> ] = GOTO 197
M [ 1203 , <postfix-expr> ] = GOTO 198
M [ 1203 , <prim-expr> ] = GOTO 199
M [ 1203 , <unary-expr> ] = GOTO 499
M [ 1203 , <unary-op> ] = GOTO 205
M [ 1203 , CHAR_CONST ] = SHIFT 206
M [ 1203 , DELIM_LCURBRACE ] = SHIFT 1205
M [ 1203 , DELIM_LPAR ] = SHIFT 500
M [ 1203 , FLOAT_CONST ] = SHIFT 209
M [ 1203 , IDENTIFIER ] = SHIFT 210
M [ 1203 , INT_CONST ] = SHIFT 211
M [ 1203 , OP_ADD ] = SHIFT 135
M [ 1203 , OP_AND ] = SHIFT 136
M [ 1203 , OP_DEC ] = SHIFT 212
M [ 1203 , OP_INC ] = SHIFT 213
M [ 1203 , OP_LNOT ] = SHIFT 139
M [ 1203 , OP_MUL ] = SHIFT 140
M [ 1203 , OP_NOT ] = SHIFT 141
M [ 1203 , OP_SUB ] = SHIFT 142
M [ 1203 , STR_LITERAL ] = SHIFT 214
M [ 1203 , sizeof ] = SHIFT 216
M [ 1204 , DELIM_QUESTION ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1204 , DELIM_RSQBRACKET ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1204 , OP_ADD ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1204 , OP_AND ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1204 , OP_DIV ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1204 , OP_EQ ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1204 , OP_GE ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1204 , OP_GT ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1204 , OP_LAND ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1204 , OP_LE ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1204 , OP_LOR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1204 , OP_LT ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1204 , OP_MOD ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1204 , OP_MUL ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1204 , OP_NEQ ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1204 , OP_OR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1204 , OP_SHL ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1204 , OP_SHR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1204 , OP_SUB ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1204 , OP_XOR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1205 , <additive-expr> ] = GOTO 412
M [ 1205 , <and-expr> ] = GOTO 413
M [ 1205 , <asn-expr> ] = GOTO 414
M [ 1205 , <cast-expr> ] = GOTO 415
M [ 1205 , <cond-expr> ] = GOTO 416
M [ 1205 , <constant> ] = GOTO 417
M [ 1205 , <designation> ] = GOTO 418
M [ 1205 , <designator-list> ] = GOTO 419
M [ 1205 , <designator> ] = GOTO 420
M [ 1205 , <eq-expr> ] = GOTO 421
M [ 1205 , <exc-or-expr> ] = GOTO 422
M [ 1205 , <inc-or-expr> ] = GOTO 423
M [ 1205 , <initializer-list> ] = GOTO 1445
M [ 1205 , <initializer> ] = GOTO 425
M [ 1205 , <land-expr> ] = GOTO 426
M [ 1205 , <lor-expr> ] = GOTO 427
M [ 1205 , <multiplicative-expr> ] = GOTO 428
M [ 1205 , <num-const> ] = GOTO 429
M [ 1205 , <postfix-expr> ] = GOTO 430
M [ 1205 , <prim-expr> ] = GOTO 431
M [ 1205 , <rel-expr> ] = GOTO 432
M [ 1205 , <shift-expr> ] = GOTO 433
M [ 1205 , <unary-expr> ] = GOTO 434
M [ 1205 , <unary-op> ] = GOTO 435
M [ 1205 , CHAR_CONST ] = SHIFT 436
M [ 1205 , DELIM_LCURBRACE ] = SHIFT 437
M [ 1205 , DELIM_LPAR ] = SHIFT 438
M [ 1205 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 1205 , FLOAT_CONST ] = SHIFT 440
M [ 1205 , IDENTIFIER ] = SHIFT 441
M [ 1205 , INT_CONST ] = SHIFT 442
M [ 1205 , OP_ADD ] = SHIFT 135
M [ 1205 , OP_AND ] = SHIFT 136
M [ 1205 , OP_DEC ] = SHIFT 443
M [ 1205 , OP_DOT ] = SHIFT 444
M [ 1205 , OP_INC ] = SHIFT 445
M [ 1205 , OP_LNOT ] = SHIFT 139
M [ 1205 , OP_MUL ] = SHIFT 140
M [ 1205 , OP_NOT ] = SHIFT 141
M [ 1205 , OP_SUB ] = SHIFT 142
M [ 1205 , STR_LITERAL ] = SHIFT 446
M [ 1205 , sizeof ] = SHIFT 447
M [ 1206 , DELIM_LCURBRACE ] = SHIFT 1205
M [ 1207 , DELIM_LCURBRACE ] = SHIFT 1205
M [ 1207 , DELIM_QUESTION ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , DELIM_RSQBRACKET ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_ADD ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_ADDASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_AND ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_ANDASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_ASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_DIV ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_DIVASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_EQ ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_GE ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_GT ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_LAND ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_LE ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_LOR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_LT ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_MOD ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_MODASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_MUL ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_MULASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_NEQ ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_OR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_ORASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_SHL ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_SHLASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_SHR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_SHRASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_SUB ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_SUBASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_XOR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1207 , OP_XORASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1208 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 1208 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 1208 , DELIM_RPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 1209 , DELIM_COMMA ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 1209 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 1209 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 1209 , DELIM_SEMICOLON ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 1210 , DELIM_COMMA ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 1210 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 1210 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 1210 , DELIM_SEMICOLON ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 1211 , DELIM_COMMA ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 1211 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 1211 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 1211 , DELIM_SEMICOLON ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 1212 , DELIM_RSQBRACKET ] = SHIFT 1446
M [ 1213 , DELIM_COMMA ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 1213 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 1213 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 1213 , DELIM_SEMICOLON ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 1214 , DELIM_LPAR ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1214 , DELIM_SEMICOLON ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1214 , IDENTIFIER ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1214 , OP_MUL ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1214 , char ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1214 , const ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1214 , double ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1214 , enum ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1214 , float ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1214 , int ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1214 , long ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1214 , short ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1214 , signed ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1214 , struct ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1214 , unsigned ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1214 , void ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1215 , DELIM_LPAR ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1215 , DELIM_SEMICOLON ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1215 , IDENTIFIER ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1215 , OP_MUL ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1215 , char ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1215 , const ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1215 , double ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1215 , enum ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1215 , float ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1215 , int ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1215 , long ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1215 , short ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1215 , signed ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1215 , struct ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1215 , unsigned ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1215 , void ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1216 , <enumeration-const> ] = GOTO 82
M [ 1216 , <enumerator> ] = GOTO 543
M [ 1216 , DELIM_RCURBRACE ] = SHIFT 1447
M [ 1216 , IDENTIFIER ] = SHIFT 85
M [ 1217 , DELIM_LPAR ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1217 , DELIM_SEMICOLON ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1217 , IDENTIFIER ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1217 , OP_MUL ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1217 , char ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1217 , const ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1217 , double ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1217 , enum ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1217 , float ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1217 , int ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1217 , long ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1217 , short ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1217 , signed ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1217 , struct ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1217 , unsigned ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1217 , void ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1218 , DELIM_COMMA ] = SHIFT 973
M [ 1218 , DELIM_RPAR ] = SHIFT 1448
M [ 1219 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1219 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1219 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1219 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1219 , DELIM_RCURBRACE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1219 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1219 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1219 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1219 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1219 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1219 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1219 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1219 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1219 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1219 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1219 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1219 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1219 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1219 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1219 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1219 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1219 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1219 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1219 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1219 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1219 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1219 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1220 , DELIM_COMMA ] = SHIFT 981
M [ 1220 , DELIM_RSQBRACKET ] = SHIFT 1449
M [ 1221 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1221 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1221 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1221 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1221 , DELIM_RCURBRACE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1221 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1221 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1221 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1221 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1221 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1221 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1221 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1221 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1221 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1221 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1221 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1221 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1221 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1221 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1221 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1221 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1221 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1221 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1221 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1221 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1221 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1221 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1222 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1222 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1222 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1222 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1222 , DELIM_RCURBRACE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1222 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1222 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1222 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1222 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1222 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1222 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1222 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1222 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1222 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1222 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1222 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1222 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1222 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1222 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1222 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1222 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1222 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1222 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1222 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1222 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1222 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1222 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1223 , DELIM_COMMA ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1223 , DELIM_LPAR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1223 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1223 , DELIM_QUESTION ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1223 , DELIM_RCURBRACE ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1223 , OP_ADD ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1223 , OP_AND ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1223 , OP_ARROW ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1223 , OP_DEC ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1223 , OP_DIV ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1223 , OP_DOT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1223 , OP_EQ ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1223 , OP_GE ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1223 , OP_GT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1223 , OP_INC ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1223 , OP_LAND ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1223 , OP_LE ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1223 , OP_LOR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1223 , OP_LT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1223 , OP_MOD ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1223 , OP_MUL ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1223 , OP_NEQ ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1223 , OP_OR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1223 , OP_SHL ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1223 , OP_SHR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1223 , OP_SUB ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1223 , OP_XOR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1224 , <cast-expr> ] = GOTO 1418
M [ 1224 , <constant> ] = GOTO 528
M [ 1224 , <num-const> ] = GOTO 529
M [ 1224 , <postfix-expr> ] = GOTO 530
M [ 1224 , <prim-expr> ] = GOTO 531
M [ 1224 , <unary-expr> ] = GOTO 532
M [ 1224 , <unary-op> ] = GOTO 533
M [ 1224 , CHAR_CONST ] = SHIFT 534
M [ 1224 , DELIM_LCURBRACE ] = SHIFT 1450
M [ 1224 , DELIM_LPAR ] = SHIFT 535
M [ 1224 , FLOAT_CONST ] = SHIFT 536
M [ 1224 , IDENTIFIER ] = SHIFT 537
M [ 1224 , INT_CONST ] = SHIFT 538
M [ 1224 , OP_ADD ] = SHIFT 135
M [ 1224 , OP_AND ] = SHIFT 136
M [ 1224 , OP_DEC ] = SHIFT 539
M [ 1224 , OP_INC ] = SHIFT 540
M [ 1224 , OP_LNOT ] = SHIFT 139
M [ 1224 , OP_MUL ] = SHIFT 140
M [ 1224 , OP_NOT ] = SHIFT 141
M [ 1224 , OP_SUB ] = SHIFT 142
M [ 1224 , STR_LITERAL ] = SHIFT 541
M [ 1224 , sizeof ] = SHIFT 542
M [ 1225 , DELIM_RPAR ] = SHIFT 1451
M [ 1226 , DELIM_RPAR ] = SHIFT 1452
M [ 1227 , DELIM_COMMA ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 1227 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 1227 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 1227 , DELIM_SEMICOLON ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 1227 , OP_ASN ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 1228 , DELIM_COMMA ] = SHIFT 973
M [ 1228 , DELIM_RPAR ] = SHIFT 1453
M [ 1229 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1229 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1229 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1229 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1229 , DELIM_SEMICOLON ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1229 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1229 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1229 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1229 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1229 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1229 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1229 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1229 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1229 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1229 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1229 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1229 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1229 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1229 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1229 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1229 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1229 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1229 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1229 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1229 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1229 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1229 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1230 , DELIM_COMMA ] = SHIFT 981
M [ 1230 , DELIM_RSQBRACKET ] = SHIFT 1454
M [ 1231 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1231 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1231 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1231 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1231 , DELIM_SEMICOLON ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1231 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1231 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1231 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1231 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1231 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1231 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1231 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1231 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1231 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1231 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1231 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1231 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1231 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1231 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1231 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1231 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1231 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1231 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1231 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1231 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1231 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1231 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1232 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1232 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1232 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1232 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1232 , DELIM_SEMICOLON ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1232 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1232 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1232 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1232 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1232 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1232 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1232 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1232 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1232 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1232 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1232 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1232 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1232 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1232 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1232 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1232 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1232 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1232 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1232 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1232 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1232 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1232 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1233 , DELIM_COMMA ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1233 , DELIM_LPAR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1233 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1233 , DELIM_QUESTION ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1233 , DELIM_SEMICOLON ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1233 , OP_ADD ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1233 , OP_AND ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1233 , OP_ARROW ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1233 , OP_DEC ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1233 , OP_DIV ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1233 , OP_DOT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1233 , OP_EQ ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1233 , OP_GE ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1233 , OP_GT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1233 , OP_INC ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1233 , OP_LAND ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1233 , OP_LE ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1233 , OP_LOR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1233 , OP_LT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1233 , OP_MOD ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1233 , OP_MUL ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1233 , OP_NEQ ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1233 , OP_OR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1233 , OP_SHL ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1233 , OP_SHR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1233 , OP_SUB ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1233 , OP_XOR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1234 , <cast-expr> ] = GOTO 1065
M [ 1234 , <constant> ] = GOTO 554
M [ 1234 , <num-const> ] = GOTO 556
M [ 1234 , <postfix-expr> ] = GOTO 557
M [ 1234 , <prim-expr> ] = GOTO 558
M [ 1234 , <unary-expr> ] = GOTO 559
M [ 1234 , <unary-op> ] = GOTO 560
M [ 1234 , CHAR_CONST ] = SHIFT 561
M [ 1234 , DELIM_LCURBRACE ] = SHIFT 1455
M [ 1234 , DELIM_LPAR ] = SHIFT 562
M [ 1234 , FLOAT_CONST ] = SHIFT 563
M [ 1234 , IDENTIFIER ] = SHIFT 564
M [ 1234 , INT_CONST ] = SHIFT 565
M [ 1234 , OP_ADD ] = SHIFT 135
M [ 1234 , OP_AND ] = SHIFT 136
M [ 1234 , OP_DEC ] = SHIFT 566
M [ 1234 , OP_INC ] = SHIFT 567
M [ 1234 , OP_LNOT ] = SHIFT 139
M [ 1234 , OP_MUL ] = SHIFT 140
M [ 1234 , OP_NOT ] = SHIFT 141
M [ 1234 , OP_SUB ] = SHIFT 142
M [ 1234 , STR_LITERAL ] = SHIFT 568
M [ 1234 , sizeof ] = SHIFT 569
M [ 1235 , DELIM_RPAR ] = SHIFT 1456
M [ 1236 , DELIM_RPAR ] = SHIFT 1457
M [ 1237 , DELIM_COLON ] = REDUCE <prim-expr> -> <constant> 
M [ 1237 , DELIM_COMMA ] = REDUCE <prim-expr> -> <constant> 
M [ 1237 , DELIM_LPAR ] = REDUCE <prim-expr> -> <constant> 
M [ 1237 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> <constant> 
M [ 1237 , DELIM_QUESTION ] = REDUCE <prim-expr> -> <constant> 
M [ 1237 , OP_ADD ] = REDUCE <prim-expr> -> <constant> 
M [ 1237 , OP_AND ] = REDUCE <prim-expr> -> <constant> 
M [ 1237 , OP_ARROW ] = REDUCE <prim-expr> -> <constant> 
M [ 1237 , OP_DEC ] = REDUCE <prim-expr> -> <constant> 
M [ 1237 , OP_DIV ] = REDUCE <prim-expr> -> <constant> 
M [ 1237 , OP_DOT ] = REDUCE <prim-expr> -> <constant> 
M [ 1237 , OP_EQ ] = REDUCE <prim-expr> -> <constant> 
M [ 1237 , OP_GE ] = REDUCE <prim-expr> -> <constant> 
M [ 1237 , OP_GT ] = REDUCE <prim-expr> -> <constant> 
M [ 1237 , OP_INC ] = REDUCE <prim-expr> -> <constant> 
M [ 1237 , OP_LAND ] = REDUCE <prim-expr> -> <constant> 
M [ 1237 , OP_LE ] = REDUCE <prim-expr> -> <constant> 
M [ 1237 , OP_LOR ] = REDUCE <prim-expr> -> <constant> 
M [ 1237 , OP_LT ] = REDUCE <prim-expr> -> <constant> 
M [ 1237 , OP_MOD ] = REDUCE <prim-expr> -> <constant> 
M [ 1237 , OP_MUL ] = REDUCE <prim-expr> -> <constant> 
M [ 1237 , OP_NEQ ] = REDUCE <prim-expr> -> <constant> 
M [ 1237 , OP_OR ] = REDUCE <prim-expr> -> <constant> 
M [ 1237 , OP_SHL ] = REDUCE <prim-expr> -> <constant> 
M [ 1237 , OP_SHR ] = REDUCE <prim-expr> -> <constant> 
M [ 1237 , OP_SUB ] = REDUCE <prim-expr> -> <constant> 
M [ 1237 , OP_XOR ] = REDUCE <prim-expr> -> <constant> 
M [ 1238 , DELIM_COLON ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1238 , DELIM_COMMA ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1238 , DELIM_QUESTION ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1238 , OP_ADD ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1238 , OP_AND ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1238 , OP_DIV ] = SHIFT 947
M [ 1238 , OP_EQ ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1238 , OP_GE ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1238 , OP_GT ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1238 , OP_LAND ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1238 , OP_LE ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1238 , OP_LOR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1238 , OP_LT ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1238 , OP_MOD ] = SHIFT 948
M [ 1238 , OP_MUL ] = SHIFT 949
M [ 1238 , OP_NEQ ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1238 , OP_OR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1238 , OP_SHL ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1238 , OP_SHR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1238 , OP_SUB ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1238 , OP_XOR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1239 , DELIM_COLON ] = REDUCE <constant> -> <num-const> 
M [ 1239 , DELIM_COMMA ] = REDUCE <constant> -> <num-const> 
M [ 1239 , DELIM_LPAR ] = REDUCE <constant> -> <num-const> 
M [ 1239 , DELIM_LSQBRACKET ] = REDUCE <constant> -> <num-const> 
M [ 1239 , DELIM_QUESTION ] = REDUCE <constant> -> <num-const> 
M [ 1239 , OP_ADD ] = REDUCE <constant> -> <num-const> 
M [ 1239 , OP_AND ] = REDUCE <constant> -> <num-const> 
M [ 1239 , OP_ARROW ] = REDUCE <constant> -> <num-const> 
M [ 1239 , OP_DEC ] = REDUCE <constant> -> <num-const> 
M [ 1239 , OP_DIV ] = REDUCE <constant> -> <num-const> 
M [ 1239 , OP_DOT ] = REDUCE <constant> -> <num-const> 
M [ 1239 , OP_EQ ] = REDUCE <constant> -> <num-const> 
M [ 1239 , OP_GE ] = REDUCE <constant> -> <num-const> 
M [ 1239 , OP_GT ] = REDUCE <constant> -> <num-const> 
M [ 1239 , OP_INC ] = REDUCE <constant> -> <num-const> 
M [ 1239 , OP_LAND ] = REDUCE <constant> -> <num-const> 
M [ 1239 , OP_LE ] = REDUCE <constant> -> <num-const> 
M [ 1239 , OP_LOR ] = REDUCE <constant> -> <num-const> 
M [ 1239 , OP_LT ] = REDUCE <constant> -> <num-const> 
M [ 1239 , OP_MOD ] = REDUCE <constant> -> <num-const> 
M [ 1239 , OP_MUL ] = REDUCE <constant> -> <num-const> 
M [ 1239 , OP_NEQ ] = REDUCE <constant> -> <num-const> 
M [ 1239 , OP_OR ] = REDUCE <constant> -> <num-const> 
M [ 1239 , OP_SHL ] = REDUCE <constant> -> <num-const> 
M [ 1239 , OP_SHR ] = REDUCE <constant> -> <num-const> 
M [ 1239 , OP_SUB ] = REDUCE <constant> -> <num-const> 
M [ 1239 , OP_XOR ] = REDUCE <constant> -> <num-const> 
M [ 1240 , DELIM_COLON ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1240 , DELIM_COMMA ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1240 , DELIM_LPAR ] = SHIFT 1458
M [ 1240 , DELIM_LSQBRACKET ] = SHIFT 1459
M [ 1240 , DELIM_QUESTION ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1240 , OP_ADD ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1240 , OP_AND ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1240 , OP_ARROW ] = SHIFT 1460
M [ 1240 , OP_DEC ] = SHIFT 1461
M [ 1240 , OP_DIV ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1240 , OP_DOT ] = SHIFT 1462
M [ 1240 , OP_EQ ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1240 , OP_GE ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1240 , OP_GT ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1240 , OP_INC ] = SHIFT 1463
M [ 1240 , OP_LAND ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1240 , OP_LE ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1240 , OP_LOR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1240 , OP_LT ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1240 , OP_MOD ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1240 , OP_MUL ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1240 , OP_NEQ ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1240 , OP_OR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1240 , OP_SHL ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1240 , OP_SHR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1240 , OP_SUB ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1240 , OP_XOR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1241 , DELIM_COLON ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1241 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1241 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1241 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1241 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1241 , OP_ADD ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1241 , OP_AND ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1241 , OP_ARROW ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1241 , OP_DEC ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1241 , OP_DIV ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1241 , OP_DOT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1241 , OP_EQ ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1241 , OP_GE ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1241 , OP_GT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1241 , OP_INC ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1241 , OP_LAND ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1241 , OP_LE ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1241 , OP_LOR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1241 , OP_LT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1241 , OP_MOD ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1241 , OP_MUL ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1241 , OP_NEQ ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1241 , OP_OR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1241 , OP_SHL ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1241 , OP_SHR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1241 , OP_SUB ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1241 , OP_XOR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1242 , DELIM_COLON ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1242 , DELIM_COMMA ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1242 , DELIM_QUESTION ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1242 , OP_ADD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1242 , OP_AND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1242 , OP_DIV ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1242 , OP_EQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1242 , OP_GE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1242 , OP_GT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1242 , OP_LAND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1242 , OP_LE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1242 , OP_LOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1242 , OP_LT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1242 , OP_MOD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1242 , OP_MUL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1242 , OP_NEQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1242 , OP_OR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1242 , OP_SHL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1242 , OP_SHR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1242 , OP_SUB ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1242 , OP_XOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1243 , <cast-expr> ] = GOTO 1464
M [ 1243 , <constant> ] = GOTO 1237
M [ 1243 , <num-const> ] = GOTO 1239
M [ 1243 , <postfix-expr> ] = GOTO 1240
M [ 1243 , <prim-expr> ] = GOTO 1241
M [ 1243 , <unary-expr> ] = GOTO 1242
M [ 1243 , <unary-op> ] = GOTO 1243
M [ 1243 , CHAR_CONST ] = SHIFT 1244
M [ 1243 , DELIM_LPAR ] = SHIFT 1245
M [ 1243 , FLOAT_CONST ] = SHIFT 1246
M [ 1243 , IDENTIFIER ] = SHIFT 1247
M [ 1243 , INT_CONST ] = SHIFT 1248
M [ 1243 , OP_ADD ] = SHIFT 135
M [ 1243 , OP_AND ] = SHIFT 136
M [ 1243 , OP_DEC ] = SHIFT 1249
M [ 1243 , OP_INC ] = SHIFT 1250
M [ 1243 , OP_LNOT ] = SHIFT 139
M [ 1243 , OP_MUL ] = SHIFT 140
M [ 1243 , OP_NOT ] = SHIFT 141
M [ 1243 , OP_SUB ] = SHIFT 142
M [ 1243 , STR_LITERAL ] = SHIFT 1251
M [ 1243 , sizeof ] = SHIFT 1252
M [ 1244 , DELIM_COLON ] = REDUCE <constant> -> CHAR_CONST 
M [ 1244 , DELIM_COMMA ] = REDUCE <constant> -> CHAR_CONST 
M [ 1244 , DELIM_LPAR ] = REDUCE <constant> -> CHAR_CONST 
M [ 1244 , DELIM_LSQBRACKET ] = REDUCE <constant> -> CHAR_CONST 
M [ 1244 , DELIM_QUESTION ] = REDUCE <constant> -> CHAR_CONST 
M [ 1244 , OP_ADD ] = REDUCE <constant> -> CHAR_CONST 
M [ 1244 , OP_AND ] = REDUCE <constant> -> CHAR_CONST 
M [ 1244 , OP_ARROW ] = REDUCE <constant> -> CHAR_CONST 
M [ 1244 , OP_DEC ] = REDUCE <constant> -> CHAR_CONST 
M [ 1244 , OP_DIV ] = REDUCE <constant> -> CHAR_CONST 
M [ 1244 , OP_DOT ] = REDUCE <constant> -> CHAR_CONST 
M [ 1244 , OP_EQ ] = REDUCE <constant> -> CHAR_CONST 
M [ 1244 , OP_GE ] = REDUCE <constant> -> CHAR_CONST 
M [ 1244 , OP_GT ] = REDUCE <constant> -> CHAR_CONST 
M [ 1244 , OP_INC ] = REDUCE <constant> -> CHAR_CONST 
M [ 1244 , OP_LAND ] = REDUCE <constant> -> CHAR_CONST 
M [ 1244 , OP_LE ] = REDUCE <constant> -> CHAR_CONST 
M [ 1244 , OP_LOR ] = REDUCE <constant> -> CHAR_CONST 
M [ 1244 , OP_LT ] = REDUCE <constant> -> CHAR_CONST 
M [ 1244 , OP_MOD ] = REDUCE <constant> -> CHAR_CONST 
M [ 1244 , OP_MUL ] = REDUCE <constant> -> CHAR_CONST 
M [ 1244 , OP_NEQ ] = REDUCE <constant> -> CHAR_CONST 
M [ 1244 , OP_OR ] = REDUCE <constant> -> CHAR_CONST 
M [ 1244 , OP_SHL ] = REDUCE <constant> -> CHAR_CONST 
M [ 1244 , OP_SHR ] = REDUCE <constant> -> CHAR_CONST 
M [ 1244 , OP_SUB ] = REDUCE <constant> -> CHAR_CONST 
M [ 1244 , OP_XOR ] = REDUCE <constant> -> CHAR_CONST 
M [ 1245 , <additive-expr> ] = GOTO 299
M [ 1245 , <and-expr> ] = GOTO 300
M [ 1245 , <asn-expr> ] = GOTO 301
M [ 1245 , <cast-expr> ] = GOTO 302
M [ 1245 , <cond-expr> ] = GOTO 303
M [ 1245 , <constant> ] = GOTO 304
M [ 1245 , <enum-spec> ] = GOTO 305
M [ 1245 , <eq-expr> ] = GOTO 306
M [ 1245 , <exc-or-expr> ] = GOTO 307
M [ 1245 , <expr> ] = GOTO 1465
M [ 1245 , <inc-or-expr> ] = GOTO 309
M [ 1245 , <land-expr> ] = GOTO 310
M [ 1245 , <lor-expr> ] = GOTO 311
M [ 1245 , <multiplicative-expr> ] = GOTO 312
M [ 1245 , <num-const> ] = GOTO 313
M [ 1245 , <postfix-expr> ] = GOTO 314
M [ 1245 , <prim-expr> ] = GOTO 315
M [ 1245 , <rel-expr> ] = GOTO 316
M [ 1245 , <shift-expr> ] = GOTO 317
M [ 1245 , <spec-qual-list> ] = GOTO 318
M [ 1245 , <struct-union-spec> ] = GOTO 319
M [ 1245 , <struct-union> ] = GOTO 320
M [ 1245 , <type-name> ] = GOTO 1466
M [ 1245 , <type-qual> ] = GOTO 322
M [ 1245 , <type-spec> ] = GOTO 323
M [ 1245 , <unary-expr> ] = GOTO 324
M [ 1245 , <unary-op> ] = GOTO 325
M [ 1245 , CHAR_CONST ] = SHIFT 326
M [ 1245 , DELIM_LPAR ] = SHIFT 327
M [ 1245 , FLOAT_CONST ] = SHIFT 328
M [ 1245 , IDENTIFIER ] = SHIFT 329
M [ 1245 , INT_CONST ] = SHIFT 330
M [ 1245 , OP_ADD ] = SHIFT 135
M [ 1245 , OP_AND ] = SHIFT 136
M [ 1245 , OP_DEC ] = SHIFT 331
M [ 1245 , OP_INC ] = SHIFT 332
M [ 1245 , OP_LNOT ] = SHIFT 139
M [ 1245 , OP_MUL ] = SHIFT 140
M [ 1245 , OP_NOT ] = SHIFT 141
M [ 1245 , OP_SUB ] = SHIFT 142
M [ 1245 , STR_LITERAL ] = SHIFT 333
M [ 1245 , char ] = SHIFT 334
M [ 1245 , const ] = SHIFT 335
M [ 1245 , double ] = SHIFT 336
M [ 1245 , enum ] = SHIFT 337
M [ 1245 , float ] = SHIFT 338
M [ 1245 , int ] = SHIFT 339
M [ 1245 , long ] = SHIFT 340
M [ 1245 , short ] = SHIFT 341
M [ 1245 , signed ] = SHIFT 342
M [ 1245 , sizeof ] = SHIFT 343
M [ 1245 , struct ] = SHIFT 21
M [ 1245 , unsigned ] = SHIFT 344
M [ 1245 , void ] = SHIFT 345
M [ 1246 , DELIM_COLON ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1246 , DELIM_COMMA ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1246 , DELIM_LPAR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1246 , DELIM_LSQBRACKET ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1246 , DELIM_QUESTION ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1246 , OP_ADD ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1246 , OP_AND ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1246 , OP_ARROW ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1246 , OP_DEC ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1246 , OP_DIV ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1246 , OP_DOT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1246 , OP_EQ ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1246 , OP_GE ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1246 , OP_GT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1246 , OP_INC ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1246 , OP_LAND ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1246 , OP_LE ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1246 , OP_LOR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1246 , OP_LT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1246 , OP_MOD ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1246 , OP_MUL ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1246 , OP_NEQ ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1246 , OP_OR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1246 , OP_SHL ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1246 , OP_SHR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1246 , OP_SUB ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1246 , OP_XOR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1247 , DELIM_COLON ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1247 , DELIM_COMMA ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1247 , DELIM_LPAR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1247 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1247 , DELIM_QUESTION ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1247 , OP_ADD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1247 , OP_AND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1247 , OP_ARROW ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1247 , OP_DEC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1247 , OP_DIV ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1247 , OP_DOT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1247 , OP_EQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1247 , OP_GE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1247 , OP_GT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1247 , OP_INC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1247 , OP_LAND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1247 , OP_LE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1247 , OP_LOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1247 , OP_LT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1247 , OP_MOD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1247 , OP_MUL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1247 , OP_NEQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1247 , OP_OR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1247 , OP_SHL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1247 , OP_SHR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1247 , OP_SUB ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1247 , OP_XOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1248 , DELIM_COLON ] = REDUCE <num-const> -> INT_CONST 
M [ 1248 , DELIM_COMMA ] = REDUCE <num-const> -> INT_CONST 
M [ 1248 , DELIM_LPAR ] = REDUCE <num-const> -> INT_CONST 
M [ 1248 , DELIM_LSQBRACKET ] = REDUCE <num-const> -> INT_CONST 
M [ 1248 , DELIM_QUESTION ] = REDUCE <num-const> -> INT_CONST 
M [ 1248 , OP_ADD ] = REDUCE <num-const> -> INT_CONST 
M [ 1248 , OP_AND ] = REDUCE <num-const> -> INT_CONST 
M [ 1248 , OP_ARROW ] = REDUCE <num-const> -> INT_CONST 
M [ 1248 , OP_DEC ] = REDUCE <num-const> -> INT_CONST 
M [ 1248 , OP_DIV ] = REDUCE <num-const> -> INT_CONST 
M [ 1248 , OP_DOT ] = REDUCE <num-const> -> INT_CONST 
M [ 1248 , OP_EQ ] = REDUCE <num-const> -> INT_CONST 
M [ 1248 , OP_GE ] = REDUCE <num-const> -> INT_CONST 
M [ 1248 , OP_GT ] = REDUCE <num-const> -> INT_CONST 
M [ 1248 , OP_INC ] = REDUCE <num-const> -> INT_CONST 
M [ 1248 , OP_LAND ] = REDUCE <num-const> -> INT_CONST 
M [ 1248 , OP_LE ] = REDUCE <num-const> -> INT_CONST 
M [ 1248 , OP_LOR ] = REDUCE <num-const> -> INT_CONST 
M [ 1248 , OP_LT ] = REDUCE <num-const> -> INT_CONST 
M [ 1248 , OP_MOD ] = REDUCE <num-const> -> INT_CONST 
M [ 1248 , OP_MUL ] = REDUCE <num-const> -> INT_CONST 
M [ 1248 , OP_NEQ ] = REDUCE <num-const> -> INT_CONST 
M [ 1248 , OP_OR ] = REDUCE <num-const> -> INT_CONST 
M [ 1248 , OP_SHL ] = REDUCE <num-const> -> INT_CONST 
M [ 1248 , OP_SHR ] = REDUCE <num-const> -> INT_CONST 
M [ 1248 , OP_SUB ] = REDUCE <num-const> -> INT_CONST 
M [ 1248 , OP_XOR ] = REDUCE <num-const> -> INT_CONST 
M [ 1249 , <constant> ] = GOTO 1237
M [ 1249 , <num-const> ] = GOTO 1239
M [ 1249 , <postfix-expr> ] = GOTO 1240
M [ 1249 , <prim-expr> ] = GOTO 1241
M [ 1249 , <unary-expr> ] = GOTO 1467
M [ 1249 , <unary-op> ] = GOTO 1243
M [ 1249 , CHAR_CONST ] = SHIFT 1244
M [ 1249 , DELIM_LPAR ] = SHIFT 1468
M [ 1249 , FLOAT_CONST ] = SHIFT 1246
M [ 1249 , IDENTIFIER ] = SHIFT 1247
M [ 1249 , INT_CONST ] = SHIFT 1248
M [ 1249 , OP_ADD ] = SHIFT 135
M [ 1249 , OP_AND ] = SHIFT 136
M [ 1249 , OP_DEC ] = SHIFT 1249
M [ 1249 , OP_INC ] = SHIFT 1250
M [ 1249 , OP_LNOT ] = SHIFT 139
M [ 1249 , OP_MUL ] = SHIFT 140
M [ 1249 , OP_NOT ] = SHIFT 141
M [ 1249 , OP_SUB ] = SHIFT 142
M [ 1249 , STR_LITERAL ] = SHIFT 1251
M [ 1249 , sizeof ] = SHIFT 1252
M [ 1250 , <constant> ] = GOTO 1237
M [ 1250 , <num-const> ] = GOTO 1239
M [ 1250 , <postfix-expr> ] = GOTO 1240
M [ 1250 , <prim-expr> ] = GOTO 1241
M [ 1250 , <unary-expr> ] = GOTO 1469
M [ 1250 , <unary-op> ] = GOTO 1243
M [ 1250 , CHAR_CONST ] = SHIFT 1244
M [ 1250 , DELIM_LPAR ] = SHIFT 1468
M [ 1250 , FLOAT_CONST ] = SHIFT 1246
M [ 1250 , IDENTIFIER ] = SHIFT 1247
M [ 1250 , INT_CONST ] = SHIFT 1248
M [ 1250 , OP_ADD ] = SHIFT 135
M [ 1250 , OP_AND ] = SHIFT 136
M [ 1250 , OP_DEC ] = SHIFT 1249
M [ 1250 , OP_INC ] = SHIFT 1250
M [ 1250 , OP_LNOT ] = SHIFT 139
M [ 1250 , OP_MUL ] = SHIFT 140
M [ 1250 , OP_NOT ] = SHIFT 141
M [ 1250 , OP_SUB ] = SHIFT 142
M [ 1250 , STR_LITERAL ] = SHIFT 1251
M [ 1250 , sizeof ] = SHIFT 1252
M [ 1251 , DELIM_COLON ] = REDUCE <constant> -> STR_LITERAL 
M [ 1251 , DELIM_COMMA ] = REDUCE <constant> -> STR_LITERAL 
M [ 1251 , DELIM_LPAR ] = REDUCE <constant> -> STR_LITERAL 
M [ 1251 , DELIM_LSQBRACKET ] = REDUCE <constant> -> STR_LITERAL 
M [ 1251 , DELIM_QUESTION ] = REDUCE <constant> -> STR_LITERAL 
M [ 1251 , OP_ADD ] = REDUCE <constant> -> STR_LITERAL 
M [ 1251 , OP_AND ] = REDUCE <constant> -> STR_LITERAL 
M [ 1251 , OP_ARROW ] = REDUCE <constant> -> STR_LITERAL 
M [ 1251 , OP_DEC ] = REDUCE <constant> -> STR_LITERAL 
M [ 1251 , OP_DIV ] = REDUCE <constant> -> STR_LITERAL 
M [ 1251 , OP_DOT ] = REDUCE <constant> -> STR_LITERAL 
M [ 1251 , OP_EQ ] = REDUCE <constant> -> STR_LITERAL 
M [ 1251 , OP_GE ] = REDUCE <constant> -> STR_LITERAL 
M [ 1251 , OP_GT ] = REDUCE <constant> -> STR_LITERAL 
M [ 1251 , OP_INC ] = REDUCE <constant> -> STR_LITERAL 
M [ 1251 , OP_LAND ] = REDUCE <constant> -> STR_LITERAL 
M [ 1251 , OP_LE ] = REDUCE <constant> -> STR_LITERAL 
M [ 1251 , OP_LOR ] = REDUCE <constant> -> STR_LITERAL 
M [ 1251 , OP_LT ] = REDUCE <constant> -> STR_LITERAL 
M [ 1251 , OP_MOD ] = REDUCE <constant> -> STR_LITERAL 
M [ 1251 , OP_MUL ] = REDUCE <constant> -> STR_LITERAL 
M [ 1251 , OP_NEQ ] = REDUCE <constant> -> STR_LITERAL 
M [ 1251 , OP_OR ] = REDUCE <constant> -> STR_LITERAL 
M [ 1251 , OP_SHL ] = REDUCE <constant> -> STR_LITERAL 
M [ 1251 , OP_SHR ] = REDUCE <constant> -> STR_LITERAL 
M [ 1251 , OP_SUB ] = REDUCE <constant> -> STR_LITERAL 
M [ 1251 , OP_XOR ] = REDUCE <constant> -> STR_LITERAL 
M [ 1252 , <constant> ] = GOTO 1237
M [ 1252 , <num-const> ] = GOTO 1239
M [ 1252 , <postfix-expr> ] = GOTO 1240
M [ 1252 , <prim-expr> ] = GOTO 1241
M [ 1252 , <unary-expr> ] = GOTO 1470
M [ 1252 , <unary-op> ] = GOTO 1243
M [ 1252 , CHAR_CONST ] = SHIFT 1244
M [ 1252 , DELIM_LPAR ] = SHIFT 1471
M [ 1252 , FLOAT_CONST ] = SHIFT 1246
M [ 1252 , IDENTIFIER ] = SHIFT 1247
M [ 1252 , INT_CONST ] = SHIFT 1248
M [ 1252 , OP_ADD ] = SHIFT 135
M [ 1252 , OP_AND ] = SHIFT 136
M [ 1252 , OP_DEC ] = SHIFT 1249
M [ 1252 , OP_INC ] = SHIFT 1250
M [ 1252 , OP_LNOT ] = SHIFT 139
M [ 1252 , OP_MUL ] = SHIFT 140
M [ 1252 , OP_NOT ] = SHIFT 141
M [ 1252 , OP_SUB ] = SHIFT 142
M [ 1252 , STR_LITERAL ] = SHIFT 1251
M [ 1252 , sizeof ] = SHIFT 1252
M [ 1253 , DELIM_COLON ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1253 , DELIM_COMMA ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1253 , DELIM_QUESTION ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1253 , OP_ADD ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1253 , OP_AND ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1253 , OP_DIV ] = SHIFT 947
M [ 1253 , OP_EQ ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1253 , OP_GE ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1253 , OP_GT ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1253 , OP_LAND ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1253 , OP_LE ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1253 , OP_LOR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1253 , OP_LT ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1253 , OP_MOD ] = SHIFT 948
M [ 1253 , OP_MUL ] = SHIFT 949
M [ 1253 , OP_NEQ ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1253 , OP_OR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1253 , OP_SHL ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1253 , OP_SHR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1253 , OP_SUB ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1253 , OP_XOR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1254 , DELIM_COLON ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1254 , DELIM_COMMA ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1254 , DELIM_QUESTION ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1254 , OP_AND ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1254 , OP_EQ ] = SHIFT 938
M [ 1254 , OP_LAND ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1254 , OP_LOR ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1254 , OP_NEQ ] = SHIFT 939
M [ 1254 , OP_OR ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1254 , OP_XOR ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1255 , DELIM_COLON ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1255 , DELIM_COMMA ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1255 , DELIM_QUESTION ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1255 , OP_AND ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1255 , OP_EQ ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1255 , OP_GE ] = SHIFT 956
M [ 1255 , OP_GT ] = SHIFT 957
M [ 1255 , OP_LAND ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1255 , OP_LE ] = SHIFT 958
M [ 1255 , OP_LOR ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1255 , OP_LT ] = SHIFT 959
M [ 1255 , OP_NEQ ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1255 , OP_OR ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1255 , OP_XOR ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1256 , DELIM_COLON ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1256 , DELIM_COMMA ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1256 , DELIM_QUESTION ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1256 , OP_AND ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1256 , OP_EQ ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1256 , OP_GE ] = SHIFT 956
M [ 1256 , OP_GT ] = SHIFT 957
M [ 1256 , OP_LAND ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1256 , OP_LE ] = SHIFT 958
M [ 1256 , OP_LOR ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1256 , OP_LT ] = SHIFT 959
M [ 1256 , OP_NEQ ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1256 , OP_OR ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1256 , OP_XOR ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1257 , DELIM_COLON ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1257 , DELIM_COMMA ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1257 , DELIM_QUESTION ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1257 , OP_AND ] = SHIFT 937
M [ 1257 , OP_LAND ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1257 , OP_LOR ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1257 , OP_OR ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1257 , OP_XOR ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1258 , DELIM_COMMA ] = REDUCE <cond-expr> -> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <cond-expr> 
M [ 1258 , DELIM_SEMICOLON ] = REDUCE <cond-expr> -> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <cond-expr> 
M [ 1259 , DELIM_COLON ] = REDUCE <expr> -> <expr> DELIM_COMMA <asn-expr> 
M [ 1259 , DELIM_COMMA ] = REDUCE <expr> -> <expr> DELIM_COMMA <asn-expr> 
M [ 1260 , DELIM_COLON ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1260 , DELIM_COMMA ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1260 , DELIM_QUESTION ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1260 , OP_LAND ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1260 , OP_LOR ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1260 , OP_OR ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1260 , OP_XOR ] = SHIFT 940
M [ 1261 , DELIM_COLON ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 1261 , DELIM_COMMA ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 1261 , DELIM_QUESTION ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 1261 , OP_LAND ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 1261 , OP_LOR ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 1261 , OP_OR ] = SHIFT 943
M [ 1262 , DELIM_COLON ] = SHIFT 1472
M [ 1262 , DELIM_COMMA ] = SHIFT 942
M [ 1263 , DELIM_COLON ] = REDUCE <lor-expr> -> <lor-expr> OP_LOR <land-expr> 
M [ 1263 , DELIM_COMMA ] = REDUCE <lor-expr> -> <lor-expr> OP_LOR <land-expr> 
M [ 1263 , DELIM_QUESTION ] = REDUCE <lor-expr> -> <lor-expr> OP_LOR <land-expr> 
M [ 1263 , OP_LAND ] = SHIFT 944
M [ 1263 , OP_LOR ] = REDUCE <lor-expr> -> <lor-expr> OP_LOR <land-expr> 
M [ 1264 , DELIM_COLON ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1264 , DELIM_COMMA ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1264 , DELIM_QUESTION ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1264 , OP_ADD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1264 , OP_AND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1264 , OP_DIV ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1264 , OP_EQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1264 , OP_GE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1264 , OP_GT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1264 , OP_LAND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1264 , OP_LE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1264 , OP_LOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1264 , OP_LT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1264 , OP_MOD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1264 , OP_MUL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1264 , OP_NEQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1264 , OP_OR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1264 , OP_SHL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1264 , OP_SHR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1264 , OP_SUB ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1264 , OP_XOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1265 , DELIM_COLON ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1265 , DELIM_COMMA ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1265 , DELIM_QUESTION ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1265 , OP_ADD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1265 , OP_AND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1265 , OP_DIV ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1265 , OP_EQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1265 , OP_GE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1265 , OP_GT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1265 , OP_LAND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1265 , OP_LE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1265 , OP_LOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1265 , OP_LT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1265 , OP_MOD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1265 , OP_MUL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1265 , OP_NEQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1265 , OP_OR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1265 , OP_SHL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1265 , OP_SHR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1265 , OP_SUB ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1265 , OP_XOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1266 , DELIM_COLON ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1266 , DELIM_COMMA ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1266 , DELIM_QUESTION ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1266 , OP_ADD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1266 , OP_AND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1266 , OP_DIV ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1266 , OP_EQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1266 , OP_GE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1266 , OP_GT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1266 , OP_LAND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1266 , OP_LE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1266 , OP_LOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1266 , OP_LT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1266 , OP_MOD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1266 , OP_MUL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1266 , OP_NEQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1266 , OP_OR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1266 , OP_SHL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1266 , OP_SHR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1266 , OP_SUB ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1266 , OP_XOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1267 , DELIM_COMMA ] = SHIFT 973
M [ 1267 , DELIM_RPAR ] = SHIFT 1473
M [ 1268 , DELIM_COLON ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1268 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1269 , DELIM_COMMA ] = SHIFT 981
M [ 1269 , DELIM_RSQBRACKET ] = SHIFT 1474
M [ 1270 , DELIM_COLON ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1270 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1271 , DELIM_COLON ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1271 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1272 , DELIM_COLON ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1272 , DELIM_COMMA ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1272 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1272 , OP_AND ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1272 , OP_EQ ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1272 , OP_GE ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1272 , OP_GT ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1272 , OP_LAND ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1272 , OP_LE ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1272 , OP_LOR ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1272 , OP_LT ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1272 , OP_NEQ ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1272 , OP_OR ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1272 , OP_SHL ] = SHIFT 960
M [ 1272 , OP_SHR ] = SHIFT 961
M [ 1272 , OP_XOR ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1273 , DELIM_COLON ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1273 , DELIM_COMMA ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1273 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1273 , OP_AND ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1273 , OP_EQ ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1273 , OP_GE ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1273 , OP_GT ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1273 , OP_LAND ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1273 , OP_LE ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1273 , OP_LOR ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1273 , OP_LT ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1273 , OP_NEQ ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1273 , OP_OR ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1273 , OP_SHL ] = SHIFT 960
M [ 1273 , OP_SHR ] = SHIFT 961
M [ 1273 , OP_XOR ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1274 , DELIM_COLON ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1274 , DELIM_COMMA ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1274 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1274 , OP_AND ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1274 , OP_EQ ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1274 , OP_GE ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1274 , OP_GT ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1274 , OP_LAND ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1274 , OP_LE ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1274 , OP_LOR ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1274 , OP_LT ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1274 , OP_NEQ ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1274 , OP_OR ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1274 , OP_SHL ] = SHIFT 960
M [ 1274 , OP_SHR ] = SHIFT 961
M [ 1274 , OP_XOR ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1275 , DELIM_COLON ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1275 , DELIM_COMMA ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1275 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1275 , OP_AND ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1275 , OP_EQ ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1275 , OP_GE ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1275 , OP_GT ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1275 , OP_LAND ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1275 , OP_LE ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1275 , OP_LOR ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1275 , OP_LT ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1275 , OP_NEQ ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1275 , OP_OR ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1275 , OP_SHL ] = SHIFT 960
M [ 1275 , OP_SHR ] = SHIFT 961
M [ 1275 , OP_XOR ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1276 , DELIM_COLON ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1276 , DELIM_COMMA ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1276 , DELIM_QUESTION ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1276 , OP_ADD ] = SHIFT 935
M [ 1276 , OP_AND ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1276 , OP_EQ ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1276 , OP_GE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1276 , OP_GT ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1276 , OP_LAND ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1276 , OP_LE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1276 , OP_LOR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1276 , OP_LT ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1276 , OP_NEQ ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1276 , OP_OR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1276 , OP_SHL ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1276 , OP_SHR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1276 , OP_SUB ] = SHIFT 936
M [ 1276 , OP_XOR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1277 , DELIM_COLON ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1277 , DELIM_COMMA ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1277 , DELIM_QUESTION ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1277 , OP_ADD ] = SHIFT 935
M [ 1277 , OP_AND ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1277 , OP_EQ ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1277 , OP_GE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1277 , OP_GT ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1277 , OP_LAND ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1277 , OP_LE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1277 , OP_LOR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1277 , OP_LT ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1277 , OP_NEQ ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1277 , OP_OR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1277 , OP_SHL ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1277 , OP_SHR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1277 , OP_SUB ] = SHIFT 936
M [ 1277 , OP_XOR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1278 , DELIM_COLON ] = REDUCE <asn-expr> -> <unary-expr> <asn-op> <asn-expr> 
M [ 1278 , DELIM_COMMA ] = REDUCE <asn-expr> -> <unary-expr> <asn-op> <asn-expr> 
M [ 1279 , DELIM_RPAR ] = SHIFT 1475
M [ 1280 , DELIM_COLON ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , DELIM_COMMA ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , DELIM_LPAR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , DELIM_QUESTION ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_ADD ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_ADDASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_AND ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_ANDASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_ARROW ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_ASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_DEC ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_DIV ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_DIVASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_DOT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_EQ ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_GE ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_GT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_INC ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_LAND ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_LE ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_LOR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_LT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_MOD ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_MODASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_MUL ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_MULASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_NEQ ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_OR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_ORASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_SHL ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_SHLASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_SHR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_SHRASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_SUB ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_SUBASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_XOR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1280 , OP_XORASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1281 , <cast-expr> ] = GOTO 1476
M [ 1281 , <constant> ] = GOTO 1237
M [ 1281 , <num-const> ] = GOTO 1239
M [ 1281 , <postfix-expr> ] = GOTO 1240
M [ 1281 , <prim-expr> ] = GOTO 1241
M [ 1281 , <unary-expr> ] = GOTO 1242
M [ 1281 , <unary-op> ] = GOTO 1243
M [ 1281 , CHAR_CONST ] = SHIFT 1244
M [ 1281 , DELIM_LCURBRACE ] = SHIFT 1477
M [ 1281 , DELIM_LPAR ] = SHIFT 1245
M [ 1281 , FLOAT_CONST ] = SHIFT 1246
M [ 1281 , IDENTIFIER ] = SHIFT 1247
M [ 1281 , INT_CONST ] = SHIFT 1248
M [ 1281 , OP_ADD ] = SHIFT 135
M [ 1281 , OP_AND ] = SHIFT 136
M [ 1281 , OP_DEC ] = SHIFT 1249
M [ 1281 , OP_INC ] = SHIFT 1250
M [ 1281 , OP_LNOT ] = SHIFT 139
M [ 1281 , OP_MUL ] = SHIFT 140
M [ 1281 , OP_NOT ] = SHIFT 141
M [ 1281 , OP_SUB ] = SHIFT 142
M [ 1281 , STR_LITERAL ] = SHIFT 1251
M [ 1281 , sizeof ] = SHIFT 1252
M [ 1282 , DELIM_RPAR ] = SHIFT 1478
M [ 1283 , DELIM_RPAR ] = SHIFT 1479
M [ 1284 , DELIM_COMMA ] = REDUCE <arg-expr-list> -> <arg-expr-list> DELIM_COMMA <asn-expr> 
M [ 1284 , DELIM_RPAR ] = REDUCE <arg-expr-list> -> <arg-expr-list> DELIM_COMMA <asn-expr> 
M [ 1285 , DELIM_COMMA ] = REDUCE <prim-expr> -> <constant> 
M [ 1285 , DELIM_LPAR ] = REDUCE <prim-expr> -> <constant> 
M [ 1285 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> <constant> 
M [ 1285 , DELIM_QUESTION ] = REDUCE <prim-expr> -> <constant> 
M [ 1285 , DELIM_RSQBRACKET ] = REDUCE <prim-expr> -> <constant> 
M [ 1285 , OP_ADD ] = REDUCE <prim-expr> -> <constant> 
M [ 1285 , OP_AND ] = REDUCE <prim-expr> -> <constant> 
M [ 1285 , OP_ARROW ] = REDUCE <prim-expr> -> <constant> 
M [ 1285 , OP_DEC ] = REDUCE <prim-expr> -> <constant> 
M [ 1285 , OP_DIV ] = REDUCE <prim-expr> -> <constant> 
M [ 1285 , OP_DOT ] = REDUCE <prim-expr> -> <constant> 
M [ 1285 , OP_EQ ] = REDUCE <prim-expr> -> <constant> 
M [ 1285 , OP_GE ] = REDUCE <prim-expr> -> <constant> 
M [ 1285 , OP_GT ] = REDUCE <prim-expr> -> <constant> 
M [ 1285 , OP_INC ] = REDUCE <prim-expr> -> <constant> 
M [ 1285 , OP_LAND ] = REDUCE <prim-expr> -> <constant> 
M [ 1285 , OP_LE ] = REDUCE <prim-expr> -> <constant> 
M [ 1285 , OP_LOR ] = REDUCE <prim-expr> -> <constant> 
M [ 1285 , OP_LT ] = REDUCE <prim-expr> -> <constant> 
M [ 1285 , OP_MOD ] = REDUCE <prim-expr> -> <constant> 
M [ 1285 , OP_MUL ] = REDUCE <prim-expr> -> <constant> 
M [ 1285 , OP_NEQ ] = REDUCE <prim-expr> -> <constant> 
M [ 1285 , OP_OR ] = REDUCE <prim-expr> -> <constant> 
M [ 1285 , OP_SHL ] = REDUCE <prim-expr> -> <constant> 
M [ 1285 , OP_SHR ] = REDUCE <prim-expr> -> <constant> 
M [ 1285 , OP_SUB ] = REDUCE <prim-expr> -> <constant> 
M [ 1285 , OP_XOR ] = REDUCE <prim-expr> -> <constant> 
M [ 1286 , DELIM_COMMA ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1286 , DELIM_QUESTION ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1286 , DELIM_RSQBRACKET ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1286 , OP_ADD ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1286 , OP_AND ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1286 , OP_DIV ] = SHIFT 987
M [ 1286 , OP_EQ ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1286 , OP_GE ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1286 , OP_GT ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1286 , OP_LAND ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1286 , OP_LE ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1286 , OP_LOR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1286 , OP_LT ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1286 , OP_MOD ] = SHIFT 988
M [ 1286 , OP_MUL ] = SHIFT 989
M [ 1286 , OP_NEQ ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1286 , OP_OR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1286 , OP_SHL ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1286 , OP_SHR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1286 , OP_SUB ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1286 , OP_XOR ] = REDUCE <additive-expr> -> <additive-expr> OP_ADD <multiplicative-expr> 
M [ 1287 , DELIM_COMMA ] = REDUCE <constant> -> <num-const> 
M [ 1287 , DELIM_LPAR ] = REDUCE <constant> -> <num-const> 
M [ 1287 , DELIM_LSQBRACKET ] = REDUCE <constant> -> <num-const> 
M [ 1287 , DELIM_QUESTION ] = REDUCE <constant> -> <num-const> 
M [ 1287 , DELIM_RSQBRACKET ] = REDUCE <constant> -> <num-const> 
M [ 1287 , OP_ADD ] = REDUCE <constant> -> <num-const> 
M [ 1287 , OP_AND ] = REDUCE <constant> -> <num-const> 
M [ 1287 , OP_ARROW ] = REDUCE <constant> -> <num-const> 
M [ 1287 , OP_DEC ] = REDUCE <constant> -> <num-const> 
M [ 1287 , OP_DIV ] = REDUCE <constant> -> <num-const> 
M [ 1287 , OP_DOT ] = REDUCE <constant> -> <num-const> 
M [ 1287 , OP_EQ ] = REDUCE <constant> -> <num-const> 
M [ 1287 , OP_GE ] = REDUCE <constant> -> <num-const> 
M [ 1287 , OP_GT ] = REDUCE <constant> -> <num-const> 
M [ 1287 , OP_INC ] = REDUCE <constant> -> <num-const> 
M [ 1287 , OP_LAND ] = REDUCE <constant> -> <num-const> 
M [ 1287 , OP_LE ] = REDUCE <constant> -> <num-const> 
M [ 1287 , OP_LOR ] = REDUCE <constant> -> <num-const> 
M [ 1287 , OP_LT ] = REDUCE <constant> -> <num-const> 
M [ 1287 , OP_MOD ] = REDUCE <constant> -> <num-const> 
M [ 1287 , OP_MUL ] = REDUCE <constant> -> <num-const> 
M [ 1287 , OP_NEQ ] = REDUCE <constant> -> <num-const> 
M [ 1287 , OP_OR ] = REDUCE <constant> -> <num-const> 
M [ 1287 , OP_SHL ] = REDUCE <constant> -> <num-const> 
M [ 1287 , OP_SHR ] = REDUCE <constant> -> <num-const> 
M [ 1287 , OP_SUB ] = REDUCE <constant> -> <num-const> 
M [ 1287 , OP_XOR ] = REDUCE <constant> -> <num-const> 
M [ 1288 , DELIM_COMMA ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1288 , DELIM_LPAR ] = SHIFT 1480
M [ 1288 , DELIM_LSQBRACKET ] = SHIFT 1481
M [ 1288 , DELIM_QUESTION ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1288 , DELIM_RSQBRACKET ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1288 , OP_ADD ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1288 , OP_AND ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1288 , OP_ARROW ] = SHIFT 1482
M [ 1288 , OP_DEC ] = SHIFT 1483
M [ 1288 , OP_DIV ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1288 , OP_DOT ] = SHIFT 1484
M [ 1288 , OP_EQ ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1288 , OP_GE ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1288 , OP_GT ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1288 , OP_INC ] = SHIFT 1485
M [ 1288 , OP_LAND ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1288 , OP_LE ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1288 , OP_LOR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1288 , OP_LT ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1288 , OP_MOD ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1288 , OP_MUL ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1288 , OP_NEQ ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1288 , OP_OR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1288 , OP_SHL ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1288 , OP_SHR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1288 , OP_SUB ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1288 , OP_XOR ] = REDUCE <unary-expr> -> <postfix-expr> 
M [ 1289 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1289 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1289 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1289 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1289 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1289 , OP_ADD ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1289 , OP_AND ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1289 , OP_ARROW ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1289 , OP_DEC ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1289 , OP_DIV ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1289 , OP_DOT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1289 , OP_EQ ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1289 , OP_GE ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1289 , OP_GT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1289 , OP_INC ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1289 , OP_LAND ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1289 , OP_LE ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1289 , OP_LOR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1289 , OP_LT ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1289 , OP_MOD ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1289 , OP_MUL ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1289 , OP_NEQ ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1289 , OP_OR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1289 , OP_SHL ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1289 , OP_SHR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1289 , OP_SUB ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1289 , OP_XOR ] = REDUCE <postfix-expr> -> <prim-expr> 
M [ 1290 , DELIM_COMMA ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1290 , DELIM_QUESTION ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1290 , DELIM_RSQBRACKET ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1290 , OP_ADD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1290 , OP_AND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1290 , OP_DIV ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1290 , OP_EQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1290 , OP_GE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1290 , OP_GT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1290 , OP_LAND ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1290 , OP_LE ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1290 , OP_LOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1290 , OP_LT ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1290 , OP_MOD ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1290 , OP_MUL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1290 , OP_NEQ ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1290 , OP_OR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1290 , OP_SHL ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1290 , OP_SHR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1290 , OP_SUB ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1290 , OP_XOR ] = REDUCE <cast-expr> -> <unary-expr> 
M [ 1291 , <cast-expr> ] = GOTO 1486
M [ 1291 , <constant> ] = GOTO 1285
M [ 1291 , <num-const> ] = GOTO 1287
M [ 1291 , <postfix-expr> ] = GOTO 1288
M [ 1291 , <prim-expr> ] = GOTO 1289
M [ 1291 , <unary-expr> ] = GOTO 1290
M [ 1291 , <unary-op> ] = GOTO 1291
M [ 1291 , CHAR_CONST ] = SHIFT 1292
M [ 1291 , DELIM_LPAR ] = SHIFT 1293
M [ 1291 , FLOAT_CONST ] = SHIFT 1294
M [ 1291 , IDENTIFIER ] = SHIFT 1295
M [ 1291 , INT_CONST ] = SHIFT 1296
M [ 1291 , OP_ADD ] = SHIFT 135
M [ 1291 , OP_AND ] = SHIFT 136
M [ 1291 , OP_DEC ] = SHIFT 1297
M [ 1291 , OP_INC ] = SHIFT 1298
M [ 1291 , OP_LNOT ] = SHIFT 139
M [ 1291 , OP_MUL ] = SHIFT 140
M [ 1291 , OP_NOT ] = SHIFT 141
M [ 1291 , OP_SUB ] = SHIFT 142
M [ 1291 , STR_LITERAL ] = SHIFT 1299
M [ 1291 , sizeof ] = SHIFT 1300
M [ 1292 , DELIM_COMMA ] = REDUCE <constant> -> CHAR_CONST 
M [ 1292 , DELIM_LPAR ] = REDUCE <constant> -> CHAR_CONST 
M [ 1292 , DELIM_LSQBRACKET ] = REDUCE <constant> -> CHAR_CONST 
M [ 1292 , DELIM_QUESTION ] = REDUCE <constant> -> CHAR_CONST 
M [ 1292 , DELIM_RSQBRACKET ] = REDUCE <constant> -> CHAR_CONST 
M [ 1292 , OP_ADD ] = REDUCE <constant> -> CHAR_CONST 
M [ 1292 , OP_AND ] = REDUCE <constant> -> CHAR_CONST 
M [ 1292 , OP_ARROW ] = REDUCE <constant> -> CHAR_CONST 
M [ 1292 , OP_DEC ] = REDUCE <constant> -> CHAR_CONST 
M [ 1292 , OP_DIV ] = REDUCE <constant> -> CHAR_CONST 
M [ 1292 , OP_DOT ] = REDUCE <constant> -> CHAR_CONST 
M [ 1292 , OP_EQ ] = REDUCE <constant> -> CHAR_CONST 
M [ 1292 , OP_GE ] = REDUCE <constant> -> CHAR_CONST 
M [ 1292 , OP_GT ] = REDUCE <constant> -> CHAR_CONST 
M [ 1292 , OP_INC ] = REDUCE <constant> -> CHAR_CONST 
M [ 1292 , OP_LAND ] = REDUCE <constant> -> CHAR_CONST 
M [ 1292 , OP_LE ] = REDUCE <constant> -> CHAR_CONST 
M [ 1292 , OP_LOR ] = REDUCE <constant> -> CHAR_CONST 
M [ 1292 , OP_LT ] = REDUCE <constant> -> CHAR_CONST 
M [ 1292 , OP_MOD ] = REDUCE <constant> -> CHAR_CONST 
M [ 1292 , OP_MUL ] = REDUCE <constant> -> CHAR_CONST 
M [ 1292 , OP_NEQ ] = REDUCE <constant> -> CHAR_CONST 
M [ 1292 , OP_OR ] = REDUCE <constant> -> CHAR_CONST 
M [ 1292 , OP_SHL ] = REDUCE <constant> -> CHAR_CONST 
M [ 1292 , OP_SHR ] = REDUCE <constant> -> CHAR_CONST 
M [ 1292 , OP_SUB ] = REDUCE <constant> -> CHAR_CONST 
M [ 1292 , OP_XOR ] = REDUCE <constant> -> CHAR_CONST 
M [ 1293 , <additive-expr> ] = GOTO 299
M [ 1293 , <and-expr> ] = GOTO 300
M [ 1293 , <asn-expr> ] = GOTO 301
M [ 1293 , <cast-expr> ] = GOTO 302
M [ 1293 , <cond-expr> ] = GOTO 303
M [ 1293 , <constant> ] = GOTO 304
M [ 1293 , <enum-spec> ] = GOTO 305
M [ 1293 , <eq-expr> ] = GOTO 306
M [ 1293 , <exc-or-expr> ] = GOTO 307
M [ 1293 , <expr> ] = GOTO 1487
M [ 1293 , <inc-or-expr> ] = GOTO 309
M [ 1293 , <land-expr> ] = GOTO 310
M [ 1293 , <lor-expr> ] = GOTO 311
M [ 1293 , <multiplicative-expr> ] = GOTO 312
M [ 1293 , <num-const> ] = GOTO 313
M [ 1293 , <postfix-expr> ] = GOTO 314
M [ 1293 , <prim-expr> ] = GOTO 315
M [ 1293 , <rel-expr> ] = GOTO 316
M [ 1293 , <shift-expr> ] = GOTO 317
M [ 1293 , <spec-qual-list> ] = GOTO 318
M [ 1293 , <struct-union-spec> ] = GOTO 319
M [ 1293 , <struct-union> ] = GOTO 320
M [ 1293 , <type-name> ] = GOTO 1488
M [ 1293 , <type-qual> ] = GOTO 322
M [ 1293 , <type-spec> ] = GOTO 323
M [ 1293 , <unary-expr> ] = GOTO 324
M [ 1293 , <unary-op> ] = GOTO 325
M [ 1293 , CHAR_CONST ] = SHIFT 326
M [ 1293 , DELIM_LPAR ] = SHIFT 327
M [ 1293 , FLOAT_CONST ] = SHIFT 328
M [ 1293 , IDENTIFIER ] = SHIFT 329
M [ 1293 , INT_CONST ] = SHIFT 330
M [ 1293 , OP_ADD ] = SHIFT 135
M [ 1293 , OP_AND ] = SHIFT 136
M [ 1293 , OP_DEC ] = SHIFT 331
M [ 1293 , OP_INC ] = SHIFT 332
M [ 1293 , OP_LNOT ] = SHIFT 139
M [ 1293 , OP_MUL ] = SHIFT 140
M [ 1293 , OP_NOT ] = SHIFT 141
M [ 1293 , OP_SUB ] = SHIFT 142
M [ 1293 , STR_LITERAL ] = SHIFT 333
M [ 1293 , char ] = SHIFT 334
M [ 1293 , const ] = SHIFT 335
M [ 1293 , double ] = SHIFT 336
M [ 1293 , enum ] = SHIFT 337
M [ 1293 , float ] = SHIFT 338
M [ 1293 , int ] = SHIFT 339
M [ 1293 , long ] = SHIFT 340
M [ 1293 , short ] = SHIFT 341
M [ 1293 , signed ] = SHIFT 342
M [ 1293 , sizeof ] = SHIFT 343
M [ 1293 , struct ] = SHIFT 21
M [ 1293 , unsigned ] = SHIFT 344
M [ 1293 , void ] = SHIFT 345
M [ 1294 , DELIM_COMMA ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1294 , DELIM_LPAR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1294 , DELIM_LSQBRACKET ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1294 , DELIM_QUESTION ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1294 , DELIM_RSQBRACKET ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1294 , OP_ADD ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1294 , OP_AND ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1294 , OP_ARROW ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1294 , OP_DEC ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1294 , OP_DIV ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1294 , OP_DOT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1294 , OP_EQ ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1294 , OP_GE ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1294 , OP_GT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1294 , OP_INC ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1294 , OP_LAND ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1294 , OP_LE ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1294 , OP_LOR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1294 , OP_LT ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1294 , OP_MOD ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1294 , OP_MUL ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1294 , OP_NEQ ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1294 , OP_OR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1294 , OP_SHL ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1294 , OP_SHR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1294 , OP_SUB ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1294 , OP_XOR ] = REDUCE <num-const> -> FLOAT_CONST 
M [ 1295 , DELIM_COMMA ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1295 , DELIM_LPAR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1295 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1295 , DELIM_QUESTION ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1295 , DELIM_RSQBRACKET ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1295 , OP_ADD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1295 , OP_AND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1295 , OP_ARROW ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1295 , OP_DEC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1295 , OP_DIV ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1295 , OP_DOT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1295 , OP_EQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1295 , OP_GE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1295 , OP_GT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1295 , OP_INC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1295 , OP_LAND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1295 , OP_LE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1295 , OP_LOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1295 , OP_LT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1295 , OP_MOD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1295 , OP_MUL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1295 , OP_NEQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1295 , OP_OR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1295 , OP_SHL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1295 , OP_SHR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1295 , OP_SUB ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1295 , OP_XOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1296 , DELIM_COMMA ] = REDUCE <num-const> -> INT_CONST 
M [ 1296 , DELIM_LPAR ] = REDUCE <num-const> -> INT_CONST 
M [ 1296 , DELIM_LSQBRACKET ] = REDUCE <num-const> -> INT_CONST 
M [ 1296 , DELIM_QUESTION ] = REDUCE <num-const> -> INT_CONST 
M [ 1296 , DELIM_RSQBRACKET ] = REDUCE <num-const> -> INT_CONST 
M [ 1296 , OP_ADD ] = REDUCE <num-const> -> INT_CONST 
M [ 1296 , OP_AND ] = REDUCE <num-const> -> INT_CONST 
M [ 1296 , OP_ARROW ] = REDUCE <num-const> -> INT_CONST 
M [ 1296 , OP_DEC ] = REDUCE <num-const> -> INT_CONST 
M [ 1296 , OP_DIV ] = REDUCE <num-const> -> INT_CONST 
M [ 1296 , OP_DOT ] = REDUCE <num-const> -> INT_CONST 
M [ 1296 , OP_EQ ] = REDUCE <num-const> -> INT_CONST 
M [ 1296 , OP_GE ] = REDUCE <num-const> -> INT_CONST 
M [ 1296 , OP_GT ] = REDUCE <num-const> -> INT_CONST 
M [ 1296 , OP_INC ] = REDUCE <num-const> -> INT_CONST 
M [ 1296 , OP_LAND ] = REDUCE <num-const> -> INT_CONST 
M [ 1296 , OP_LE ] = REDUCE <num-const> -> INT_CONST 
M [ 1296 , OP_LOR ] = REDUCE <num-const> -> INT_CONST 
M [ 1296 , OP_LT ] = REDUCE <num-const> -> INT_CONST 
M [ 1296 , OP_MOD ] = REDUCE <num-const> -> INT_CONST 
M [ 1296 , OP_MUL ] = REDUCE <num-const> -> INT_CONST 
M [ 1296 , OP_NEQ ] = REDUCE <num-const> -> INT_CONST 
M [ 1296 , OP_OR ] = REDUCE <num-const> -> INT_CONST 
M [ 1296 , OP_SHL ] = REDUCE <num-const> -> INT_CONST 
M [ 1296 , OP_SHR ] = REDUCE <num-const> -> INT_CONST 
M [ 1296 , OP_SUB ] = REDUCE <num-const> -> INT_CONST 
M [ 1296 , OP_XOR ] = REDUCE <num-const> -> INT_CONST 
M [ 1297 , <constant> ] = GOTO 1285
M [ 1297 , <num-const> ] = GOTO 1287
M [ 1297 , <postfix-expr> ] = GOTO 1288
M [ 1297 , <prim-expr> ] = GOTO 1289
M [ 1297 , <unary-expr> ] = GOTO 1489
M [ 1297 , <unary-op> ] = GOTO 1291
M [ 1297 , CHAR_CONST ] = SHIFT 1292
M [ 1297 , DELIM_LPAR ] = SHIFT 1490
M [ 1297 , FLOAT_CONST ] = SHIFT 1294
M [ 1297 , IDENTIFIER ] = SHIFT 1295
M [ 1297 , INT_CONST ] = SHIFT 1296
M [ 1297 , OP_ADD ] = SHIFT 135
M [ 1297 , OP_AND ] = SHIFT 136
M [ 1297 , OP_DEC ] = SHIFT 1297
M [ 1297 , OP_INC ] = SHIFT 1298
M [ 1297 , OP_LNOT ] = SHIFT 139
M [ 1297 , OP_MUL ] = SHIFT 140
M [ 1297 , OP_NOT ] = SHIFT 141
M [ 1297 , OP_SUB ] = SHIFT 142
M [ 1297 , STR_LITERAL ] = SHIFT 1299
M [ 1297 , sizeof ] = SHIFT 1300
M [ 1298 , <constant> ] = GOTO 1285
M [ 1298 , <num-const> ] = GOTO 1287
M [ 1298 , <postfix-expr> ] = GOTO 1288
M [ 1298 , <prim-expr> ] = GOTO 1289
M [ 1298 , <unary-expr> ] = GOTO 1491
M [ 1298 , <unary-op> ] = GOTO 1291
M [ 1298 , CHAR_CONST ] = SHIFT 1292
M [ 1298 , DELIM_LPAR ] = SHIFT 1490
M [ 1298 , FLOAT_CONST ] = SHIFT 1294
M [ 1298 , IDENTIFIER ] = SHIFT 1295
M [ 1298 , INT_CONST ] = SHIFT 1296
M [ 1298 , OP_ADD ] = SHIFT 135
M [ 1298 , OP_AND ] = SHIFT 136
M [ 1298 , OP_DEC ] = SHIFT 1297
M [ 1298 , OP_INC ] = SHIFT 1298
M [ 1298 , OP_LNOT ] = SHIFT 139
M [ 1298 , OP_MUL ] = SHIFT 140
M [ 1298 , OP_NOT ] = SHIFT 141
M [ 1298 , OP_SUB ] = SHIFT 142
M [ 1298 , STR_LITERAL ] = SHIFT 1299
M [ 1298 , sizeof ] = SHIFT 1300
M [ 1299 , DELIM_COMMA ] = REDUCE <constant> -> STR_LITERAL 
M [ 1299 , DELIM_LPAR ] = REDUCE <constant> -> STR_LITERAL 
M [ 1299 , DELIM_LSQBRACKET ] = REDUCE <constant> -> STR_LITERAL 
M [ 1299 , DELIM_QUESTION ] = REDUCE <constant> -> STR_LITERAL 
M [ 1299 , DELIM_RSQBRACKET ] = REDUCE <constant> -> STR_LITERAL 
M [ 1299 , OP_ADD ] = REDUCE <constant> -> STR_LITERAL 
M [ 1299 , OP_AND ] = REDUCE <constant> -> STR_LITERAL 
M [ 1299 , OP_ARROW ] = REDUCE <constant> -> STR_LITERAL 
M [ 1299 , OP_DEC ] = REDUCE <constant> -> STR_LITERAL 
M [ 1299 , OP_DIV ] = REDUCE <constant> -> STR_LITERAL 
M [ 1299 , OP_DOT ] = REDUCE <constant> -> STR_LITERAL 
M [ 1299 , OP_EQ ] = REDUCE <constant> -> STR_LITERAL 
M [ 1299 , OP_GE ] = REDUCE <constant> -> STR_LITERAL 
M [ 1299 , OP_GT ] = REDUCE <constant> -> STR_LITERAL 
M [ 1299 , OP_INC ] = REDUCE <constant> -> STR_LITERAL 
M [ 1299 , OP_LAND ] = REDUCE <constant> -> STR_LITERAL 
M [ 1299 , OP_LE ] = REDUCE <constant> -> STR_LITERAL 
M [ 1299 , OP_LOR ] = REDUCE <constant> -> STR_LITERAL 
M [ 1299 , OP_LT ] = REDUCE <constant> -> STR_LITERAL 
M [ 1299 , OP_MOD ] = REDUCE <constant> -> STR_LITERAL 
M [ 1299 , OP_MUL ] = REDUCE <constant> -> STR_LITERAL 
M [ 1299 , OP_NEQ ] = REDUCE <constant> -> STR_LITERAL 
M [ 1299 , OP_OR ] = REDUCE <constant> -> STR_LITERAL 
M [ 1299 , OP_SHL ] = REDUCE <constant> -> STR_LITERAL 
M [ 1299 , OP_SHR ] = REDUCE <constant> -> STR_LITERAL 
M [ 1299 , OP_SUB ] = REDUCE <constant> -> STR_LITERAL 
M [ 1299 , OP_XOR ] = REDUCE <constant> -> STR_LITERAL 
M [ 1300 , <constant> ] = GOTO 1285
M [ 1300 , <num-const> ] = GOTO 1287
M [ 1300 , <postfix-expr> ] = GOTO 1288
M [ 1300 , <prim-expr> ] = GOTO 1289
M [ 1300 , <unary-expr> ] = GOTO 1492
M [ 1300 , <unary-op> ] = GOTO 1291
M [ 1300 , CHAR_CONST ] = SHIFT 1292
M [ 1300 , DELIM_LPAR ] = SHIFT 1493
M [ 1300 , FLOAT_CONST ] = SHIFT 1294
M [ 1300 , IDENTIFIER ] = SHIFT 1295
M [ 1300 , INT_CONST ] = SHIFT 1296
M [ 1300 , OP_ADD ] = SHIFT 135
M [ 1300 , OP_AND ] = SHIFT 136
M [ 1300 , OP_DEC ] = SHIFT 1297
M [ 1300 , OP_INC ] = SHIFT 1298
M [ 1300 , OP_LNOT ] = SHIFT 139
M [ 1300 , OP_MUL ] = SHIFT 140
M [ 1300 , OP_NOT ] = SHIFT 141
M [ 1300 , OP_SUB ] = SHIFT 142
M [ 1300 , STR_LITERAL ] = SHIFT 1299
M [ 1300 , sizeof ] = SHIFT 1300
M [ 1301 , DELIM_COMMA ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1301 , DELIM_QUESTION ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1301 , DELIM_RSQBRACKET ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1301 , OP_ADD ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1301 , OP_AND ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1301 , OP_DIV ] = SHIFT 987
M [ 1301 , OP_EQ ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1301 , OP_GE ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1301 , OP_GT ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1301 , OP_LAND ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1301 , OP_LE ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1301 , OP_LOR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1301 , OP_LT ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1301 , OP_MOD ] = SHIFT 988
M [ 1301 , OP_MUL ] = SHIFT 989
M [ 1301 , OP_NEQ ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1301 , OP_OR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1301 , OP_SHL ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1301 , OP_SHR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1301 , OP_SUB ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1301 , OP_XOR ] = REDUCE <additive-expr> -> <additive-expr> OP_SUB <multiplicative-expr> 
M [ 1302 , DELIM_COMMA ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1302 , DELIM_QUESTION ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1302 , DELIM_RSQBRACKET ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1302 , OP_AND ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1302 , OP_EQ ] = SHIFT 978
M [ 1302 , OP_LAND ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1302 , OP_LOR ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1302 , OP_NEQ ] = SHIFT 979
M [ 1302 , OP_OR ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1302 , OP_XOR ] = REDUCE <and-expr> -> <and-expr> OP_AND <eq-expr> 
M [ 1303 , DELIM_COMMA ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1303 , DELIM_QUESTION ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1303 , DELIM_RSQBRACKET ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1303 , OP_AND ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1303 , OP_EQ ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1303 , OP_GE ] = SHIFT 996
M [ 1303 , OP_GT ] = SHIFT 997
M [ 1303 , OP_LAND ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1303 , OP_LE ] = SHIFT 998
M [ 1303 , OP_LOR ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1303 , OP_LT ] = SHIFT 999
M [ 1303 , OP_NEQ ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1303 , OP_OR ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1303 , OP_XOR ] = REDUCE <eq-expr> -> <eq-expr> OP_EQ <rel-expr> 
M [ 1304 , DELIM_COMMA ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1304 , DELIM_QUESTION ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1304 , DELIM_RSQBRACKET ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1304 , OP_AND ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1304 , OP_EQ ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1304 , OP_GE ] = SHIFT 996
M [ 1304 , OP_GT ] = SHIFT 997
M [ 1304 , OP_LAND ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1304 , OP_LE ] = SHIFT 998
M [ 1304 , OP_LOR ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1304 , OP_LT ] = SHIFT 999
M [ 1304 , OP_NEQ ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1304 , OP_OR ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1304 , OP_XOR ] = REDUCE <eq-expr> -> <eq-expr> OP_NEQ <rel-expr> 
M [ 1305 , DELIM_COMMA ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1305 , DELIM_QUESTION ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1305 , DELIM_RSQBRACKET ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1305 , OP_AND ] = SHIFT 977
M [ 1305 , OP_LAND ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1305 , OP_LOR ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1305 , OP_OR ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1305 , OP_XOR ] = REDUCE <exc-or-expr> -> <exc-or-expr> OP_XOR <and-expr> 
M [ 1306 , DELIM_COMMA ] = REDUCE <expr> -> <expr> DELIM_COMMA <asn-expr> 
M [ 1306 , DELIM_RSQBRACKET ] = REDUCE <expr> -> <expr> DELIM_COMMA <asn-expr> 
M [ 1307 , DELIM_COMMA ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1307 , DELIM_QUESTION ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1307 , DELIM_RSQBRACKET ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1307 , OP_LAND ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1307 , OP_LOR ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1307 , OP_OR ] = REDUCE <inc-or-expr> -> <inc-or-expr> OP_OR <exc-or-expr> 
M [ 1307 , OP_XOR ] = SHIFT 980
M [ 1308 , DELIM_COMMA ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 1308 , DELIM_QUESTION ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 1308 , DELIM_RSQBRACKET ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 1308 , OP_LAND ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 1308 , OP_LOR ] = REDUCE <land-expr> -> <land-expr> OP_LAND <inc-or-expr> 
M [ 1308 , OP_OR ] = SHIFT 983
M [ 1309 , DELIM_COLON ] = SHIFT 1494
M [ 1309 , DELIM_COMMA ] = SHIFT 942
M [ 1310 , DELIM_COMMA ] = REDUCE <lor-expr> -> <lor-expr> OP_LOR <land-expr> 
M [ 1310 , DELIM_QUESTION ] = REDUCE <lor-expr> -> <lor-expr> OP_LOR <land-expr> 
M [ 1310 , DELIM_RSQBRACKET ] = REDUCE <lor-expr> -> <lor-expr> OP_LOR <land-expr> 
M [ 1310 , OP_LAND ] = SHIFT 984
M [ 1310 , OP_LOR ] = REDUCE <lor-expr> -> <lor-expr> OP_LOR <land-expr> 
M [ 1311 , DELIM_COMMA ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1311 , DELIM_QUESTION ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1311 , DELIM_RSQBRACKET ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1311 , OP_ADD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1311 , OP_AND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1311 , OP_DIV ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1311 , OP_EQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1311 , OP_GE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1311 , OP_GT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1311 , OP_LAND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1311 , OP_LE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1311 , OP_LOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1311 , OP_LT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1311 , OP_MOD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1311 , OP_MUL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1311 , OP_NEQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1311 , OP_OR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1311 , OP_SHL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1311 , OP_SHR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1311 , OP_SUB ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1311 , OP_XOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_DIV <cast-expr> 
M [ 1312 , DELIM_COMMA ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1312 , DELIM_QUESTION ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1312 , DELIM_RSQBRACKET ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1312 , OP_ADD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1312 , OP_AND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1312 , OP_DIV ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1312 , OP_EQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1312 , OP_GE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1312 , OP_GT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1312 , OP_LAND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1312 , OP_LE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1312 , OP_LOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1312 , OP_LT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1312 , OP_MOD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1312 , OP_MUL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1312 , OP_NEQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1312 , OP_OR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1312 , OP_SHL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1312 , OP_SHR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1312 , OP_SUB ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1312 , OP_XOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MOD <cast-expr> 
M [ 1313 , DELIM_COMMA ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1313 , DELIM_QUESTION ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1313 , DELIM_RSQBRACKET ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1313 , OP_ADD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1313 , OP_AND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1313 , OP_DIV ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1313 , OP_EQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1313 , OP_GE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1313 , OP_GT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1313 , OP_LAND ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1313 , OP_LE ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1313 , OP_LOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1313 , OP_LT ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1313 , OP_MOD ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1313 , OP_MUL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1313 , OP_NEQ ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1313 , OP_OR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1313 , OP_SHL ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1313 , OP_SHR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1313 , OP_SUB ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1313 , OP_XOR ] = REDUCE <multiplicative-expr> -> <multiplicative-expr> OP_MUL <cast-expr> 
M [ 1314 , DELIM_COMMA ] = SHIFT 973
M [ 1314 , DELIM_RPAR ] = SHIFT 1495
M [ 1315 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1315 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1316 , DELIM_COMMA ] = SHIFT 981
M [ 1316 , DELIM_RSQBRACKET ] = SHIFT 1496
M [ 1317 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1317 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1318 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1318 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1319 , DELIM_COMMA ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1319 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1319 , DELIM_RSQBRACKET ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1319 , OP_AND ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1319 , OP_EQ ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1319 , OP_GE ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1319 , OP_GT ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1319 , OP_LAND ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1319 , OP_LE ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1319 , OP_LOR ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1319 , OP_LT ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1319 , OP_NEQ ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1319 , OP_OR ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1319 , OP_SHL ] = SHIFT 1000
M [ 1319 , OP_SHR ] = SHIFT 1001
M [ 1319 , OP_XOR ] = REDUCE <rel-expr> -> <rel-expr> OP_GE <shift-expr> 
M [ 1320 , DELIM_COMMA ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1320 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1320 , DELIM_RSQBRACKET ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1320 , OP_AND ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1320 , OP_EQ ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1320 , OP_GE ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1320 , OP_GT ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1320 , OP_LAND ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1320 , OP_LE ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1320 , OP_LOR ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1320 , OP_LT ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1320 , OP_NEQ ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1320 , OP_OR ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1320 , OP_SHL ] = SHIFT 1000
M [ 1320 , OP_SHR ] = SHIFT 1001
M [ 1320 , OP_XOR ] = REDUCE <rel-expr> -> <rel-expr> OP_GT <shift-expr> 
M [ 1321 , DELIM_COMMA ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1321 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1321 , DELIM_RSQBRACKET ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1321 , OP_AND ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1321 , OP_EQ ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1321 , OP_GE ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1321 , OP_GT ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1321 , OP_LAND ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1321 , OP_LE ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1321 , OP_LOR ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1321 , OP_LT ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1321 , OP_NEQ ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1321 , OP_OR ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1321 , OP_SHL ] = SHIFT 1000
M [ 1321 , OP_SHR ] = SHIFT 1001
M [ 1321 , OP_XOR ] = REDUCE <rel-expr> -> <rel-expr> OP_LE <shift-expr> 
M [ 1322 , DELIM_COMMA ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1322 , DELIM_QUESTION ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1322 , DELIM_RSQBRACKET ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1322 , OP_AND ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1322 , OP_EQ ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1322 , OP_GE ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1322 , OP_GT ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1322 , OP_LAND ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1322 , OP_LE ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1322 , OP_LOR ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1322 , OP_LT ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1322 , OP_NEQ ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1322 , OP_OR ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1322 , OP_SHL ] = SHIFT 1000
M [ 1322 , OP_SHR ] = SHIFT 1001
M [ 1322 , OP_XOR ] = REDUCE <rel-expr> -> <rel-expr> OP_LT <shift-expr> 
M [ 1323 , DELIM_COMMA ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1323 , DELIM_QUESTION ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1323 , DELIM_RSQBRACKET ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1323 , OP_ADD ] = SHIFT 975
M [ 1323 , OP_AND ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1323 , OP_EQ ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1323 , OP_GE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1323 , OP_GT ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1323 , OP_LAND ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1323 , OP_LE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1323 , OP_LOR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1323 , OP_LT ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1323 , OP_NEQ ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1323 , OP_OR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1323 , OP_SHL ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1323 , OP_SHR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1323 , OP_SUB ] = SHIFT 976
M [ 1323 , OP_XOR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHL <additive-expr> 
M [ 1324 , DELIM_COMMA ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1324 , DELIM_QUESTION ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1324 , DELIM_RSQBRACKET ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1324 , OP_ADD ] = SHIFT 975
M [ 1324 , OP_AND ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1324 , OP_EQ ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1324 , OP_GE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1324 , OP_GT ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1324 , OP_LAND ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1324 , OP_LE ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1324 , OP_LOR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1324 , OP_LT ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1324 , OP_NEQ ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1324 , OP_OR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1324 , OP_SHL ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1324 , OP_SHR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1324 , OP_SUB ] = SHIFT 976
M [ 1324 , OP_XOR ] = REDUCE <shift-expr> -> <shift-expr> OP_SHR <additive-expr> 
M [ 1325 , DELIM_COMMA ] = REDUCE <asn-expr> -> <unary-expr> <asn-op> <asn-expr> 
M [ 1325 , DELIM_RSQBRACKET ] = REDUCE <asn-expr> -> <unary-expr> <asn-op> <asn-expr> 
M [ 1326 , DELIM_RPAR ] = SHIFT 1497
M [ 1327 , DELIM_COMMA ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , DELIM_LPAR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , DELIM_QUESTION ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , DELIM_RSQBRACKET ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_ADD ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_ADDASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_AND ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_ANDASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_ARROW ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_ASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_DEC ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_DIV ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_DIVASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_DOT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_EQ ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_GE ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_GT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_INC ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_LAND ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_LE ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_LOR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_LT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_MOD ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_MODASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_MUL ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_MULASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_NEQ ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_OR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_ORASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_SHL ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_SHLASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_SHR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_SHRASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_SUB ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_SUBASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_XOR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1327 , OP_XORASN ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1328 , <cast-expr> ] = GOTO 1498
M [ 1328 , <constant> ] = GOTO 1285
M [ 1328 , <num-const> ] = GOTO 1287
M [ 1328 , <postfix-expr> ] = GOTO 1288
M [ 1328 , <prim-expr> ] = GOTO 1289
M [ 1328 , <unary-expr> ] = GOTO 1290
M [ 1328 , <unary-op> ] = GOTO 1291
M [ 1328 , CHAR_CONST ] = SHIFT 1292
M [ 1328 , DELIM_LCURBRACE ] = SHIFT 1499
M [ 1328 , DELIM_LPAR ] = SHIFT 1293
M [ 1328 , FLOAT_CONST ] = SHIFT 1294
M [ 1328 , IDENTIFIER ] = SHIFT 1295
M [ 1328 , INT_CONST ] = SHIFT 1296
M [ 1328 , OP_ADD ] = SHIFT 135
M [ 1328 , OP_AND ] = SHIFT 136
M [ 1328 , OP_DEC ] = SHIFT 1297
M [ 1328 , OP_INC ] = SHIFT 1298
M [ 1328 , OP_LNOT ] = SHIFT 139
M [ 1328 , OP_MUL ] = SHIFT 140
M [ 1328 , OP_NOT ] = SHIFT 141
M [ 1328 , OP_SUB ] = SHIFT 142
M [ 1328 , STR_LITERAL ] = SHIFT 1299
M [ 1328 , sizeof ] = SHIFT 1300
M [ 1329 , DELIM_RPAR ] = SHIFT 1500
M [ 1330 , DELIM_RPAR ] = SHIFT 1501
M [ 1331 , DELIM_COMMA ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , DELIM_QUESTION ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , DELIM_SEMICOLON ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_ADD ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_ADDASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_AND ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_ANDASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_ASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_DIV ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_DIVASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_EQ ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_GE ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_GT ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_LAND ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_LE ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_LOR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_LT ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_MOD ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_MODASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_MUL ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_MULASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_NEQ ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_OR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_ORASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_SHL ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_SHLASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_SHR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_SHRASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_SUB ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_SUBASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_XOR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1331 , OP_XORASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1332 , <additive-expr> ] = GOTO 299
M [ 1332 , <and-expr> ] = GOTO 300
M [ 1332 , <arg-expr-list> ] = GOTO 1502
M [ 1332 , <asn-expr> ] = GOTO 613
M [ 1332 , <cast-expr> ] = GOTO 302
M [ 1332 , <cond-expr> ] = GOTO 303
M [ 1332 , <constant> ] = GOTO 304
M [ 1332 , <eq-expr> ] = GOTO 306
M [ 1332 , <exc-or-expr> ] = GOTO 307
M [ 1332 , <inc-or-expr> ] = GOTO 309
M [ 1332 , <land-expr> ] = GOTO 310
M [ 1332 , <lor-expr> ] = GOTO 311
M [ 1332 , <multiplicative-expr> ] = GOTO 312
M [ 1332 , <num-const> ] = GOTO 313
M [ 1332 , <postfix-expr> ] = GOTO 314
M [ 1332 , <prim-expr> ] = GOTO 315
M [ 1332 , <rel-expr> ] = GOTO 316
M [ 1332 , <shift-expr> ] = GOTO 317
M [ 1332 , <unary-expr> ] = GOTO 324
M [ 1332 , <unary-op> ] = GOTO 325
M [ 1332 , CHAR_CONST ] = SHIFT 326
M [ 1332 , DELIM_LPAR ] = SHIFT 327
M [ 1332 , DELIM_RPAR ] = SHIFT 1503
M [ 1332 , FLOAT_CONST ] = SHIFT 328
M [ 1332 , IDENTIFIER ] = SHIFT 329
M [ 1332 , INT_CONST ] = SHIFT 330
M [ 1332 , OP_ADD ] = SHIFT 135
M [ 1332 , OP_AND ] = SHIFT 136
M [ 1332 , OP_DEC ] = SHIFT 331
M [ 1332 , OP_INC ] = SHIFT 332
M [ 1332 , OP_LNOT ] = SHIFT 139
M [ 1332 , OP_MUL ] = SHIFT 140
M [ 1332 , OP_NOT ] = SHIFT 141
M [ 1332 , OP_SUB ] = SHIFT 142
M [ 1332 , STR_LITERAL ] = SHIFT 333
M [ 1332 , sizeof ] = SHIFT 343
M [ 1333 , <additive-expr> ] = GOTO 615
M [ 1333 , <and-expr> ] = GOTO 616
M [ 1333 , <asn-expr> ] = GOTO 617
M [ 1333 , <cast-expr> ] = GOTO 618
M [ 1333 , <cond-expr> ] = GOTO 619
M [ 1333 , <constant> ] = GOTO 620
M [ 1333 , <eq-expr> ] = GOTO 621
M [ 1333 , <exc-or-expr> ] = GOTO 622
M [ 1333 , <expr> ] = GOTO 1504
M [ 1333 , <inc-or-expr> ] = GOTO 624
M [ 1333 , <land-expr> ] = GOTO 625
M [ 1333 , <lor-expr> ] = GOTO 626
M [ 1333 , <multiplicative-expr> ] = GOTO 627
M [ 1333 , <num-const> ] = GOTO 628
M [ 1333 , <postfix-expr> ] = GOTO 629
M [ 1333 , <prim-expr> ] = GOTO 630
M [ 1333 , <rel-expr> ] = GOTO 631
M [ 1333 , <shift-expr> ] = GOTO 632
M [ 1333 , <unary-expr> ] = GOTO 633
M [ 1333 , <unary-op> ] = GOTO 634
M [ 1333 , CHAR_CONST ] = SHIFT 635
M [ 1333 , DELIM_LPAR ] = SHIFT 636
M [ 1333 , FLOAT_CONST ] = SHIFT 637
M [ 1333 , IDENTIFIER ] = SHIFT 638
M [ 1333 , INT_CONST ] = SHIFT 639
M [ 1333 , OP_ADD ] = SHIFT 135
M [ 1333 , OP_AND ] = SHIFT 136
M [ 1333 , OP_DEC ] = SHIFT 640
M [ 1333 , OP_INC ] = SHIFT 641
M [ 1333 , OP_LNOT ] = SHIFT 139
M [ 1333 , OP_MUL ] = SHIFT 140
M [ 1333 , OP_NOT ] = SHIFT 141
M [ 1333 , OP_SUB ] = SHIFT 142
M [ 1333 , STR_LITERAL ] = SHIFT 642
M [ 1333 , sizeof ] = SHIFT 643
M [ 1334 , IDENTIFIER ] = SHIFT 1505
M [ 1335 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1335 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1335 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1335 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1335 , DELIM_RPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1335 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1335 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1335 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1335 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1335 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1335 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1335 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1335 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1335 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1335 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1335 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1335 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1335 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1335 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1335 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1335 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1335 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1335 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1335 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1335 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1335 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1335 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1336 , IDENTIFIER ] = SHIFT 1506
M [ 1337 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1337 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1337 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1337 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1337 , DELIM_RPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1337 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1337 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1337 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1337 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1337 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1337 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1337 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1337 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1337 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1337 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1337 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1337 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1337 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1337 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1337 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1337 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1337 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1337 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1337 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1337 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1337 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1337 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1338 , DELIM_COMMA ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1338 , DELIM_QUESTION ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1338 , DELIM_RPAR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1338 , OP_ADD ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1338 , OP_AND ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1338 , OP_DIV ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1338 , OP_EQ ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1338 , OP_GE ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1338 , OP_GT ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1338 , OP_LAND ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1338 , OP_LE ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1338 , OP_LOR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1338 , OP_LT ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1338 , OP_MOD ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1338 , OP_MUL ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1338 , OP_NEQ ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1338 , OP_OR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1338 , OP_SHL ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1338 , OP_SHR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1338 , OP_SUB ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1338 , OP_XOR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1339 , DELIM_COMMA ] = SHIFT 661
M [ 1339 , DELIM_RPAR ] = SHIFT 1507
M [ 1340 , DELIM_RPAR ] = SHIFT 1508
M [ 1341 , DELIM_COMMA ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1341 , DELIM_QUESTION ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1341 , DELIM_RPAR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1341 , OP_ADD ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1341 , OP_AND ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1341 , OP_DIV ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1341 , OP_EQ ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1341 , OP_GE ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1341 , OP_GT ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1341 , OP_LAND ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1341 , OP_LE ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1341 , OP_LOR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1341 , OP_LT ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1341 , OP_MOD ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1341 , OP_MUL ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1341 , OP_NEQ ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1341 , OP_OR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1341 , OP_SHL ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1341 , OP_SHR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1341 , OP_SUB ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1341 , OP_XOR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1342 , <additive-expr> ] = GOTO 299
M [ 1342 , <and-expr> ] = GOTO 300
M [ 1342 , <asn-expr> ] = GOTO 301
M [ 1342 , <cast-expr> ] = GOTO 302
M [ 1342 , <cond-expr> ] = GOTO 303
M [ 1342 , <constant> ] = GOTO 304
M [ 1342 , <enum-spec> ] = GOTO 305
M [ 1342 , <eq-expr> ] = GOTO 306
M [ 1342 , <exc-or-expr> ] = GOTO 307
M [ 1342 , <expr> ] = GOTO 1339
M [ 1342 , <inc-or-expr> ] = GOTO 309
M [ 1342 , <land-expr> ] = GOTO 310
M [ 1342 , <lor-expr> ] = GOTO 311
M [ 1342 , <multiplicative-expr> ] = GOTO 312
M [ 1342 , <num-const> ] = GOTO 313
M [ 1342 , <postfix-expr> ] = GOTO 314
M [ 1342 , <prim-expr> ] = GOTO 315
M [ 1342 , <rel-expr> ] = GOTO 316
M [ 1342 , <shift-expr> ] = GOTO 317
M [ 1342 , <spec-qual-list> ] = GOTO 318
M [ 1342 , <struct-union-spec> ] = GOTO 319
M [ 1342 , <struct-union> ] = GOTO 320
M [ 1342 , <type-name> ] = GOTO 1509
M [ 1342 , <type-qual> ] = GOTO 322
M [ 1342 , <type-spec> ] = GOTO 323
M [ 1342 , <unary-expr> ] = GOTO 324
M [ 1342 , <unary-op> ] = GOTO 325
M [ 1342 , CHAR_CONST ] = SHIFT 326
M [ 1342 , DELIM_LPAR ] = SHIFT 327
M [ 1342 , FLOAT_CONST ] = SHIFT 328
M [ 1342 , IDENTIFIER ] = SHIFT 329
M [ 1342 , INT_CONST ] = SHIFT 330
M [ 1342 , OP_ADD ] = SHIFT 135
M [ 1342 , OP_AND ] = SHIFT 136
M [ 1342 , OP_DEC ] = SHIFT 331
M [ 1342 , OP_INC ] = SHIFT 332
M [ 1342 , OP_LNOT ] = SHIFT 139
M [ 1342 , OP_MUL ] = SHIFT 140
M [ 1342 , OP_NOT ] = SHIFT 141
M [ 1342 , OP_SUB ] = SHIFT 142
M [ 1342 , STR_LITERAL ] = SHIFT 333
M [ 1342 , char ] = SHIFT 334
M [ 1342 , const ] = SHIFT 335
M [ 1342 , double ] = SHIFT 336
M [ 1342 , enum ] = SHIFT 337
M [ 1342 , float ] = SHIFT 338
M [ 1342 , int ] = SHIFT 339
M [ 1342 , long ] = SHIFT 340
M [ 1342 , short ] = SHIFT 341
M [ 1342 , signed ] = SHIFT 342
M [ 1342 , sizeof ] = SHIFT 343
M [ 1342 , struct ] = SHIFT 21
M [ 1342 , unsigned ] = SHIFT 344
M [ 1342 , void ] = SHIFT 345
M [ 1343 , DELIM_COMMA ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1343 , DELIM_QUESTION ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1343 , DELIM_RPAR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1343 , OP_ADD ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1343 , OP_AND ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1343 , OP_DIV ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1343 , OP_EQ ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1343 , OP_GE ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1343 , OP_GT ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1343 , OP_LAND ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1343 , OP_LE ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1343 , OP_LOR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1343 , OP_LT ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1343 , OP_MOD ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1343 , OP_MUL ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1343 , OP_NEQ ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1343 , OP_OR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1343 , OP_SHL ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1343 , OP_SHR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1343 , OP_SUB ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1343 , OP_XOR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1344 , DELIM_COMMA ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1344 , DELIM_QUESTION ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1344 , DELIM_RPAR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1344 , OP_ADD ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1344 , OP_AND ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1344 , OP_DIV ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1344 , OP_EQ ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1344 , OP_GE ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1344 , OP_GT ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1344 , OP_LAND ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1344 , OP_LE ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1344 , OP_LOR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1344 , OP_LT ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1344 , OP_MOD ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1344 , OP_MUL ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1344 , OP_NEQ ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1344 , OP_OR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1344 , OP_SHL ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1344 , OP_SHR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1344 , OP_SUB ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1344 , OP_XOR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1345 , <additive-expr> ] = GOTO 299
M [ 1345 , <and-expr> ] = GOTO 300
M [ 1345 , <asn-expr> ] = GOTO 301
M [ 1345 , <cast-expr> ] = GOTO 302
M [ 1345 , <cond-expr> ] = GOTO 303
M [ 1345 , <constant> ] = GOTO 304
M [ 1345 , <enum-spec> ] = GOTO 305
M [ 1345 , <eq-expr> ] = GOTO 306
M [ 1345 , <exc-or-expr> ] = GOTO 307
M [ 1345 , <expr> ] = GOTO 1339
M [ 1345 , <inc-or-expr> ] = GOTO 309
M [ 1345 , <land-expr> ] = GOTO 310
M [ 1345 , <lor-expr> ] = GOTO 311
M [ 1345 , <multiplicative-expr> ] = GOTO 312
M [ 1345 , <num-const> ] = GOTO 313
M [ 1345 , <postfix-expr> ] = GOTO 314
M [ 1345 , <prim-expr> ] = GOTO 315
M [ 1345 , <rel-expr> ] = GOTO 316
M [ 1345 , <shift-expr> ] = GOTO 317
M [ 1345 , <spec-qual-list> ] = GOTO 318
M [ 1345 , <struct-union-spec> ] = GOTO 319
M [ 1345 , <struct-union> ] = GOTO 320
M [ 1345 , <type-name> ] = GOTO 1510
M [ 1345 , <type-qual> ] = GOTO 322
M [ 1345 , <type-spec> ] = GOTO 323
M [ 1345 , <unary-expr> ] = GOTO 324
M [ 1345 , <unary-op> ] = GOTO 325
M [ 1345 , CHAR_CONST ] = SHIFT 326
M [ 1345 , DELIM_LPAR ] = SHIFT 327
M [ 1345 , FLOAT_CONST ] = SHIFT 328
M [ 1345 , IDENTIFIER ] = SHIFT 329
M [ 1345 , INT_CONST ] = SHIFT 330
M [ 1345 , OP_ADD ] = SHIFT 135
M [ 1345 , OP_AND ] = SHIFT 136
M [ 1345 , OP_DEC ] = SHIFT 331
M [ 1345 , OP_INC ] = SHIFT 332
M [ 1345 , OP_LNOT ] = SHIFT 139
M [ 1345 , OP_MUL ] = SHIFT 140
M [ 1345 , OP_NOT ] = SHIFT 141
M [ 1345 , OP_SUB ] = SHIFT 142
M [ 1345 , STR_LITERAL ] = SHIFT 333
M [ 1345 , char ] = SHIFT 334
M [ 1345 , const ] = SHIFT 335
M [ 1345 , double ] = SHIFT 336
M [ 1345 , enum ] = SHIFT 337
M [ 1345 , float ] = SHIFT 338
M [ 1345 , int ] = SHIFT 339
M [ 1345 , long ] = SHIFT 340
M [ 1345 , short ] = SHIFT 341
M [ 1345 , signed ] = SHIFT 342
M [ 1345 , sizeof ] = SHIFT 343
M [ 1345 , struct ] = SHIFT 21
M [ 1345 , unsigned ] = SHIFT 344
M [ 1345 , void ] = SHIFT 345
M [ 1346 , <additive-expr> ] = GOTO 299
M [ 1346 , <and-expr> ] = GOTO 300
M [ 1346 , <cast-expr> ] = GOTO 302
M [ 1346 , <cond-expr> ] = GOTO 1511
M [ 1346 , <constant> ] = GOTO 1014
M [ 1346 , <eq-expr> ] = GOTO 306
M [ 1346 , <exc-or-expr> ] = GOTO 307
M [ 1346 , <inc-or-expr> ] = GOTO 309
M [ 1346 , <land-expr> ] = GOTO 310
M [ 1346 , <lor-expr> ] = GOTO 311
M [ 1346 , <multiplicative-expr> ] = GOTO 312
M [ 1346 , <num-const> ] = GOTO 1016
M [ 1346 , <postfix-expr> ] = GOTO 1017
M [ 1346 , <prim-expr> ] = GOTO 1018
M [ 1346 , <rel-expr> ] = GOTO 316
M [ 1346 , <shift-expr> ] = GOTO 317
M [ 1346 , <unary-expr> ] = GOTO 1019
M [ 1346 , <unary-op> ] = GOTO 1020
M [ 1346 , CHAR_CONST ] = SHIFT 1021
M [ 1346 , DELIM_LPAR ] = SHIFT 1022
M [ 1346 , FLOAT_CONST ] = SHIFT 1023
M [ 1346 , IDENTIFIER ] = SHIFT 1024
M [ 1346 , INT_CONST ] = SHIFT 1025
M [ 1346 , OP_ADD ] = SHIFT 135
M [ 1346 , OP_AND ] = SHIFT 136
M [ 1346 , OP_DEC ] = SHIFT 1026
M [ 1346 , OP_INC ] = SHIFT 1027
M [ 1346 , OP_LNOT ] = SHIFT 139
M [ 1346 , OP_MUL ] = SHIFT 140
M [ 1346 , OP_NOT ] = SHIFT 141
M [ 1346 , OP_SUB ] = SHIFT 142
M [ 1346 , STR_LITERAL ] = SHIFT 1028
M [ 1346 , sizeof ] = SHIFT 1029
M [ 1347 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , DELIM_RPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1347 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1348 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , DELIM_RPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1348 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1349 , DELIM_RPAR ] = REDUCE <direct-abstract-declarator> -> DELIM_LPAR <abstract-declarator> DELIM_RPAR 
M [ 1350 , DELIM_RPAR ] = REDUCE <direct-abstract-declarator> -> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 1351 , DELIM_RSQBRACKET ] = SHIFT 1512
M [ 1352 , DELIM_RPAR ] = REDUCE <direct-abstract-declarator> -> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 1353 , DELIM_LPAR ] = REDUCE <pointer> -> OP_MUL <type-qual-list> <pointer> 
M [ 1353 , DELIM_LSQBRACKET ] = REDUCE <pointer> -> OP_MUL <type-qual-list> <pointer> 
M [ 1353 , DELIM_RPAR ] = REDUCE <pointer> -> OP_MUL <type-qual-list> <pointer> 
M [ 1354 , DELIM_LPAR ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 1354 , DELIM_LSQBRACKET ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 1354 , DELIM_RPAR ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 1354 , OP_MUL ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 1354 , const ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 1355 , DELIM_LPAR ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1355 , DELIM_LSQBRACKET ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1355 , DELIM_RPAR ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1355 , OP_MUL ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1355 , char ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1355 , const ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1355 , double ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1355 , enum ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1355 , float ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1355 , int ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1355 , long ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1355 , short ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1355 , signed ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1355 , struct ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1355 , unsigned ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1355 , void ] = REDUCE <struct-union-spec> -> <struct-union> DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1356 , <enum-spec> ] = GOTO 62
M [ 1356 , <spec-qual-list> ] = GOTO 63
M [ 1356 , <struct-decl> ] = GOTO 233
M [ 1356 , <struct-union-spec> ] = GOTO 66
M [ 1356 , <struct-union> ] = GOTO 67
M [ 1356 , <type-qual> ] = GOTO 68
M [ 1356 , <type-spec> ] = GOTO 69
M [ 1356 , DELIM_RCURBRACE ] = SHIFT 1513
M [ 1356 , char ] = SHIFT 70
M [ 1356 , const ] = SHIFT 71
M [ 1356 , double ] = SHIFT 72
M [ 1356 , enum ] = SHIFT 73
M [ 1356 , float ] = SHIFT 74
M [ 1356 , int ] = SHIFT 75
M [ 1356 , long ] = SHIFT 76
M [ 1356 , short ] = SHIFT 77
M [ 1356 , signed ] = SHIFT 78
M [ 1356 , struct ] = SHIFT 21
M [ 1356 , unsigned ] = SHIFT 79
M [ 1356 , void ] = SHIFT 80
M [ 1357 , DELIM_COMMA ] = SHIFT 1514
M [ 1357 , DELIM_RCURBRACE ] = SHIFT 1515
M [ 1358 , <cast-expr> ] = GOTO 1516
M [ 1358 , <constant> ] = GOTO 304
M [ 1358 , <num-const> ] = GOTO 313
M [ 1358 , <postfix-expr> ] = GOTO 314
M [ 1358 , <prim-expr> ] = GOTO 315
M [ 1358 , <unary-expr> ] = GOTO 695
M [ 1358 , <unary-op> ] = GOTO 325
M [ 1358 , CHAR_CONST ] = SHIFT 326
M [ 1358 , DELIM_LCURBRACE ] = SHIFT 1360
M [ 1358 , DELIM_LPAR ] = SHIFT 696
M [ 1358 , FLOAT_CONST ] = SHIFT 328
M [ 1358 , IDENTIFIER ] = SHIFT 329
M [ 1358 , INT_CONST ] = SHIFT 330
M [ 1358 , OP_ADD ] = SHIFT 135
M [ 1358 , OP_AND ] = SHIFT 136
M [ 1358 , OP_DEC ] = SHIFT 331
M [ 1358 , OP_INC ] = SHIFT 332
M [ 1358 , OP_LNOT ] = SHIFT 139
M [ 1358 , OP_MUL ] = SHIFT 140
M [ 1358 , OP_NOT ] = SHIFT 141
M [ 1358 , OP_SUB ] = SHIFT 142
M [ 1358 , STR_LITERAL ] = SHIFT 333
M [ 1358 , sizeof ] = SHIFT 343
M [ 1359 , DELIM_COMMA ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1359 , DELIM_QUESTION ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1359 , DELIM_RPAR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1359 , OP_ADD ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1359 , OP_AND ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1359 , OP_DIV ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1359 , OP_EQ ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1359 , OP_GE ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1359 , OP_GT ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1359 , OP_LAND ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1359 , OP_LE ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1359 , OP_LOR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1359 , OP_LT ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1359 , OP_MOD ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1359 , OP_MUL ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1359 , OP_NEQ ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1359 , OP_OR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1359 , OP_SHL ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1359 , OP_SHR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1359 , OP_SUB ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1359 , OP_XOR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1360 , <additive-expr> ] = GOTO 412
M [ 1360 , <and-expr> ] = GOTO 413
M [ 1360 , <asn-expr> ] = GOTO 414
M [ 1360 , <cast-expr> ] = GOTO 415
M [ 1360 , <cond-expr> ] = GOTO 416
M [ 1360 , <constant> ] = GOTO 417
M [ 1360 , <designation> ] = GOTO 418
M [ 1360 , <designator-list> ] = GOTO 419
M [ 1360 , <designator> ] = GOTO 420
M [ 1360 , <eq-expr> ] = GOTO 421
M [ 1360 , <exc-or-expr> ] = GOTO 422
M [ 1360 , <inc-or-expr> ] = GOTO 423
M [ 1360 , <initializer-list> ] = GOTO 1517
M [ 1360 , <initializer> ] = GOTO 425
M [ 1360 , <land-expr> ] = GOTO 426
M [ 1360 , <lor-expr> ] = GOTO 427
M [ 1360 , <multiplicative-expr> ] = GOTO 428
M [ 1360 , <num-const> ] = GOTO 429
M [ 1360 , <postfix-expr> ] = GOTO 430
M [ 1360 , <prim-expr> ] = GOTO 431
M [ 1360 , <rel-expr> ] = GOTO 432
M [ 1360 , <shift-expr> ] = GOTO 433
M [ 1360 , <unary-expr> ] = GOTO 434
M [ 1360 , <unary-op> ] = GOTO 435
M [ 1360 , CHAR_CONST ] = SHIFT 436
M [ 1360 , DELIM_LCURBRACE ] = SHIFT 437
M [ 1360 , DELIM_LPAR ] = SHIFT 438
M [ 1360 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 1360 , FLOAT_CONST ] = SHIFT 440
M [ 1360 , IDENTIFIER ] = SHIFT 441
M [ 1360 , INT_CONST ] = SHIFT 442
M [ 1360 , OP_ADD ] = SHIFT 135
M [ 1360 , OP_AND ] = SHIFT 136
M [ 1360 , OP_DEC ] = SHIFT 443
M [ 1360 , OP_DOT ] = SHIFT 444
M [ 1360 , OP_INC ] = SHIFT 445
M [ 1360 , OP_LNOT ] = SHIFT 139
M [ 1360 , OP_MUL ] = SHIFT 140
M [ 1360 , OP_NOT ] = SHIFT 141
M [ 1360 , OP_SUB ] = SHIFT 142
M [ 1360 , STR_LITERAL ] = SHIFT 446
M [ 1360 , sizeof ] = SHIFT 447
M [ 1361 , DELIM_LCURBRACE ] = SHIFT 1360
M [ 1362 , <enumeration-const> ] = GOTO 82
M [ 1362 , <enumerator> ] = GOTO 543
M [ 1362 , DELIM_RCURBRACE ] = SHIFT 1518
M [ 1362 , IDENTIFIER ] = SHIFT 85
M [ 1363 , DELIM_LPAR ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1363 , DELIM_LSQBRACKET ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1363 , DELIM_RPAR ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1363 , OP_MUL ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1363 , char ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1363 , const ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1363 , double ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1363 , enum ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1363 , float ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1363 , int ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1363 , long ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1363 , short ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1363 , signed ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1363 , struct ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1363 , unsigned ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1363 , void ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1364 , DELIM_COMMA ] = SHIFT 1519
M [ 1364 , DELIM_RCURBRACE ] = SHIFT 1520
M [ 1365 , DELIM_COMMA ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , DELIM_LCURBRACE ] = SHIFT 1360
M [ 1365 , DELIM_QUESTION ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , DELIM_RPAR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_ADD ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_ADDASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_AND ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_ANDASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_ASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_DIV ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_DIVASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_EQ ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_GE ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_GT ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_LAND ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_LE ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_LOR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_LT ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_MOD ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_MODASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_MUL ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_MULASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_NEQ ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_OR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_ORASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_SHL ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_SHLASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_SHR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_SHRASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_SUB ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_SUBASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_XOR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1365 , OP_XORASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1366 , <additive-expr> ] = GOTO 351
M [ 1366 , <and-expr> ] = GOTO 352
M [ 1366 , <cast-expr> ] = GOTO 353
M [ 1366 , <cond-expr> ] = GOTO 1521
M [ 1366 , <constant> ] = GOTO 356
M [ 1366 , <eq-expr> ] = GOTO 357
M [ 1366 , <exc-or-expr> ] = GOTO 358
M [ 1366 , <inc-or-expr> ] = GOTO 359
M [ 1366 , <land-expr> ] = GOTO 360
M [ 1366 , <lor-expr> ] = GOTO 361
M [ 1366 , <multiplicative-expr> ] = GOTO 362
M [ 1366 , <num-const> ] = GOTO 363
M [ 1366 , <postfix-expr> ] = GOTO 364
M [ 1366 , <prim-expr> ] = GOTO 365
M [ 1366 , <rel-expr> ] = GOTO 366
M [ 1366 , <shift-expr> ] = GOTO 367
M [ 1366 , <unary-expr> ] = GOTO 368
M [ 1366 , <unary-op> ] = GOTO 369
M [ 1366 , CHAR_CONST ] = SHIFT 370
M [ 1366 , DELIM_LPAR ] = SHIFT 371
M [ 1366 , FLOAT_CONST ] = SHIFT 372
M [ 1366 , IDENTIFIER ] = SHIFT 373
M [ 1366 , INT_CONST ] = SHIFT 374
M [ 1366 , OP_ADD ] = SHIFT 135
M [ 1366 , OP_AND ] = SHIFT 136
M [ 1366 , OP_DEC ] = SHIFT 375
M [ 1366 , OP_INC ] = SHIFT 376
M [ 1366 , OP_LNOT ] = SHIFT 139
M [ 1366 , OP_MUL ] = SHIFT 140
M [ 1366 , OP_NOT ] = SHIFT 141
M [ 1366 , OP_SUB ] = SHIFT 142
M [ 1366 , STR_LITERAL ] = SHIFT 377
M [ 1366 , sizeof ] = SHIFT 378
M [ 1367 , DELIM_COLON ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1367 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1367 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1367 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1367 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1367 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1367 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1367 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1367 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1367 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1367 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1367 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1367 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1367 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1367 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1367 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1367 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1367 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1367 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1367 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1367 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1367 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1367 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1367 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1367 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1367 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1368 , DELIM_COLON ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1368 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1368 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1368 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1368 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1368 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1368 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1368 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1368 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1368 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1368 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1368 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1368 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1368 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1368 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1368 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1368 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1368 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1368 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1368 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1368 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1368 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1368 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1368 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1368 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1368 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1369 , DELIM_COLON ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1369 , DELIM_QUESTION ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1369 , OP_ADD ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1369 , OP_AND ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1369 , OP_DIV ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1369 , OP_EQ ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1369 , OP_GE ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1369 , OP_GT ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1369 , OP_LAND ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1369 , OP_LE ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1369 , OP_LOR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1369 , OP_LT ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1369 , OP_MOD ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1369 , OP_MUL ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1369 , OP_NEQ ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1369 , OP_OR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1369 , OP_SHL ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1369 , OP_SHR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1369 , OP_SUB ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1369 , OP_XOR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1370 , <additive-expr> ] = GOTO 412
M [ 1370 , <and-expr> ] = GOTO 413
M [ 1370 , <asn-expr> ] = GOTO 414
M [ 1370 , <cast-expr> ] = GOTO 415
M [ 1370 , <cond-expr> ] = GOTO 416
M [ 1370 , <constant> ] = GOTO 417
M [ 1370 , <designation> ] = GOTO 418
M [ 1370 , <designator-list> ] = GOTO 419
M [ 1370 , <designator> ] = GOTO 420
M [ 1370 , <eq-expr> ] = GOTO 421
M [ 1370 , <exc-or-expr> ] = GOTO 422
M [ 1370 , <inc-or-expr> ] = GOTO 423
M [ 1370 , <initializer-list> ] = GOTO 1522
M [ 1370 , <initializer> ] = GOTO 425
M [ 1370 , <land-expr> ] = GOTO 426
M [ 1370 , <lor-expr> ] = GOTO 427
M [ 1370 , <multiplicative-expr> ] = GOTO 428
M [ 1370 , <num-const> ] = GOTO 429
M [ 1370 , <postfix-expr> ] = GOTO 430
M [ 1370 , <prim-expr> ] = GOTO 431
M [ 1370 , <rel-expr> ] = GOTO 432
M [ 1370 , <shift-expr> ] = GOTO 433
M [ 1370 , <unary-expr> ] = GOTO 434
M [ 1370 , <unary-op> ] = GOTO 435
M [ 1370 , CHAR_CONST ] = SHIFT 436
M [ 1370 , DELIM_LCURBRACE ] = SHIFT 437
M [ 1370 , DELIM_LPAR ] = SHIFT 438
M [ 1370 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 1370 , FLOAT_CONST ] = SHIFT 440
M [ 1370 , IDENTIFIER ] = SHIFT 441
M [ 1370 , INT_CONST ] = SHIFT 442
M [ 1370 , OP_ADD ] = SHIFT 135
M [ 1370 , OP_AND ] = SHIFT 136
M [ 1370 , OP_DEC ] = SHIFT 443
M [ 1370 , OP_DOT ] = SHIFT 444
M [ 1370 , OP_INC ] = SHIFT 445
M [ 1370 , OP_LNOT ] = SHIFT 139
M [ 1370 , OP_MUL ] = SHIFT 140
M [ 1370 , OP_NOT ] = SHIFT 141
M [ 1370 , OP_SUB ] = SHIFT 142
M [ 1370 , STR_LITERAL ] = SHIFT 446
M [ 1370 , sizeof ] = SHIFT 447
M [ 1371 , DELIM_LCURBRACE ] = SHIFT 1370
M [ 1372 , DELIM_COLON ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1372 , DELIM_LCURBRACE ] = SHIFT 1370
M [ 1372 , DELIM_QUESTION ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1372 , OP_ADD ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1372 , OP_AND ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1372 , OP_DIV ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1372 , OP_EQ ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1372 , OP_GE ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1372 , OP_GT ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1372 , OP_LAND ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1372 , OP_LE ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1372 , OP_LOR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1372 , OP_LT ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1372 , OP_MOD ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1372 , OP_MUL ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1372 , OP_NEQ ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1372 , OP_OR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1372 , OP_SHL ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1372 , OP_SHR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1372 , OP_SUB ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1372 , OP_XOR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1373 , DELIM_COMMA ] = SHIFT 661
M [ 1373 , DELIM_RPAR ] = SHIFT 1523
M [ 1374 , while ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1375 , <additive-expr> ] = GOTO 299
M [ 1375 , <and-expr> ] = GOTO 300
M [ 1375 , <asn-expr> ] = GOTO 301
M [ 1375 , <cast-expr> ] = GOTO 302
M [ 1375 , <cond-expr> ] = GOTO 303
M [ 1375 , <constant> ] = GOTO 304
M [ 1375 , <eq-expr> ] = GOTO 306
M [ 1375 , <exc-or-expr> ] = GOTO 307
M [ 1375 , <expr> ] = GOTO 1524
M [ 1375 , <inc-or-expr> ] = GOTO 309
M [ 1375 , <land-expr> ] = GOTO 310
M [ 1375 , <lor-expr> ] = GOTO 311
M [ 1375 , <multiplicative-expr> ] = GOTO 312
M [ 1375 , <num-const> ] = GOTO 313
M [ 1375 , <postfix-expr> ] = GOTO 314
M [ 1375 , <prim-expr> ] = GOTO 315
M [ 1375 , <rel-expr> ] = GOTO 316
M [ 1375 , <shift-expr> ] = GOTO 317
M [ 1375 , <unary-expr> ] = GOTO 324
M [ 1375 , <unary-op> ] = GOTO 325
M [ 1375 , CHAR_CONST ] = SHIFT 326
M [ 1375 , DELIM_LPAR ] = SHIFT 327
M [ 1375 , FLOAT_CONST ] = SHIFT 328
M [ 1375 , IDENTIFIER ] = SHIFT 329
M [ 1375 , INT_CONST ] = SHIFT 330
M [ 1375 , OP_ADD ] = SHIFT 135
M [ 1375 , OP_AND ] = SHIFT 136
M [ 1375 , OP_DEC ] = SHIFT 331
M [ 1375 , OP_INC ] = SHIFT 332
M [ 1375 , OP_LNOT ] = SHIFT 139
M [ 1375 , OP_MUL ] = SHIFT 140
M [ 1375 , OP_NOT ] = SHIFT 141
M [ 1375 , OP_SUB ] = SHIFT 142
M [ 1375 , STR_LITERAL ] = SHIFT 333
M [ 1375 , sizeof ] = SHIFT 343
M [ 1376 , <additive-expr> ] = GOTO 96
M [ 1376 , <and-expr> ] = GOTO 97
M [ 1376 , <asn-expr> ] = GOTO 98
M [ 1376 , <cast-expr> ] = GOTO 101
M [ 1376 , <comp-stmt> ] = GOTO 381
M [ 1376 , <cond-expr> ] = GOTO 103
M [ 1376 , <constant> ] = GOTO 104
M [ 1376 , <eq-expr> ] = GOTO 107
M [ 1376 , <exc-or-expr> ] = GOTO 108
M [ 1376 , <expr-stmt> ] = GOTO 382
M [ 1376 , <expr> ] = GOTO 383
M [ 1376 , <inc-or-expr> ] = GOTO 111
M [ 1376 , <iter-stmt> ] = GOTO 384
M [ 1376 , <jump-stmt> ] = GOTO 385
M [ 1376 , <labeled-stmt> ] = GOTO 386
M [ 1376 , <land-expr> ] = GOTO 115
M [ 1376 , <lor-expr> ] = GOTO 116
M [ 1376 , <multiplicative-expr> ] = GOTO 117
M [ 1376 , <num-const> ] = GOTO 118
M [ 1376 , <postfix-expr> ] = GOTO 119
M [ 1376 , <prim-expr> ] = GOTO 120
M [ 1376 , <rel-expr> ] = GOTO 121
M [ 1376 , <sele-stmt> ] = GOTO 387
M [ 1376 , <shift-expr> ] = GOTO 123
M [ 1376 , <stmt> ] = GOTO 1525
M [ 1376 , <unary-expr> ] = GOTO 125
M [ 1376 , <unary-op> ] = GOTO 126
M [ 1376 , CHAR_CONST ] = SHIFT 127
M [ 1376 , DELIM_LCURBRACE ] = SHIFT 389
M [ 1376 , DELIM_LPAR ] = SHIFT 129
M [ 1376 , DELIM_SEMICOLON ] = SHIFT 390
M [ 1376 , FLOAT_CONST ] = SHIFT 132
M [ 1376 , IDENTIFIER ] = SHIFT 391
M [ 1376 , INT_CONST ] = SHIFT 134
M [ 1376 , OP_ADD ] = SHIFT 135
M [ 1376 , OP_AND ] = SHIFT 136
M [ 1376 , OP_DEC ] = SHIFT 137
M [ 1376 , OP_INC ] = SHIFT 138
M [ 1376 , OP_LNOT ] = SHIFT 139
M [ 1376 , OP_MUL ] = SHIFT 140
M [ 1376 , OP_NOT ] = SHIFT 141
M [ 1376 , OP_SUB ] = SHIFT 142
M [ 1376 , STR_LITERAL ] = SHIFT 143
M [ 1376 , break ] = SHIFT 392
M [ 1376 , case ] = SHIFT 393
M [ 1376 , continue ] = SHIFT 394
M [ 1376 , default ] = SHIFT 395
M [ 1376 , do ] = SHIFT 396
M [ 1376 , for ] = SHIFT 397
M [ 1376 , goto ] = SHIFT 398
M [ 1376 , if ] = SHIFT 399
M [ 1376 , return ] = SHIFT 400
M [ 1376 , sizeof ] = SHIFT 153
M [ 1376 , switch ] = SHIFT 401
M [ 1376 , while ] = SHIFT 402
M [ 1377 , <additive-expr> ] = GOTO 96
M [ 1377 , <and-expr> ] = GOTO 97
M [ 1377 , <asn-expr> ] = GOTO 98
M [ 1377 , <cast-expr> ] = GOTO 101
M [ 1377 , <comp-stmt> ] = GOTO 1526
M [ 1377 , <cond-expr> ] = GOTO 103
M [ 1377 , <constant> ] = GOTO 104
M [ 1377 , <eq-expr> ] = GOTO 107
M [ 1377 , <exc-or-expr> ] = GOTO 108
M [ 1377 , <expr-stmt> ] = GOTO 1527
M [ 1377 , <expr> ] = GOTO 1528
M [ 1377 , <inc-or-expr> ] = GOTO 111
M [ 1377 , <iter-stmt> ] = GOTO 1529
M [ 1377 , <jump-stmt> ] = GOTO 1530
M [ 1377 , <labeled-stmt> ] = GOTO 1531
M [ 1377 , <land-expr> ] = GOTO 115
M [ 1377 , <lor-expr> ] = GOTO 116
M [ 1377 , <multiplicative-expr> ] = GOTO 117
M [ 1377 , <num-const> ] = GOTO 118
M [ 1377 , <postfix-expr> ] = GOTO 119
M [ 1377 , <prim-expr> ] = GOTO 120
M [ 1377 , <rel-expr> ] = GOTO 121
M [ 1377 , <sele-stmt> ] = GOTO 1532
M [ 1377 , <shift-expr> ] = GOTO 123
M [ 1377 , <stmt> ] = GOTO 1533
M [ 1377 , <unary-expr> ] = GOTO 125
M [ 1377 , <unary-op> ] = GOTO 126
M [ 1377 , CHAR_CONST ] = SHIFT 127
M [ 1377 , DELIM_LCURBRACE ] = SHIFT 1534
M [ 1377 , DELIM_LPAR ] = SHIFT 129
M [ 1377 , DELIM_SEMICOLON ] = SHIFT 1535
M [ 1377 , FLOAT_CONST ] = SHIFT 132
M [ 1377 , IDENTIFIER ] = SHIFT 1536
M [ 1377 , INT_CONST ] = SHIFT 134
M [ 1377 , OP_ADD ] = SHIFT 135
M [ 1377 , OP_AND ] = SHIFT 136
M [ 1377 , OP_DEC ] = SHIFT 137
M [ 1377 , OP_INC ] = SHIFT 138
M [ 1377 , OP_LNOT ] = SHIFT 139
M [ 1377 , OP_MUL ] = SHIFT 140
M [ 1377 , OP_NOT ] = SHIFT 141
M [ 1377 , OP_SUB ] = SHIFT 142
M [ 1377 , STR_LITERAL ] = SHIFT 143
M [ 1377 , break ] = SHIFT 1537
M [ 1377 , case ] = SHIFT 1538
M [ 1377 , continue ] = SHIFT 1539
M [ 1377 , default ] = SHIFT 1540
M [ 1377 , do ] = SHIFT 1541
M [ 1377 , for ] = SHIFT 1542
M [ 1377 , goto ] = SHIFT 1543
M [ 1377 , if ] = SHIFT 1544
M [ 1377 , return ] = SHIFT 1545
M [ 1377 , sizeof ] = SHIFT 153
M [ 1377 , switch ] = SHIFT 1546
M [ 1377 , while ] = SHIFT 1547
M [ 1378 , <additive-expr> ] = GOTO 96
M [ 1378 , <and-expr> ] = GOTO 97
M [ 1378 , <asn-expr> ] = GOTO 98
M [ 1378 , <cast-expr> ] = GOTO 101
M [ 1378 , <comp-stmt> ] = GOTO 381
M [ 1378 , <cond-expr> ] = GOTO 103
M [ 1378 , <constant> ] = GOTO 104
M [ 1378 , <eq-expr> ] = GOTO 107
M [ 1378 , <exc-or-expr> ] = GOTO 108
M [ 1378 , <expr-stmt> ] = GOTO 382
M [ 1378 , <expr> ] = GOTO 383
M [ 1378 , <inc-or-expr> ] = GOTO 111
M [ 1378 , <iter-stmt> ] = GOTO 384
M [ 1378 , <jump-stmt> ] = GOTO 385
M [ 1378 , <labeled-stmt> ] = GOTO 386
M [ 1378 , <land-expr> ] = GOTO 115
M [ 1378 , <lor-expr> ] = GOTO 116
M [ 1378 , <multiplicative-expr> ] = GOTO 117
M [ 1378 , <num-const> ] = GOTO 118
M [ 1378 , <postfix-expr> ] = GOTO 119
M [ 1378 , <prim-expr> ] = GOTO 120
M [ 1378 , <rel-expr> ] = GOTO 121
M [ 1378 , <sele-stmt> ] = GOTO 387
M [ 1378 , <shift-expr> ] = GOTO 123
M [ 1378 , <stmt> ] = GOTO 1548
M [ 1378 , <unary-expr> ] = GOTO 125
M [ 1378 , <unary-op> ] = GOTO 126
M [ 1378 , CHAR_CONST ] = SHIFT 127
M [ 1378 , DELIM_LCURBRACE ] = SHIFT 389
M [ 1378 , DELIM_LPAR ] = SHIFT 129
M [ 1378 , DELIM_SEMICOLON ] = SHIFT 390
M [ 1378 , FLOAT_CONST ] = SHIFT 132
M [ 1378 , IDENTIFIER ] = SHIFT 391
M [ 1378 , INT_CONST ] = SHIFT 134
M [ 1378 , OP_ADD ] = SHIFT 135
M [ 1378 , OP_AND ] = SHIFT 136
M [ 1378 , OP_DEC ] = SHIFT 137
M [ 1378 , OP_INC ] = SHIFT 138
M [ 1378 , OP_LNOT ] = SHIFT 139
M [ 1378 , OP_MUL ] = SHIFT 140
M [ 1378 , OP_NOT ] = SHIFT 141
M [ 1378 , OP_SUB ] = SHIFT 142
M [ 1378 , STR_LITERAL ] = SHIFT 143
M [ 1378 , break ] = SHIFT 392
M [ 1378 , case ] = SHIFT 393
M [ 1378 , continue ] = SHIFT 394
M [ 1378 , default ] = SHIFT 395
M [ 1378 , do ] = SHIFT 396
M [ 1378 , for ] = SHIFT 397
M [ 1378 , goto ] = SHIFT 398
M [ 1378 , if ] = SHIFT 399
M [ 1378 , return ] = SHIFT 400
M [ 1378 , sizeof ] = SHIFT 153
M [ 1378 , switch ] = SHIFT 401
M [ 1378 , while ] = SHIFT 402
M [ 1379 , <additive-expr> ] = GOTO 96
M [ 1379 , <and-expr> ] = GOTO 97
M [ 1379 , <asn-expr> ] = GOTO 98
M [ 1379 , <cast-expr> ] = GOTO 101
M [ 1379 , <comp-stmt> ] = GOTO 381
M [ 1379 , <cond-expr> ] = GOTO 103
M [ 1379 , <constant> ] = GOTO 104
M [ 1379 , <eq-expr> ] = GOTO 107
M [ 1379 , <exc-or-expr> ] = GOTO 108
M [ 1379 , <expr-stmt> ] = GOTO 382
M [ 1379 , <expr> ] = GOTO 383
M [ 1379 , <inc-or-expr> ] = GOTO 111
M [ 1379 , <iter-stmt> ] = GOTO 384
M [ 1379 , <jump-stmt> ] = GOTO 385
M [ 1379 , <labeled-stmt> ] = GOTO 386
M [ 1379 , <land-expr> ] = GOTO 115
M [ 1379 , <lor-expr> ] = GOTO 116
M [ 1379 , <multiplicative-expr> ] = GOTO 117
M [ 1379 , <num-const> ] = GOTO 118
M [ 1379 , <postfix-expr> ] = GOTO 119
M [ 1379 , <prim-expr> ] = GOTO 120
M [ 1379 , <rel-expr> ] = GOTO 121
M [ 1379 , <sele-stmt> ] = GOTO 387
M [ 1379 , <shift-expr> ] = GOTO 123
M [ 1379 , <stmt> ] = GOTO 1549
M [ 1379 , <unary-expr> ] = GOTO 125
M [ 1379 , <unary-op> ] = GOTO 126
M [ 1379 , CHAR_CONST ] = SHIFT 127
M [ 1379 , DELIM_LCURBRACE ] = SHIFT 389
M [ 1379 , DELIM_LPAR ] = SHIFT 129
M [ 1379 , DELIM_SEMICOLON ] = SHIFT 390
M [ 1379 , FLOAT_CONST ] = SHIFT 132
M [ 1379 , IDENTIFIER ] = SHIFT 391
M [ 1379 , INT_CONST ] = SHIFT 134
M [ 1379 , OP_ADD ] = SHIFT 135
M [ 1379 , OP_AND ] = SHIFT 136
M [ 1379 , OP_DEC ] = SHIFT 137
M [ 1379 , OP_INC ] = SHIFT 138
M [ 1379 , OP_LNOT ] = SHIFT 139
M [ 1379 , OP_MUL ] = SHIFT 140
M [ 1379 , OP_NOT ] = SHIFT 141
M [ 1379 , OP_SUB ] = SHIFT 142
M [ 1379 , STR_LITERAL ] = SHIFT 143
M [ 1379 , break ] = SHIFT 392
M [ 1379 , case ] = SHIFT 393
M [ 1379 , continue ] = SHIFT 394
M [ 1379 , default ] = SHIFT 395
M [ 1379 , do ] = SHIFT 396
M [ 1379 , for ] = SHIFT 397
M [ 1379 , goto ] = SHIFT 398
M [ 1379 , if ] = SHIFT 399
M [ 1379 , return ] = SHIFT 400
M [ 1379 , sizeof ] = SHIFT 153
M [ 1379 , switch ] = SHIFT 401
M [ 1379 , while ] = SHIFT 402
M [ 1380 , CHAR_CONST ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 1380 , DELIM_LPAR ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 1380 , DELIM_SEMICOLON ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 1380 , FLOAT_CONST ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 1380 , IDENTIFIER ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 1380 , INT_CONST ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 1380 , OP_ADD ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 1380 , OP_AND ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 1380 , OP_DEC ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 1380 , OP_INC ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 1380 , OP_LNOT ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 1380 , OP_MUL ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 1380 , OP_NOT ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 1380 , OP_SUB ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 1380 , STR_LITERAL ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 1380 , sizeof ] = REDUCE <decl> -> <decl-spec> <init-declarator-list> DELIM_SEMICOLON 
M [ 1381 , <additive-expr> ] = GOTO 299
M [ 1381 , <and-expr> ] = GOTO 300
M [ 1381 , <asn-expr> ] = GOTO 301
M [ 1381 , <cast-expr> ] = GOTO 302
M [ 1381 , <cond-expr> ] = GOTO 303
M [ 1381 , <constant> ] = GOTO 304
M [ 1381 , <eq-expr> ] = GOTO 306
M [ 1381 , <exc-or-expr> ] = GOTO 307
M [ 1381 , <expr> ] = GOTO 1550
M [ 1381 , <inc-or-expr> ] = GOTO 309
M [ 1381 , <land-expr> ] = GOTO 310
M [ 1381 , <lor-expr> ] = GOTO 311
M [ 1381 , <multiplicative-expr> ] = GOTO 312
M [ 1381 , <num-const> ] = GOTO 313
M [ 1381 , <postfix-expr> ] = GOTO 314
M [ 1381 , <prim-expr> ] = GOTO 315
M [ 1381 , <rel-expr> ] = GOTO 316
M [ 1381 , <shift-expr> ] = GOTO 317
M [ 1381 , <unary-expr> ] = GOTO 324
M [ 1381 , <unary-op> ] = GOTO 325
M [ 1381 , CHAR_CONST ] = SHIFT 326
M [ 1381 , DELIM_LPAR ] = SHIFT 327
M [ 1381 , DELIM_RPAR ] = REDUCE <for-cond> -> <decl> <expr> DELIM_SEMICOLON 
M [ 1381 , FLOAT_CONST ] = SHIFT 328
M [ 1381 , IDENTIFIER ] = SHIFT 329
M [ 1381 , INT_CONST ] = SHIFT 330
M [ 1381 , OP_ADD ] = SHIFT 135
M [ 1381 , OP_AND ] = SHIFT 136
M [ 1381 , OP_DEC ] = SHIFT 331
M [ 1381 , OP_INC ] = SHIFT 332
M [ 1381 , OP_LNOT ] = SHIFT 139
M [ 1381 , OP_MUL ] = SHIFT 140
M [ 1381 , OP_NOT ] = SHIFT 141
M [ 1381 , OP_SUB ] = SHIFT 142
M [ 1381 , STR_LITERAL ] = SHIFT 333
M [ 1381 , sizeof ] = SHIFT 343
M [ 1382 , DELIM_COMMA ] = SHIFT 661
M [ 1382 , DELIM_RPAR ] = REDUCE <for-cond> -> <decl> DELIM_SEMICOLON <expr> 
M [ 1383 , DELIM_COMMA ] = SHIFT 261
M [ 1383 , DELIM_SEMICOLON ] = SHIFT 1551
M [ 1384 , <additive-expr> ] = GOTO 299
M [ 1384 , <and-expr> ] = GOTO 300
M [ 1384 , <asn-expr> ] = GOTO 301
M [ 1384 , <cast-expr> ] = GOTO 302
M [ 1384 , <cond-expr> ] = GOTO 303
M [ 1384 , <constant> ] = GOTO 304
M [ 1384 , <eq-expr> ] = GOTO 306
M [ 1384 , <exc-or-expr> ] = GOTO 307
M [ 1384 , <expr> ] = GOTO 1552
M [ 1384 , <inc-or-expr> ] = GOTO 309
M [ 1384 , <land-expr> ] = GOTO 310
M [ 1384 , <lor-expr> ] = GOTO 311
M [ 1384 , <multiplicative-expr> ] = GOTO 312
M [ 1384 , <num-const> ] = GOTO 313
M [ 1384 , <postfix-expr> ] = GOTO 314
M [ 1384 , <prim-expr> ] = GOTO 315
M [ 1384 , <rel-expr> ] = GOTO 316
M [ 1384 , <shift-expr> ] = GOTO 317
M [ 1384 , <unary-expr> ] = GOTO 324
M [ 1384 , <unary-op> ] = GOTO 325
M [ 1384 , CHAR_CONST ] = SHIFT 326
M [ 1384 , DELIM_LPAR ] = SHIFT 327
M [ 1384 , DELIM_RPAR ] = REDUCE <for-cond> -> <expr> DELIM_SEMICOLON DELIM_SEMICOLON 
M [ 1384 , FLOAT_CONST ] = SHIFT 328
M [ 1384 , IDENTIFIER ] = SHIFT 329
M [ 1384 , INT_CONST ] = SHIFT 330
M [ 1384 , OP_ADD ] = SHIFT 135
M [ 1384 , OP_AND ] = SHIFT 136
M [ 1384 , OP_DEC ] = SHIFT 331
M [ 1384 , OP_INC ] = SHIFT 332
M [ 1384 , OP_LNOT ] = SHIFT 139
M [ 1384 , OP_MUL ] = SHIFT 140
M [ 1384 , OP_NOT ] = SHIFT 141
M [ 1384 , OP_SUB ] = SHIFT 142
M [ 1384 , STR_LITERAL ] = SHIFT 333
M [ 1384 , sizeof ] = SHIFT 343
M [ 1385 , CHAR_CONST ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , DELIM_LCURBRACE ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , DELIM_LPAR ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , DELIM_RCURBRACE ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , DELIM_SEMICOLON ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , FLOAT_CONST ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , IDENTIFIER ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , INT_CONST ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , OP_ADD ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , OP_AND ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , OP_DEC ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , OP_INC ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , OP_LNOT ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , OP_MUL ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , OP_NOT ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , OP_SUB ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , STR_LITERAL ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , break ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , case ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , char ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , const ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , continue ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , default ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , do ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , double ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , enum ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , float ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , for ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , goto ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , if ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , int ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , long ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , return ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , short ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , signed ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , sizeof ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , struct ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , switch ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , typedef ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , unsigned ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , void ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1385 , while ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1386 , <additive-expr> ] = GOTO 299
M [ 1386 , <and-expr> ] = GOTO 300
M [ 1386 , <asn-expr> ] = GOTO 301
M [ 1386 , <cast-expr> ] = GOTO 302
M [ 1386 , <cond-expr> ] = GOTO 303
M [ 1386 , <constant> ] = GOTO 304
M [ 1386 , <eq-expr> ] = GOTO 306
M [ 1386 , <exc-or-expr> ] = GOTO 307
M [ 1386 , <expr> ] = GOTO 1553
M [ 1386 , <inc-or-expr> ] = GOTO 309
M [ 1386 , <land-expr> ] = GOTO 310
M [ 1386 , <lor-expr> ] = GOTO 311
M [ 1386 , <multiplicative-expr> ] = GOTO 312
M [ 1386 , <num-const> ] = GOTO 313
M [ 1386 , <postfix-expr> ] = GOTO 314
M [ 1386 , <prim-expr> ] = GOTO 315
M [ 1386 , <rel-expr> ] = GOTO 316
M [ 1386 , <shift-expr> ] = GOTO 317
M [ 1386 , <unary-expr> ] = GOTO 324
M [ 1386 , <unary-op> ] = GOTO 325
M [ 1386 , CHAR_CONST ] = SHIFT 326
M [ 1386 , DELIM_LPAR ] = SHIFT 327
M [ 1386 , DELIM_RPAR ] = REDUCE <for-cond> -> DELIM_SEMICOLON <expr> DELIM_SEMICOLON 
M [ 1386 , FLOAT_CONST ] = SHIFT 328
M [ 1386 , IDENTIFIER ] = SHIFT 329
M [ 1386 , INT_CONST ] = SHIFT 330
M [ 1386 , OP_ADD ] = SHIFT 135
M [ 1386 , OP_AND ] = SHIFT 136
M [ 1386 , OP_DEC ] = SHIFT 331
M [ 1386 , OP_INC ] = SHIFT 332
M [ 1386 , OP_LNOT ] = SHIFT 139
M [ 1386 , OP_MUL ] = SHIFT 140
M [ 1386 , OP_NOT ] = SHIFT 141
M [ 1386 , OP_SUB ] = SHIFT 142
M [ 1386 , STR_LITERAL ] = SHIFT 333
M [ 1386 , sizeof ] = SHIFT 343
M [ 1387 , DELIM_COMMA ] = SHIFT 661
M [ 1387 , DELIM_RPAR ] = REDUCE <for-cond> -> DELIM_SEMICOLON DELIM_SEMICOLON <expr> 
M [ 1388 , CHAR_CONST ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , DELIM_LCURBRACE ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , DELIM_LPAR ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , DELIM_RCURBRACE ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , DELIM_SEMICOLON ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , FLOAT_CONST ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , IDENTIFIER ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , INT_CONST ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , OP_ADD ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , OP_AND ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , OP_DEC ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , OP_INC ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , OP_LNOT ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , OP_MUL ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , OP_NOT ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , OP_SUB ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , STR_LITERAL ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , break ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , case ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , char ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , const ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , continue ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , default ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , do ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , double ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , else ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , enum ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , float ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , for ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , goto ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , if ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , int ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , long ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , return ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , short ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , signed ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , sizeof ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , struct ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , switch ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , typedef ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , unsigned ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , void ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1388 , while ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1389 , CHAR_CONST ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , DELIM_LCURBRACE ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , DELIM_LPAR ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , DELIM_RCURBRACE ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , DELIM_SEMICOLON ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , FLOAT_CONST ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , IDENTIFIER ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , INT_CONST ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , OP_ADD ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , OP_AND ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , OP_DEC ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , OP_INC ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , OP_LNOT ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , OP_MUL ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , OP_NOT ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , OP_SUB ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , STR_LITERAL ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , break ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , case ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , char ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , const ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , continue ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , default ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , do ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , double ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , else ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , enum ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , float ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , for ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , goto ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , if ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , int ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , long ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , return ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , short ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , signed ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , sizeof ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , struct ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , switch ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , typedef ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , unsigned ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , void ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1389 , while ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1390 , DELIM_COMMA ] = SHIFT 261
M [ 1390 , DELIM_SEMICOLON ] = SHIFT 1554
M [ 1391 , CHAR_CONST ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , DELIM_LCURBRACE ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , DELIM_LPAR ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , DELIM_RCURBRACE ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , DELIM_SEMICOLON ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , FLOAT_CONST ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , IDENTIFIER ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , INT_CONST ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , OP_ADD ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , OP_AND ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , OP_DEC ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , OP_INC ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , OP_LNOT ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , OP_MUL ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , OP_NOT ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , OP_SUB ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , STR_LITERAL ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , break ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , case ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , char ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , const ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , continue ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , default ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , do ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , double ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , else ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , enum ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , float ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , for ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , goto ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , if ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , int ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , long ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , return ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , short ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , signed ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , sizeof ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , struct ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , switch ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , typedef ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , unsigned ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , void ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1391 , while ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1392 , CHAR_CONST ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , DELIM_LCURBRACE ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , DELIM_LPAR ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , DELIM_RCURBRACE ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , DELIM_SEMICOLON ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , FLOAT_CONST ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , IDENTIFIER ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , INT_CONST ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , OP_ADD ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , OP_AND ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , OP_DEC ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , OP_INC ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , OP_LNOT ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , OP_MUL ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , OP_NOT ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , OP_SUB ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , STR_LITERAL ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , break ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , case ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , char ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , const ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , continue ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , default ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , do ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , double ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , else ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , enum ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , float ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , for ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , goto ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , if ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , int ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , long ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , return ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , short ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , signed ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , sizeof ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , struct ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , switch ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , typedef ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , unsigned ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , void ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1392 , while ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1393 , CHAR_CONST ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , DELIM_LCURBRACE ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , DELIM_LPAR ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , DELIM_RCURBRACE ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , DELIM_SEMICOLON ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , FLOAT_CONST ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , IDENTIFIER ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , INT_CONST ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , OP_ADD ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , OP_AND ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , OP_DEC ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , OP_INC ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , OP_LNOT ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , OP_MUL ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , OP_NOT ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , OP_SUB ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , STR_LITERAL ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , break ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , case ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , char ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , const ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , continue ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , default ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , do ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , double ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , else ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , enum ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , float ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , for ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , goto ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , if ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , int ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , long ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , return ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , short ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , signed ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , sizeof ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , struct ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , switch ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , typedef ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , unsigned ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , void ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1393 , while ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1394 , CHAR_CONST ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , DELIM_LCURBRACE ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , DELIM_LPAR ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , DELIM_RCURBRACE ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , DELIM_SEMICOLON ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , FLOAT_CONST ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , IDENTIFIER ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , INT_CONST ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , OP_ADD ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , OP_AND ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , OP_DEC ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , OP_INC ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , OP_LNOT ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , OP_MUL ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , OP_NOT ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , OP_SUB ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , STR_LITERAL ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , break ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , case ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , char ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , const ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , continue ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , default ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , do ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , double ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , else ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , enum ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , float ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , for ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , goto ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , if ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , int ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , long ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , return ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , short ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , signed ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , sizeof ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , struct ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , switch ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , typedef ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , unsigned ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , void ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1394 , while ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1395 , CHAR_CONST ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , DELIM_LCURBRACE ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , DELIM_LPAR ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , DELIM_RCURBRACE ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , DELIM_SEMICOLON ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , FLOAT_CONST ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , IDENTIFIER ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , INT_CONST ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , OP_ADD ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , OP_AND ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , OP_DEC ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , OP_INC ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , OP_LNOT ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , OP_MUL ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , OP_NOT ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , OP_SUB ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , STR_LITERAL ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , break ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , case ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , char ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , const ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , continue ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , default ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , do ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , double ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , else ] = SHIFT 1555
M [ 1395 , enum ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , float ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , for ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , goto ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , if ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , int ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , long ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , return ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , short ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , signed ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , sizeof ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , struct ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , switch ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , typedef ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , unsigned ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , void ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1395 , while ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1396 , <additive-expr> ] = GOTO 96
M [ 1396 , <and-expr> ] = GOTO 97
M [ 1396 , <asn-expr> ] = GOTO 98
M [ 1396 , <blk-item-list> ] = GOTO 1556
M [ 1396 , <blk-item> ] = GOTO 100
M [ 1396 , <cast-expr> ] = GOTO 101
M [ 1396 , <comp-stmt> ] = GOTO 102
M [ 1396 , <cond-expr> ] = GOTO 103
M [ 1396 , <constant> ] = GOTO 104
M [ 1396 , <decl-spec> ] = GOTO 105
M [ 1396 , <decl> ] = GOTO 106
M [ 1396 , <enum-spec> ] = GOTO 3
M [ 1396 , <eq-expr> ] = GOTO 107
M [ 1396 , <exc-or-expr> ] = GOTO 108
M [ 1396 , <expr-stmt> ] = GOTO 109
M [ 1396 , <expr> ] = GOTO 110
M [ 1396 , <inc-or-expr> ] = GOTO 111
M [ 1396 , <iter-stmt> ] = GOTO 112
M [ 1396 , <jump-stmt> ] = GOTO 113
M [ 1396 , <labeled-stmt> ] = GOTO 114
M [ 1396 , <land-expr> ] = GOTO 115
M [ 1396 , <lor-expr> ] = GOTO 116
M [ 1396 , <multiplicative-expr> ] = GOTO 117
M [ 1396 , <num-const> ] = GOTO 118
M [ 1396 , <postfix-expr> ] = GOTO 119
M [ 1396 , <prim-expr> ] = GOTO 120
M [ 1396 , <rel-expr> ] = GOTO 121
M [ 1396 , <sele-stmt> ] = GOTO 122
M [ 1396 , <shift-expr> ] = GOTO 123
M [ 1396 , <stmt> ] = GOTO 124
M [ 1396 , <storage-class-spec> ] = GOTO 6
M [ 1396 , <struct-union-spec> ] = GOTO 7
M [ 1396 , <struct-union> ] = GOTO 8
M [ 1396 , <type-qual> ] = GOTO 10
M [ 1396 , <type-spec> ] = GOTO 11
M [ 1396 , <unary-expr> ] = GOTO 125
M [ 1396 , <unary-op> ] = GOTO 126
M [ 1396 , CHAR_CONST ] = SHIFT 127
M [ 1396 , DELIM_LCURBRACE ] = SHIFT 128
M [ 1396 , DELIM_LPAR ] = SHIFT 129
M [ 1396 , DELIM_RCURBRACE ] = SHIFT 1557
M [ 1396 , DELIM_SEMICOLON ] = SHIFT 131
M [ 1396 , FLOAT_CONST ] = SHIFT 132
M [ 1396 , IDENTIFIER ] = SHIFT 133
M [ 1396 , INT_CONST ] = SHIFT 134
M [ 1396 , OP_ADD ] = SHIFT 135
M [ 1396 , OP_AND ] = SHIFT 136
M [ 1396 , OP_DEC ] = SHIFT 137
M [ 1396 , OP_INC ] = SHIFT 138
M [ 1396 , OP_LNOT ] = SHIFT 139
M [ 1396 , OP_MUL ] = SHIFT 140
M [ 1396 , OP_NOT ] = SHIFT 141
M [ 1396 , OP_SUB ] = SHIFT 142
M [ 1396 , STR_LITERAL ] = SHIFT 143
M [ 1396 , break ] = SHIFT 144
M [ 1396 , case ] = SHIFT 145
M [ 1396 , char ] = SHIFT 12
M [ 1396 , const ] = SHIFT 13
M [ 1396 , continue ] = SHIFT 146
M [ 1396 , default ] = SHIFT 147
M [ 1396 , do ] = SHIFT 148
M [ 1396 , double ] = SHIFT 14
M [ 1396 , enum ] = SHIFT 15
M [ 1396 , float ] = SHIFT 16
M [ 1396 , for ] = SHIFT 149
M [ 1396 , goto ] = SHIFT 150
M [ 1396 , if ] = SHIFT 151
M [ 1396 , int ] = SHIFT 17
M [ 1396 , long ] = SHIFT 18
M [ 1396 , return ] = SHIFT 152
M [ 1396 , short ] = SHIFT 19
M [ 1396 , signed ] = SHIFT 20
M [ 1396 , sizeof ] = SHIFT 153
M [ 1396 , struct ] = SHIFT 21
M [ 1396 , switch ] = SHIFT 154
M [ 1396 , typedef ] = SHIFT 22
M [ 1396 , unsigned ] = SHIFT 23
M [ 1396 , void ] = SHIFT 24
M [ 1396 , while ] = SHIFT 155
M [ 1397 , CHAR_CONST ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , DELIM_LCURBRACE ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , DELIM_LPAR ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , DELIM_RCURBRACE ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , DELIM_SEMICOLON ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , FLOAT_CONST ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , IDENTIFIER ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , INT_CONST ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , OP_ADD ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , OP_AND ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , OP_DEC ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , OP_INC ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , OP_LNOT ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , OP_MUL ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , OP_NOT ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , OP_SUB ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , STR_LITERAL ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , break ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , case ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , char ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , const ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , continue ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , default ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , do ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , double ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , else ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , enum ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , float ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , for ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , goto ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , if ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , int ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , long ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , return ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , short ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , signed ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , sizeof ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , struct ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , switch ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , typedef ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , unsigned ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , void ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1397 , while ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1398 , DELIM_COLON ] = SHIFT 1558
M [ 1398 , DELIM_COMMA ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , DELIM_LPAR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , DELIM_QUESTION ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , DELIM_SEMICOLON ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_ADD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_ADDASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_AND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_ANDASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_ARROW ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_ASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_DEC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_DIV ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_DIVASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_DOT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_EQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_GE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_GT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_INC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_LAND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_LE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_LOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_LT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_MOD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_MODASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_MUL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_MULASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_NEQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_OR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_ORASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_SHL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_SHLASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_SHR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_SHRASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_SUB ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_SUBASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_XOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1398 , OP_XORASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1399 , DELIM_SEMICOLON ] = SHIFT 1559
M [ 1400 , <additive-expr> ] = GOTO 351
M [ 1400 , <and-expr> ] = GOTO 352
M [ 1400 , <cast-expr> ] = GOTO 353
M [ 1400 , <cond-expr> ] = GOTO 354
M [ 1400 , <const-expr> ] = GOTO 1560
M [ 1400 , <constant> ] = GOTO 356
M [ 1400 , <eq-expr> ] = GOTO 357
M [ 1400 , <exc-or-expr> ] = GOTO 358
M [ 1400 , <inc-or-expr> ] = GOTO 359
M [ 1400 , <land-expr> ] = GOTO 360
M [ 1400 , <lor-expr> ] = GOTO 361
M [ 1400 , <multiplicative-expr> ] = GOTO 362
M [ 1400 , <num-const> ] = GOTO 363
M [ 1400 , <postfix-expr> ] = GOTO 364
M [ 1400 , <prim-expr> ] = GOTO 365
M [ 1400 , <rel-expr> ] = GOTO 366
M [ 1400 , <shift-expr> ] = GOTO 367
M [ 1400 , <unary-expr> ] = GOTO 368
M [ 1400 , <unary-op> ] = GOTO 369
M [ 1400 , CHAR_CONST ] = SHIFT 370
M [ 1400 , DELIM_LPAR ] = SHIFT 371
M [ 1400 , FLOAT_CONST ] = SHIFT 372
M [ 1400 , IDENTIFIER ] = SHIFT 373
M [ 1400 , INT_CONST ] = SHIFT 374
M [ 1400 , OP_ADD ] = SHIFT 135
M [ 1400 , OP_AND ] = SHIFT 136
M [ 1400 , OP_DEC ] = SHIFT 375
M [ 1400 , OP_INC ] = SHIFT 376
M [ 1400 , OP_LNOT ] = SHIFT 139
M [ 1400 , OP_MUL ] = SHIFT 140
M [ 1400 , OP_NOT ] = SHIFT 141
M [ 1400 , OP_SUB ] = SHIFT 142
M [ 1400 , STR_LITERAL ] = SHIFT 377
M [ 1400 , sizeof ] = SHIFT 378
M [ 1401 , DELIM_SEMICOLON ] = SHIFT 1561
M [ 1402 , DELIM_COLON ] = SHIFT 1562
M [ 1403 , <additive-expr> ] = GOTO 96
M [ 1403 , <and-expr> ] = GOTO 97
M [ 1403 , <asn-expr> ] = GOTO 98
M [ 1403 , <cast-expr> ] = GOTO 101
M [ 1403 , <comp-stmt> ] = GOTO 381
M [ 1403 , <cond-expr> ] = GOTO 103
M [ 1403 , <constant> ] = GOTO 104
M [ 1403 , <eq-expr> ] = GOTO 107
M [ 1403 , <exc-or-expr> ] = GOTO 108
M [ 1403 , <expr-stmt> ] = GOTO 382
M [ 1403 , <expr> ] = GOTO 383
M [ 1403 , <inc-or-expr> ] = GOTO 111
M [ 1403 , <iter-stmt> ] = GOTO 384
M [ 1403 , <jump-stmt> ] = GOTO 385
M [ 1403 , <labeled-stmt> ] = GOTO 386
M [ 1403 , <land-expr> ] = GOTO 115
M [ 1403 , <lor-expr> ] = GOTO 116
M [ 1403 , <multiplicative-expr> ] = GOTO 117
M [ 1403 , <num-const> ] = GOTO 118
M [ 1403 , <postfix-expr> ] = GOTO 119
M [ 1403 , <prim-expr> ] = GOTO 120
M [ 1403 , <rel-expr> ] = GOTO 121
M [ 1403 , <sele-stmt> ] = GOTO 387
M [ 1403 , <shift-expr> ] = GOTO 123
M [ 1403 , <stmt> ] = GOTO 1563
M [ 1403 , <unary-expr> ] = GOTO 125
M [ 1403 , <unary-op> ] = GOTO 126
M [ 1403 , CHAR_CONST ] = SHIFT 127
M [ 1403 , DELIM_LCURBRACE ] = SHIFT 389
M [ 1403 , DELIM_LPAR ] = SHIFT 129
M [ 1403 , DELIM_SEMICOLON ] = SHIFT 390
M [ 1403 , FLOAT_CONST ] = SHIFT 132
M [ 1403 , IDENTIFIER ] = SHIFT 391
M [ 1403 , INT_CONST ] = SHIFT 134
M [ 1403 , OP_ADD ] = SHIFT 135
M [ 1403 , OP_AND ] = SHIFT 136
M [ 1403 , OP_DEC ] = SHIFT 137
M [ 1403 , OP_INC ] = SHIFT 138
M [ 1403 , OP_LNOT ] = SHIFT 139
M [ 1403 , OP_MUL ] = SHIFT 140
M [ 1403 , OP_NOT ] = SHIFT 141
M [ 1403 , OP_SUB ] = SHIFT 142
M [ 1403 , STR_LITERAL ] = SHIFT 143
M [ 1403 , break ] = SHIFT 392
M [ 1403 , case ] = SHIFT 393
M [ 1403 , continue ] = SHIFT 394
M [ 1403 , default ] = SHIFT 395
M [ 1403 , do ] = SHIFT 396
M [ 1403 , for ] = SHIFT 397
M [ 1403 , goto ] = SHIFT 398
M [ 1403 , if ] = SHIFT 399
M [ 1403 , return ] = SHIFT 400
M [ 1403 , sizeof ] = SHIFT 153
M [ 1403 , switch ] = SHIFT 401
M [ 1403 , while ] = SHIFT 402
M [ 1404 , DELIM_LPAR ] = SHIFT 1564
M [ 1405 , DELIM_SEMICOLON ] = SHIFT 1565
M [ 1406 , DELIM_LPAR ] = SHIFT 1566
M [ 1407 , <additive-expr> ] = GOTO 96
M [ 1407 , <and-expr> ] = GOTO 97
M [ 1407 , <asn-expr> ] = GOTO 98
M [ 1407 , <cast-expr> ] = GOTO 101
M [ 1407 , <cond-expr> ] = GOTO 103
M [ 1407 , <constant> ] = GOTO 104
M [ 1407 , <eq-expr> ] = GOTO 107
M [ 1407 , <exc-or-expr> ] = GOTO 108
M [ 1407 , <expr> ] = GOTO 1567
M [ 1407 , <inc-or-expr> ] = GOTO 111
M [ 1407 , <land-expr> ] = GOTO 115
M [ 1407 , <lor-expr> ] = GOTO 116
M [ 1407 , <multiplicative-expr> ] = GOTO 117
M [ 1407 , <num-const> ] = GOTO 118
M [ 1407 , <postfix-expr> ] = GOTO 119
M [ 1407 , <prim-expr> ] = GOTO 120
M [ 1407 , <rel-expr> ] = GOTO 121
M [ 1407 , <shift-expr> ] = GOTO 123
M [ 1407 , <unary-expr> ] = GOTO 125
M [ 1407 , <unary-op> ] = GOTO 126
M [ 1407 , CHAR_CONST ] = SHIFT 127
M [ 1407 , DELIM_LPAR ] = SHIFT 129
M [ 1407 , DELIM_SEMICOLON ] = SHIFT 1568
M [ 1407 , FLOAT_CONST ] = SHIFT 132
M [ 1407 , IDENTIFIER ] = SHIFT 159
M [ 1407 , INT_CONST ] = SHIFT 134
M [ 1407 , OP_ADD ] = SHIFT 135
M [ 1407 , OP_AND ] = SHIFT 136
M [ 1407 , OP_DEC ] = SHIFT 137
M [ 1407 , OP_INC ] = SHIFT 138
M [ 1407 , OP_LNOT ] = SHIFT 139
M [ 1407 , OP_MUL ] = SHIFT 140
M [ 1407 , OP_NOT ] = SHIFT 141
M [ 1407 , OP_SUB ] = SHIFT 142
M [ 1407 , STR_LITERAL ] = SHIFT 143
M [ 1407 , sizeof ] = SHIFT 153
M [ 1408 , DELIM_LPAR ] = SHIFT 1569
M [ 1409 , DELIM_LPAR ] = SHIFT 1570
M [ 1410 , CHAR_CONST ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , DELIM_LCURBRACE ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , DELIM_LPAR ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , DELIM_RCURBRACE ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , DELIM_SEMICOLON ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , FLOAT_CONST ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , IDENTIFIER ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , INT_CONST ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , OP_ADD ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , OP_AND ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , OP_DEC ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , OP_INC ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , OP_LNOT ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , OP_MUL ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , OP_NOT ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , OP_SUB ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , STR_LITERAL ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , break ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , case ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , char ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , const ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , continue ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , default ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , do ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , double ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , enum ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , float ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , for ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , goto ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , if ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , int ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , long ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , return ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , short ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , signed ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , sizeof ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , struct ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , switch ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , typedef ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , unsigned ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , void ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1410 , while ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , CHAR_CONST ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , DELIM_LCURBRACE ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , DELIM_LPAR ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , DELIM_RCURBRACE ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , DELIM_SEMICOLON ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , FLOAT_CONST ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , IDENTIFIER ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , INT_CONST ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , OP_ADD ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , OP_AND ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , OP_DEC ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , OP_INC ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , OP_LNOT ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , OP_MUL ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , OP_NOT ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , OP_SUB ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , STR_LITERAL ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , break ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , case ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , char ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , const ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , continue ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , default ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , do ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , double ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , enum ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , float ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , for ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , goto ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , if ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , int ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , long ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , return ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , short ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , signed ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , sizeof ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , struct ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , switch ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , typedef ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , unsigned ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , void ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1411 , while ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1412 , DELIM_COMMA ] = REDUCE <initializer-list> -> <initializer-list> DELIM_COMMA <designation> <initializer> 
M [ 1412 , DELIM_RCURBRACE ] = REDUCE <initializer-list> -> <initializer-list> DELIM_COMMA <designation> <initializer> 
M [ 1413 , <additive-expr> ] = GOTO 412
M [ 1413 , <and-expr> ] = GOTO 413
M [ 1413 , <cast-expr> ] = GOTO 415
M [ 1413 , <cond-expr> ] = GOTO 1571
M [ 1413 , <constant> ] = GOTO 528
M [ 1413 , <eq-expr> ] = GOTO 421
M [ 1413 , <exc-or-expr> ] = GOTO 422
M [ 1413 , <inc-or-expr> ] = GOTO 423
M [ 1413 , <land-expr> ] = GOTO 426
M [ 1413 , <lor-expr> ] = GOTO 427
M [ 1413 , <multiplicative-expr> ] = GOTO 428
M [ 1413 , <num-const> ] = GOTO 529
M [ 1413 , <postfix-expr> ] = GOTO 530
M [ 1413 , <prim-expr> ] = GOTO 531
M [ 1413 , <rel-expr> ] = GOTO 432
M [ 1413 , <shift-expr> ] = GOTO 433
M [ 1413 , <unary-expr> ] = GOTO 532
M [ 1413 , <unary-op> ] = GOTO 533
M [ 1413 , CHAR_CONST ] = SHIFT 534
M [ 1413 , DELIM_LPAR ] = SHIFT 535
M [ 1413 , FLOAT_CONST ] = SHIFT 536
M [ 1413 , IDENTIFIER ] = SHIFT 537
M [ 1413 , INT_CONST ] = SHIFT 538
M [ 1413 , OP_ADD ] = SHIFT 135
M [ 1413 , OP_AND ] = SHIFT 136
M [ 1413 , OP_DEC ] = SHIFT 539
M [ 1413 , OP_INC ] = SHIFT 540
M [ 1413 , OP_LNOT ] = SHIFT 139
M [ 1413 , OP_MUL ] = SHIFT 140
M [ 1413 , OP_NOT ] = SHIFT 141
M [ 1413 , OP_SUB ] = SHIFT 142
M [ 1413 , STR_LITERAL ] = SHIFT 541
M [ 1413 , sizeof ] = SHIFT 542
M [ 1414 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , DELIM_RCURBRACE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1414 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1415 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , DELIM_RCURBRACE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1415 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1416 , <cast-expr> ] = GOTO 1572
M [ 1416 , <constant> ] = GOTO 417
M [ 1416 , <num-const> ] = GOTO 429
M [ 1416 , <postfix-expr> ] = GOTO 430
M [ 1416 , <prim-expr> ] = GOTO 431
M [ 1416 , <unary-expr> ] = GOTO 802
M [ 1416 , <unary-op> ] = GOTO 435
M [ 1416 , CHAR_CONST ] = SHIFT 436
M [ 1416 , DELIM_LCURBRACE ] = SHIFT 1419
M [ 1416 , DELIM_LPAR ] = SHIFT 803
M [ 1416 , FLOAT_CONST ] = SHIFT 440
M [ 1416 , IDENTIFIER ] = SHIFT 441
M [ 1416 , INT_CONST ] = SHIFT 442
M [ 1416 , OP_ADD ] = SHIFT 135
M [ 1416 , OP_AND ] = SHIFT 136
M [ 1416 , OP_DEC ] = SHIFT 443
M [ 1416 , OP_INC ] = SHIFT 445
M [ 1416 , OP_LNOT ] = SHIFT 139
M [ 1416 , OP_MUL ] = SHIFT 140
M [ 1416 , OP_NOT ] = SHIFT 141
M [ 1416 , OP_SUB ] = SHIFT 142
M [ 1416 , STR_LITERAL ] = SHIFT 446
M [ 1416 , sizeof ] = SHIFT 447
M [ 1417 , DELIM_COMMA ] = REDUCE <initializer> -> DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1417 , DELIM_RCURBRACE ] = REDUCE <initializer> -> DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1418 , DELIM_COMMA ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1418 , DELIM_QUESTION ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1418 , DELIM_RCURBRACE ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1418 , OP_ADD ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1418 , OP_AND ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1418 , OP_DIV ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1418 , OP_EQ ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1418 , OP_GE ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1418 , OP_GT ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1418 , OP_LAND ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1418 , OP_LE ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1418 , OP_LOR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1418 , OP_LT ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1418 , OP_MOD ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1418 , OP_MUL ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1418 , OP_NEQ ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1418 , OP_OR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1418 , OP_SHL ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1418 , OP_SHR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1418 , OP_SUB ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1418 , OP_XOR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1419 , <additive-expr> ] = GOTO 412
M [ 1419 , <and-expr> ] = GOTO 413
M [ 1419 , <asn-expr> ] = GOTO 414
M [ 1419 , <cast-expr> ] = GOTO 415
M [ 1419 , <cond-expr> ] = GOTO 416
M [ 1419 , <constant> ] = GOTO 417
M [ 1419 , <designation> ] = GOTO 418
M [ 1419 , <designator-list> ] = GOTO 419
M [ 1419 , <designator> ] = GOTO 420
M [ 1419 , <eq-expr> ] = GOTO 421
M [ 1419 , <exc-or-expr> ] = GOTO 422
M [ 1419 , <inc-or-expr> ] = GOTO 423
M [ 1419 , <initializer-list> ] = GOTO 1573
M [ 1419 , <initializer> ] = GOTO 425
M [ 1419 , <land-expr> ] = GOTO 426
M [ 1419 , <lor-expr> ] = GOTO 427
M [ 1419 , <multiplicative-expr> ] = GOTO 428
M [ 1419 , <num-const> ] = GOTO 429
M [ 1419 , <postfix-expr> ] = GOTO 430
M [ 1419 , <prim-expr> ] = GOTO 431
M [ 1419 , <rel-expr> ] = GOTO 432
M [ 1419 , <shift-expr> ] = GOTO 433
M [ 1419 , <unary-expr> ] = GOTO 434
M [ 1419 , <unary-op> ] = GOTO 435
M [ 1419 , CHAR_CONST ] = SHIFT 436
M [ 1419 , DELIM_LCURBRACE ] = SHIFT 437
M [ 1419 , DELIM_LPAR ] = SHIFT 438
M [ 1419 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 1419 , FLOAT_CONST ] = SHIFT 440
M [ 1419 , IDENTIFIER ] = SHIFT 441
M [ 1419 , INT_CONST ] = SHIFT 442
M [ 1419 , OP_ADD ] = SHIFT 135
M [ 1419 , OP_AND ] = SHIFT 136
M [ 1419 , OP_DEC ] = SHIFT 443
M [ 1419 , OP_DOT ] = SHIFT 444
M [ 1419 , OP_INC ] = SHIFT 445
M [ 1419 , OP_LNOT ] = SHIFT 139
M [ 1419 , OP_MUL ] = SHIFT 140
M [ 1419 , OP_NOT ] = SHIFT 141
M [ 1419 , OP_SUB ] = SHIFT 142
M [ 1419 , STR_LITERAL ] = SHIFT 446
M [ 1419 , sizeof ] = SHIFT 447
M [ 1420 , DELIM_COMMA ] = SHIFT 973
M [ 1420 , DELIM_RPAR ] = SHIFT 1574
M [ 1421 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1421 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1421 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1421 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1421 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1421 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1421 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1421 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1421 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1421 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1421 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1421 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1421 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1421 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1421 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1421 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1421 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1421 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1421 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1421 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1421 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1421 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1421 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1421 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1421 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1421 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1422 , DELIM_COMMA ] = SHIFT 981
M [ 1422 , DELIM_RSQBRACKET ] = SHIFT 1575
M [ 1423 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1423 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1423 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1423 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1423 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1423 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1423 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1423 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1423 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1423 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1423 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1423 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1423 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1423 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1423 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1423 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1423 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1423 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1423 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1423 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1423 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1423 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1423 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1423 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1423 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1423 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1424 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1424 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1424 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1424 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1424 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1424 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1424 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1424 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1424 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1424 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1424 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1424 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1424 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1424 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1424 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1424 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1424 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1424 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1424 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1424 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1424 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1424 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1424 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1424 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1424 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1424 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1425 , DELIM_LPAR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1425 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1425 , DELIM_QUESTION ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1425 , DELIM_RSQBRACKET ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1425 , OP_ADD ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1425 , OP_AND ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1425 , OP_ARROW ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1425 , OP_DEC ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1425 , OP_DIV ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1425 , OP_DOT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1425 , OP_EQ ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1425 , OP_GE ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1425 , OP_GT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1425 , OP_INC ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1425 , OP_LAND ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1425 , OP_LE ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1425 , OP_LOR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1425 , OP_LT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1425 , OP_MOD ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1425 , OP_MUL ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1425 , OP_NEQ ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1425 , OP_OR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1425 , OP_SHL ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1425 , OP_SHR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1425 , OP_SUB ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1425 , OP_XOR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1426 , <cast-expr> ] = GOTO 1204
M [ 1426 , <constant> ] = GOTO 809
M [ 1426 , <num-const> ] = GOTO 810
M [ 1426 , <postfix-expr> ] = GOTO 811
M [ 1426 , <prim-expr> ] = GOTO 812
M [ 1426 , <unary-expr> ] = GOTO 813
M [ 1426 , <unary-op> ] = GOTO 814
M [ 1426 , CHAR_CONST ] = SHIFT 815
M [ 1426 , DELIM_LCURBRACE ] = SHIFT 1576
M [ 1426 , DELIM_LPAR ] = SHIFT 816
M [ 1426 , FLOAT_CONST ] = SHIFT 817
M [ 1426 , IDENTIFIER ] = SHIFT 818
M [ 1426 , INT_CONST ] = SHIFT 819
M [ 1426 , OP_ADD ] = SHIFT 135
M [ 1426 , OP_AND ] = SHIFT 136
M [ 1426 , OP_DEC ] = SHIFT 820
M [ 1426 , OP_INC ] = SHIFT 821
M [ 1426 , OP_LNOT ] = SHIFT 139
M [ 1426 , OP_MUL ] = SHIFT 140
M [ 1426 , OP_NOT ] = SHIFT 141
M [ 1426 , OP_SUB ] = SHIFT 142
M [ 1426 , STR_LITERAL ] = SHIFT 822
M [ 1426 , sizeof ] = SHIFT 823
M [ 1427 , DELIM_RPAR ] = SHIFT 1577
M [ 1428 , DELIM_RPAR ] = SHIFT 1578
M [ 1429 , DELIM_LCURBRACE ] = SHIFT 1419
M [ 1430 , DELIM_COMMA ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , DELIM_LCURBRACE ] = SHIFT 1419
M [ 1430 , DELIM_QUESTION ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , DELIM_RCURBRACE ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_ADD ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_ADDASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_AND ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_ANDASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_ASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_DIV ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_DIVASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_EQ ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_GE ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_GT ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_LAND ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_LE ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_LOR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_LT ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_MOD ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_MODASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_MUL ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_MULASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_NEQ ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_OR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_ORASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_SHL ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_SHLASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_SHR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_SHRASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_SUB ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_SUBASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_XOR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1430 , OP_XORASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1431 , DELIM_COMMA ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 1431 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 1431 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 1431 , DELIM_RPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <identifier-list> DELIM_RPAR 
M [ 1432 , DELIM_COMMA ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 1432 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 1432 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 1432 , DELIM_RPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LPAR <param-type-list> DELIM_RPAR 
M [ 1433 , DELIM_COMMA ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 1433 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 1433 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 1433 , DELIM_RPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <asn-expr> DELIM_RSQBRACKET 
M [ 1434 , DELIM_RSQBRACKET ] = SHIFT 1579
M [ 1435 , DELIM_COMMA ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 1435 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 1435 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 1435 , DELIM_RPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> DELIM_RSQBRACKET 
M [ 1436 , DELIM_LPAR ] = REDUCE <pointer> -> OP_MUL <type-qual-list> <pointer> 
M [ 1436 , DELIM_LSQBRACKET ] = REDUCE <pointer> -> OP_MUL <type-qual-list> <pointer> 
M [ 1436 , DELIM_RPAR ] = REDUCE <pointer> -> OP_MUL <type-qual-list> <pointer> 
M [ 1436 , IDENTIFIER ] = REDUCE <pointer> -> OP_MUL <type-qual-list> <pointer> 
M [ 1437 , DELIM_LPAR ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 1437 , DELIM_LSQBRACKET ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 1437 , DELIM_RPAR ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 1437 , IDENTIFIER ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 1437 , OP_MUL ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 1437 , const ] = REDUCE <type-qual-list> -> <type-qual-list> <type-qual> 
M [ 1438 , DELIM_COMMA ] = REDUCE <direct-abstract-declarator> -> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 1438 , DELIM_RPAR ] = REDUCE <direct-abstract-declarator> -> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 1439 , DELIM_COMMA ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1439 , DELIM_LPAR ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1439 , DELIM_LSQBRACKET ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1439 , DELIM_RPAR ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1439 , IDENTIFIER ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1439 , OP_MUL ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1439 , char ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1439 , const ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1439 , double ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1439 , enum ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1439 , float ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1439 , int ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1439 , long ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1439 , short ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1439 , signed ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1439 , struct ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1439 , typedef ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1439 , unsigned ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1439 , void ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1440 , DELIM_COMMA ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1440 , DELIM_LPAR ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1440 , DELIM_LSQBRACKET ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1440 , DELIM_RPAR ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1440 , IDENTIFIER ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1440 , OP_MUL ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1440 , char ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1440 , const ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1440 , double ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1440 , enum ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1440 , float ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1440 , int ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1440 , long ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1440 , short ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1440 , signed ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1440 , struct ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1440 , typedef ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1440 , unsigned ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1440 , void ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1441 , <enumeration-const> ] = GOTO 82
M [ 1441 , <enumerator> ] = GOTO 543
M [ 1441 , DELIM_RCURBRACE ] = SHIFT 1580
M [ 1441 , IDENTIFIER ] = SHIFT 85
M [ 1442 , DELIM_COMMA ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1442 , DELIM_LPAR ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1442 , DELIM_LSQBRACKET ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1442 , DELIM_RPAR ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1442 , IDENTIFIER ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1442 , OP_MUL ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1442 , char ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1442 , const ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1442 , double ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1442 , enum ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1442 , float ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1442 , int ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1442 , long ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1442 , short ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1442 , signed ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1442 , struct ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1442 , typedef ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1442 , unsigned ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1442 , void ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1443 , DELIM_RSQBRACKET ] = REDUCE <cond-expr> -> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <cond-expr> 
M [ 1444 , DELIM_QUESTION ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , DELIM_RSQBRACKET ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_ADD ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_ADDASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_AND ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_ANDASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_ASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_DIV ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_DIVASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_EQ ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_GE ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_GT ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_LAND ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_LE ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_LOR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_LT ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_MOD ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_MODASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_MUL ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_MULASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_NEQ ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_OR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_ORASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_SHL ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_SHLASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_SHR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_SHRASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_SUB ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_SUBASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_XOR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1444 , OP_XORASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1445 , DELIM_COMMA ] = SHIFT 1581
M [ 1445 , DELIM_RCURBRACE ] = SHIFT 1582
M [ 1446 , DELIM_COMMA ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 1446 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 1446 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 1446 , DELIM_SEMICOLON ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 1447 , DELIM_LPAR ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1447 , DELIM_SEMICOLON ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1447 , IDENTIFIER ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1447 , OP_MUL ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1447 , char ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1447 , const ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1447 , double ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1447 , enum ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1447 , float ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1447 , int ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1447 , long ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1447 , short ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1447 , signed ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1447 , struct ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1447 , unsigned ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1447 , void ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1448 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1448 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1448 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1448 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1448 , DELIM_RCURBRACE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1448 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1448 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1448 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1448 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1448 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1448 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1448 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1448 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1448 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1448 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1448 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1448 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1448 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1448 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1448 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1448 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1448 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1448 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1448 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1448 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1448 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1448 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1449 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1449 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1449 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1449 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1449 , DELIM_RCURBRACE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1449 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1449 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1449 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1449 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1449 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1449 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1449 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1449 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1449 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1449 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1449 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1449 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1449 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1449 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1449 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1449 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1449 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1449 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1449 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1449 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1449 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1449 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1450 , <additive-expr> ] = GOTO 412
M [ 1450 , <and-expr> ] = GOTO 413
M [ 1450 , <asn-expr> ] = GOTO 414
M [ 1450 , <cast-expr> ] = GOTO 415
M [ 1450 , <cond-expr> ] = GOTO 416
M [ 1450 , <constant> ] = GOTO 417
M [ 1450 , <designation> ] = GOTO 418
M [ 1450 , <designator-list> ] = GOTO 419
M [ 1450 , <designator> ] = GOTO 420
M [ 1450 , <eq-expr> ] = GOTO 421
M [ 1450 , <exc-or-expr> ] = GOTO 422
M [ 1450 , <inc-or-expr> ] = GOTO 423
M [ 1450 , <initializer-list> ] = GOTO 1583
M [ 1450 , <initializer> ] = GOTO 425
M [ 1450 , <land-expr> ] = GOTO 426
M [ 1450 , <lor-expr> ] = GOTO 427
M [ 1450 , <multiplicative-expr> ] = GOTO 428
M [ 1450 , <num-const> ] = GOTO 429
M [ 1450 , <postfix-expr> ] = GOTO 430
M [ 1450 , <prim-expr> ] = GOTO 431
M [ 1450 , <rel-expr> ] = GOTO 432
M [ 1450 , <shift-expr> ] = GOTO 433
M [ 1450 , <unary-expr> ] = GOTO 434
M [ 1450 , <unary-op> ] = GOTO 435
M [ 1450 , CHAR_CONST ] = SHIFT 436
M [ 1450 , DELIM_LCURBRACE ] = SHIFT 437
M [ 1450 , DELIM_LPAR ] = SHIFT 438
M [ 1450 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 1450 , FLOAT_CONST ] = SHIFT 440
M [ 1450 , IDENTIFIER ] = SHIFT 441
M [ 1450 , INT_CONST ] = SHIFT 442
M [ 1450 , OP_ADD ] = SHIFT 135
M [ 1450 , OP_AND ] = SHIFT 136
M [ 1450 , OP_DEC ] = SHIFT 443
M [ 1450 , OP_DOT ] = SHIFT 444
M [ 1450 , OP_INC ] = SHIFT 445
M [ 1450 , OP_LNOT ] = SHIFT 139
M [ 1450 , OP_MUL ] = SHIFT 140
M [ 1450 , OP_NOT ] = SHIFT 141
M [ 1450 , OP_SUB ] = SHIFT 142
M [ 1450 , STR_LITERAL ] = SHIFT 446
M [ 1450 , sizeof ] = SHIFT 447
M [ 1451 , DELIM_LCURBRACE ] = SHIFT 1450
M [ 1452 , DELIM_COMMA ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1452 , DELIM_LCURBRACE ] = SHIFT 1450
M [ 1452 , DELIM_QUESTION ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1452 , DELIM_RCURBRACE ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1452 , OP_ADD ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1452 , OP_AND ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1452 , OP_DIV ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1452 , OP_EQ ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1452 , OP_GE ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1452 , OP_GT ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1452 , OP_LAND ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1452 , OP_LE ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1452 , OP_LOR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1452 , OP_LT ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1452 , OP_MOD ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1452 , OP_MUL ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1452 , OP_NEQ ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1452 , OP_OR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1452 , OP_SHL ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1452 , OP_SHR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1452 , OP_SUB ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1452 , OP_XOR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1453 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1453 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1453 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1453 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1453 , DELIM_SEMICOLON ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1453 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1453 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1453 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1453 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1453 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1453 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1453 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1453 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1453 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1453 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1453 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1453 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1453 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1453 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1453 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1453 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1453 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1453 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1453 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1453 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1453 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1453 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1454 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1454 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1454 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1454 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1454 , DELIM_SEMICOLON ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1454 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1454 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1454 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1454 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1454 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1454 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1454 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1454 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1454 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1454 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1454 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1454 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1454 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1454 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1454 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1454 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1454 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1454 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1454 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1454 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1454 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1454 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1455 , <additive-expr> ] = GOTO 412
M [ 1455 , <and-expr> ] = GOTO 413
M [ 1455 , <asn-expr> ] = GOTO 414
M [ 1455 , <cast-expr> ] = GOTO 415
M [ 1455 , <cond-expr> ] = GOTO 416
M [ 1455 , <constant> ] = GOTO 417
M [ 1455 , <designation> ] = GOTO 418
M [ 1455 , <designator-list> ] = GOTO 419
M [ 1455 , <designator> ] = GOTO 420
M [ 1455 , <eq-expr> ] = GOTO 421
M [ 1455 , <exc-or-expr> ] = GOTO 422
M [ 1455 , <inc-or-expr> ] = GOTO 423
M [ 1455 , <initializer-list> ] = GOTO 1584
M [ 1455 , <initializer> ] = GOTO 425
M [ 1455 , <land-expr> ] = GOTO 426
M [ 1455 , <lor-expr> ] = GOTO 427
M [ 1455 , <multiplicative-expr> ] = GOTO 428
M [ 1455 , <num-const> ] = GOTO 429
M [ 1455 , <postfix-expr> ] = GOTO 430
M [ 1455 , <prim-expr> ] = GOTO 431
M [ 1455 , <rel-expr> ] = GOTO 432
M [ 1455 , <shift-expr> ] = GOTO 433
M [ 1455 , <unary-expr> ] = GOTO 434
M [ 1455 , <unary-op> ] = GOTO 435
M [ 1455 , CHAR_CONST ] = SHIFT 436
M [ 1455 , DELIM_LCURBRACE ] = SHIFT 437
M [ 1455 , DELIM_LPAR ] = SHIFT 438
M [ 1455 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 1455 , FLOAT_CONST ] = SHIFT 440
M [ 1455 , IDENTIFIER ] = SHIFT 441
M [ 1455 , INT_CONST ] = SHIFT 442
M [ 1455 , OP_ADD ] = SHIFT 135
M [ 1455 , OP_AND ] = SHIFT 136
M [ 1455 , OP_DEC ] = SHIFT 443
M [ 1455 , OP_DOT ] = SHIFT 444
M [ 1455 , OP_INC ] = SHIFT 445
M [ 1455 , OP_LNOT ] = SHIFT 139
M [ 1455 , OP_MUL ] = SHIFT 140
M [ 1455 , OP_NOT ] = SHIFT 141
M [ 1455 , OP_SUB ] = SHIFT 142
M [ 1455 , STR_LITERAL ] = SHIFT 446
M [ 1455 , sizeof ] = SHIFT 447
M [ 1456 , DELIM_LCURBRACE ] = SHIFT 1455
M [ 1457 , DELIM_COMMA ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1457 , DELIM_LCURBRACE ] = SHIFT 1455
M [ 1457 , DELIM_QUESTION ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1457 , DELIM_SEMICOLON ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1457 , OP_ADD ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1457 , OP_AND ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1457 , OP_DIV ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1457 , OP_EQ ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1457 , OP_GE ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1457 , OP_GT ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1457 , OP_LAND ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1457 , OP_LE ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1457 , OP_LOR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1457 , OP_LT ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1457 , OP_MOD ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1457 , OP_MUL ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1457 , OP_NEQ ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1457 , OP_OR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1457 , OP_SHL ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1457 , OP_SHR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1457 , OP_SUB ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1457 , OP_XOR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1458 , <additive-expr> ] = GOTO 299
M [ 1458 , <and-expr> ] = GOTO 300
M [ 1458 , <arg-expr-list> ] = GOTO 1585
M [ 1458 , <asn-expr> ] = GOTO 613
M [ 1458 , <cast-expr> ] = GOTO 302
M [ 1458 , <cond-expr> ] = GOTO 303
M [ 1458 , <constant> ] = GOTO 304
M [ 1458 , <eq-expr> ] = GOTO 306
M [ 1458 , <exc-or-expr> ] = GOTO 307
M [ 1458 , <inc-or-expr> ] = GOTO 309
M [ 1458 , <land-expr> ] = GOTO 310
M [ 1458 , <lor-expr> ] = GOTO 311
M [ 1458 , <multiplicative-expr> ] = GOTO 312
M [ 1458 , <num-const> ] = GOTO 313
M [ 1458 , <postfix-expr> ] = GOTO 314
M [ 1458 , <prim-expr> ] = GOTO 315
M [ 1458 , <rel-expr> ] = GOTO 316
M [ 1458 , <shift-expr> ] = GOTO 317
M [ 1458 , <unary-expr> ] = GOTO 324
M [ 1458 , <unary-op> ] = GOTO 325
M [ 1458 , CHAR_CONST ] = SHIFT 326
M [ 1458 , DELIM_LPAR ] = SHIFT 327
M [ 1458 , DELIM_RPAR ] = SHIFT 1586
M [ 1458 , FLOAT_CONST ] = SHIFT 328
M [ 1458 , IDENTIFIER ] = SHIFT 329
M [ 1458 , INT_CONST ] = SHIFT 330
M [ 1458 , OP_ADD ] = SHIFT 135
M [ 1458 , OP_AND ] = SHIFT 136
M [ 1458 , OP_DEC ] = SHIFT 331
M [ 1458 , OP_INC ] = SHIFT 332
M [ 1458 , OP_LNOT ] = SHIFT 139
M [ 1458 , OP_MUL ] = SHIFT 140
M [ 1458 , OP_NOT ] = SHIFT 141
M [ 1458 , OP_SUB ] = SHIFT 142
M [ 1458 , STR_LITERAL ] = SHIFT 333
M [ 1458 , sizeof ] = SHIFT 343
M [ 1459 , <additive-expr> ] = GOTO 615
M [ 1459 , <and-expr> ] = GOTO 616
M [ 1459 , <asn-expr> ] = GOTO 617
M [ 1459 , <cast-expr> ] = GOTO 618
M [ 1459 , <cond-expr> ] = GOTO 619
M [ 1459 , <constant> ] = GOTO 620
M [ 1459 , <eq-expr> ] = GOTO 621
M [ 1459 , <exc-or-expr> ] = GOTO 622
M [ 1459 , <expr> ] = GOTO 1587
M [ 1459 , <inc-or-expr> ] = GOTO 624
M [ 1459 , <land-expr> ] = GOTO 625
M [ 1459 , <lor-expr> ] = GOTO 626
M [ 1459 , <multiplicative-expr> ] = GOTO 627
M [ 1459 , <num-const> ] = GOTO 628
M [ 1459 , <postfix-expr> ] = GOTO 629
M [ 1459 , <prim-expr> ] = GOTO 630
M [ 1459 , <rel-expr> ] = GOTO 631
M [ 1459 , <shift-expr> ] = GOTO 632
M [ 1459 , <unary-expr> ] = GOTO 633
M [ 1459 , <unary-op> ] = GOTO 634
M [ 1459 , CHAR_CONST ] = SHIFT 635
M [ 1459 , DELIM_LPAR ] = SHIFT 636
M [ 1459 , FLOAT_CONST ] = SHIFT 637
M [ 1459 , IDENTIFIER ] = SHIFT 638
M [ 1459 , INT_CONST ] = SHIFT 639
M [ 1459 , OP_ADD ] = SHIFT 135
M [ 1459 , OP_AND ] = SHIFT 136
M [ 1459 , OP_DEC ] = SHIFT 640
M [ 1459 , OP_INC ] = SHIFT 641
M [ 1459 , OP_LNOT ] = SHIFT 139
M [ 1459 , OP_MUL ] = SHIFT 140
M [ 1459 , OP_NOT ] = SHIFT 141
M [ 1459 , OP_SUB ] = SHIFT 142
M [ 1459 , STR_LITERAL ] = SHIFT 642
M [ 1459 , sizeof ] = SHIFT 643
M [ 1460 , IDENTIFIER ] = SHIFT 1588
M [ 1461 , DELIM_COLON ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1461 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1461 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1461 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1461 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1461 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1461 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1461 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1461 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1461 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1461 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1461 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1461 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1461 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1461 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1461 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1461 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1461 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1461 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1461 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1461 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1461 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1461 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1461 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1461 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1461 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1461 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1462 , IDENTIFIER ] = SHIFT 1589
M [ 1463 , DELIM_COLON ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1463 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1463 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1463 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1463 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1463 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1463 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1463 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1463 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1463 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1463 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1463 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1463 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1463 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1463 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1463 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1463 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1463 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1463 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1463 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1463 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1463 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1463 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1463 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1463 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1463 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1463 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1464 , DELIM_COLON ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1464 , DELIM_COMMA ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1464 , DELIM_QUESTION ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1464 , OP_ADD ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1464 , OP_AND ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1464 , OP_DIV ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1464 , OP_EQ ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1464 , OP_GE ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1464 , OP_GT ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1464 , OP_LAND ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1464 , OP_LE ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1464 , OP_LOR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1464 , OP_LT ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1464 , OP_MOD ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1464 , OP_MUL ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1464 , OP_NEQ ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1464 , OP_OR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1464 , OP_SHL ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1464 , OP_SHR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1464 , OP_SUB ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1464 , OP_XOR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1465 , DELIM_COMMA ] = SHIFT 661
M [ 1465 , DELIM_RPAR ] = SHIFT 1590
M [ 1466 , DELIM_RPAR ] = SHIFT 1591
M [ 1467 , DELIM_COLON ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1467 , DELIM_COMMA ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1467 , DELIM_QUESTION ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1467 , OP_ADD ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1467 , OP_AND ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1467 , OP_DIV ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1467 , OP_EQ ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1467 , OP_GE ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1467 , OP_GT ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1467 , OP_LAND ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1467 , OP_LE ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1467 , OP_LOR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1467 , OP_LT ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1467 , OP_MOD ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1467 , OP_MUL ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1467 , OP_NEQ ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1467 , OP_OR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1467 , OP_SHL ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1467 , OP_SHR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1467 , OP_SUB ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1467 , OP_XOR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1468 , <additive-expr> ] = GOTO 299
M [ 1468 , <and-expr> ] = GOTO 300
M [ 1468 , <asn-expr> ] = GOTO 301
M [ 1468 , <cast-expr> ] = GOTO 302
M [ 1468 , <cond-expr> ] = GOTO 303
M [ 1468 , <constant> ] = GOTO 304
M [ 1468 , <enum-spec> ] = GOTO 305
M [ 1468 , <eq-expr> ] = GOTO 306
M [ 1468 , <exc-or-expr> ] = GOTO 307
M [ 1468 , <expr> ] = GOTO 1465
M [ 1468 , <inc-or-expr> ] = GOTO 309
M [ 1468 , <land-expr> ] = GOTO 310
M [ 1468 , <lor-expr> ] = GOTO 311
M [ 1468 , <multiplicative-expr> ] = GOTO 312
M [ 1468 , <num-const> ] = GOTO 313
M [ 1468 , <postfix-expr> ] = GOTO 314
M [ 1468 , <prim-expr> ] = GOTO 315
M [ 1468 , <rel-expr> ] = GOTO 316
M [ 1468 , <shift-expr> ] = GOTO 317
M [ 1468 , <spec-qual-list> ] = GOTO 318
M [ 1468 , <struct-union-spec> ] = GOTO 319
M [ 1468 , <struct-union> ] = GOTO 320
M [ 1468 , <type-name> ] = GOTO 1592
M [ 1468 , <type-qual> ] = GOTO 322
M [ 1468 , <type-spec> ] = GOTO 323
M [ 1468 , <unary-expr> ] = GOTO 324
M [ 1468 , <unary-op> ] = GOTO 325
M [ 1468 , CHAR_CONST ] = SHIFT 326
M [ 1468 , DELIM_LPAR ] = SHIFT 327
M [ 1468 , FLOAT_CONST ] = SHIFT 328
M [ 1468 , IDENTIFIER ] = SHIFT 329
M [ 1468 , INT_CONST ] = SHIFT 330
M [ 1468 , OP_ADD ] = SHIFT 135
M [ 1468 , OP_AND ] = SHIFT 136
M [ 1468 , OP_DEC ] = SHIFT 331
M [ 1468 , OP_INC ] = SHIFT 332
M [ 1468 , OP_LNOT ] = SHIFT 139
M [ 1468 , OP_MUL ] = SHIFT 140
M [ 1468 , OP_NOT ] = SHIFT 141
M [ 1468 , OP_SUB ] = SHIFT 142
M [ 1468 , STR_LITERAL ] = SHIFT 333
M [ 1468 , char ] = SHIFT 334
M [ 1468 , const ] = SHIFT 335
M [ 1468 , double ] = SHIFT 336
M [ 1468 , enum ] = SHIFT 337
M [ 1468 , float ] = SHIFT 338
M [ 1468 , int ] = SHIFT 339
M [ 1468 , long ] = SHIFT 340
M [ 1468 , short ] = SHIFT 341
M [ 1468 , signed ] = SHIFT 342
M [ 1468 , sizeof ] = SHIFT 343
M [ 1468 , struct ] = SHIFT 21
M [ 1468 , unsigned ] = SHIFT 344
M [ 1468 , void ] = SHIFT 345
M [ 1469 , DELIM_COLON ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1469 , DELIM_COMMA ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1469 , DELIM_QUESTION ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1469 , OP_ADD ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1469 , OP_AND ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1469 , OP_DIV ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1469 , OP_EQ ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1469 , OP_GE ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1469 , OP_GT ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1469 , OP_LAND ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1469 , OP_LE ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1469 , OP_LOR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1469 , OP_LT ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1469 , OP_MOD ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1469 , OP_MUL ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1469 , OP_NEQ ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1469 , OP_OR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1469 , OP_SHL ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1469 , OP_SHR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1469 , OP_SUB ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1469 , OP_XOR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1470 , DELIM_COLON ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1470 , DELIM_COMMA ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1470 , DELIM_QUESTION ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1470 , OP_ADD ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1470 , OP_AND ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1470 , OP_DIV ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1470 , OP_EQ ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1470 , OP_GE ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1470 , OP_GT ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1470 , OP_LAND ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1470 , OP_LE ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1470 , OP_LOR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1470 , OP_LT ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1470 , OP_MOD ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1470 , OP_MUL ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1470 , OP_NEQ ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1470 , OP_OR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1470 , OP_SHL ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1470 , OP_SHR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1470 , OP_SUB ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1470 , OP_XOR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1471 , <additive-expr> ] = GOTO 299
M [ 1471 , <and-expr> ] = GOTO 300
M [ 1471 , <asn-expr> ] = GOTO 301
M [ 1471 , <cast-expr> ] = GOTO 302
M [ 1471 , <cond-expr> ] = GOTO 303
M [ 1471 , <constant> ] = GOTO 304
M [ 1471 , <enum-spec> ] = GOTO 305
M [ 1471 , <eq-expr> ] = GOTO 306
M [ 1471 , <exc-or-expr> ] = GOTO 307
M [ 1471 , <expr> ] = GOTO 1465
M [ 1471 , <inc-or-expr> ] = GOTO 309
M [ 1471 , <land-expr> ] = GOTO 310
M [ 1471 , <lor-expr> ] = GOTO 311
M [ 1471 , <multiplicative-expr> ] = GOTO 312
M [ 1471 , <num-const> ] = GOTO 313
M [ 1471 , <postfix-expr> ] = GOTO 314
M [ 1471 , <prim-expr> ] = GOTO 315
M [ 1471 , <rel-expr> ] = GOTO 316
M [ 1471 , <shift-expr> ] = GOTO 317
M [ 1471 , <spec-qual-list> ] = GOTO 318
M [ 1471 , <struct-union-spec> ] = GOTO 319
M [ 1471 , <struct-union> ] = GOTO 320
M [ 1471 , <type-name> ] = GOTO 1593
M [ 1471 , <type-qual> ] = GOTO 322
M [ 1471 , <type-spec> ] = GOTO 323
M [ 1471 , <unary-expr> ] = GOTO 324
M [ 1471 , <unary-op> ] = GOTO 325
M [ 1471 , CHAR_CONST ] = SHIFT 326
M [ 1471 , DELIM_LPAR ] = SHIFT 327
M [ 1471 , FLOAT_CONST ] = SHIFT 328
M [ 1471 , IDENTIFIER ] = SHIFT 329
M [ 1471 , INT_CONST ] = SHIFT 330
M [ 1471 , OP_ADD ] = SHIFT 135
M [ 1471 , OP_AND ] = SHIFT 136
M [ 1471 , OP_DEC ] = SHIFT 331
M [ 1471 , OP_INC ] = SHIFT 332
M [ 1471 , OP_LNOT ] = SHIFT 139
M [ 1471 , OP_MUL ] = SHIFT 140
M [ 1471 , OP_NOT ] = SHIFT 141
M [ 1471 , OP_SUB ] = SHIFT 142
M [ 1471 , STR_LITERAL ] = SHIFT 333
M [ 1471 , char ] = SHIFT 334
M [ 1471 , const ] = SHIFT 335
M [ 1471 , double ] = SHIFT 336
M [ 1471 , enum ] = SHIFT 337
M [ 1471 , float ] = SHIFT 338
M [ 1471 , int ] = SHIFT 339
M [ 1471 , long ] = SHIFT 340
M [ 1471 , short ] = SHIFT 341
M [ 1471 , signed ] = SHIFT 342
M [ 1471 , sizeof ] = SHIFT 343
M [ 1471 , struct ] = SHIFT 21
M [ 1471 , unsigned ] = SHIFT 344
M [ 1471 , void ] = SHIFT 345
M [ 1472 , <additive-expr> ] = GOTO 579
M [ 1472 , <and-expr> ] = GOTO 580
M [ 1472 , <cast-expr> ] = GOTO 582
M [ 1472 , <cond-expr> ] = GOTO 1594
M [ 1472 , <constant> ] = GOTO 1237
M [ 1472 , <eq-expr> ] = GOTO 585
M [ 1472 , <exc-or-expr> ] = GOTO 586
M [ 1472 , <inc-or-expr> ] = GOTO 588
M [ 1472 , <land-expr> ] = GOTO 589
M [ 1472 , <lor-expr> ] = GOTO 590
M [ 1472 , <multiplicative-expr> ] = GOTO 591
M [ 1472 , <num-const> ] = GOTO 1239
M [ 1472 , <postfix-expr> ] = GOTO 1240
M [ 1472 , <prim-expr> ] = GOTO 1241
M [ 1472 , <rel-expr> ] = GOTO 595
M [ 1472 , <shift-expr> ] = GOTO 596
M [ 1472 , <unary-expr> ] = GOTO 1242
M [ 1472 , <unary-op> ] = GOTO 1243
M [ 1472 , CHAR_CONST ] = SHIFT 1244
M [ 1472 , DELIM_LPAR ] = SHIFT 1245
M [ 1472 , FLOAT_CONST ] = SHIFT 1246
M [ 1472 , IDENTIFIER ] = SHIFT 1247
M [ 1472 , INT_CONST ] = SHIFT 1248
M [ 1472 , OP_ADD ] = SHIFT 135
M [ 1472 , OP_AND ] = SHIFT 136
M [ 1472 , OP_DEC ] = SHIFT 1249
M [ 1472 , OP_INC ] = SHIFT 1250
M [ 1472 , OP_LNOT ] = SHIFT 139
M [ 1472 , OP_MUL ] = SHIFT 140
M [ 1472 , OP_NOT ] = SHIFT 141
M [ 1472 , OP_SUB ] = SHIFT 142
M [ 1472 , STR_LITERAL ] = SHIFT 1251
M [ 1472 , sizeof ] = SHIFT 1252
M [ 1473 , DELIM_COLON ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1473 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1474 , DELIM_COLON ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1474 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1475 , <cast-expr> ] = GOTO 1595
M [ 1475 , <constant> ] = GOTO 584
M [ 1475 , <num-const> ] = GOTO 592
M [ 1475 , <postfix-expr> ] = GOTO 593
M [ 1475 , <prim-expr> ] = GOTO 594
M [ 1475 , <unary-expr> ] = GOTO 964
M [ 1475 , <unary-op> ] = GOTO 598
M [ 1475 , CHAR_CONST ] = SHIFT 599
M [ 1475 , DELIM_LCURBRACE ] = SHIFT 1477
M [ 1475 , DELIM_LPAR ] = SHIFT 965
M [ 1475 , FLOAT_CONST ] = SHIFT 601
M [ 1475 , IDENTIFIER ] = SHIFT 602
M [ 1475 , INT_CONST ] = SHIFT 603
M [ 1475 , OP_ADD ] = SHIFT 135
M [ 1475 , OP_AND ] = SHIFT 136
M [ 1475 , OP_DEC ] = SHIFT 604
M [ 1475 , OP_INC ] = SHIFT 605
M [ 1475 , OP_LNOT ] = SHIFT 139
M [ 1475 , OP_MUL ] = SHIFT 140
M [ 1475 , OP_NOT ] = SHIFT 141
M [ 1475 , OP_SUB ] = SHIFT 142
M [ 1475 , STR_LITERAL ] = SHIFT 606
M [ 1475 , sizeof ] = SHIFT 607
M [ 1476 , DELIM_COLON ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1476 , DELIM_COMMA ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1476 , DELIM_QUESTION ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1476 , OP_ADD ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1476 , OP_AND ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1476 , OP_DIV ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1476 , OP_EQ ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1476 , OP_GE ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1476 , OP_GT ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1476 , OP_LAND ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1476 , OP_LE ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1476 , OP_LOR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1476 , OP_LT ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1476 , OP_MOD ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1476 , OP_MUL ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1476 , OP_NEQ ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1476 , OP_OR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1476 , OP_SHL ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1476 , OP_SHR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1476 , OP_SUB ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1476 , OP_XOR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1477 , <additive-expr> ] = GOTO 412
M [ 1477 , <and-expr> ] = GOTO 413
M [ 1477 , <asn-expr> ] = GOTO 414
M [ 1477 , <cast-expr> ] = GOTO 415
M [ 1477 , <cond-expr> ] = GOTO 416
M [ 1477 , <constant> ] = GOTO 417
M [ 1477 , <designation> ] = GOTO 418
M [ 1477 , <designator-list> ] = GOTO 419
M [ 1477 , <designator> ] = GOTO 420
M [ 1477 , <eq-expr> ] = GOTO 421
M [ 1477 , <exc-or-expr> ] = GOTO 422
M [ 1477 , <inc-or-expr> ] = GOTO 423
M [ 1477 , <initializer-list> ] = GOTO 1596
M [ 1477 , <initializer> ] = GOTO 425
M [ 1477 , <land-expr> ] = GOTO 426
M [ 1477 , <lor-expr> ] = GOTO 427
M [ 1477 , <multiplicative-expr> ] = GOTO 428
M [ 1477 , <num-const> ] = GOTO 429
M [ 1477 , <postfix-expr> ] = GOTO 430
M [ 1477 , <prim-expr> ] = GOTO 431
M [ 1477 , <rel-expr> ] = GOTO 432
M [ 1477 , <shift-expr> ] = GOTO 433
M [ 1477 , <unary-expr> ] = GOTO 434
M [ 1477 , <unary-op> ] = GOTO 435
M [ 1477 , CHAR_CONST ] = SHIFT 436
M [ 1477 , DELIM_LCURBRACE ] = SHIFT 437
M [ 1477 , DELIM_LPAR ] = SHIFT 438
M [ 1477 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 1477 , FLOAT_CONST ] = SHIFT 440
M [ 1477 , IDENTIFIER ] = SHIFT 441
M [ 1477 , INT_CONST ] = SHIFT 442
M [ 1477 , OP_ADD ] = SHIFT 135
M [ 1477 , OP_AND ] = SHIFT 136
M [ 1477 , OP_DEC ] = SHIFT 443
M [ 1477 , OP_DOT ] = SHIFT 444
M [ 1477 , OP_INC ] = SHIFT 445
M [ 1477 , OP_LNOT ] = SHIFT 139
M [ 1477 , OP_MUL ] = SHIFT 140
M [ 1477 , OP_NOT ] = SHIFT 141
M [ 1477 , OP_SUB ] = SHIFT 142
M [ 1477 , STR_LITERAL ] = SHIFT 446
M [ 1477 , sizeof ] = SHIFT 447
M [ 1478 , DELIM_LCURBRACE ] = SHIFT 1477
M [ 1479 , DELIM_COLON ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , DELIM_COMMA ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , DELIM_LCURBRACE ] = SHIFT 1477
M [ 1479 , DELIM_QUESTION ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_ADD ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_ADDASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_AND ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_ANDASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_ASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_DIV ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_DIVASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_EQ ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_GE ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_GT ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_LAND ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_LE ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_LOR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_LT ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_MOD ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_MODASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_MUL ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_MULASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_NEQ ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_OR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_ORASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_SHL ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_SHLASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_SHR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_SHRASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_SUB ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_SUBASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_XOR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1479 , OP_XORASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1480 , <additive-expr> ] = GOTO 299
M [ 1480 , <and-expr> ] = GOTO 300
M [ 1480 , <arg-expr-list> ] = GOTO 1597
M [ 1480 , <asn-expr> ] = GOTO 613
M [ 1480 , <cast-expr> ] = GOTO 302
M [ 1480 , <cond-expr> ] = GOTO 303
M [ 1480 , <constant> ] = GOTO 304
M [ 1480 , <eq-expr> ] = GOTO 306
M [ 1480 , <exc-or-expr> ] = GOTO 307
M [ 1480 , <inc-or-expr> ] = GOTO 309
M [ 1480 , <land-expr> ] = GOTO 310
M [ 1480 , <lor-expr> ] = GOTO 311
M [ 1480 , <multiplicative-expr> ] = GOTO 312
M [ 1480 , <num-const> ] = GOTO 313
M [ 1480 , <postfix-expr> ] = GOTO 314
M [ 1480 , <prim-expr> ] = GOTO 315
M [ 1480 , <rel-expr> ] = GOTO 316
M [ 1480 , <shift-expr> ] = GOTO 317
M [ 1480 , <unary-expr> ] = GOTO 324
M [ 1480 , <unary-op> ] = GOTO 325
M [ 1480 , CHAR_CONST ] = SHIFT 326
M [ 1480 , DELIM_LPAR ] = SHIFT 327
M [ 1480 , DELIM_RPAR ] = SHIFT 1598
M [ 1480 , FLOAT_CONST ] = SHIFT 328
M [ 1480 , IDENTIFIER ] = SHIFT 329
M [ 1480 , INT_CONST ] = SHIFT 330
M [ 1480 , OP_ADD ] = SHIFT 135
M [ 1480 , OP_AND ] = SHIFT 136
M [ 1480 , OP_DEC ] = SHIFT 331
M [ 1480 , OP_INC ] = SHIFT 332
M [ 1480 , OP_LNOT ] = SHIFT 139
M [ 1480 , OP_MUL ] = SHIFT 140
M [ 1480 , OP_NOT ] = SHIFT 141
M [ 1480 , OP_SUB ] = SHIFT 142
M [ 1480 , STR_LITERAL ] = SHIFT 333
M [ 1480 , sizeof ] = SHIFT 343
M [ 1481 , <additive-expr> ] = GOTO 615
M [ 1481 , <and-expr> ] = GOTO 616
M [ 1481 , <asn-expr> ] = GOTO 617
M [ 1481 , <cast-expr> ] = GOTO 618
M [ 1481 , <cond-expr> ] = GOTO 619
M [ 1481 , <constant> ] = GOTO 620
M [ 1481 , <eq-expr> ] = GOTO 621
M [ 1481 , <exc-or-expr> ] = GOTO 622
M [ 1481 , <expr> ] = GOTO 1599
M [ 1481 , <inc-or-expr> ] = GOTO 624
M [ 1481 , <land-expr> ] = GOTO 625
M [ 1481 , <lor-expr> ] = GOTO 626
M [ 1481 , <multiplicative-expr> ] = GOTO 627
M [ 1481 , <num-const> ] = GOTO 628
M [ 1481 , <postfix-expr> ] = GOTO 629
M [ 1481 , <prim-expr> ] = GOTO 630
M [ 1481 , <rel-expr> ] = GOTO 631
M [ 1481 , <shift-expr> ] = GOTO 632
M [ 1481 , <unary-expr> ] = GOTO 633
M [ 1481 , <unary-op> ] = GOTO 634
M [ 1481 , CHAR_CONST ] = SHIFT 635
M [ 1481 , DELIM_LPAR ] = SHIFT 636
M [ 1481 , FLOAT_CONST ] = SHIFT 637
M [ 1481 , IDENTIFIER ] = SHIFT 638
M [ 1481 , INT_CONST ] = SHIFT 639
M [ 1481 , OP_ADD ] = SHIFT 135
M [ 1481 , OP_AND ] = SHIFT 136
M [ 1481 , OP_DEC ] = SHIFT 640
M [ 1481 , OP_INC ] = SHIFT 641
M [ 1481 , OP_LNOT ] = SHIFT 139
M [ 1481 , OP_MUL ] = SHIFT 140
M [ 1481 , OP_NOT ] = SHIFT 141
M [ 1481 , OP_SUB ] = SHIFT 142
M [ 1481 , STR_LITERAL ] = SHIFT 642
M [ 1481 , sizeof ] = SHIFT 643
M [ 1482 , IDENTIFIER ] = SHIFT 1600
M [ 1483 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1483 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1483 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1483 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1483 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1483 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1483 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1483 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1483 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1483 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1483 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1483 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1483 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1483 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1483 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1483 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1483 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1483 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1483 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1483 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1483 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1483 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1483 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1483 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1483 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1483 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1483 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DEC 
M [ 1484 , IDENTIFIER ] = SHIFT 1601
M [ 1485 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1485 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1485 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1485 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1485 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1485 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1485 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1485 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1485 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1485 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1485 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1485 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1485 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1485 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1485 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1485 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1485 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1485 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1485 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1485 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1485 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1485 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1485 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1485 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1485 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1485 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1485 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_INC 
M [ 1486 , DELIM_COMMA ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1486 , DELIM_QUESTION ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1486 , DELIM_RSQBRACKET ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1486 , OP_ADD ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1486 , OP_AND ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1486 , OP_DIV ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1486 , OP_EQ ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1486 , OP_GE ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1486 , OP_GT ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1486 , OP_LAND ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1486 , OP_LE ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1486 , OP_LOR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1486 , OP_LT ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1486 , OP_MOD ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1486 , OP_MUL ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1486 , OP_NEQ ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1486 , OP_OR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1486 , OP_SHL ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1486 , OP_SHR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1486 , OP_SUB ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1486 , OP_XOR ] = REDUCE <unary-expr> -> <unary-op> <cast-expr> 
M [ 1487 , DELIM_COMMA ] = SHIFT 661
M [ 1487 , DELIM_RPAR ] = SHIFT 1602
M [ 1488 , DELIM_RPAR ] = SHIFT 1603
M [ 1489 , DELIM_COMMA ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1489 , DELIM_QUESTION ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1489 , DELIM_RSQBRACKET ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1489 , OP_ADD ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1489 , OP_AND ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1489 , OP_DIV ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1489 , OP_EQ ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1489 , OP_GE ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1489 , OP_GT ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1489 , OP_LAND ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1489 , OP_LE ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1489 , OP_LOR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1489 , OP_LT ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1489 , OP_MOD ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1489 , OP_MUL ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1489 , OP_NEQ ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1489 , OP_OR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1489 , OP_SHL ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1489 , OP_SHR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1489 , OP_SUB ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1489 , OP_XOR ] = REDUCE <unary-expr> -> OP_DEC <unary-expr> 
M [ 1490 , <additive-expr> ] = GOTO 299
M [ 1490 , <and-expr> ] = GOTO 300
M [ 1490 , <asn-expr> ] = GOTO 301
M [ 1490 , <cast-expr> ] = GOTO 302
M [ 1490 , <cond-expr> ] = GOTO 303
M [ 1490 , <constant> ] = GOTO 304
M [ 1490 , <enum-spec> ] = GOTO 305
M [ 1490 , <eq-expr> ] = GOTO 306
M [ 1490 , <exc-or-expr> ] = GOTO 307
M [ 1490 , <expr> ] = GOTO 1487
M [ 1490 , <inc-or-expr> ] = GOTO 309
M [ 1490 , <land-expr> ] = GOTO 310
M [ 1490 , <lor-expr> ] = GOTO 311
M [ 1490 , <multiplicative-expr> ] = GOTO 312
M [ 1490 , <num-const> ] = GOTO 313
M [ 1490 , <postfix-expr> ] = GOTO 314
M [ 1490 , <prim-expr> ] = GOTO 315
M [ 1490 , <rel-expr> ] = GOTO 316
M [ 1490 , <shift-expr> ] = GOTO 317
M [ 1490 , <spec-qual-list> ] = GOTO 318
M [ 1490 , <struct-union-spec> ] = GOTO 319
M [ 1490 , <struct-union> ] = GOTO 320
M [ 1490 , <type-name> ] = GOTO 1604
M [ 1490 , <type-qual> ] = GOTO 322
M [ 1490 , <type-spec> ] = GOTO 323
M [ 1490 , <unary-expr> ] = GOTO 324
M [ 1490 , <unary-op> ] = GOTO 325
M [ 1490 , CHAR_CONST ] = SHIFT 326
M [ 1490 , DELIM_LPAR ] = SHIFT 327
M [ 1490 , FLOAT_CONST ] = SHIFT 328
M [ 1490 , IDENTIFIER ] = SHIFT 329
M [ 1490 , INT_CONST ] = SHIFT 330
M [ 1490 , OP_ADD ] = SHIFT 135
M [ 1490 , OP_AND ] = SHIFT 136
M [ 1490 , OP_DEC ] = SHIFT 331
M [ 1490 , OP_INC ] = SHIFT 332
M [ 1490 , OP_LNOT ] = SHIFT 139
M [ 1490 , OP_MUL ] = SHIFT 140
M [ 1490 , OP_NOT ] = SHIFT 141
M [ 1490 , OP_SUB ] = SHIFT 142
M [ 1490 , STR_LITERAL ] = SHIFT 333
M [ 1490 , char ] = SHIFT 334
M [ 1490 , const ] = SHIFT 335
M [ 1490 , double ] = SHIFT 336
M [ 1490 , enum ] = SHIFT 337
M [ 1490 , float ] = SHIFT 338
M [ 1490 , int ] = SHIFT 339
M [ 1490 , long ] = SHIFT 340
M [ 1490 , short ] = SHIFT 341
M [ 1490 , signed ] = SHIFT 342
M [ 1490 , sizeof ] = SHIFT 343
M [ 1490 , struct ] = SHIFT 21
M [ 1490 , unsigned ] = SHIFT 344
M [ 1490 , void ] = SHIFT 345
M [ 1491 , DELIM_COMMA ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1491 , DELIM_QUESTION ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1491 , DELIM_RSQBRACKET ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1491 , OP_ADD ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1491 , OP_AND ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1491 , OP_DIV ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1491 , OP_EQ ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1491 , OP_GE ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1491 , OP_GT ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1491 , OP_LAND ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1491 , OP_LE ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1491 , OP_LOR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1491 , OP_LT ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1491 , OP_MOD ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1491 , OP_MUL ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1491 , OP_NEQ ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1491 , OP_OR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1491 , OP_SHL ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1491 , OP_SHR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1491 , OP_SUB ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1491 , OP_XOR ] = REDUCE <unary-expr> -> OP_INC <unary-expr> 
M [ 1492 , DELIM_COMMA ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1492 , DELIM_QUESTION ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1492 , DELIM_RSQBRACKET ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1492 , OP_ADD ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1492 , OP_AND ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1492 , OP_DIV ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1492 , OP_EQ ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1492 , OP_GE ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1492 , OP_GT ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1492 , OP_LAND ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1492 , OP_LE ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1492 , OP_LOR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1492 , OP_LT ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1492 , OP_MOD ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1492 , OP_MUL ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1492 , OP_NEQ ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1492 , OP_OR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1492 , OP_SHL ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1492 , OP_SHR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1492 , OP_SUB ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1492 , OP_XOR ] = REDUCE <unary-expr> -> sizeof <unary-expr> 
M [ 1493 , <additive-expr> ] = GOTO 299
M [ 1493 , <and-expr> ] = GOTO 300
M [ 1493 , <asn-expr> ] = GOTO 301
M [ 1493 , <cast-expr> ] = GOTO 302
M [ 1493 , <cond-expr> ] = GOTO 303
M [ 1493 , <constant> ] = GOTO 304
M [ 1493 , <enum-spec> ] = GOTO 305
M [ 1493 , <eq-expr> ] = GOTO 306
M [ 1493 , <exc-or-expr> ] = GOTO 307
M [ 1493 , <expr> ] = GOTO 1487
M [ 1493 , <inc-or-expr> ] = GOTO 309
M [ 1493 , <land-expr> ] = GOTO 310
M [ 1493 , <lor-expr> ] = GOTO 311
M [ 1493 , <multiplicative-expr> ] = GOTO 312
M [ 1493 , <num-const> ] = GOTO 313
M [ 1493 , <postfix-expr> ] = GOTO 314
M [ 1493 , <prim-expr> ] = GOTO 315
M [ 1493 , <rel-expr> ] = GOTO 316
M [ 1493 , <shift-expr> ] = GOTO 317
M [ 1493 , <spec-qual-list> ] = GOTO 318
M [ 1493 , <struct-union-spec> ] = GOTO 319
M [ 1493 , <struct-union> ] = GOTO 320
M [ 1493 , <type-name> ] = GOTO 1605
M [ 1493 , <type-qual> ] = GOTO 322
M [ 1493 , <type-spec> ] = GOTO 323
M [ 1493 , <unary-expr> ] = GOTO 324
M [ 1493 , <unary-op> ] = GOTO 325
M [ 1493 , CHAR_CONST ] = SHIFT 326
M [ 1493 , DELIM_LPAR ] = SHIFT 327
M [ 1493 , FLOAT_CONST ] = SHIFT 328
M [ 1493 , IDENTIFIER ] = SHIFT 329
M [ 1493 , INT_CONST ] = SHIFT 330
M [ 1493 , OP_ADD ] = SHIFT 135
M [ 1493 , OP_AND ] = SHIFT 136
M [ 1493 , OP_DEC ] = SHIFT 331
M [ 1493 , OP_INC ] = SHIFT 332
M [ 1493 , OP_LNOT ] = SHIFT 139
M [ 1493 , OP_MUL ] = SHIFT 140
M [ 1493 , OP_NOT ] = SHIFT 141
M [ 1493 , OP_SUB ] = SHIFT 142
M [ 1493 , STR_LITERAL ] = SHIFT 333
M [ 1493 , char ] = SHIFT 334
M [ 1493 , const ] = SHIFT 335
M [ 1493 , double ] = SHIFT 336
M [ 1493 , enum ] = SHIFT 337
M [ 1493 , float ] = SHIFT 338
M [ 1493 , int ] = SHIFT 339
M [ 1493 , long ] = SHIFT 340
M [ 1493 , short ] = SHIFT 341
M [ 1493 , signed ] = SHIFT 342
M [ 1493 , sizeof ] = SHIFT 343
M [ 1493 , struct ] = SHIFT 21
M [ 1493 , unsigned ] = SHIFT 344
M [ 1493 , void ] = SHIFT 345
M [ 1494 , <additive-expr> ] = GOTO 615
M [ 1494 , <and-expr> ] = GOTO 616
M [ 1494 , <cast-expr> ] = GOTO 618
M [ 1494 , <cond-expr> ] = GOTO 1606
M [ 1494 , <constant> ] = GOTO 1285
M [ 1494 , <eq-expr> ] = GOTO 621
M [ 1494 , <exc-or-expr> ] = GOTO 622
M [ 1494 , <inc-or-expr> ] = GOTO 624
M [ 1494 , <land-expr> ] = GOTO 625
M [ 1494 , <lor-expr> ] = GOTO 626
M [ 1494 , <multiplicative-expr> ] = GOTO 627
M [ 1494 , <num-const> ] = GOTO 1287
M [ 1494 , <postfix-expr> ] = GOTO 1288
M [ 1494 , <prim-expr> ] = GOTO 1289
M [ 1494 , <rel-expr> ] = GOTO 631
M [ 1494 , <shift-expr> ] = GOTO 632
M [ 1494 , <unary-expr> ] = GOTO 1290
M [ 1494 , <unary-op> ] = GOTO 1291
M [ 1494 , CHAR_CONST ] = SHIFT 1292
M [ 1494 , DELIM_LPAR ] = SHIFT 1293
M [ 1494 , FLOAT_CONST ] = SHIFT 1294
M [ 1494 , IDENTIFIER ] = SHIFT 1295
M [ 1494 , INT_CONST ] = SHIFT 1296
M [ 1494 , OP_ADD ] = SHIFT 135
M [ 1494 , OP_AND ] = SHIFT 136
M [ 1494 , OP_DEC ] = SHIFT 1297
M [ 1494 , OP_INC ] = SHIFT 1298
M [ 1494 , OP_LNOT ] = SHIFT 139
M [ 1494 , OP_MUL ] = SHIFT 140
M [ 1494 , OP_NOT ] = SHIFT 141
M [ 1494 , OP_SUB ] = SHIFT 142
M [ 1494 , STR_LITERAL ] = SHIFT 1299
M [ 1494 , sizeof ] = SHIFT 1300
M [ 1495 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1495 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1496 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_ADDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_ANDASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_ASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_DIVASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_MODASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_MULASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_ORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_SHLASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_SHRASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_SUBASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1496 , OP_XORASN ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1497 , <cast-expr> ] = GOTO 1607
M [ 1497 , <constant> ] = GOTO 620
M [ 1497 , <num-const> ] = GOTO 628
M [ 1497 , <postfix-expr> ] = GOTO 629
M [ 1497 , <prim-expr> ] = GOTO 630
M [ 1497 , <unary-expr> ] = GOTO 1004
M [ 1497 , <unary-op> ] = GOTO 634
M [ 1497 , CHAR_CONST ] = SHIFT 635
M [ 1497 , DELIM_LCURBRACE ] = SHIFT 1499
M [ 1497 , DELIM_LPAR ] = SHIFT 1005
M [ 1497 , FLOAT_CONST ] = SHIFT 637
M [ 1497 , IDENTIFIER ] = SHIFT 638
M [ 1497 , INT_CONST ] = SHIFT 639
M [ 1497 , OP_ADD ] = SHIFT 135
M [ 1497 , OP_AND ] = SHIFT 136
M [ 1497 , OP_DEC ] = SHIFT 640
M [ 1497 , OP_INC ] = SHIFT 641
M [ 1497 , OP_LNOT ] = SHIFT 139
M [ 1497 , OP_MUL ] = SHIFT 140
M [ 1497 , OP_NOT ] = SHIFT 141
M [ 1497 , OP_SUB ] = SHIFT 142
M [ 1497 , STR_LITERAL ] = SHIFT 642
M [ 1497 , sizeof ] = SHIFT 643
M [ 1498 , DELIM_COMMA ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1498 , DELIM_QUESTION ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1498 , DELIM_RSQBRACKET ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1498 , OP_ADD ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1498 , OP_AND ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1498 , OP_DIV ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1498 , OP_EQ ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1498 , OP_GE ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1498 , OP_GT ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1498 , OP_LAND ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1498 , OP_LE ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1498 , OP_LOR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1498 , OP_LT ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1498 , OP_MOD ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1498 , OP_MUL ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1498 , OP_NEQ ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1498 , OP_OR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1498 , OP_SHL ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1498 , OP_SHR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1498 , OP_SUB ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1498 , OP_XOR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1499 , <additive-expr> ] = GOTO 412
M [ 1499 , <and-expr> ] = GOTO 413
M [ 1499 , <asn-expr> ] = GOTO 414
M [ 1499 , <cast-expr> ] = GOTO 415
M [ 1499 , <cond-expr> ] = GOTO 416
M [ 1499 , <constant> ] = GOTO 417
M [ 1499 , <designation> ] = GOTO 418
M [ 1499 , <designator-list> ] = GOTO 419
M [ 1499 , <designator> ] = GOTO 420
M [ 1499 , <eq-expr> ] = GOTO 421
M [ 1499 , <exc-or-expr> ] = GOTO 422
M [ 1499 , <inc-or-expr> ] = GOTO 423
M [ 1499 , <initializer-list> ] = GOTO 1608
M [ 1499 , <initializer> ] = GOTO 425
M [ 1499 , <land-expr> ] = GOTO 426
M [ 1499 , <lor-expr> ] = GOTO 427
M [ 1499 , <multiplicative-expr> ] = GOTO 428
M [ 1499 , <num-const> ] = GOTO 429
M [ 1499 , <postfix-expr> ] = GOTO 430
M [ 1499 , <prim-expr> ] = GOTO 431
M [ 1499 , <rel-expr> ] = GOTO 432
M [ 1499 , <shift-expr> ] = GOTO 433
M [ 1499 , <unary-expr> ] = GOTO 434
M [ 1499 , <unary-op> ] = GOTO 435
M [ 1499 , CHAR_CONST ] = SHIFT 436
M [ 1499 , DELIM_LCURBRACE ] = SHIFT 437
M [ 1499 , DELIM_LPAR ] = SHIFT 438
M [ 1499 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 1499 , FLOAT_CONST ] = SHIFT 440
M [ 1499 , IDENTIFIER ] = SHIFT 441
M [ 1499 , INT_CONST ] = SHIFT 442
M [ 1499 , OP_ADD ] = SHIFT 135
M [ 1499 , OP_AND ] = SHIFT 136
M [ 1499 , OP_DEC ] = SHIFT 443
M [ 1499 , OP_DOT ] = SHIFT 444
M [ 1499 , OP_INC ] = SHIFT 445
M [ 1499 , OP_LNOT ] = SHIFT 139
M [ 1499 , OP_MUL ] = SHIFT 140
M [ 1499 , OP_NOT ] = SHIFT 141
M [ 1499 , OP_SUB ] = SHIFT 142
M [ 1499 , STR_LITERAL ] = SHIFT 446
M [ 1499 , sizeof ] = SHIFT 447
M [ 1500 , DELIM_LCURBRACE ] = SHIFT 1499
M [ 1501 , DELIM_COMMA ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , DELIM_LCURBRACE ] = SHIFT 1499
M [ 1501 , DELIM_QUESTION ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , DELIM_RSQBRACKET ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_ADD ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_ADDASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_AND ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_ANDASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_ASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_DIV ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_DIVASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_EQ ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_GE ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_GT ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_LAND ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_LE ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_LOR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_LT ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_MOD ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_MODASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_MUL ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_MULASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_NEQ ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_OR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_ORASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_SHL ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_SHLASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_SHR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_SHRASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_SUB ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_SUBASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_XOR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1501 , OP_XORASN ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1502 , DELIM_COMMA ] = SHIFT 973
M [ 1502 , DELIM_RPAR ] = SHIFT 1609
M [ 1503 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1503 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1503 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1503 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1503 , DELIM_RPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1503 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1503 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1503 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1503 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1503 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1503 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1503 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1503 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1503 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1503 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1503 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1503 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1503 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1503 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1503 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1503 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1503 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1503 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1503 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1503 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1503 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1503 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1504 , DELIM_COMMA ] = SHIFT 981
M [ 1504 , DELIM_RSQBRACKET ] = SHIFT 1610
M [ 1505 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1505 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1505 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1505 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1505 , DELIM_RPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1505 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1505 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1505 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1505 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1505 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1505 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1505 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1505 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1505 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1505 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1505 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1505 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1505 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1505 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1505 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1505 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1505 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1505 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1505 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1505 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1505 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1505 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1506 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1506 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1506 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1506 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1506 , DELIM_RPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1506 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1506 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1506 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1506 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1506 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1506 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1506 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1506 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1506 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1506 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1506 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1506 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1506 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1506 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1506 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1506 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1506 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1506 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1506 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1506 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1506 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1506 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1507 , DELIM_COMMA ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1507 , DELIM_LPAR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1507 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1507 , DELIM_QUESTION ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1507 , DELIM_RPAR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1507 , OP_ADD ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1507 , OP_AND ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1507 , OP_ARROW ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1507 , OP_DEC ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1507 , OP_DIV ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1507 , OP_DOT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1507 , OP_EQ ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1507 , OP_GE ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1507 , OP_GT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1507 , OP_INC ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1507 , OP_LAND ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1507 , OP_LE ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1507 , OP_LOR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1507 , OP_LT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1507 , OP_MOD ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1507 , OP_MUL ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1507 , OP_NEQ ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1507 , OP_OR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1507 , OP_SHL ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1507 , OP_SHR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1507 , OP_SUB ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1507 , OP_XOR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1508 , <cast-expr> ] = GOTO 1359
M [ 1508 , <constant> ] = GOTO 1014
M [ 1508 , <num-const> ] = GOTO 1016
M [ 1508 , <postfix-expr> ] = GOTO 1017
M [ 1508 , <prim-expr> ] = GOTO 1018
M [ 1508 , <unary-expr> ] = GOTO 1019
M [ 1508 , <unary-op> ] = GOTO 1020
M [ 1508 , CHAR_CONST ] = SHIFT 1021
M [ 1508 , DELIM_LCURBRACE ] = SHIFT 1611
M [ 1508 , DELIM_LPAR ] = SHIFT 1022
M [ 1508 , FLOAT_CONST ] = SHIFT 1023
M [ 1508 , IDENTIFIER ] = SHIFT 1024
M [ 1508 , INT_CONST ] = SHIFT 1025
M [ 1508 , OP_ADD ] = SHIFT 135
M [ 1508 , OP_AND ] = SHIFT 136
M [ 1508 , OP_DEC ] = SHIFT 1026
M [ 1508 , OP_INC ] = SHIFT 1027
M [ 1508 , OP_LNOT ] = SHIFT 139
M [ 1508 , OP_MUL ] = SHIFT 140
M [ 1508 , OP_NOT ] = SHIFT 141
M [ 1508 , OP_SUB ] = SHIFT 142
M [ 1508 , STR_LITERAL ] = SHIFT 1028
M [ 1508 , sizeof ] = SHIFT 1029
M [ 1509 , DELIM_RPAR ] = SHIFT 1612
M [ 1510 , DELIM_RPAR ] = SHIFT 1613
M [ 1511 , DELIM_COMMA ] = REDUCE <cond-expr> -> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <cond-expr> 
M [ 1511 , DELIM_RPAR ] = REDUCE <cond-expr> -> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <cond-expr> 
M [ 1512 , DELIM_RPAR ] = REDUCE <direct-abstract-declarator> -> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 1513 , DELIM_LPAR ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1513 , DELIM_LSQBRACKET ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1513 , DELIM_RPAR ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1513 , OP_MUL ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1513 , char ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1513 , const ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1513 , double ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1513 , enum ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1513 , float ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1513 , int ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1513 , long ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1513 , short ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1513 , signed ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1513 , struct ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1513 , unsigned ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1513 , void ] = REDUCE <struct-union-spec> -> <struct-union> IDENTIFIER DELIM_LCURBRACE <struct-decl-list> DELIM_RCURBRACE 
M [ 1514 , <additive-expr> ] = GOTO 412
M [ 1514 , <and-expr> ] = GOTO 413
M [ 1514 , <asn-expr> ] = GOTO 414
M [ 1514 , <cast-expr> ] = GOTO 415
M [ 1514 , <cond-expr> ] = GOTO 416
M [ 1514 , <constant> ] = GOTO 417
M [ 1514 , <designation> ] = GOTO 1135
M [ 1514 , <designator-list> ] = GOTO 419
M [ 1514 , <designator> ] = GOTO 420
M [ 1514 , <eq-expr> ] = GOTO 421
M [ 1514 , <exc-or-expr> ] = GOTO 422
M [ 1514 , <inc-or-expr> ] = GOTO 423
M [ 1514 , <initializer> ] = GOTO 1136
M [ 1514 , <land-expr> ] = GOTO 426
M [ 1514 , <lor-expr> ] = GOTO 427
M [ 1514 , <multiplicative-expr> ] = GOTO 428
M [ 1514 , <num-const> ] = GOTO 429
M [ 1514 , <postfix-expr> ] = GOTO 430
M [ 1514 , <prim-expr> ] = GOTO 431
M [ 1514 , <rel-expr> ] = GOTO 432
M [ 1514 , <shift-expr> ] = GOTO 433
M [ 1514 , <unary-expr> ] = GOTO 434
M [ 1514 , <unary-op> ] = GOTO 435
M [ 1514 , CHAR_CONST ] = SHIFT 436
M [ 1514 , DELIM_LCURBRACE ] = SHIFT 437
M [ 1514 , DELIM_LPAR ] = SHIFT 438
M [ 1514 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 1514 , DELIM_RCURBRACE ] = SHIFT 1614
M [ 1514 , FLOAT_CONST ] = SHIFT 440
M [ 1514 , IDENTIFIER ] = SHIFT 441
M [ 1514 , INT_CONST ] = SHIFT 442
M [ 1514 , OP_ADD ] = SHIFT 135
M [ 1514 , OP_AND ] = SHIFT 136
M [ 1514 , OP_DEC ] = SHIFT 443
M [ 1514 , OP_DOT ] = SHIFT 444
M [ 1514 , OP_INC ] = SHIFT 445
M [ 1514 , OP_LNOT ] = SHIFT 139
M [ 1514 , OP_MUL ] = SHIFT 140
M [ 1514 , OP_NOT ] = SHIFT 141
M [ 1514 , OP_SUB ] = SHIFT 142
M [ 1514 , STR_LITERAL ] = SHIFT 446
M [ 1514 , sizeof ] = SHIFT 447
M [ 1515 , DELIM_COMMA ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , DELIM_LPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , DELIM_SEMICOLON ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_ADD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_ADDASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_AND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_ANDASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_ARROW ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_ASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_DEC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_DIV ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_DIVASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_DOT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_EQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_GE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_GT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_INC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_LAND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_LE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_LOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_LT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_MOD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_MODASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_MUL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_MULASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_NEQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_OR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_ORASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_SHL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_SHLASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_SHR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_SHRASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_SUB ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_SUBASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_XOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1515 , OP_XORASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1516 , DELIM_COMMA ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , DELIM_QUESTION ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , DELIM_RPAR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_ADD ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_ADDASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_AND ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_ANDASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_ASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_DIV ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_DIVASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_EQ ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_GE ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_GT ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_LAND ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_LE ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_LOR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_LT ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_MOD ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_MODASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_MUL ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_MULASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_NEQ ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_OR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_ORASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_SHL ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_SHLASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_SHR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_SHRASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_SUB ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_SUBASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_XOR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1516 , OP_XORASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1517 , DELIM_COMMA ] = SHIFT 1615
M [ 1517 , DELIM_RCURBRACE ] = SHIFT 1616
M [ 1518 , DELIM_LPAR ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1518 , DELIM_LSQBRACKET ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1518 , DELIM_RPAR ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1518 , OP_MUL ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1518 , char ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1518 , const ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1518 , double ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1518 , enum ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1518 , float ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1518 , int ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1518 , long ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1518 , short ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1518 , signed ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1518 , struct ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1518 , unsigned ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1518 , void ] = REDUCE <enum-spec> -> enum DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1519 , <enumeration-const> ] = GOTO 82
M [ 1519 , <enumerator> ] = GOTO 543
M [ 1519 , DELIM_RCURBRACE ] = SHIFT 1617
M [ 1519 , IDENTIFIER ] = SHIFT 85
M [ 1520 , DELIM_LPAR ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1520 , DELIM_LSQBRACKET ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1520 , DELIM_RPAR ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1520 , OP_MUL ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1520 , char ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1520 , const ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1520 , double ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1520 , enum ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1520 , float ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1520 , int ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1520 , long ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1520 , short ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1520 , signed ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1520 , struct ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1520 , unsigned ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1520 , void ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_RCURBRACE 
M [ 1521 , DELIM_COLON ] = REDUCE <cond-expr> -> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <cond-expr> 
M [ 1522 , DELIM_COMMA ] = SHIFT 1618
M [ 1522 , DELIM_RCURBRACE ] = SHIFT 1619
M [ 1523 , DELIM_SEMICOLON ] = SHIFT 1620
M [ 1524 , DELIM_COMMA ] = SHIFT 661
M [ 1524 , DELIM_RPAR ] = SHIFT 1621
M [ 1525 , while ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1526 , else ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1526 , while ] = REDUCE <stmt> -> <comp-stmt> 
M [ 1527 , else ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1527 , while ] = REDUCE <stmt> -> <expr-stmt> 
M [ 1528 , DELIM_COMMA ] = SHIFT 261
M [ 1528 , DELIM_SEMICOLON ] = SHIFT 1622
M [ 1529 , else ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1529 , while ] = REDUCE <stmt> -> <iter-stmt> 
M [ 1530 , else ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1530 , while ] = REDUCE <stmt> -> <jump-stmt> 
M [ 1531 , else ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1531 , while ] = REDUCE <stmt> -> <labeled-stmt> 
M [ 1532 , else ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1532 , while ] = REDUCE <stmt> -> <sele-stmt> 
M [ 1533 , else ] = SHIFT 1623
M [ 1533 , while ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1534 , <additive-expr> ] = GOTO 96
M [ 1534 , <and-expr> ] = GOTO 97
M [ 1534 , <asn-expr> ] = GOTO 98
M [ 1534 , <blk-item-list> ] = GOTO 1624
M [ 1534 , <blk-item> ] = GOTO 100
M [ 1534 , <cast-expr> ] = GOTO 101
M [ 1534 , <comp-stmt> ] = GOTO 102
M [ 1534 , <cond-expr> ] = GOTO 103
M [ 1534 , <constant> ] = GOTO 104
M [ 1534 , <decl-spec> ] = GOTO 105
M [ 1534 , <decl> ] = GOTO 106
M [ 1534 , <enum-spec> ] = GOTO 3
M [ 1534 , <eq-expr> ] = GOTO 107
M [ 1534 , <exc-or-expr> ] = GOTO 108
M [ 1534 , <expr-stmt> ] = GOTO 109
M [ 1534 , <expr> ] = GOTO 110
M [ 1534 , <inc-or-expr> ] = GOTO 111
M [ 1534 , <iter-stmt> ] = GOTO 112
M [ 1534 , <jump-stmt> ] = GOTO 113
M [ 1534 , <labeled-stmt> ] = GOTO 114
M [ 1534 , <land-expr> ] = GOTO 115
M [ 1534 , <lor-expr> ] = GOTO 116
M [ 1534 , <multiplicative-expr> ] = GOTO 117
M [ 1534 , <num-const> ] = GOTO 118
M [ 1534 , <postfix-expr> ] = GOTO 119
M [ 1534 , <prim-expr> ] = GOTO 120
M [ 1534 , <rel-expr> ] = GOTO 121
M [ 1534 , <sele-stmt> ] = GOTO 122
M [ 1534 , <shift-expr> ] = GOTO 123
M [ 1534 , <stmt> ] = GOTO 124
M [ 1534 , <storage-class-spec> ] = GOTO 6
M [ 1534 , <struct-union-spec> ] = GOTO 7
M [ 1534 , <struct-union> ] = GOTO 8
M [ 1534 , <type-qual> ] = GOTO 10
M [ 1534 , <type-spec> ] = GOTO 11
M [ 1534 , <unary-expr> ] = GOTO 125
M [ 1534 , <unary-op> ] = GOTO 126
M [ 1534 , CHAR_CONST ] = SHIFT 127
M [ 1534 , DELIM_LCURBRACE ] = SHIFT 128
M [ 1534 , DELIM_LPAR ] = SHIFT 129
M [ 1534 , DELIM_RCURBRACE ] = SHIFT 1625
M [ 1534 , DELIM_SEMICOLON ] = SHIFT 131
M [ 1534 , FLOAT_CONST ] = SHIFT 132
M [ 1534 , IDENTIFIER ] = SHIFT 133
M [ 1534 , INT_CONST ] = SHIFT 134
M [ 1534 , OP_ADD ] = SHIFT 135
M [ 1534 , OP_AND ] = SHIFT 136
M [ 1534 , OP_DEC ] = SHIFT 137
M [ 1534 , OP_INC ] = SHIFT 138
M [ 1534 , OP_LNOT ] = SHIFT 139
M [ 1534 , OP_MUL ] = SHIFT 140
M [ 1534 , OP_NOT ] = SHIFT 141
M [ 1534 , OP_SUB ] = SHIFT 142
M [ 1534 , STR_LITERAL ] = SHIFT 143
M [ 1534 , break ] = SHIFT 144
M [ 1534 , case ] = SHIFT 145
M [ 1534 , char ] = SHIFT 12
M [ 1534 , const ] = SHIFT 13
M [ 1534 , continue ] = SHIFT 146
M [ 1534 , default ] = SHIFT 147
M [ 1534 , do ] = SHIFT 148
M [ 1534 , double ] = SHIFT 14
M [ 1534 , enum ] = SHIFT 15
M [ 1534 , float ] = SHIFT 16
M [ 1534 , for ] = SHIFT 149
M [ 1534 , goto ] = SHIFT 150
M [ 1534 , if ] = SHIFT 151
M [ 1534 , int ] = SHIFT 17
M [ 1534 , long ] = SHIFT 18
M [ 1534 , return ] = SHIFT 152
M [ 1534 , short ] = SHIFT 19
M [ 1534 , signed ] = SHIFT 20
M [ 1534 , sizeof ] = SHIFT 153
M [ 1534 , struct ] = SHIFT 21
M [ 1534 , switch ] = SHIFT 154
M [ 1534 , typedef ] = SHIFT 22
M [ 1534 , unsigned ] = SHIFT 23
M [ 1534 , void ] = SHIFT 24
M [ 1534 , while ] = SHIFT 155
M [ 1535 , else ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1535 , while ] = REDUCE <expr-stmt> -> DELIM_SEMICOLON 
M [ 1536 , DELIM_COLON ] = SHIFT 1626
M [ 1536 , DELIM_COMMA ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , DELIM_LPAR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , DELIM_QUESTION ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , DELIM_SEMICOLON ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_ADD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_ADDASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_AND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_ANDASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_ARROW ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_ASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_DEC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_DIV ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_DIVASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_DOT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_EQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_GE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_GT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_INC ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_LAND ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_LE ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_LOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_LT ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_MOD ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_MODASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_MUL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_MULASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_NEQ ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_OR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_ORASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_SHL ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_SHLASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_SHR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_SHRASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_SUB ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_SUBASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_XOR ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1536 , OP_XORASN ] = REDUCE <prim-expr> -> IDENTIFIER 
M [ 1537 , DELIM_SEMICOLON ] = SHIFT 1627
M [ 1538 , <additive-expr> ] = GOTO 351
M [ 1538 , <and-expr> ] = GOTO 352
M [ 1538 , <cast-expr> ] = GOTO 353
M [ 1538 , <cond-expr> ] = GOTO 354
M [ 1538 , <const-expr> ] = GOTO 1628
M [ 1538 , <constant> ] = GOTO 356
M [ 1538 , <eq-expr> ] = GOTO 357
M [ 1538 , <exc-or-expr> ] = GOTO 358
M [ 1538 , <inc-or-expr> ] = GOTO 359
M [ 1538 , <land-expr> ] = GOTO 360
M [ 1538 , <lor-expr> ] = GOTO 361
M [ 1538 , <multiplicative-expr> ] = GOTO 362
M [ 1538 , <num-const> ] = GOTO 363
M [ 1538 , <postfix-expr> ] = GOTO 364
M [ 1538 , <prim-expr> ] = GOTO 365
M [ 1538 , <rel-expr> ] = GOTO 366
M [ 1538 , <shift-expr> ] = GOTO 367
M [ 1538 , <unary-expr> ] = GOTO 368
M [ 1538 , <unary-op> ] = GOTO 369
M [ 1538 , CHAR_CONST ] = SHIFT 370
M [ 1538 , DELIM_LPAR ] = SHIFT 371
M [ 1538 , FLOAT_CONST ] = SHIFT 372
M [ 1538 , IDENTIFIER ] = SHIFT 373
M [ 1538 , INT_CONST ] = SHIFT 374
M [ 1538 , OP_ADD ] = SHIFT 135
M [ 1538 , OP_AND ] = SHIFT 136
M [ 1538 , OP_DEC ] = SHIFT 375
M [ 1538 , OP_INC ] = SHIFT 376
M [ 1538 , OP_LNOT ] = SHIFT 139
M [ 1538 , OP_MUL ] = SHIFT 140
M [ 1538 , OP_NOT ] = SHIFT 141
M [ 1538 , OP_SUB ] = SHIFT 142
M [ 1538 , STR_LITERAL ] = SHIFT 377
M [ 1538 , sizeof ] = SHIFT 378
M [ 1539 , DELIM_SEMICOLON ] = SHIFT 1629
M [ 1540 , DELIM_COLON ] = SHIFT 1630
M [ 1541 , <additive-expr> ] = GOTO 96
M [ 1541 , <and-expr> ] = GOTO 97
M [ 1541 , <asn-expr> ] = GOTO 98
M [ 1541 , <cast-expr> ] = GOTO 101
M [ 1541 , <comp-stmt> ] = GOTO 381
M [ 1541 , <cond-expr> ] = GOTO 103
M [ 1541 , <constant> ] = GOTO 104
M [ 1541 , <eq-expr> ] = GOTO 107
M [ 1541 , <exc-or-expr> ] = GOTO 108
M [ 1541 , <expr-stmt> ] = GOTO 382
M [ 1541 , <expr> ] = GOTO 383
M [ 1541 , <inc-or-expr> ] = GOTO 111
M [ 1541 , <iter-stmt> ] = GOTO 384
M [ 1541 , <jump-stmt> ] = GOTO 385
M [ 1541 , <labeled-stmt> ] = GOTO 386
M [ 1541 , <land-expr> ] = GOTO 115
M [ 1541 , <lor-expr> ] = GOTO 116
M [ 1541 , <multiplicative-expr> ] = GOTO 117
M [ 1541 , <num-const> ] = GOTO 118
M [ 1541 , <postfix-expr> ] = GOTO 119
M [ 1541 , <prim-expr> ] = GOTO 120
M [ 1541 , <rel-expr> ] = GOTO 121
M [ 1541 , <sele-stmt> ] = GOTO 387
M [ 1541 , <shift-expr> ] = GOTO 123
M [ 1541 , <stmt> ] = GOTO 1631
M [ 1541 , <unary-expr> ] = GOTO 125
M [ 1541 , <unary-op> ] = GOTO 126
M [ 1541 , CHAR_CONST ] = SHIFT 127
M [ 1541 , DELIM_LCURBRACE ] = SHIFT 389
M [ 1541 , DELIM_LPAR ] = SHIFT 129
M [ 1541 , DELIM_SEMICOLON ] = SHIFT 390
M [ 1541 , FLOAT_CONST ] = SHIFT 132
M [ 1541 , IDENTIFIER ] = SHIFT 391
M [ 1541 , INT_CONST ] = SHIFT 134
M [ 1541 , OP_ADD ] = SHIFT 135
M [ 1541 , OP_AND ] = SHIFT 136
M [ 1541 , OP_DEC ] = SHIFT 137
M [ 1541 , OP_INC ] = SHIFT 138
M [ 1541 , OP_LNOT ] = SHIFT 139
M [ 1541 , OP_MUL ] = SHIFT 140
M [ 1541 , OP_NOT ] = SHIFT 141
M [ 1541 , OP_SUB ] = SHIFT 142
M [ 1541 , STR_LITERAL ] = SHIFT 143
M [ 1541 , break ] = SHIFT 392
M [ 1541 , case ] = SHIFT 393
M [ 1541 , continue ] = SHIFT 394
M [ 1541 , default ] = SHIFT 395
M [ 1541 , do ] = SHIFT 396
M [ 1541 , for ] = SHIFT 397
M [ 1541 , goto ] = SHIFT 398
M [ 1541 , if ] = SHIFT 399
M [ 1541 , return ] = SHIFT 400
M [ 1541 , sizeof ] = SHIFT 153
M [ 1541 , switch ] = SHIFT 401
M [ 1541 , while ] = SHIFT 402
M [ 1542 , DELIM_LPAR ] = SHIFT 1632
M [ 1543 , DELIM_SEMICOLON ] = SHIFT 1633
M [ 1544 , DELIM_LPAR ] = SHIFT 1634
M [ 1545 , <additive-expr> ] = GOTO 96
M [ 1545 , <and-expr> ] = GOTO 97
M [ 1545 , <asn-expr> ] = GOTO 98
M [ 1545 , <cast-expr> ] = GOTO 101
M [ 1545 , <cond-expr> ] = GOTO 103
M [ 1545 , <constant> ] = GOTO 104
M [ 1545 , <eq-expr> ] = GOTO 107
M [ 1545 , <exc-or-expr> ] = GOTO 108
M [ 1545 , <expr> ] = GOTO 1635
M [ 1545 , <inc-or-expr> ] = GOTO 111
M [ 1545 , <land-expr> ] = GOTO 115
M [ 1545 , <lor-expr> ] = GOTO 116
M [ 1545 , <multiplicative-expr> ] = GOTO 117
M [ 1545 , <num-const> ] = GOTO 118
M [ 1545 , <postfix-expr> ] = GOTO 119
M [ 1545 , <prim-expr> ] = GOTO 120
M [ 1545 , <rel-expr> ] = GOTO 121
M [ 1545 , <shift-expr> ] = GOTO 123
M [ 1545 , <unary-expr> ] = GOTO 125
M [ 1545 , <unary-op> ] = GOTO 126
M [ 1545 , CHAR_CONST ] = SHIFT 127
M [ 1545 , DELIM_LPAR ] = SHIFT 129
M [ 1545 , DELIM_SEMICOLON ] = SHIFT 1636
M [ 1545 , FLOAT_CONST ] = SHIFT 132
M [ 1545 , IDENTIFIER ] = SHIFT 159
M [ 1545 , INT_CONST ] = SHIFT 134
M [ 1545 , OP_ADD ] = SHIFT 135
M [ 1545 , OP_AND ] = SHIFT 136
M [ 1545 , OP_DEC ] = SHIFT 137
M [ 1545 , OP_INC ] = SHIFT 138
M [ 1545 , OP_LNOT ] = SHIFT 139
M [ 1545 , OP_MUL ] = SHIFT 140
M [ 1545 , OP_NOT ] = SHIFT 141
M [ 1545 , OP_SUB ] = SHIFT 142
M [ 1545 , STR_LITERAL ] = SHIFT 143
M [ 1545 , sizeof ] = SHIFT 153
M [ 1546 , DELIM_LPAR ] = SHIFT 1637
M [ 1547 , DELIM_LPAR ] = SHIFT 1638
M [ 1548 , while ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1549 , while ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1550 , DELIM_COMMA ] = SHIFT 661
M [ 1550 , DELIM_RPAR ] = REDUCE <for-cond> -> <decl> <expr> DELIM_SEMICOLON <expr> 
M [ 1551 , <additive-expr> ] = GOTO 299
M [ 1551 , <and-expr> ] = GOTO 300
M [ 1551 , <asn-expr> ] = GOTO 301
M [ 1551 , <cast-expr> ] = GOTO 302
M [ 1551 , <cond-expr> ] = GOTO 303
M [ 1551 , <constant> ] = GOTO 304
M [ 1551 , <eq-expr> ] = GOTO 306
M [ 1551 , <exc-or-expr> ] = GOTO 307
M [ 1551 , <expr> ] = GOTO 1639
M [ 1551 , <inc-or-expr> ] = GOTO 309
M [ 1551 , <land-expr> ] = GOTO 310
M [ 1551 , <lor-expr> ] = GOTO 311
M [ 1551 , <multiplicative-expr> ] = GOTO 312
M [ 1551 , <num-const> ] = GOTO 313
M [ 1551 , <postfix-expr> ] = GOTO 314
M [ 1551 , <prim-expr> ] = GOTO 315
M [ 1551 , <rel-expr> ] = GOTO 316
M [ 1551 , <shift-expr> ] = GOTO 317
M [ 1551 , <unary-expr> ] = GOTO 324
M [ 1551 , <unary-op> ] = GOTO 325
M [ 1551 , CHAR_CONST ] = SHIFT 326
M [ 1551 , DELIM_LPAR ] = SHIFT 327
M [ 1551 , DELIM_RPAR ] = REDUCE <for-cond> -> <expr> DELIM_SEMICOLON <expr> DELIM_SEMICOLON 
M [ 1551 , FLOAT_CONST ] = SHIFT 328
M [ 1551 , IDENTIFIER ] = SHIFT 329
M [ 1551 , INT_CONST ] = SHIFT 330
M [ 1551 , OP_ADD ] = SHIFT 135
M [ 1551 , OP_AND ] = SHIFT 136
M [ 1551 , OP_DEC ] = SHIFT 331
M [ 1551 , OP_INC ] = SHIFT 332
M [ 1551 , OP_LNOT ] = SHIFT 139
M [ 1551 , OP_MUL ] = SHIFT 140
M [ 1551 , OP_NOT ] = SHIFT 141
M [ 1551 , OP_SUB ] = SHIFT 142
M [ 1551 , STR_LITERAL ] = SHIFT 333
M [ 1551 , sizeof ] = SHIFT 343
M [ 1552 , DELIM_COMMA ] = SHIFT 661
M [ 1552 , DELIM_RPAR ] = REDUCE <for-cond> -> <expr> DELIM_SEMICOLON DELIM_SEMICOLON <expr> 
M [ 1553 , DELIM_COMMA ] = SHIFT 661
M [ 1553 , DELIM_RPAR ] = REDUCE <for-cond> -> DELIM_SEMICOLON <expr> DELIM_SEMICOLON <expr> 
M [ 1554 , CHAR_CONST ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , DELIM_LCURBRACE ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , DELIM_LPAR ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , DELIM_RCURBRACE ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , DELIM_SEMICOLON ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , FLOAT_CONST ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , IDENTIFIER ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , INT_CONST ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , OP_ADD ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , OP_AND ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , OP_DEC ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , OP_INC ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , OP_LNOT ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , OP_MUL ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , OP_NOT ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , OP_SUB ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , STR_LITERAL ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , break ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , case ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , char ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , const ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , continue ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , default ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , do ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , double ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , else ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , enum ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , float ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , for ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , goto ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , if ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , int ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , long ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , return ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , short ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , signed ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , sizeof ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , struct ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , switch ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , typedef ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , unsigned ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , void ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1554 , while ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1555 , <additive-expr> ] = GOTO 96
M [ 1555 , <and-expr> ] = GOTO 97
M [ 1555 , <asn-expr> ] = GOTO 98
M [ 1555 , <cast-expr> ] = GOTO 101
M [ 1555 , <comp-stmt> ] = GOTO 102
M [ 1555 , <cond-expr> ] = GOTO 103
M [ 1555 , <constant> ] = GOTO 104
M [ 1555 , <eq-expr> ] = GOTO 107
M [ 1555 , <exc-or-expr> ] = GOTO 108
M [ 1555 , <expr-stmt> ] = GOTO 109
M [ 1555 , <expr> ] = GOTO 110
M [ 1555 , <inc-or-expr> ] = GOTO 111
M [ 1555 , <iter-stmt> ] = GOTO 112
M [ 1555 , <jump-stmt> ] = GOTO 113
M [ 1555 , <labeled-stmt> ] = GOTO 114
M [ 1555 , <land-expr> ] = GOTO 115
M [ 1555 , <lor-expr> ] = GOTO 116
M [ 1555 , <multiplicative-expr> ] = GOTO 117
M [ 1555 , <num-const> ] = GOTO 118
M [ 1555 , <postfix-expr> ] = GOTO 119
M [ 1555 , <prim-expr> ] = GOTO 120
M [ 1555 , <rel-expr> ] = GOTO 121
M [ 1555 , <sele-stmt> ] = GOTO 122
M [ 1555 , <shift-expr> ] = GOTO 123
M [ 1555 , <stmt> ] = GOTO 1640
M [ 1555 , <unary-expr> ] = GOTO 125
M [ 1555 , <unary-op> ] = GOTO 126
M [ 1555 , CHAR_CONST ] = SHIFT 127
M [ 1555 , DELIM_LCURBRACE ] = SHIFT 128
M [ 1555 , DELIM_LPAR ] = SHIFT 129
M [ 1555 , DELIM_SEMICOLON ] = SHIFT 131
M [ 1555 , FLOAT_CONST ] = SHIFT 132
M [ 1555 , IDENTIFIER ] = SHIFT 133
M [ 1555 , INT_CONST ] = SHIFT 134
M [ 1555 , OP_ADD ] = SHIFT 135
M [ 1555 , OP_AND ] = SHIFT 136
M [ 1555 , OP_DEC ] = SHIFT 137
M [ 1555 , OP_INC ] = SHIFT 138
M [ 1555 , OP_LNOT ] = SHIFT 139
M [ 1555 , OP_MUL ] = SHIFT 140
M [ 1555 , OP_NOT ] = SHIFT 141
M [ 1555 , OP_SUB ] = SHIFT 142
M [ 1555 , STR_LITERAL ] = SHIFT 143
M [ 1555 , break ] = SHIFT 144
M [ 1555 , case ] = SHIFT 145
M [ 1555 , continue ] = SHIFT 146
M [ 1555 , default ] = SHIFT 147
M [ 1555 , do ] = SHIFT 148
M [ 1555 , for ] = SHIFT 149
M [ 1555 , goto ] = SHIFT 150
M [ 1555 , if ] = SHIFT 151
M [ 1555 , return ] = SHIFT 152
M [ 1555 , sizeof ] = SHIFT 153
M [ 1555 , switch ] = SHIFT 154
M [ 1555 , while ] = SHIFT 155
M [ 1556 , <additive-expr> ] = GOTO 96
M [ 1556 , <and-expr> ] = GOTO 97
M [ 1556 , <asn-expr> ] = GOTO 98
M [ 1556 , <blk-item> ] = GOTO 254
M [ 1556 , <cast-expr> ] = GOTO 101
M [ 1556 , <comp-stmt> ] = GOTO 102
M [ 1556 , <cond-expr> ] = GOTO 103
M [ 1556 , <constant> ] = GOTO 104
M [ 1556 , <decl-spec> ] = GOTO 105
M [ 1556 , <decl> ] = GOTO 106
M [ 1556 , <enum-spec> ] = GOTO 3
M [ 1556 , <eq-expr> ] = GOTO 107
M [ 1556 , <exc-or-expr> ] = GOTO 108
M [ 1556 , <expr-stmt> ] = GOTO 109
M [ 1556 , <expr> ] = GOTO 110
M [ 1556 , <inc-or-expr> ] = GOTO 111
M [ 1556 , <iter-stmt> ] = GOTO 112
M [ 1556 , <jump-stmt> ] = GOTO 113
M [ 1556 , <labeled-stmt> ] = GOTO 114
M [ 1556 , <land-expr> ] = GOTO 115
M [ 1556 , <lor-expr> ] = GOTO 116
M [ 1556 , <multiplicative-expr> ] = GOTO 117
M [ 1556 , <num-const> ] = GOTO 118
M [ 1556 , <postfix-expr> ] = GOTO 119
M [ 1556 , <prim-expr> ] = GOTO 120
M [ 1556 , <rel-expr> ] = GOTO 121
M [ 1556 , <sele-stmt> ] = GOTO 122
M [ 1556 , <shift-expr> ] = GOTO 123
M [ 1556 , <stmt> ] = GOTO 124
M [ 1556 , <storage-class-spec> ] = GOTO 6
M [ 1556 , <struct-union-spec> ] = GOTO 7
M [ 1556 , <struct-union> ] = GOTO 8
M [ 1556 , <type-qual> ] = GOTO 10
M [ 1556 , <type-spec> ] = GOTO 11
M [ 1556 , <unary-expr> ] = GOTO 125
M [ 1556 , <unary-op> ] = GOTO 126
M [ 1556 , CHAR_CONST ] = SHIFT 127
M [ 1556 , DELIM_LCURBRACE ] = SHIFT 128
M [ 1556 , DELIM_LPAR ] = SHIFT 129
M [ 1556 , DELIM_RCURBRACE ] = SHIFT 1641
M [ 1556 , DELIM_SEMICOLON ] = SHIFT 131
M [ 1556 , FLOAT_CONST ] = SHIFT 132
M [ 1556 , IDENTIFIER ] = SHIFT 133
M [ 1556 , INT_CONST ] = SHIFT 134
M [ 1556 , OP_ADD ] = SHIFT 135
M [ 1556 , OP_AND ] = SHIFT 136
M [ 1556 , OP_DEC ] = SHIFT 137
M [ 1556 , OP_INC ] = SHIFT 138
M [ 1556 , OP_LNOT ] = SHIFT 139
M [ 1556 , OP_MUL ] = SHIFT 140
M [ 1556 , OP_NOT ] = SHIFT 141
M [ 1556 , OP_SUB ] = SHIFT 142
M [ 1556 , STR_LITERAL ] = SHIFT 143
M [ 1556 , break ] = SHIFT 144
M [ 1556 , case ] = SHIFT 145
M [ 1556 , char ] = SHIFT 12
M [ 1556 , const ] = SHIFT 13
M [ 1556 , continue ] = SHIFT 146
M [ 1556 , default ] = SHIFT 147
M [ 1556 , do ] = SHIFT 148
M [ 1556 , double ] = SHIFT 14
M [ 1556 , enum ] = SHIFT 15
M [ 1556 , float ] = SHIFT 16
M [ 1556 , for ] = SHIFT 149
M [ 1556 , goto ] = SHIFT 150
M [ 1556 , if ] = SHIFT 151
M [ 1556 , int ] = SHIFT 17
M [ 1556 , long ] = SHIFT 18
M [ 1556 , return ] = SHIFT 152
M [ 1556 , short ] = SHIFT 19
M [ 1556 , signed ] = SHIFT 20
M [ 1556 , sizeof ] = SHIFT 153
M [ 1556 , struct ] = SHIFT 21
M [ 1556 , switch ] = SHIFT 154
M [ 1556 , typedef ] = SHIFT 22
M [ 1556 , unsigned ] = SHIFT 23
M [ 1556 , void ] = SHIFT 24
M [ 1556 , while ] = SHIFT 155
M [ 1557 , CHAR_CONST ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , DELIM_LCURBRACE ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , DELIM_LPAR ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , DELIM_RCURBRACE ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , DELIM_SEMICOLON ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , FLOAT_CONST ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , IDENTIFIER ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , INT_CONST ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , OP_ADD ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , OP_AND ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , OP_DEC ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , OP_INC ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , OP_LNOT ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , OP_MUL ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , OP_NOT ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , OP_SUB ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , STR_LITERAL ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , break ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , case ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , char ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , const ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , continue ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , default ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , do ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , double ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , else ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , enum ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , float ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , for ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , goto ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , if ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , int ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , long ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , return ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , short ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , signed ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , sizeof ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , struct ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , switch ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , typedef ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , unsigned ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , void ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1557 , while ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1558 , <additive-expr> ] = GOTO 96
M [ 1558 , <and-expr> ] = GOTO 97
M [ 1558 , <asn-expr> ] = GOTO 98
M [ 1558 , <cast-expr> ] = GOTO 101
M [ 1558 , <comp-stmt> ] = GOTO 1388
M [ 1558 , <cond-expr> ] = GOTO 103
M [ 1558 , <constant> ] = GOTO 104
M [ 1558 , <eq-expr> ] = GOTO 107
M [ 1558 , <exc-or-expr> ] = GOTO 108
M [ 1558 , <expr-stmt> ] = GOTO 1389
M [ 1558 , <expr> ] = GOTO 1390
M [ 1558 , <inc-or-expr> ] = GOTO 111
M [ 1558 , <iter-stmt> ] = GOTO 1391
M [ 1558 , <jump-stmt> ] = GOTO 1392
M [ 1558 , <labeled-stmt> ] = GOTO 1393
M [ 1558 , <land-expr> ] = GOTO 115
M [ 1558 , <lor-expr> ] = GOTO 116
M [ 1558 , <multiplicative-expr> ] = GOTO 117
M [ 1558 , <num-const> ] = GOTO 118
M [ 1558 , <postfix-expr> ] = GOTO 119
M [ 1558 , <prim-expr> ] = GOTO 120
M [ 1558 , <rel-expr> ] = GOTO 121
M [ 1558 , <sele-stmt> ] = GOTO 1394
M [ 1558 , <shift-expr> ] = GOTO 123
M [ 1558 , <stmt> ] = GOTO 1642
M [ 1558 , <unary-expr> ] = GOTO 125
M [ 1558 , <unary-op> ] = GOTO 126
M [ 1558 , CHAR_CONST ] = SHIFT 127
M [ 1558 , DELIM_LCURBRACE ] = SHIFT 1396
M [ 1558 , DELIM_LPAR ] = SHIFT 129
M [ 1558 , DELIM_SEMICOLON ] = SHIFT 1397
M [ 1558 , FLOAT_CONST ] = SHIFT 132
M [ 1558 , IDENTIFIER ] = SHIFT 1398
M [ 1558 , INT_CONST ] = SHIFT 134
M [ 1558 , OP_ADD ] = SHIFT 135
M [ 1558 , OP_AND ] = SHIFT 136
M [ 1558 , OP_DEC ] = SHIFT 137
M [ 1558 , OP_INC ] = SHIFT 138
M [ 1558 , OP_LNOT ] = SHIFT 139
M [ 1558 , OP_MUL ] = SHIFT 140
M [ 1558 , OP_NOT ] = SHIFT 141
M [ 1558 , OP_SUB ] = SHIFT 142
M [ 1558 , STR_LITERAL ] = SHIFT 143
M [ 1558 , break ] = SHIFT 1399
M [ 1558 , case ] = SHIFT 1400
M [ 1558 , continue ] = SHIFT 1401
M [ 1558 , default ] = SHIFT 1402
M [ 1558 , do ] = SHIFT 1403
M [ 1558 , for ] = SHIFT 1404
M [ 1558 , goto ] = SHIFT 1405
M [ 1558 , if ] = SHIFT 1406
M [ 1558 , return ] = SHIFT 1407
M [ 1558 , sizeof ] = SHIFT 153
M [ 1558 , switch ] = SHIFT 1408
M [ 1558 , while ] = SHIFT 1409
M [ 1559 , CHAR_CONST ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , DELIM_LCURBRACE ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , DELIM_LPAR ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , DELIM_RCURBRACE ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , DELIM_SEMICOLON ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , FLOAT_CONST ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , IDENTIFIER ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , INT_CONST ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , OP_ADD ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , OP_AND ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , OP_DEC ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , OP_INC ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , OP_LNOT ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , OP_MUL ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , OP_NOT ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , OP_SUB ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , STR_LITERAL ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , break ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , case ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , char ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , const ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , continue ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , default ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , do ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , double ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , else ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , enum ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , float ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , for ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , goto ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , if ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , int ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , long ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , return ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , short ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , signed ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , sizeof ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , struct ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , switch ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , typedef ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , unsigned ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , void ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1559 , while ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1560 , DELIM_COLON ] = SHIFT 1643
M [ 1561 , CHAR_CONST ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , DELIM_LCURBRACE ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , DELIM_LPAR ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , DELIM_RCURBRACE ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , DELIM_SEMICOLON ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , FLOAT_CONST ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , IDENTIFIER ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , INT_CONST ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , OP_ADD ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , OP_AND ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , OP_DEC ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , OP_INC ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , OP_LNOT ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , OP_MUL ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , OP_NOT ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , OP_SUB ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , STR_LITERAL ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , break ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , case ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , char ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , const ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , continue ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , default ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , do ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , double ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , else ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , enum ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , float ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , for ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , goto ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , if ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , int ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , long ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , return ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , short ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , signed ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , sizeof ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , struct ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , switch ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , typedef ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , unsigned ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , void ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1561 , while ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1562 , <additive-expr> ] = GOTO 96
M [ 1562 , <and-expr> ] = GOTO 97
M [ 1562 , <asn-expr> ] = GOTO 98
M [ 1562 , <cast-expr> ] = GOTO 101
M [ 1562 , <comp-stmt> ] = GOTO 1388
M [ 1562 , <cond-expr> ] = GOTO 103
M [ 1562 , <constant> ] = GOTO 104
M [ 1562 , <eq-expr> ] = GOTO 107
M [ 1562 , <exc-or-expr> ] = GOTO 108
M [ 1562 , <expr-stmt> ] = GOTO 1389
M [ 1562 , <expr> ] = GOTO 1390
M [ 1562 , <inc-or-expr> ] = GOTO 111
M [ 1562 , <iter-stmt> ] = GOTO 1391
M [ 1562 , <jump-stmt> ] = GOTO 1392
M [ 1562 , <labeled-stmt> ] = GOTO 1393
M [ 1562 , <land-expr> ] = GOTO 115
M [ 1562 , <lor-expr> ] = GOTO 116
M [ 1562 , <multiplicative-expr> ] = GOTO 117
M [ 1562 , <num-const> ] = GOTO 118
M [ 1562 , <postfix-expr> ] = GOTO 119
M [ 1562 , <prim-expr> ] = GOTO 120
M [ 1562 , <rel-expr> ] = GOTO 121
M [ 1562 , <sele-stmt> ] = GOTO 1394
M [ 1562 , <shift-expr> ] = GOTO 123
M [ 1562 , <stmt> ] = GOTO 1644
M [ 1562 , <unary-expr> ] = GOTO 125
M [ 1562 , <unary-op> ] = GOTO 126
M [ 1562 , CHAR_CONST ] = SHIFT 127
M [ 1562 , DELIM_LCURBRACE ] = SHIFT 1396
M [ 1562 , DELIM_LPAR ] = SHIFT 129
M [ 1562 , DELIM_SEMICOLON ] = SHIFT 1397
M [ 1562 , FLOAT_CONST ] = SHIFT 132
M [ 1562 , IDENTIFIER ] = SHIFT 1398
M [ 1562 , INT_CONST ] = SHIFT 134
M [ 1562 , OP_ADD ] = SHIFT 135
M [ 1562 , OP_AND ] = SHIFT 136
M [ 1562 , OP_DEC ] = SHIFT 137
M [ 1562 , OP_INC ] = SHIFT 138
M [ 1562 , OP_LNOT ] = SHIFT 139
M [ 1562 , OP_MUL ] = SHIFT 140
M [ 1562 , OP_NOT ] = SHIFT 141
M [ 1562 , OP_SUB ] = SHIFT 142
M [ 1562 , STR_LITERAL ] = SHIFT 143
M [ 1562 , break ] = SHIFT 1399
M [ 1562 , case ] = SHIFT 1400
M [ 1562 , continue ] = SHIFT 1401
M [ 1562 , default ] = SHIFT 1402
M [ 1562 , do ] = SHIFT 1403
M [ 1562 , for ] = SHIFT 1404
M [ 1562 , goto ] = SHIFT 1405
M [ 1562 , if ] = SHIFT 1406
M [ 1562 , return ] = SHIFT 1407
M [ 1562 , sizeof ] = SHIFT 153
M [ 1562 , switch ] = SHIFT 1408
M [ 1562 , while ] = SHIFT 1409
M [ 1563 , while ] = SHIFT 1645
M [ 1564 , <additive-expr> ] = GOTO 96
M [ 1564 , <and-expr> ] = GOTO 97
M [ 1564 , <asn-expr> ] = GOTO 98
M [ 1564 , <cast-expr> ] = GOTO 101
M [ 1564 , <cond-expr> ] = GOTO 103
M [ 1564 , <constant> ] = GOTO 104
M [ 1564 , <decl-spec> ] = GOTO 760
M [ 1564 , <decl> ] = GOTO 761
M [ 1564 , <enum-spec> ] = GOTO 3
M [ 1564 , <eq-expr> ] = GOTO 107
M [ 1564 , <exc-or-expr> ] = GOTO 108
M [ 1564 , <expr> ] = GOTO 762
M [ 1564 , <for-cond> ] = GOTO 1646
M [ 1564 , <inc-or-expr> ] = GOTO 111
M [ 1564 , <land-expr> ] = GOTO 115
M [ 1564 , <lor-expr> ] = GOTO 116
M [ 1564 , <multiplicative-expr> ] = GOTO 117
M [ 1564 , <num-const> ] = GOTO 118
M [ 1564 , <postfix-expr> ] = GOTO 119
M [ 1564 , <prim-expr> ] = GOTO 120
M [ 1564 , <rel-expr> ] = GOTO 121
M [ 1564 , <shift-expr> ] = GOTO 123
M [ 1564 , <storage-class-spec> ] = GOTO 6
M [ 1564 , <struct-union-spec> ] = GOTO 7
M [ 1564 , <struct-union> ] = GOTO 8
M [ 1564 , <type-qual> ] = GOTO 10
M [ 1564 , <type-spec> ] = GOTO 11
M [ 1564 , <unary-expr> ] = GOTO 125
M [ 1564 , <unary-op> ] = GOTO 126
M [ 1564 , CHAR_CONST ] = SHIFT 127
M [ 1564 , DELIM_LPAR ] = SHIFT 129
M [ 1564 , DELIM_SEMICOLON ] = SHIFT 764
M [ 1564 , FLOAT_CONST ] = SHIFT 132
M [ 1564 , IDENTIFIER ] = SHIFT 159
M [ 1564 , INT_CONST ] = SHIFT 134
M [ 1564 , OP_ADD ] = SHIFT 135
M [ 1564 , OP_AND ] = SHIFT 136
M [ 1564 , OP_DEC ] = SHIFT 137
M [ 1564 , OP_INC ] = SHIFT 138
M [ 1564 , OP_LNOT ] = SHIFT 139
M [ 1564 , OP_MUL ] = SHIFT 140
M [ 1564 , OP_NOT ] = SHIFT 141
M [ 1564 , OP_SUB ] = SHIFT 142
M [ 1564 , STR_LITERAL ] = SHIFT 143
M [ 1564 , char ] = SHIFT 12
M [ 1564 , const ] = SHIFT 13
M [ 1564 , double ] = SHIFT 14
M [ 1564 , enum ] = SHIFT 15
M [ 1564 , float ] = SHIFT 16
M [ 1564 , int ] = SHIFT 17
M [ 1564 , long ] = SHIFT 18
M [ 1564 , short ] = SHIFT 19
M [ 1564 , signed ] = SHIFT 20
M [ 1564 , sizeof ] = SHIFT 153
M [ 1564 , struct ] = SHIFT 21
M [ 1564 , typedef ] = SHIFT 22
M [ 1564 , unsigned ] = SHIFT 23
M [ 1564 , void ] = SHIFT 24
M [ 1565 , CHAR_CONST ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , DELIM_LCURBRACE ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , DELIM_LPAR ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , DELIM_RCURBRACE ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , DELIM_SEMICOLON ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , FLOAT_CONST ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , IDENTIFIER ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , INT_CONST ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , OP_ADD ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , OP_AND ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , OP_DEC ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , OP_INC ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , OP_LNOT ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , OP_MUL ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , OP_NOT ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , OP_SUB ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , STR_LITERAL ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , break ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , case ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , char ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , const ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , continue ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , default ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , do ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , double ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , else ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , enum ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , float ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , for ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , goto ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , if ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , int ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , long ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , return ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , short ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , signed ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , sizeof ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , struct ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , switch ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , typedef ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , unsigned ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , void ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1565 , while ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1566 , <additive-expr> ] = GOTO 299
M [ 1566 , <and-expr> ] = GOTO 300
M [ 1566 , <asn-expr> ] = GOTO 301
M [ 1566 , <cast-expr> ] = GOTO 302
M [ 1566 , <cond-expr> ] = GOTO 303
M [ 1566 , <constant> ] = GOTO 304
M [ 1566 , <eq-expr> ] = GOTO 306
M [ 1566 , <exc-or-expr> ] = GOTO 307
M [ 1566 , <expr> ] = GOTO 1647
M [ 1566 , <inc-or-expr> ] = GOTO 309
M [ 1566 , <land-expr> ] = GOTO 310
M [ 1566 , <lor-expr> ] = GOTO 311
M [ 1566 , <multiplicative-expr> ] = GOTO 312
M [ 1566 , <num-const> ] = GOTO 313
M [ 1566 , <postfix-expr> ] = GOTO 314
M [ 1566 , <prim-expr> ] = GOTO 315
M [ 1566 , <rel-expr> ] = GOTO 316
M [ 1566 , <shift-expr> ] = GOTO 317
M [ 1566 , <unary-expr> ] = GOTO 324
M [ 1566 , <unary-op> ] = GOTO 325
M [ 1566 , CHAR_CONST ] = SHIFT 326
M [ 1566 , DELIM_LPAR ] = SHIFT 327
M [ 1566 , FLOAT_CONST ] = SHIFT 328
M [ 1566 , IDENTIFIER ] = SHIFT 329
M [ 1566 , INT_CONST ] = SHIFT 330
M [ 1566 , OP_ADD ] = SHIFT 135
M [ 1566 , OP_AND ] = SHIFT 136
M [ 1566 , OP_DEC ] = SHIFT 331
M [ 1566 , OP_INC ] = SHIFT 332
M [ 1566 , OP_LNOT ] = SHIFT 139
M [ 1566 , OP_MUL ] = SHIFT 140
M [ 1566 , OP_NOT ] = SHIFT 141
M [ 1566 , OP_SUB ] = SHIFT 142
M [ 1566 , STR_LITERAL ] = SHIFT 333
M [ 1566 , sizeof ] = SHIFT 343
M [ 1567 , DELIM_COMMA ] = SHIFT 261
M [ 1567 , DELIM_SEMICOLON ] = SHIFT 1648
M [ 1568 , CHAR_CONST ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , DELIM_LCURBRACE ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , DELIM_LPAR ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , DELIM_RCURBRACE ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , DELIM_SEMICOLON ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , FLOAT_CONST ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , IDENTIFIER ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , INT_CONST ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , OP_ADD ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , OP_AND ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , OP_DEC ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , OP_INC ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , OP_LNOT ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , OP_MUL ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , OP_NOT ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , OP_SUB ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , STR_LITERAL ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , break ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , case ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , char ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , const ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , continue ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , default ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , do ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , double ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , else ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , enum ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , float ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , for ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , goto ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , if ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , int ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , long ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , return ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , short ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , signed ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , sizeof ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , struct ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , switch ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , typedef ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , unsigned ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , void ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1568 , while ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1569 , <additive-expr> ] = GOTO 299
M [ 1569 , <and-expr> ] = GOTO 300
M [ 1569 , <asn-expr> ] = GOTO 301
M [ 1569 , <cast-expr> ] = GOTO 302
M [ 1569 , <cond-expr> ] = GOTO 303
M [ 1569 , <constant> ] = GOTO 304
M [ 1569 , <eq-expr> ] = GOTO 306
M [ 1569 , <exc-or-expr> ] = GOTO 307
M [ 1569 , <expr> ] = GOTO 1649
M [ 1569 , <inc-or-expr> ] = GOTO 309
M [ 1569 , <land-expr> ] = GOTO 310
M [ 1569 , <lor-expr> ] = GOTO 311
M [ 1569 , <multiplicative-expr> ] = GOTO 312
M [ 1569 , <num-const> ] = GOTO 313
M [ 1569 , <postfix-expr> ] = GOTO 314
M [ 1569 , <prim-expr> ] = GOTO 315
M [ 1569 , <rel-expr> ] = GOTO 316
M [ 1569 , <shift-expr> ] = GOTO 317
M [ 1569 , <unary-expr> ] = GOTO 324
M [ 1569 , <unary-op> ] = GOTO 325
M [ 1569 , CHAR_CONST ] = SHIFT 326
M [ 1569 , DELIM_LPAR ] = SHIFT 327
M [ 1569 , FLOAT_CONST ] = SHIFT 328
M [ 1569 , IDENTIFIER ] = SHIFT 329
M [ 1569 , INT_CONST ] = SHIFT 330
M [ 1569 , OP_ADD ] = SHIFT 135
M [ 1569 , OP_AND ] = SHIFT 136
M [ 1569 , OP_DEC ] = SHIFT 331
M [ 1569 , OP_INC ] = SHIFT 332
M [ 1569 , OP_LNOT ] = SHIFT 139
M [ 1569 , OP_MUL ] = SHIFT 140
M [ 1569 , OP_NOT ] = SHIFT 141
M [ 1569 , OP_SUB ] = SHIFT 142
M [ 1569 , STR_LITERAL ] = SHIFT 333
M [ 1569 , sizeof ] = SHIFT 343
M [ 1570 , <additive-expr> ] = GOTO 299
M [ 1570 , <and-expr> ] = GOTO 300
M [ 1570 , <asn-expr> ] = GOTO 301
M [ 1570 , <cast-expr> ] = GOTO 302
M [ 1570 , <cond-expr> ] = GOTO 303
M [ 1570 , <constant> ] = GOTO 304
M [ 1570 , <eq-expr> ] = GOTO 306
M [ 1570 , <exc-or-expr> ] = GOTO 307
M [ 1570 , <expr> ] = GOTO 1650
M [ 1570 , <inc-or-expr> ] = GOTO 309
M [ 1570 , <land-expr> ] = GOTO 310
M [ 1570 , <lor-expr> ] = GOTO 311
M [ 1570 , <multiplicative-expr> ] = GOTO 312
M [ 1570 , <num-const> ] = GOTO 313
M [ 1570 , <postfix-expr> ] = GOTO 314
M [ 1570 , <prim-expr> ] = GOTO 315
M [ 1570 , <rel-expr> ] = GOTO 316
M [ 1570 , <shift-expr> ] = GOTO 317
M [ 1570 , <unary-expr> ] = GOTO 324
M [ 1570 , <unary-op> ] = GOTO 325
M [ 1570 , CHAR_CONST ] = SHIFT 326
M [ 1570 , DELIM_LPAR ] = SHIFT 327
M [ 1570 , FLOAT_CONST ] = SHIFT 328
M [ 1570 , IDENTIFIER ] = SHIFT 329
M [ 1570 , INT_CONST ] = SHIFT 330
M [ 1570 , OP_ADD ] = SHIFT 135
M [ 1570 , OP_AND ] = SHIFT 136
M [ 1570 , OP_DEC ] = SHIFT 331
M [ 1570 , OP_INC ] = SHIFT 332
M [ 1570 , OP_LNOT ] = SHIFT 139
M [ 1570 , OP_MUL ] = SHIFT 140
M [ 1570 , OP_NOT ] = SHIFT 141
M [ 1570 , OP_SUB ] = SHIFT 142
M [ 1570 , STR_LITERAL ] = SHIFT 333
M [ 1570 , sizeof ] = SHIFT 343
M [ 1571 , DELIM_COMMA ] = REDUCE <cond-expr> -> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <cond-expr> 
M [ 1571 , DELIM_RCURBRACE ] = REDUCE <cond-expr> -> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <cond-expr> 
M [ 1572 , DELIM_COMMA ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , DELIM_QUESTION ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , DELIM_RCURBRACE ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_ADD ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_ADDASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_AND ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_ANDASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_ASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_DIV ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_DIVASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_EQ ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_GE ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_GT ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_LAND ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_LE ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_LOR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_LT ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_MOD ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_MODASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_MUL ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_MULASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_NEQ ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_OR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_ORASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_SHL ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_SHLASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_SHR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_SHRASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_SUB ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_SUBASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_XOR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1572 , OP_XORASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1573 , DELIM_COMMA ] = SHIFT 1651
M [ 1573 , DELIM_RCURBRACE ] = SHIFT 1652
M [ 1574 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1574 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1574 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1574 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1574 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1574 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1574 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1574 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1574 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1574 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1574 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1574 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1574 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1574 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1574 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1574 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1574 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1574 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1574 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1574 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1574 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1574 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1574 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1574 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1574 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1574 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1575 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1575 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1575 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1575 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1575 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1575 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1575 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1575 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1575 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1575 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1575 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1575 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1575 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1575 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1575 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1575 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1575 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1575 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1575 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1575 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1575 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1575 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1575 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1575 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1575 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1575 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1576 , <additive-expr> ] = GOTO 412
M [ 1576 , <and-expr> ] = GOTO 413
M [ 1576 , <asn-expr> ] = GOTO 414
M [ 1576 , <cast-expr> ] = GOTO 415
M [ 1576 , <cond-expr> ] = GOTO 416
M [ 1576 , <constant> ] = GOTO 417
M [ 1576 , <designation> ] = GOTO 418
M [ 1576 , <designator-list> ] = GOTO 419
M [ 1576 , <designator> ] = GOTO 420
M [ 1576 , <eq-expr> ] = GOTO 421
M [ 1576 , <exc-or-expr> ] = GOTO 422
M [ 1576 , <inc-or-expr> ] = GOTO 423
M [ 1576 , <initializer-list> ] = GOTO 1653
M [ 1576 , <initializer> ] = GOTO 425
M [ 1576 , <land-expr> ] = GOTO 426
M [ 1576 , <lor-expr> ] = GOTO 427
M [ 1576 , <multiplicative-expr> ] = GOTO 428
M [ 1576 , <num-const> ] = GOTO 429
M [ 1576 , <postfix-expr> ] = GOTO 430
M [ 1576 , <prim-expr> ] = GOTO 431
M [ 1576 , <rel-expr> ] = GOTO 432
M [ 1576 , <shift-expr> ] = GOTO 433
M [ 1576 , <unary-expr> ] = GOTO 434
M [ 1576 , <unary-op> ] = GOTO 435
M [ 1576 , CHAR_CONST ] = SHIFT 436
M [ 1576 , DELIM_LCURBRACE ] = SHIFT 437
M [ 1576 , DELIM_LPAR ] = SHIFT 438
M [ 1576 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 1576 , FLOAT_CONST ] = SHIFT 440
M [ 1576 , IDENTIFIER ] = SHIFT 441
M [ 1576 , INT_CONST ] = SHIFT 442
M [ 1576 , OP_ADD ] = SHIFT 135
M [ 1576 , OP_AND ] = SHIFT 136
M [ 1576 , OP_DEC ] = SHIFT 443
M [ 1576 , OP_DOT ] = SHIFT 444
M [ 1576 , OP_INC ] = SHIFT 445
M [ 1576 , OP_LNOT ] = SHIFT 139
M [ 1576 , OP_MUL ] = SHIFT 140
M [ 1576 , OP_NOT ] = SHIFT 141
M [ 1576 , OP_SUB ] = SHIFT 142
M [ 1576 , STR_LITERAL ] = SHIFT 446
M [ 1576 , sizeof ] = SHIFT 447
M [ 1577 , DELIM_LCURBRACE ] = SHIFT 1576
M [ 1578 , DELIM_LCURBRACE ] = SHIFT 1576
M [ 1578 , DELIM_QUESTION ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1578 , DELIM_RSQBRACKET ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1578 , OP_ADD ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1578 , OP_AND ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1578 , OP_DIV ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1578 , OP_EQ ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1578 , OP_GE ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1578 , OP_GT ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1578 , OP_LAND ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1578 , OP_LE ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1578 , OP_LOR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1578 , OP_LT ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1578 , OP_MOD ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1578 , OP_MUL ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1578 , OP_NEQ ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1578 , OP_OR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1578 , OP_SHL ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1578 , OP_SHR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1578 , OP_SUB ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1578 , OP_XOR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1579 , DELIM_COMMA ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 1579 , DELIM_LPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 1579 , DELIM_LSQBRACKET ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 1579 , DELIM_RPAR ] = REDUCE <direct-declarator> -> <direct-declarator> DELIM_LSQBRACKET <type-qual-list> <asn-expr> DELIM_RSQBRACKET 
M [ 1580 , DELIM_COMMA ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1580 , DELIM_LPAR ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1580 , DELIM_LSQBRACKET ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1580 , DELIM_RPAR ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1580 , IDENTIFIER ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1580 , OP_MUL ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1580 , char ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1580 , const ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1580 , double ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1580 , enum ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1580 , float ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1580 , int ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1580 , long ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1580 , short ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1580 , signed ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1580 , struct ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1580 , typedef ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1580 , unsigned ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1580 , void ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1581 , <additive-expr> ] = GOTO 412
M [ 1581 , <and-expr> ] = GOTO 413
M [ 1581 , <asn-expr> ] = GOTO 414
M [ 1581 , <cast-expr> ] = GOTO 415
M [ 1581 , <cond-expr> ] = GOTO 416
M [ 1581 , <constant> ] = GOTO 417
M [ 1581 , <designation> ] = GOTO 1135
M [ 1581 , <designator-list> ] = GOTO 419
M [ 1581 , <designator> ] = GOTO 420
M [ 1581 , <eq-expr> ] = GOTO 421
M [ 1581 , <exc-or-expr> ] = GOTO 422
M [ 1581 , <inc-or-expr> ] = GOTO 423
M [ 1581 , <initializer> ] = GOTO 1136
M [ 1581 , <land-expr> ] = GOTO 426
M [ 1581 , <lor-expr> ] = GOTO 427
M [ 1581 , <multiplicative-expr> ] = GOTO 428
M [ 1581 , <num-const> ] = GOTO 429
M [ 1581 , <postfix-expr> ] = GOTO 430
M [ 1581 , <prim-expr> ] = GOTO 431
M [ 1581 , <rel-expr> ] = GOTO 432
M [ 1581 , <shift-expr> ] = GOTO 433
M [ 1581 , <unary-expr> ] = GOTO 434
M [ 1581 , <unary-op> ] = GOTO 435
M [ 1581 , CHAR_CONST ] = SHIFT 436
M [ 1581 , DELIM_LCURBRACE ] = SHIFT 437
M [ 1581 , DELIM_LPAR ] = SHIFT 438
M [ 1581 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 1581 , DELIM_RCURBRACE ] = SHIFT 1654
M [ 1581 , FLOAT_CONST ] = SHIFT 440
M [ 1581 , IDENTIFIER ] = SHIFT 441
M [ 1581 , INT_CONST ] = SHIFT 442
M [ 1581 , OP_ADD ] = SHIFT 135
M [ 1581 , OP_AND ] = SHIFT 136
M [ 1581 , OP_DEC ] = SHIFT 443
M [ 1581 , OP_DOT ] = SHIFT 444
M [ 1581 , OP_INC ] = SHIFT 445
M [ 1581 , OP_LNOT ] = SHIFT 139
M [ 1581 , OP_MUL ] = SHIFT 140
M [ 1581 , OP_NOT ] = SHIFT 141
M [ 1581 , OP_SUB ] = SHIFT 142
M [ 1581 , STR_LITERAL ] = SHIFT 446
M [ 1581 , sizeof ] = SHIFT 447
M [ 1582 , DELIM_LPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_ADD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_ADDASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_AND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_ANDASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_ARROW ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_ASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_DEC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_DIV ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_DIVASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_DOT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_EQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_GE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_GT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_INC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_LAND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_LE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_LOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_LT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_MOD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_MODASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_MUL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_MULASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_NEQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_OR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_ORASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_SHL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_SHLASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_SHR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_SHRASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_SUB ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_SUBASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_XOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1582 , OP_XORASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1583 , DELIM_COMMA ] = SHIFT 1655
M [ 1583 , DELIM_RCURBRACE ] = SHIFT 1656
M [ 1584 , DELIM_COMMA ] = SHIFT 1657
M [ 1584 , DELIM_RCURBRACE ] = SHIFT 1658
M [ 1585 , DELIM_COMMA ] = SHIFT 973
M [ 1585 , DELIM_RPAR ] = SHIFT 1659
M [ 1586 , DELIM_COLON ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1586 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1586 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1586 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1586 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1586 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1586 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1586 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1586 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1586 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1586 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1586 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1586 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1586 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1586 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1586 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1586 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1586 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1586 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1586 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1586 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1586 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1586 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1586 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1586 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1586 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1586 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1587 , DELIM_COMMA ] = SHIFT 981
M [ 1587 , DELIM_RSQBRACKET ] = SHIFT 1660
M [ 1588 , DELIM_COLON ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1588 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1588 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1588 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1588 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1588 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1588 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1588 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1588 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1588 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1588 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1588 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1588 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1588 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1588 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1588 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1588 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1588 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1588 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1588 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1588 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1588 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1588 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1588 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1588 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1588 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1588 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1589 , DELIM_COLON ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1589 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1589 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1589 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1589 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1589 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1589 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1589 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1589 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1589 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1589 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1589 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1589 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1589 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1589 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1589 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1589 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1589 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1589 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1589 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1589 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1589 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1589 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1589 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1589 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1589 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1589 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1590 , DELIM_COLON ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1590 , DELIM_COMMA ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1590 , DELIM_LPAR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1590 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1590 , DELIM_QUESTION ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1590 , OP_ADD ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1590 , OP_AND ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1590 , OP_ARROW ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1590 , OP_DEC ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1590 , OP_DIV ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1590 , OP_DOT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1590 , OP_EQ ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1590 , OP_GE ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1590 , OP_GT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1590 , OP_INC ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1590 , OP_LAND ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1590 , OP_LE ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1590 , OP_LOR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1590 , OP_LT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1590 , OP_MOD ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1590 , OP_MUL ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1590 , OP_NEQ ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1590 , OP_OR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1590 , OP_SHL ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1590 , OP_SHR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1590 , OP_SUB ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1590 , OP_XOR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1591 , <cast-expr> ] = GOTO 1476
M [ 1591 , <constant> ] = GOTO 1237
M [ 1591 , <num-const> ] = GOTO 1239
M [ 1591 , <postfix-expr> ] = GOTO 1240
M [ 1591 , <prim-expr> ] = GOTO 1241
M [ 1591 , <unary-expr> ] = GOTO 1242
M [ 1591 , <unary-op> ] = GOTO 1243
M [ 1591 , CHAR_CONST ] = SHIFT 1244
M [ 1591 , DELIM_LCURBRACE ] = SHIFT 1661
M [ 1591 , DELIM_LPAR ] = SHIFT 1245
M [ 1591 , FLOAT_CONST ] = SHIFT 1246
M [ 1591 , IDENTIFIER ] = SHIFT 1247
M [ 1591 , INT_CONST ] = SHIFT 1248
M [ 1591 , OP_ADD ] = SHIFT 135
M [ 1591 , OP_AND ] = SHIFT 136
M [ 1591 , OP_DEC ] = SHIFT 1249
M [ 1591 , OP_INC ] = SHIFT 1250
M [ 1591 , OP_LNOT ] = SHIFT 139
M [ 1591 , OP_MUL ] = SHIFT 140
M [ 1591 , OP_NOT ] = SHIFT 141
M [ 1591 , OP_SUB ] = SHIFT 142
M [ 1591 , STR_LITERAL ] = SHIFT 1251
M [ 1591 , sizeof ] = SHIFT 1252
M [ 1592 , DELIM_RPAR ] = SHIFT 1662
M [ 1593 , DELIM_RPAR ] = SHIFT 1663
M [ 1594 , DELIM_COLON ] = REDUCE <cond-expr> -> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <cond-expr> 
M [ 1594 , DELIM_COMMA ] = REDUCE <cond-expr> -> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <cond-expr> 
M [ 1595 , DELIM_COLON ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , DELIM_COMMA ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , DELIM_QUESTION ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_ADD ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_ADDASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_AND ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_ANDASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_ASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_DIV ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_DIVASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_EQ ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_GE ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_GT ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_LAND ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_LE ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_LOR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_LT ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_MOD ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_MODASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_MUL ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_MULASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_NEQ ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_OR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_ORASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_SHL ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_SHLASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_SHR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_SHRASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_SUB ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_SUBASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_XOR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1595 , OP_XORASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1596 , DELIM_COMMA ] = SHIFT 1664
M [ 1596 , DELIM_RCURBRACE ] = SHIFT 1665
M [ 1597 , DELIM_COMMA ] = SHIFT 973
M [ 1597 , DELIM_RPAR ] = SHIFT 1666
M [ 1598 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1598 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1598 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1598 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1598 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1598 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1598 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1598 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1598 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1598 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1598 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1598 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1598 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1598 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1598 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1598 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1598 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1598 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1598 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1598 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1598 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1598 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1598 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1598 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1598 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1598 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1598 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR DELIM_RPAR 
M [ 1599 , DELIM_COMMA ] = SHIFT 981
M [ 1599 , DELIM_RSQBRACKET ] = SHIFT 1667
M [ 1600 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1600 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1600 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1600 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1600 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1600 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1600 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1600 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1600 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1600 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1600 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1600 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1600 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1600 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1600 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1600 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1600 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1600 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1600 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1600 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1600 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1600 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1600 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1600 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1600 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1600 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1600 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_ARROW IDENTIFIER 
M [ 1601 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1601 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1601 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1601 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1601 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1601 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1601 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1601 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1601 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1601 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1601 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1601 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1601 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1601 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1601 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1601 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1601 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1601 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1601 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1601 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1601 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1601 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1601 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1601 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1601 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1601 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1601 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> OP_DOT IDENTIFIER 
M [ 1602 , DELIM_COMMA ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1602 , DELIM_LPAR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1602 , DELIM_LSQBRACKET ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1602 , DELIM_QUESTION ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1602 , DELIM_RSQBRACKET ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1602 , OP_ADD ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1602 , OP_AND ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1602 , OP_ARROW ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1602 , OP_DEC ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1602 , OP_DIV ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1602 , OP_DOT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1602 , OP_EQ ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1602 , OP_GE ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1602 , OP_GT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1602 , OP_INC ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1602 , OP_LAND ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1602 , OP_LE ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1602 , OP_LOR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1602 , OP_LT ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1602 , OP_MOD ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1602 , OP_MUL ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1602 , OP_NEQ ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1602 , OP_OR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1602 , OP_SHL ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1602 , OP_SHR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1602 , OP_SUB ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1602 , OP_XOR ] = REDUCE <prim-expr> -> DELIM_LPAR <expr> DELIM_RPAR 
M [ 1603 , <cast-expr> ] = GOTO 1498
M [ 1603 , <constant> ] = GOTO 1285
M [ 1603 , <num-const> ] = GOTO 1287
M [ 1603 , <postfix-expr> ] = GOTO 1288
M [ 1603 , <prim-expr> ] = GOTO 1289
M [ 1603 , <unary-expr> ] = GOTO 1290
M [ 1603 , <unary-op> ] = GOTO 1291
M [ 1603 , CHAR_CONST ] = SHIFT 1292
M [ 1603 , DELIM_LCURBRACE ] = SHIFT 1668
M [ 1603 , DELIM_LPAR ] = SHIFT 1293
M [ 1603 , FLOAT_CONST ] = SHIFT 1294
M [ 1603 , IDENTIFIER ] = SHIFT 1295
M [ 1603 , INT_CONST ] = SHIFT 1296
M [ 1603 , OP_ADD ] = SHIFT 135
M [ 1603 , OP_AND ] = SHIFT 136
M [ 1603 , OP_DEC ] = SHIFT 1297
M [ 1603 , OP_INC ] = SHIFT 1298
M [ 1603 , OP_LNOT ] = SHIFT 139
M [ 1603 , OP_MUL ] = SHIFT 140
M [ 1603 , OP_NOT ] = SHIFT 141
M [ 1603 , OP_SUB ] = SHIFT 142
M [ 1603 , STR_LITERAL ] = SHIFT 1299
M [ 1603 , sizeof ] = SHIFT 1300
M [ 1604 , DELIM_RPAR ] = SHIFT 1669
M [ 1605 , DELIM_RPAR ] = SHIFT 1670
M [ 1606 , DELIM_COMMA ] = REDUCE <cond-expr> -> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <cond-expr> 
M [ 1606 , DELIM_RSQBRACKET ] = REDUCE <cond-expr> -> <lor-expr> DELIM_QUESTION <expr> DELIM_COLON <cond-expr> 
M [ 1607 , DELIM_COMMA ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , DELIM_QUESTION ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , DELIM_RSQBRACKET ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_ADD ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_ADDASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_AND ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_ANDASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_ASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_DIV ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_DIVASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_EQ ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_GE ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_GT ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_LAND ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_LE ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_LOR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_LT ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_MOD ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_MODASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_MUL ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_MULASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_NEQ ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_OR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_ORASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_SHL ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_SHLASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_SHR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_SHRASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_SUB ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_SUBASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_XOR ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1607 , OP_XORASN ] = REDUCE <cast-expr> -> DELIM_LPAR <type-name> DELIM_RPAR <cast-expr> 
M [ 1608 , DELIM_COMMA ] = SHIFT 1671
M [ 1608 , DELIM_RCURBRACE ] = SHIFT 1672
M [ 1609 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1609 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1609 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1609 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1609 , DELIM_RPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1609 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1609 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1609 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1609 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1609 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1609 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1609 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1609 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1609 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1609 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1609 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1609 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1609 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1609 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1609 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1609 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1609 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1609 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1609 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1609 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1609 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1609 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1610 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1610 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1610 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1610 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1610 , DELIM_RPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1610 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1610 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1610 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1610 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1610 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1610 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1610 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1610 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1610 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1610 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1610 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1610 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1610 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1610 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1610 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1610 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1610 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1610 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1610 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1610 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1610 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1610 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1611 , <additive-expr> ] = GOTO 412
M [ 1611 , <and-expr> ] = GOTO 413
M [ 1611 , <asn-expr> ] = GOTO 414
M [ 1611 , <cast-expr> ] = GOTO 415
M [ 1611 , <cond-expr> ] = GOTO 416
M [ 1611 , <constant> ] = GOTO 417
M [ 1611 , <designation> ] = GOTO 418
M [ 1611 , <designator-list> ] = GOTO 419
M [ 1611 , <designator> ] = GOTO 420
M [ 1611 , <eq-expr> ] = GOTO 421
M [ 1611 , <exc-or-expr> ] = GOTO 422
M [ 1611 , <inc-or-expr> ] = GOTO 423
M [ 1611 , <initializer-list> ] = GOTO 1673
M [ 1611 , <initializer> ] = GOTO 425
M [ 1611 , <land-expr> ] = GOTO 426
M [ 1611 , <lor-expr> ] = GOTO 427
M [ 1611 , <multiplicative-expr> ] = GOTO 428
M [ 1611 , <num-const> ] = GOTO 429
M [ 1611 , <postfix-expr> ] = GOTO 430
M [ 1611 , <prim-expr> ] = GOTO 431
M [ 1611 , <rel-expr> ] = GOTO 432
M [ 1611 , <shift-expr> ] = GOTO 433
M [ 1611 , <unary-expr> ] = GOTO 434
M [ 1611 , <unary-op> ] = GOTO 435
M [ 1611 , CHAR_CONST ] = SHIFT 436
M [ 1611 , DELIM_LCURBRACE ] = SHIFT 437
M [ 1611 , DELIM_LPAR ] = SHIFT 438
M [ 1611 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 1611 , FLOAT_CONST ] = SHIFT 440
M [ 1611 , IDENTIFIER ] = SHIFT 441
M [ 1611 , INT_CONST ] = SHIFT 442
M [ 1611 , OP_ADD ] = SHIFT 135
M [ 1611 , OP_AND ] = SHIFT 136
M [ 1611 , OP_DEC ] = SHIFT 443
M [ 1611 , OP_DOT ] = SHIFT 444
M [ 1611 , OP_INC ] = SHIFT 445
M [ 1611 , OP_LNOT ] = SHIFT 139
M [ 1611 , OP_MUL ] = SHIFT 140
M [ 1611 , OP_NOT ] = SHIFT 141
M [ 1611 , OP_SUB ] = SHIFT 142
M [ 1611 , STR_LITERAL ] = SHIFT 446
M [ 1611 , sizeof ] = SHIFT 447
M [ 1612 , DELIM_LCURBRACE ] = SHIFT 1611
M [ 1613 , DELIM_COMMA ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1613 , DELIM_LCURBRACE ] = SHIFT 1611
M [ 1613 , DELIM_QUESTION ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1613 , DELIM_RPAR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1613 , OP_ADD ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1613 , OP_AND ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1613 , OP_DIV ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1613 , OP_EQ ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1613 , OP_GE ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1613 , OP_GT ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1613 , OP_LAND ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1613 , OP_LE ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1613 , OP_LOR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1613 , OP_LT ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1613 , OP_MOD ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1613 , OP_MUL ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1613 , OP_NEQ ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1613 , OP_OR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1613 , OP_SHL ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1613 , OP_SHR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1613 , OP_SUB ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1613 , OP_XOR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1614 , DELIM_COMMA ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , DELIM_LPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , DELIM_SEMICOLON ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_ADD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_ADDASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_AND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_ANDASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_ARROW ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_ASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_DEC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_DIV ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_DIVASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_DOT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_EQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_GE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_GT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_INC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_LAND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_LE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_LOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_LT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_MOD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_MODASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_MUL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_MULASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_NEQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_OR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_ORASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_SHL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_SHLASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_SHR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_SHRASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_SUB ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_SUBASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_XOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1614 , OP_XORASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1615 , <additive-expr> ] = GOTO 412
M [ 1615 , <and-expr> ] = GOTO 413
M [ 1615 , <asn-expr> ] = GOTO 414
M [ 1615 , <cast-expr> ] = GOTO 415
M [ 1615 , <cond-expr> ] = GOTO 416
M [ 1615 , <constant> ] = GOTO 417
M [ 1615 , <designation> ] = GOTO 1135
M [ 1615 , <designator-list> ] = GOTO 419
M [ 1615 , <designator> ] = GOTO 420
M [ 1615 , <eq-expr> ] = GOTO 421
M [ 1615 , <exc-or-expr> ] = GOTO 422
M [ 1615 , <inc-or-expr> ] = GOTO 423
M [ 1615 , <initializer> ] = GOTO 1136
M [ 1615 , <land-expr> ] = GOTO 426
M [ 1615 , <lor-expr> ] = GOTO 427
M [ 1615 , <multiplicative-expr> ] = GOTO 428
M [ 1615 , <num-const> ] = GOTO 429
M [ 1615 , <postfix-expr> ] = GOTO 430
M [ 1615 , <prim-expr> ] = GOTO 431
M [ 1615 , <rel-expr> ] = GOTO 432
M [ 1615 , <shift-expr> ] = GOTO 433
M [ 1615 , <unary-expr> ] = GOTO 434
M [ 1615 , <unary-op> ] = GOTO 435
M [ 1615 , CHAR_CONST ] = SHIFT 436
M [ 1615 , DELIM_LCURBRACE ] = SHIFT 437
M [ 1615 , DELIM_LPAR ] = SHIFT 438
M [ 1615 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 1615 , DELIM_RCURBRACE ] = SHIFT 1674
M [ 1615 , FLOAT_CONST ] = SHIFT 440
M [ 1615 , IDENTIFIER ] = SHIFT 441
M [ 1615 , INT_CONST ] = SHIFT 442
M [ 1615 , OP_ADD ] = SHIFT 135
M [ 1615 , OP_AND ] = SHIFT 136
M [ 1615 , OP_DEC ] = SHIFT 443
M [ 1615 , OP_DOT ] = SHIFT 444
M [ 1615 , OP_INC ] = SHIFT 445
M [ 1615 , OP_LNOT ] = SHIFT 139
M [ 1615 , OP_MUL ] = SHIFT 140
M [ 1615 , OP_NOT ] = SHIFT 141
M [ 1615 , OP_SUB ] = SHIFT 142
M [ 1615 , STR_LITERAL ] = SHIFT 446
M [ 1615 , sizeof ] = SHIFT 447
M [ 1616 , DELIM_COMMA ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , DELIM_LPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , DELIM_RPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_ADD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_ADDASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_AND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_ANDASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_ARROW ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_ASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_DEC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_DIV ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_DIVASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_DOT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_EQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_GE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_GT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_INC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_LAND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_LE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_LOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_LT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_MOD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_MODASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_MUL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_MULASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_NEQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_OR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_ORASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_SHL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_SHLASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_SHR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_SHRASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_SUB ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_SUBASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_XOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1616 , OP_XORASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1617 , DELIM_LPAR ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1617 , DELIM_LSQBRACKET ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1617 , DELIM_RPAR ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1617 , OP_MUL ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1617 , char ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1617 , const ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1617 , double ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1617 , enum ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1617 , float ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1617 , int ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1617 , long ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1617 , short ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1617 , signed ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1617 , struct ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1617 , unsigned ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1617 , void ] = REDUCE <enum-spec> -> enum IDENTIFIER DELIM_LCURBRACE <enumerator-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1618 , <additive-expr> ] = GOTO 412
M [ 1618 , <and-expr> ] = GOTO 413
M [ 1618 , <asn-expr> ] = GOTO 414
M [ 1618 , <cast-expr> ] = GOTO 415
M [ 1618 , <cond-expr> ] = GOTO 416
M [ 1618 , <constant> ] = GOTO 417
M [ 1618 , <designation> ] = GOTO 1135
M [ 1618 , <designator-list> ] = GOTO 419
M [ 1618 , <designator> ] = GOTO 420
M [ 1618 , <eq-expr> ] = GOTO 421
M [ 1618 , <exc-or-expr> ] = GOTO 422
M [ 1618 , <inc-or-expr> ] = GOTO 423
M [ 1618 , <initializer> ] = GOTO 1136
M [ 1618 , <land-expr> ] = GOTO 426
M [ 1618 , <lor-expr> ] = GOTO 427
M [ 1618 , <multiplicative-expr> ] = GOTO 428
M [ 1618 , <num-const> ] = GOTO 429
M [ 1618 , <postfix-expr> ] = GOTO 430
M [ 1618 , <prim-expr> ] = GOTO 431
M [ 1618 , <rel-expr> ] = GOTO 432
M [ 1618 , <shift-expr> ] = GOTO 433
M [ 1618 , <unary-expr> ] = GOTO 434
M [ 1618 , <unary-op> ] = GOTO 435
M [ 1618 , CHAR_CONST ] = SHIFT 436
M [ 1618 , DELIM_LCURBRACE ] = SHIFT 437
M [ 1618 , DELIM_LPAR ] = SHIFT 438
M [ 1618 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 1618 , DELIM_RCURBRACE ] = SHIFT 1675
M [ 1618 , FLOAT_CONST ] = SHIFT 440
M [ 1618 , IDENTIFIER ] = SHIFT 441
M [ 1618 , INT_CONST ] = SHIFT 442
M [ 1618 , OP_ADD ] = SHIFT 135
M [ 1618 , OP_AND ] = SHIFT 136
M [ 1618 , OP_DEC ] = SHIFT 443
M [ 1618 , OP_DOT ] = SHIFT 444
M [ 1618 , OP_INC ] = SHIFT 445
M [ 1618 , OP_LNOT ] = SHIFT 139
M [ 1618 , OP_MUL ] = SHIFT 140
M [ 1618 , OP_NOT ] = SHIFT 141
M [ 1618 , OP_SUB ] = SHIFT 142
M [ 1618 , STR_LITERAL ] = SHIFT 446
M [ 1618 , sizeof ] = SHIFT 447
M [ 1619 , DELIM_COLON ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1619 , DELIM_LPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1619 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1619 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1619 , OP_ADD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1619 , OP_AND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1619 , OP_ARROW ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1619 , OP_DEC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1619 , OP_DIV ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1619 , OP_DOT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1619 , OP_EQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1619 , OP_GE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1619 , OP_GT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1619 , OP_INC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1619 , OP_LAND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1619 , OP_LE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1619 , OP_LOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1619 , OP_LT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1619 , OP_MOD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1619 , OP_MUL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1619 , OP_NEQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1619 , OP_OR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1619 , OP_SHL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1619 , OP_SHR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1619 , OP_SUB ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1619 , OP_XOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1620 , CHAR_CONST ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , DELIM_LCURBRACE ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , DELIM_LPAR ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , DELIM_RCURBRACE ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , DELIM_SEMICOLON ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , FLOAT_CONST ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , IDENTIFIER ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , INT_CONST ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , OP_ADD ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , OP_AND ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , OP_DEC ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , OP_INC ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , OP_LNOT ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , OP_MUL ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , OP_NOT ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , OP_SUB ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , STR_LITERAL ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , break ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , case ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , char ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , const ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , continue ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , default ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , do ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , double ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , enum ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , float ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , for ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , goto ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , if ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , int ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , long ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , return ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , short ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , signed ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , sizeof ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , struct ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , switch ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , typedef ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , unsigned ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , void ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1620 , while ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1621 , DELIM_SEMICOLON ] = SHIFT 1676
M [ 1622 , else ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1622 , while ] = REDUCE <expr-stmt> -> <expr> DELIM_SEMICOLON 
M [ 1623 , <additive-expr> ] = GOTO 96
M [ 1623 , <and-expr> ] = GOTO 97
M [ 1623 , <asn-expr> ] = GOTO 98
M [ 1623 , <cast-expr> ] = GOTO 101
M [ 1623 , <comp-stmt> ] = GOTO 381
M [ 1623 , <cond-expr> ] = GOTO 103
M [ 1623 , <constant> ] = GOTO 104
M [ 1623 , <eq-expr> ] = GOTO 107
M [ 1623 , <exc-or-expr> ] = GOTO 108
M [ 1623 , <expr-stmt> ] = GOTO 382
M [ 1623 , <expr> ] = GOTO 383
M [ 1623 , <inc-or-expr> ] = GOTO 111
M [ 1623 , <iter-stmt> ] = GOTO 384
M [ 1623 , <jump-stmt> ] = GOTO 385
M [ 1623 , <labeled-stmt> ] = GOTO 386
M [ 1623 , <land-expr> ] = GOTO 115
M [ 1623 , <lor-expr> ] = GOTO 116
M [ 1623 , <multiplicative-expr> ] = GOTO 117
M [ 1623 , <num-const> ] = GOTO 118
M [ 1623 , <postfix-expr> ] = GOTO 119
M [ 1623 , <prim-expr> ] = GOTO 120
M [ 1623 , <rel-expr> ] = GOTO 121
M [ 1623 , <sele-stmt> ] = GOTO 387
M [ 1623 , <shift-expr> ] = GOTO 123
M [ 1623 , <stmt> ] = GOTO 1677
M [ 1623 , <unary-expr> ] = GOTO 125
M [ 1623 , <unary-op> ] = GOTO 126
M [ 1623 , CHAR_CONST ] = SHIFT 127
M [ 1623 , DELIM_LCURBRACE ] = SHIFT 389
M [ 1623 , DELIM_LPAR ] = SHIFT 129
M [ 1623 , DELIM_SEMICOLON ] = SHIFT 390
M [ 1623 , FLOAT_CONST ] = SHIFT 132
M [ 1623 , IDENTIFIER ] = SHIFT 391
M [ 1623 , INT_CONST ] = SHIFT 134
M [ 1623 , OP_ADD ] = SHIFT 135
M [ 1623 , OP_AND ] = SHIFT 136
M [ 1623 , OP_DEC ] = SHIFT 137
M [ 1623 , OP_INC ] = SHIFT 138
M [ 1623 , OP_LNOT ] = SHIFT 139
M [ 1623 , OP_MUL ] = SHIFT 140
M [ 1623 , OP_NOT ] = SHIFT 141
M [ 1623 , OP_SUB ] = SHIFT 142
M [ 1623 , STR_LITERAL ] = SHIFT 143
M [ 1623 , break ] = SHIFT 392
M [ 1623 , case ] = SHIFT 393
M [ 1623 , continue ] = SHIFT 394
M [ 1623 , default ] = SHIFT 395
M [ 1623 , do ] = SHIFT 396
M [ 1623 , for ] = SHIFT 397
M [ 1623 , goto ] = SHIFT 398
M [ 1623 , if ] = SHIFT 399
M [ 1623 , return ] = SHIFT 400
M [ 1623 , sizeof ] = SHIFT 153
M [ 1623 , switch ] = SHIFT 401
M [ 1623 , while ] = SHIFT 402
M [ 1624 , <additive-expr> ] = GOTO 96
M [ 1624 , <and-expr> ] = GOTO 97
M [ 1624 , <asn-expr> ] = GOTO 98
M [ 1624 , <blk-item> ] = GOTO 254
M [ 1624 , <cast-expr> ] = GOTO 101
M [ 1624 , <comp-stmt> ] = GOTO 102
M [ 1624 , <cond-expr> ] = GOTO 103
M [ 1624 , <constant> ] = GOTO 104
M [ 1624 , <decl-spec> ] = GOTO 105
M [ 1624 , <decl> ] = GOTO 106
M [ 1624 , <enum-spec> ] = GOTO 3
M [ 1624 , <eq-expr> ] = GOTO 107
M [ 1624 , <exc-or-expr> ] = GOTO 108
M [ 1624 , <expr-stmt> ] = GOTO 109
M [ 1624 , <expr> ] = GOTO 110
M [ 1624 , <inc-or-expr> ] = GOTO 111
M [ 1624 , <iter-stmt> ] = GOTO 112
M [ 1624 , <jump-stmt> ] = GOTO 113
M [ 1624 , <labeled-stmt> ] = GOTO 114
M [ 1624 , <land-expr> ] = GOTO 115
M [ 1624 , <lor-expr> ] = GOTO 116
M [ 1624 , <multiplicative-expr> ] = GOTO 117
M [ 1624 , <num-const> ] = GOTO 118
M [ 1624 , <postfix-expr> ] = GOTO 119
M [ 1624 , <prim-expr> ] = GOTO 120
M [ 1624 , <rel-expr> ] = GOTO 121
M [ 1624 , <sele-stmt> ] = GOTO 122
M [ 1624 , <shift-expr> ] = GOTO 123
M [ 1624 , <stmt> ] = GOTO 124
M [ 1624 , <storage-class-spec> ] = GOTO 6
M [ 1624 , <struct-union-spec> ] = GOTO 7
M [ 1624 , <struct-union> ] = GOTO 8
M [ 1624 , <type-qual> ] = GOTO 10
M [ 1624 , <type-spec> ] = GOTO 11
M [ 1624 , <unary-expr> ] = GOTO 125
M [ 1624 , <unary-op> ] = GOTO 126
M [ 1624 , CHAR_CONST ] = SHIFT 127
M [ 1624 , DELIM_LCURBRACE ] = SHIFT 128
M [ 1624 , DELIM_LPAR ] = SHIFT 129
M [ 1624 , DELIM_RCURBRACE ] = SHIFT 1678
M [ 1624 , DELIM_SEMICOLON ] = SHIFT 131
M [ 1624 , FLOAT_CONST ] = SHIFT 132
M [ 1624 , IDENTIFIER ] = SHIFT 133
M [ 1624 , INT_CONST ] = SHIFT 134
M [ 1624 , OP_ADD ] = SHIFT 135
M [ 1624 , OP_AND ] = SHIFT 136
M [ 1624 , OP_DEC ] = SHIFT 137
M [ 1624 , OP_INC ] = SHIFT 138
M [ 1624 , OP_LNOT ] = SHIFT 139
M [ 1624 , OP_MUL ] = SHIFT 140
M [ 1624 , OP_NOT ] = SHIFT 141
M [ 1624 , OP_SUB ] = SHIFT 142
M [ 1624 , STR_LITERAL ] = SHIFT 143
M [ 1624 , break ] = SHIFT 144
M [ 1624 , case ] = SHIFT 145
M [ 1624 , char ] = SHIFT 12
M [ 1624 , const ] = SHIFT 13
M [ 1624 , continue ] = SHIFT 146
M [ 1624 , default ] = SHIFT 147
M [ 1624 , do ] = SHIFT 148
M [ 1624 , double ] = SHIFT 14
M [ 1624 , enum ] = SHIFT 15
M [ 1624 , float ] = SHIFT 16
M [ 1624 , for ] = SHIFT 149
M [ 1624 , goto ] = SHIFT 150
M [ 1624 , if ] = SHIFT 151
M [ 1624 , int ] = SHIFT 17
M [ 1624 , long ] = SHIFT 18
M [ 1624 , return ] = SHIFT 152
M [ 1624 , short ] = SHIFT 19
M [ 1624 , signed ] = SHIFT 20
M [ 1624 , sizeof ] = SHIFT 153
M [ 1624 , struct ] = SHIFT 21
M [ 1624 , switch ] = SHIFT 154
M [ 1624 , typedef ] = SHIFT 22
M [ 1624 , unsigned ] = SHIFT 23
M [ 1624 , void ] = SHIFT 24
M [ 1624 , while ] = SHIFT 155
M [ 1625 , else ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1625 , while ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE DELIM_RCURBRACE 
M [ 1626 , <additive-expr> ] = GOTO 96
M [ 1626 , <and-expr> ] = GOTO 97
M [ 1626 , <asn-expr> ] = GOTO 98
M [ 1626 , <cast-expr> ] = GOTO 101
M [ 1626 , <comp-stmt> ] = GOTO 1526
M [ 1626 , <cond-expr> ] = GOTO 103
M [ 1626 , <constant> ] = GOTO 104
M [ 1626 , <eq-expr> ] = GOTO 107
M [ 1626 , <exc-or-expr> ] = GOTO 108
M [ 1626 , <expr-stmt> ] = GOTO 1527
M [ 1626 , <expr> ] = GOTO 1528
M [ 1626 , <inc-or-expr> ] = GOTO 111
M [ 1626 , <iter-stmt> ] = GOTO 1529
M [ 1626 , <jump-stmt> ] = GOTO 1530
M [ 1626 , <labeled-stmt> ] = GOTO 1531
M [ 1626 , <land-expr> ] = GOTO 115
M [ 1626 , <lor-expr> ] = GOTO 116
M [ 1626 , <multiplicative-expr> ] = GOTO 117
M [ 1626 , <num-const> ] = GOTO 118
M [ 1626 , <postfix-expr> ] = GOTO 119
M [ 1626 , <prim-expr> ] = GOTO 120
M [ 1626 , <rel-expr> ] = GOTO 121
M [ 1626 , <sele-stmt> ] = GOTO 1532
M [ 1626 , <shift-expr> ] = GOTO 123
M [ 1626 , <stmt> ] = GOTO 1679
M [ 1626 , <unary-expr> ] = GOTO 125
M [ 1626 , <unary-op> ] = GOTO 126
M [ 1626 , CHAR_CONST ] = SHIFT 127
M [ 1626 , DELIM_LCURBRACE ] = SHIFT 1534
M [ 1626 , DELIM_LPAR ] = SHIFT 129
M [ 1626 , DELIM_SEMICOLON ] = SHIFT 1535
M [ 1626 , FLOAT_CONST ] = SHIFT 132
M [ 1626 , IDENTIFIER ] = SHIFT 1536
M [ 1626 , INT_CONST ] = SHIFT 134
M [ 1626 , OP_ADD ] = SHIFT 135
M [ 1626 , OP_AND ] = SHIFT 136
M [ 1626 , OP_DEC ] = SHIFT 137
M [ 1626 , OP_INC ] = SHIFT 138
M [ 1626 , OP_LNOT ] = SHIFT 139
M [ 1626 , OP_MUL ] = SHIFT 140
M [ 1626 , OP_NOT ] = SHIFT 141
M [ 1626 , OP_SUB ] = SHIFT 142
M [ 1626 , STR_LITERAL ] = SHIFT 143
M [ 1626 , break ] = SHIFT 1537
M [ 1626 , case ] = SHIFT 1538
M [ 1626 , continue ] = SHIFT 1539
M [ 1626 , default ] = SHIFT 1540
M [ 1626 , do ] = SHIFT 1541
M [ 1626 , for ] = SHIFT 1542
M [ 1626 , goto ] = SHIFT 1543
M [ 1626 , if ] = SHIFT 1544
M [ 1626 , return ] = SHIFT 1545
M [ 1626 , sizeof ] = SHIFT 153
M [ 1626 , switch ] = SHIFT 1546
M [ 1626 , while ] = SHIFT 1547
M [ 1627 , else ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1627 , while ] = REDUCE <jump-stmt> -> break DELIM_SEMICOLON 
M [ 1628 , DELIM_COLON ] = SHIFT 1680
M [ 1629 , else ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1629 , while ] = REDUCE <jump-stmt> -> continue DELIM_SEMICOLON 
M [ 1630 , <additive-expr> ] = GOTO 96
M [ 1630 , <and-expr> ] = GOTO 97
M [ 1630 , <asn-expr> ] = GOTO 98
M [ 1630 , <cast-expr> ] = GOTO 101
M [ 1630 , <comp-stmt> ] = GOTO 1526
M [ 1630 , <cond-expr> ] = GOTO 103
M [ 1630 , <constant> ] = GOTO 104
M [ 1630 , <eq-expr> ] = GOTO 107
M [ 1630 , <exc-or-expr> ] = GOTO 108
M [ 1630 , <expr-stmt> ] = GOTO 1527
M [ 1630 , <expr> ] = GOTO 1528
M [ 1630 , <inc-or-expr> ] = GOTO 111
M [ 1630 , <iter-stmt> ] = GOTO 1529
M [ 1630 , <jump-stmt> ] = GOTO 1530
M [ 1630 , <labeled-stmt> ] = GOTO 1531
M [ 1630 , <land-expr> ] = GOTO 115
M [ 1630 , <lor-expr> ] = GOTO 116
M [ 1630 , <multiplicative-expr> ] = GOTO 117
M [ 1630 , <num-const> ] = GOTO 118
M [ 1630 , <postfix-expr> ] = GOTO 119
M [ 1630 , <prim-expr> ] = GOTO 120
M [ 1630 , <rel-expr> ] = GOTO 121
M [ 1630 , <sele-stmt> ] = GOTO 1532
M [ 1630 , <shift-expr> ] = GOTO 123
M [ 1630 , <stmt> ] = GOTO 1681
M [ 1630 , <unary-expr> ] = GOTO 125
M [ 1630 , <unary-op> ] = GOTO 126
M [ 1630 , CHAR_CONST ] = SHIFT 127
M [ 1630 , DELIM_LCURBRACE ] = SHIFT 1534
M [ 1630 , DELIM_LPAR ] = SHIFT 129
M [ 1630 , DELIM_SEMICOLON ] = SHIFT 1535
M [ 1630 , FLOAT_CONST ] = SHIFT 132
M [ 1630 , IDENTIFIER ] = SHIFT 1536
M [ 1630 , INT_CONST ] = SHIFT 134
M [ 1630 , OP_ADD ] = SHIFT 135
M [ 1630 , OP_AND ] = SHIFT 136
M [ 1630 , OP_DEC ] = SHIFT 137
M [ 1630 , OP_INC ] = SHIFT 138
M [ 1630 , OP_LNOT ] = SHIFT 139
M [ 1630 , OP_MUL ] = SHIFT 140
M [ 1630 , OP_NOT ] = SHIFT 141
M [ 1630 , OP_SUB ] = SHIFT 142
M [ 1630 , STR_LITERAL ] = SHIFT 143
M [ 1630 , break ] = SHIFT 1537
M [ 1630 , case ] = SHIFT 1538
M [ 1630 , continue ] = SHIFT 1539
M [ 1630 , default ] = SHIFT 1540
M [ 1630 , do ] = SHIFT 1541
M [ 1630 , for ] = SHIFT 1542
M [ 1630 , goto ] = SHIFT 1543
M [ 1630 , if ] = SHIFT 1544
M [ 1630 , return ] = SHIFT 1545
M [ 1630 , sizeof ] = SHIFT 153
M [ 1630 , switch ] = SHIFT 1546
M [ 1630 , while ] = SHIFT 1547
M [ 1631 , while ] = SHIFT 1682
M [ 1632 , <additive-expr> ] = GOTO 96
M [ 1632 , <and-expr> ] = GOTO 97
M [ 1632 , <asn-expr> ] = GOTO 98
M [ 1632 , <cast-expr> ] = GOTO 101
M [ 1632 , <cond-expr> ] = GOTO 103
M [ 1632 , <constant> ] = GOTO 104
M [ 1632 , <decl-spec> ] = GOTO 760
M [ 1632 , <decl> ] = GOTO 761
M [ 1632 , <enum-spec> ] = GOTO 3
M [ 1632 , <eq-expr> ] = GOTO 107
M [ 1632 , <exc-or-expr> ] = GOTO 108
M [ 1632 , <expr> ] = GOTO 762
M [ 1632 , <for-cond> ] = GOTO 1683
M [ 1632 , <inc-or-expr> ] = GOTO 111
M [ 1632 , <land-expr> ] = GOTO 115
M [ 1632 , <lor-expr> ] = GOTO 116
M [ 1632 , <multiplicative-expr> ] = GOTO 117
M [ 1632 , <num-const> ] = GOTO 118
M [ 1632 , <postfix-expr> ] = GOTO 119
M [ 1632 , <prim-expr> ] = GOTO 120
M [ 1632 , <rel-expr> ] = GOTO 121
M [ 1632 , <shift-expr> ] = GOTO 123
M [ 1632 , <storage-class-spec> ] = GOTO 6
M [ 1632 , <struct-union-spec> ] = GOTO 7
M [ 1632 , <struct-union> ] = GOTO 8
M [ 1632 , <type-qual> ] = GOTO 10
M [ 1632 , <type-spec> ] = GOTO 11
M [ 1632 , <unary-expr> ] = GOTO 125
M [ 1632 , <unary-op> ] = GOTO 126
M [ 1632 , CHAR_CONST ] = SHIFT 127
M [ 1632 , DELIM_LPAR ] = SHIFT 129
M [ 1632 , DELIM_SEMICOLON ] = SHIFT 764
M [ 1632 , FLOAT_CONST ] = SHIFT 132
M [ 1632 , IDENTIFIER ] = SHIFT 159
M [ 1632 , INT_CONST ] = SHIFT 134
M [ 1632 , OP_ADD ] = SHIFT 135
M [ 1632 , OP_AND ] = SHIFT 136
M [ 1632 , OP_DEC ] = SHIFT 137
M [ 1632 , OP_INC ] = SHIFT 138
M [ 1632 , OP_LNOT ] = SHIFT 139
M [ 1632 , OP_MUL ] = SHIFT 140
M [ 1632 , OP_NOT ] = SHIFT 141
M [ 1632 , OP_SUB ] = SHIFT 142
M [ 1632 , STR_LITERAL ] = SHIFT 143
M [ 1632 , char ] = SHIFT 12
M [ 1632 , const ] = SHIFT 13
M [ 1632 , double ] = SHIFT 14
M [ 1632 , enum ] = SHIFT 15
M [ 1632 , float ] = SHIFT 16
M [ 1632 , int ] = SHIFT 17
M [ 1632 , long ] = SHIFT 18
M [ 1632 , short ] = SHIFT 19
M [ 1632 , signed ] = SHIFT 20
M [ 1632 , sizeof ] = SHIFT 153
M [ 1632 , struct ] = SHIFT 21
M [ 1632 , typedef ] = SHIFT 22
M [ 1632 , unsigned ] = SHIFT 23
M [ 1632 , void ] = SHIFT 24
M [ 1633 , else ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1633 , while ] = REDUCE <jump-stmt> -> goto DELIM_SEMICOLON 
M [ 1634 , <additive-expr> ] = GOTO 299
M [ 1634 , <and-expr> ] = GOTO 300
M [ 1634 , <asn-expr> ] = GOTO 301
M [ 1634 , <cast-expr> ] = GOTO 302
M [ 1634 , <cond-expr> ] = GOTO 303
M [ 1634 , <constant> ] = GOTO 304
M [ 1634 , <eq-expr> ] = GOTO 306
M [ 1634 , <exc-or-expr> ] = GOTO 307
M [ 1634 , <expr> ] = GOTO 1684
M [ 1634 , <inc-or-expr> ] = GOTO 309
M [ 1634 , <land-expr> ] = GOTO 310
M [ 1634 , <lor-expr> ] = GOTO 311
M [ 1634 , <multiplicative-expr> ] = GOTO 312
M [ 1634 , <num-const> ] = GOTO 313
M [ 1634 , <postfix-expr> ] = GOTO 314
M [ 1634 , <prim-expr> ] = GOTO 315
M [ 1634 , <rel-expr> ] = GOTO 316
M [ 1634 , <shift-expr> ] = GOTO 317
M [ 1634 , <unary-expr> ] = GOTO 324
M [ 1634 , <unary-op> ] = GOTO 325
M [ 1634 , CHAR_CONST ] = SHIFT 326
M [ 1634 , DELIM_LPAR ] = SHIFT 327
M [ 1634 , FLOAT_CONST ] = SHIFT 328
M [ 1634 , IDENTIFIER ] = SHIFT 329
M [ 1634 , INT_CONST ] = SHIFT 330
M [ 1634 , OP_ADD ] = SHIFT 135
M [ 1634 , OP_AND ] = SHIFT 136
M [ 1634 , OP_DEC ] = SHIFT 331
M [ 1634 , OP_INC ] = SHIFT 332
M [ 1634 , OP_LNOT ] = SHIFT 139
M [ 1634 , OP_MUL ] = SHIFT 140
M [ 1634 , OP_NOT ] = SHIFT 141
M [ 1634 , OP_SUB ] = SHIFT 142
M [ 1634 , STR_LITERAL ] = SHIFT 333
M [ 1634 , sizeof ] = SHIFT 343
M [ 1635 , DELIM_COMMA ] = SHIFT 261
M [ 1635 , DELIM_SEMICOLON ] = SHIFT 1685
M [ 1636 , else ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1636 , while ] = REDUCE <jump-stmt> -> return DELIM_SEMICOLON 
M [ 1637 , <additive-expr> ] = GOTO 299
M [ 1637 , <and-expr> ] = GOTO 300
M [ 1637 , <asn-expr> ] = GOTO 301
M [ 1637 , <cast-expr> ] = GOTO 302
M [ 1637 , <cond-expr> ] = GOTO 303
M [ 1637 , <constant> ] = GOTO 304
M [ 1637 , <eq-expr> ] = GOTO 306
M [ 1637 , <exc-or-expr> ] = GOTO 307
M [ 1637 , <expr> ] = GOTO 1686
M [ 1637 , <inc-or-expr> ] = GOTO 309
M [ 1637 , <land-expr> ] = GOTO 310
M [ 1637 , <lor-expr> ] = GOTO 311
M [ 1637 , <multiplicative-expr> ] = GOTO 312
M [ 1637 , <num-const> ] = GOTO 313
M [ 1637 , <postfix-expr> ] = GOTO 314
M [ 1637 , <prim-expr> ] = GOTO 315
M [ 1637 , <rel-expr> ] = GOTO 316
M [ 1637 , <shift-expr> ] = GOTO 317
M [ 1637 , <unary-expr> ] = GOTO 324
M [ 1637 , <unary-op> ] = GOTO 325
M [ 1637 , CHAR_CONST ] = SHIFT 326
M [ 1637 , DELIM_LPAR ] = SHIFT 327
M [ 1637 , FLOAT_CONST ] = SHIFT 328
M [ 1637 , IDENTIFIER ] = SHIFT 329
M [ 1637 , INT_CONST ] = SHIFT 330
M [ 1637 , OP_ADD ] = SHIFT 135
M [ 1637 , OP_AND ] = SHIFT 136
M [ 1637 , OP_DEC ] = SHIFT 331
M [ 1637 , OP_INC ] = SHIFT 332
M [ 1637 , OP_LNOT ] = SHIFT 139
M [ 1637 , OP_MUL ] = SHIFT 140
M [ 1637 , OP_NOT ] = SHIFT 141
M [ 1637 , OP_SUB ] = SHIFT 142
M [ 1637 , STR_LITERAL ] = SHIFT 333
M [ 1637 , sizeof ] = SHIFT 343
M [ 1638 , <additive-expr> ] = GOTO 299
M [ 1638 , <and-expr> ] = GOTO 300
M [ 1638 , <asn-expr> ] = GOTO 301
M [ 1638 , <cast-expr> ] = GOTO 302
M [ 1638 , <cond-expr> ] = GOTO 303
M [ 1638 , <constant> ] = GOTO 304
M [ 1638 , <eq-expr> ] = GOTO 306
M [ 1638 , <exc-or-expr> ] = GOTO 307
M [ 1638 , <expr> ] = GOTO 1687
M [ 1638 , <inc-or-expr> ] = GOTO 309
M [ 1638 , <land-expr> ] = GOTO 310
M [ 1638 , <lor-expr> ] = GOTO 311
M [ 1638 , <multiplicative-expr> ] = GOTO 312
M [ 1638 , <num-const> ] = GOTO 313
M [ 1638 , <postfix-expr> ] = GOTO 314
M [ 1638 , <prim-expr> ] = GOTO 315
M [ 1638 , <rel-expr> ] = GOTO 316
M [ 1638 , <shift-expr> ] = GOTO 317
M [ 1638 , <unary-expr> ] = GOTO 324
M [ 1638 , <unary-op> ] = GOTO 325
M [ 1638 , CHAR_CONST ] = SHIFT 326
M [ 1638 , DELIM_LPAR ] = SHIFT 327
M [ 1638 , FLOAT_CONST ] = SHIFT 328
M [ 1638 , IDENTIFIER ] = SHIFT 329
M [ 1638 , INT_CONST ] = SHIFT 330
M [ 1638 , OP_ADD ] = SHIFT 135
M [ 1638 , OP_AND ] = SHIFT 136
M [ 1638 , OP_DEC ] = SHIFT 331
M [ 1638 , OP_INC ] = SHIFT 332
M [ 1638 , OP_LNOT ] = SHIFT 139
M [ 1638 , OP_MUL ] = SHIFT 140
M [ 1638 , OP_NOT ] = SHIFT 141
M [ 1638 , OP_SUB ] = SHIFT 142
M [ 1638 , STR_LITERAL ] = SHIFT 333
M [ 1638 , sizeof ] = SHIFT 343
M [ 1639 , DELIM_COMMA ] = SHIFT 661
M [ 1639 , DELIM_RPAR ] = REDUCE <for-cond> -> <expr> DELIM_SEMICOLON <expr> DELIM_SEMICOLON <expr> 
M [ 1640 , CHAR_CONST ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , DELIM_LCURBRACE ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , DELIM_LPAR ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , DELIM_RCURBRACE ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , DELIM_SEMICOLON ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , FLOAT_CONST ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , IDENTIFIER ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , INT_CONST ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , OP_ADD ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , OP_AND ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , OP_DEC ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , OP_INC ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , OP_LNOT ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , OP_MUL ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , OP_NOT ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , OP_SUB ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , STR_LITERAL ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , break ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , case ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , char ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , const ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , continue ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , default ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , do ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , double ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , enum ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , float ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , for ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , goto ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , if ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , int ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , long ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , return ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , short ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , signed ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , sizeof ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , struct ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , switch ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , typedef ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , unsigned ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , void ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1640 , while ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1641 , CHAR_CONST ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , DELIM_LCURBRACE ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , DELIM_LPAR ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , DELIM_RCURBRACE ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , DELIM_SEMICOLON ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , FLOAT_CONST ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , IDENTIFIER ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , INT_CONST ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , OP_ADD ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , OP_AND ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , OP_DEC ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , OP_INC ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , OP_LNOT ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , OP_MUL ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , OP_NOT ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , OP_SUB ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , STR_LITERAL ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , break ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , case ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , char ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , const ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , continue ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , default ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , do ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , double ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , else ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , enum ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , float ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , for ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , goto ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , if ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , int ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , long ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , return ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , short ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , signed ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , sizeof ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , struct ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , switch ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , typedef ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , unsigned ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , void ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1641 , while ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1642 , CHAR_CONST ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , DELIM_LCURBRACE ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , DELIM_LPAR ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , DELIM_RCURBRACE ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , DELIM_SEMICOLON ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , FLOAT_CONST ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , IDENTIFIER ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , INT_CONST ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , OP_ADD ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , OP_AND ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , OP_DEC ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , OP_INC ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , OP_LNOT ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , OP_MUL ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , OP_NOT ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , OP_SUB ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , STR_LITERAL ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , break ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , case ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , char ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , const ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , continue ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , default ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , do ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , double ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , else ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , enum ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , float ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , for ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , goto ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , if ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , int ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , long ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , return ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , short ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , signed ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , sizeof ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , struct ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , switch ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , typedef ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , unsigned ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , void ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1642 , while ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1643 , <additive-expr> ] = GOTO 96
M [ 1643 , <and-expr> ] = GOTO 97
M [ 1643 , <asn-expr> ] = GOTO 98
M [ 1643 , <cast-expr> ] = GOTO 101
M [ 1643 , <comp-stmt> ] = GOTO 1388
M [ 1643 , <cond-expr> ] = GOTO 103
M [ 1643 , <constant> ] = GOTO 104
M [ 1643 , <eq-expr> ] = GOTO 107
M [ 1643 , <exc-or-expr> ] = GOTO 108
M [ 1643 , <expr-stmt> ] = GOTO 1389
M [ 1643 , <expr> ] = GOTO 1390
M [ 1643 , <inc-or-expr> ] = GOTO 111
M [ 1643 , <iter-stmt> ] = GOTO 1391
M [ 1643 , <jump-stmt> ] = GOTO 1392
M [ 1643 , <labeled-stmt> ] = GOTO 1393
M [ 1643 , <land-expr> ] = GOTO 115
M [ 1643 , <lor-expr> ] = GOTO 116
M [ 1643 , <multiplicative-expr> ] = GOTO 117
M [ 1643 , <num-const> ] = GOTO 118
M [ 1643 , <postfix-expr> ] = GOTO 119
M [ 1643 , <prim-expr> ] = GOTO 120
M [ 1643 , <rel-expr> ] = GOTO 121
M [ 1643 , <sele-stmt> ] = GOTO 1394
M [ 1643 , <shift-expr> ] = GOTO 123
M [ 1643 , <stmt> ] = GOTO 1688
M [ 1643 , <unary-expr> ] = GOTO 125
M [ 1643 , <unary-op> ] = GOTO 126
M [ 1643 , CHAR_CONST ] = SHIFT 127
M [ 1643 , DELIM_LCURBRACE ] = SHIFT 1396
M [ 1643 , DELIM_LPAR ] = SHIFT 129
M [ 1643 , DELIM_SEMICOLON ] = SHIFT 1397
M [ 1643 , FLOAT_CONST ] = SHIFT 132
M [ 1643 , IDENTIFIER ] = SHIFT 1398
M [ 1643 , INT_CONST ] = SHIFT 134
M [ 1643 , OP_ADD ] = SHIFT 135
M [ 1643 , OP_AND ] = SHIFT 136
M [ 1643 , OP_DEC ] = SHIFT 137
M [ 1643 , OP_INC ] = SHIFT 138
M [ 1643 , OP_LNOT ] = SHIFT 139
M [ 1643 , OP_MUL ] = SHIFT 140
M [ 1643 , OP_NOT ] = SHIFT 141
M [ 1643 , OP_SUB ] = SHIFT 142
M [ 1643 , STR_LITERAL ] = SHIFT 143
M [ 1643 , break ] = SHIFT 1399
M [ 1643 , case ] = SHIFT 1400
M [ 1643 , continue ] = SHIFT 1401
M [ 1643 , default ] = SHIFT 1402
M [ 1643 , do ] = SHIFT 1403
M [ 1643 , for ] = SHIFT 1404
M [ 1643 , goto ] = SHIFT 1405
M [ 1643 , if ] = SHIFT 1406
M [ 1643 , return ] = SHIFT 1407
M [ 1643 , sizeof ] = SHIFT 153
M [ 1643 , switch ] = SHIFT 1408
M [ 1643 , while ] = SHIFT 1409
M [ 1644 , CHAR_CONST ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , DELIM_LCURBRACE ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , DELIM_LPAR ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , DELIM_RCURBRACE ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , DELIM_SEMICOLON ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , FLOAT_CONST ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , IDENTIFIER ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , INT_CONST ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , OP_ADD ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , OP_AND ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , OP_DEC ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , OP_INC ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , OP_LNOT ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , OP_MUL ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , OP_NOT ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , OP_SUB ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , STR_LITERAL ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , break ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , case ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , char ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , const ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , continue ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , default ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , do ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , double ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , else ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , enum ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , float ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , for ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , goto ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , if ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , int ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , long ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , return ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , short ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , signed ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , sizeof ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , struct ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , switch ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , typedef ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , unsigned ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , void ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1644 , while ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1645 , DELIM_LPAR ] = SHIFT 1689
M [ 1646 , DELIM_RPAR ] = SHIFT 1690
M [ 1647 , DELIM_COMMA ] = SHIFT 661
M [ 1647 , DELIM_RPAR ] = SHIFT 1691
M [ 1648 , CHAR_CONST ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , DELIM_LCURBRACE ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , DELIM_LPAR ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , DELIM_RCURBRACE ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , DELIM_SEMICOLON ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , FLOAT_CONST ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , IDENTIFIER ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , INT_CONST ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , OP_ADD ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , OP_AND ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , OP_DEC ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , OP_INC ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , OP_LNOT ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , OP_MUL ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , OP_NOT ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , OP_SUB ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , STR_LITERAL ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , break ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , case ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , char ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , const ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , continue ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , default ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , do ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , double ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , else ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , enum ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , float ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , for ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , goto ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , if ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , int ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , long ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , return ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , short ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , signed ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , sizeof ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , struct ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , switch ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , typedef ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , unsigned ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , void ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1648 , while ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1649 , DELIM_COMMA ] = SHIFT 661
M [ 1649 , DELIM_RPAR ] = SHIFT 1692
M [ 1650 , DELIM_COMMA ] = SHIFT 661
M [ 1650 , DELIM_RPAR ] = SHIFT 1693
M [ 1651 , <additive-expr> ] = GOTO 412
M [ 1651 , <and-expr> ] = GOTO 413
M [ 1651 , <asn-expr> ] = GOTO 414
M [ 1651 , <cast-expr> ] = GOTO 415
M [ 1651 , <cond-expr> ] = GOTO 416
M [ 1651 , <constant> ] = GOTO 417
M [ 1651 , <designation> ] = GOTO 1135
M [ 1651 , <designator-list> ] = GOTO 419
M [ 1651 , <designator> ] = GOTO 420
M [ 1651 , <eq-expr> ] = GOTO 421
M [ 1651 , <exc-or-expr> ] = GOTO 422
M [ 1651 , <inc-or-expr> ] = GOTO 423
M [ 1651 , <initializer> ] = GOTO 1136
M [ 1651 , <land-expr> ] = GOTO 426
M [ 1651 , <lor-expr> ] = GOTO 427
M [ 1651 , <multiplicative-expr> ] = GOTO 428
M [ 1651 , <num-const> ] = GOTO 429
M [ 1651 , <postfix-expr> ] = GOTO 430
M [ 1651 , <prim-expr> ] = GOTO 431
M [ 1651 , <rel-expr> ] = GOTO 432
M [ 1651 , <shift-expr> ] = GOTO 433
M [ 1651 , <unary-expr> ] = GOTO 434
M [ 1651 , <unary-op> ] = GOTO 435
M [ 1651 , CHAR_CONST ] = SHIFT 436
M [ 1651 , DELIM_LCURBRACE ] = SHIFT 437
M [ 1651 , DELIM_LPAR ] = SHIFT 438
M [ 1651 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 1651 , DELIM_RCURBRACE ] = SHIFT 1694
M [ 1651 , FLOAT_CONST ] = SHIFT 440
M [ 1651 , IDENTIFIER ] = SHIFT 441
M [ 1651 , INT_CONST ] = SHIFT 442
M [ 1651 , OP_ADD ] = SHIFT 135
M [ 1651 , OP_AND ] = SHIFT 136
M [ 1651 , OP_DEC ] = SHIFT 443
M [ 1651 , OP_DOT ] = SHIFT 444
M [ 1651 , OP_INC ] = SHIFT 445
M [ 1651 , OP_LNOT ] = SHIFT 139
M [ 1651 , OP_MUL ] = SHIFT 140
M [ 1651 , OP_NOT ] = SHIFT 141
M [ 1651 , OP_SUB ] = SHIFT 142
M [ 1651 , STR_LITERAL ] = SHIFT 446
M [ 1651 , sizeof ] = SHIFT 447
M [ 1652 , DELIM_COMMA ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , DELIM_LPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , DELIM_RCURBRACE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_ADD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_ADDASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_AND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_ANDASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_ARROW ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_ASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_DEC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_DIV ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_DIVASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_DOT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_EQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_GE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_GT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_INC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_LAND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_LE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_LOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_LT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_MOD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_MODASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_MUL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_MULASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_NEQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_OR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_ORASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_SHL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_SHLASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_SHR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_SHRASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_SUB ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_SUBASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_XOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1652 , OP_XORASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1653 , DELIM_COMMA ] = SHIFT 1695
M [ 1653 , DELIM_RCURBRACE ] = SHIFT 1696
M [ 1654 , DELIM_LPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_ADD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_ADDASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_AND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_ANDASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_ARROW ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_ASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_DEC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_DIV ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_DIVASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_DOT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_EQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_GE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_GT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_INC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_LAND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_LE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_LOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_LT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_MOD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_MODASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_MUL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_MULASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_NEQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_OR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_ORASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_SHL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_SHLASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_SHR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_SHRASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_SUB ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_SUBASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_XOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1654 , OP_XORASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1655 , <additive-expr> ] = GOTO 412
M [ 1655 , <and-expr> ] = GOTO 413
M [ 1655 , <asn-expr> ] = GOTO 414
M [ 1655 , <cast-expr> ] = GOTO 415
M [ 1655 , <cond-expr> ] = GOTO 416
M [ 1655 , <constant> ] = GOTO 417
M [ 1655 , <designation> ] = GOTO 1135
M [ 1655 , <designator-list> ] = GOTO 419
M [ 1655 , <designator> ] = GOTO 420
M [ 1655 , <eq-expr> ] = GOTO 421
M [ 1655 , <exc-or-expr> ] = GOTO 422
M [ 1655 , <inc-or-expr> ] = GOTO 423
M [ 1655 , <initializer> ] = GOTO 1136
M [ 1655 , <land-expr> ] = GOTO 426
M [ 1655 , <lor-expr> ] = GOTO 427
M [ 1655 , <multiplicative-expr> ] = GOTO 428
M [ 1655 , <num-const> ] = GOTO 429
M [ 1655 , <postfix-expr> ] = GOTO 430
M [ 1655 , <prim-expr> ] = GOTO 431
M [ 1655 , <rel-expr> ] = GOTO 432
M [ 1655 , <shift-expr> ] = GOTO 433
M [ 1655 , <unary-expr> ] = GOTO 434
M [ 1655 , <unary-op> ] = GOTO 435
M [ 1655 , CHAR_CONST ] = SHIFT 436
M [ 1655 , DELIM_LCURBRACE ] = SHIFT 437
M [ 1655 , DELIM_LPAR ] = SHIFT 438
M [ 1655 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 1655 , DELIM_RCURBRACE ] = SHIFT 1697
M [ 1655 , FLOAT_CONST ] = SHIFT 440
M [ 1655 , IDENTIFIER ] = SHIFT 441
M [ 1655 , INT_CONST ] = SHIFT 442
M [ 1655 , OP_ADD ] = SHIFT 135
M [ 1655 , OP_AND ] = SHIFT 136
M [ 1655 , OP_DEC ] = SHIFT 443
M [ 1655 , OP_DOT ] = SHIFT 444
M [ 1655 , OP_INC ] = SHIFT 445
M [ 1655 , OP_LNOT ] = SHIFT 139
M [ 1655 , OP_MUL ] = SHIFT 140
M [ 1655 , OP_NOT ] = SHIFT 141
M [ 1655 , OP_SUB ] = SHIFT 142
M [ 1655 , STR_LITERAL ] = SHIFT 446
M [ 1655 , sizeof ] = SHIFT 447
M [ 1656 , DELIM_COMMA ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1656 , DELIM_LPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1656 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1656 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1656 , DELIM_RCURBRACE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1656 , OP_ADD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1656 , OP_AND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1656 , OP_ARROW ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1656 , OP_DEC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1656 , OP_DIV ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1656 , OP_DOT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1656 , OP_EQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1656 , OP_GE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1656 , OP_GT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1656 , OP_INC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1656 , OP_LAND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1656 , OP_LE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1656 , OP_LOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1656 , OP_LT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1656 , OP_MOD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1656 , OP_MUL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1656 , OP_NEQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1656 , OP_OR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1656 , OP_SHL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1656 , OP_SHR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1656 , OP_SUB ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1656 , OP_XOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1657 , <additive-expr> ] = GOTO 412
M [ 1657 , <and-expr> ] = GOTO 413
M [ 1657 , <asn-expr> ] = GOTO 414
M [ 1657 , <cast-expr> ] = GOTO 415
M [ 1657 , <cond-expr> ] = GOTO 416
M [ 1657 , <constant> ] = GOTO 417
M [ 1657 , <designation> ] = GOTO 1135
M [ 1657 , <designator-list> ] = GOTO 419
M [ 1657 , <designator> ] = GOTO 420
M [ 1657 , <eq-expr> ] = GOTO 421
M [ 1657 , <exc-or-expr> ] = GOTO 422
M [ 1657 , <inc-or-expr> ] = GOTO 423
M [ 1657 , <initializer> ] = GOTO 1136
M [ 1657 , <land-expr> ] = GOTO 426
M [ 1657 , <lor-expr> ] = GOTO 427
M [ 1657 , <multiplicative-expr> ] = GOTO 428
M [ 1657 , <num-const> ] = GOTO 429
M [ 1657 , <postfix-expr> ] = GOTO 430
M [ 1657 , <prim-expr> ] = GOTO 431
M [ 1657 , <rel-expr> ] = GOTO 432
M [ 1657 , <shift-expr> ] = GOTO 433
M [ 1657 , <unary-expr> ] = GOTO 434
M [ 1657 , <unary-op> ] = GOTO 435
M [ 1657 , CHAR_CONST ] = SHIFT 436
M [ 1657 , DELIM_LCURBRACE ] = SHIFT 437
M [ 1657 , DELIM_LPAR ] = SHIFT 438
M [ 1657 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 1657 , DELIM_RCURBRACE ] = SHIFT 1698
M [ 1657 , FLOAT_CONST ] = SHIFT 440
M [ 1657 , IDENTIFIER ] = SHIFT 441
M [ 1657 , INT_CONST ] = SHIFT 442
M [ 1657 , OP_ADD ] = SHIFT 135
M [ 1657 , OP_AND ] = SHIFT 136
M [ 1657 , OP_DEC ] = SHIFT 443
M [ 1657 , OP_DOT ] = SHIFT 444
M [ 1657 , OP_INC ] = SHIFT 445
M [ 1657 , OP_LNOT ] = SHIFT 139
M [ 1657 , OP_MUL ] = SHIFT 140
M [ 1657 , OP_NOT ] = SHIFT 141
M [ 1657 , OP_SUB ] = SHIFT 142
M [ 1657 , STR_LITERAL ] = SHIFT 446
M [ 1657 , sizeof ] = SHIFT 447
M [ 1658 , DELIM_COMMA ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1658 , DELIM_LPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1658 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1658 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1658 , DELIM_SEMICOLON ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1658 , OP_ADD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1658 , OP_AND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1658 , OP_ARROW ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1658 , OP_DEC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1658 , OP_DIV ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1658 , OP_DOT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1658 , OP_EQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1658 , OP_GE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1658 , OP_GT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1658 , OP_INC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1658 , OP_LAND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1658 , OP_LE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1658 , OP_LOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1658 , OP_LT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1658 , OP_MOD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1658 , OP_MUL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1658 , OP_NEQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1658 , OP_OR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1658 , OP_SHL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1658 , OP_SHR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1658 , OP_SUB ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1658 , OP_XOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1659 , DELIM_COLON ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1659 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1659 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1659 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1659 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1659 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1659 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1659 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1659 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1659 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1659 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1659 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1659 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1659 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1659 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1659 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1659 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1659 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1659 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1659 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1659 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1659 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1659 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1659 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1659 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1659 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1659 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1660 , DELIM_COLON ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1660 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1660 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1660 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1660 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1660 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1660 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1660 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1660 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1660 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1660 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1660 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1660 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1660 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1660 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1660 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1660 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1660 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1660 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1660 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1660 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1660 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1660 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1660 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1660 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1660 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1660 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1661 , <additive-expr> ] = GOTO 412
M [ 1661 , <and-expr> ] = GOTO 413
M [ 1661 , <asn-expr> ] = GOTO 414
M [ 1661 , <cast-expr> ] = GOTO 415
M [ 1661 , <cond-expr> ] = GOTO 416
M [ 1661 , <constant> ] = GOTO 417
M [ 1661 , <designation> ] = GOTO 418
M [ 1661 , <designator-list> ] = GOTO 419
M [ 1661 , <designator> ] = GOTO 420
M [ 1661 , <eq-expr> ] = GOTO 421
M [ 1661 , <exc-or-expr> ] = GOTO 422
M [ 1661 , <inc-or-expr> ] = GOTO 423
M [ 1661 , <initializer-list> ] = GOTO 1699
M [ 1661 , <initializer> ] = GOTO 425
M [ 1661 , <land-expr> ] = GOTO 426
M [ 1661 , <lor-expr> ] = GOTO 427
M [ 1661 , <multiplicative-expr> ] = GOTO 428
M [ 1661 , <num-const> ] = GOTO 429
M [ 1661 , <postfix-expr> ] = GOTO 430
M [ 1661 , <prim-expr> ] = GOTO 431
M [ 1661 , <rel-expr> ] = GOTO 432
M [ 1661 , <shift-expr> ] = GOTO 433
M [ 1661 , <unary-expr> ] = GOTO 434
M [ 1661 , <unary-op> ] = GOTO 435
M [ 1661 , CHAR_CONST ] = SHIFT 436
M [ 1661 , DELIM_LCURBRACE ] = SHIFT 437
M [ 1661 , DELIM_LPAR ] = SHIFT 438
M [ 1661 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 1661 , FLOAT_CONST ] = SHIFT 440
M [ 1661 , IDENTIFIER ] = SHIFT 441
M [ 1661 , INT_CONST ] = SHIFT 442
M [ 1661 , OP_ADD ] = SHIFT 135
M [ 1661 , OP_AND ] = SHIFT 136
M [ 1661 , OP_DEC ] = SHIFT 443
M [ 1661 , OP_DOT ] = SHIFT 444
M [ 1661 , OP_INC ] = SHIFT 445
M [ 1661 , OP_LNOT ] = SHIFT 139
M [ 1661 , OP_MUL ] = SHIFT 140
M [ 1661 , OP_NOT ] = SHIFT 141
M [ 1661 , OP_SUB ] = SHIFT 142
M [ 1661 , STR_LITERAL ] = SHIFT 446
M [ 1661 , sizeof ] = SHIFT 447
M [ 1662 , DELIM_LCURBRACE ] = SHIFT 1661
M [ 1663 , DELIM_COLON ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1663 , DELIM_COMMA ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1663 , DELIM_LCURBRACE ] = SHIFT 1661
M [ 1663 , DELIM_QUESTION ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1663 , OP_ADD ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1663 , OP_AND ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1663 , OP_DIV ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1663 , OP_EQ ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1663 , OP_GE ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1663 , OP_GT ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1663 , OP_LAND ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1663 , OP_LE ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1663 , OP_LOR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1663 , OP_LT ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1663 , OP_MOD ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1663 , OP_MUL ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1663 , OP_NEQ ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1663 , OP_OR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1663 , OP_SHL ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1663 , OP_SHR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1663 , OP_SUB ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1663 , OP_XOR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1664 , <additive-expr> ] = GOTO 412
M [ 1664 , <and-expr> ] = GOTO 413
M [ 1664 , <asn-expr> ] = GOTO 414
M [ 1664 , <cast-expr> ] = GOTO 415
M [ 1664 , <cond-expr> ] = GOTO 416
M [ 1664 , <constant> ] = GOTO 417
M [ 1664 , <designation> ] = GOTO 1135
M [ 1664 , <designator-list> ] = GOTO 419
M [ 1664 , <designator> ] = GOTO 420
M [ 1664 , <eq-expr> ] = GOTO 421
M [ 1664 , <exc-or-expr> ] = GOTO 422
M [ 1664 , <inc-or-expr> ] = GOTO 423
M [ 1664 , <initializer> ] = GOTO 1136
M [ 1664 , <land-expr> ] = GOTO 426
M [ 1664 , <lor-expr> ] = GOTO 427
M [ 1664 , <multiplicative-expr> ] = GOTO 428
M [ 1664 , <num-const> ] = GOTO 429
M [ 1664 , <postfix-expr> ] = GOTO 430
M [ 1664 , <prim-expr> ] = GOTO 431
M [ 1664 , <rel-expr> ] = GOTO 432
M [ 1664 , <shift-expr> ] = GOTO 433
M [ 1664 , <unary-expr> ] = GOTO 434
M [ 1664 , <unary-op> ] = GOTO 435
M [ 1664 , CHAR_CONST ] = SHIFT 436
M [ 1664 , DELIM_LCURBRACE ] = SHIFT 437
M [ 1664 , DELIM_LPAR ] = SHIFT 438
M [ 1664 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 1664 , DELIM_RCURBRACE ] = SHIFT 1700
M [ 1664 , FLOAT_CONST ] = SHIFT 440
M [ 1664 , IDENTIFIER ] = SHIFT 441
M [ 1664 , INT_CONST ] = SHIFT 442
M [ 1664 , OP_ADD ] = SHIFT 135
M [ 1664 , OP_AND ] = SHIFT 136
M [ 1664 , OP_DEC ] = SHIFT 443
M [ 1664 , OP_DOT ] = SHIFT 444
M [ 1664 , OP_INC ] = SHIFT 445
M [ 1664 , OP_LNOT ] = SHIFT 139
M [ 1664 , OP_MUL ] = SHIFT 140
M [ 1664 , OP_NOT ] = SHIFT 141
M [ 1664 , OP_SUB ] = SHIFT 142
M [ 1664 , STR_LITERAL ] = SHIFT 446
M [ 1664 , sizeof ] = SHIFT 447
M [ 1665 , DELIM_COLON ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , DELIM_COMMA ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , DELIM_LPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_ADD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_ADDASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_AND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_ANDASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_ARROW ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_ASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_DEC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_DIV ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_DIVASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_DOT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_EQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_GE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_GT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_INC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_LAND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_LE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_LOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_LT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_MOD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_MODASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_MUL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_MULASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_NEQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_OR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_ORASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_SHL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_SHLASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_SHR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_SHRASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_SUB ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_SUBASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_XOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1665 , OP_XORASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1666 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1666 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1666 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1666 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1666 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1666 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1666 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1666 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1666 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1666 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1666 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1666 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1666 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1666 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1666 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1666 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1666 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1666 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1666 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1666 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1666 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1666 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1666 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1666 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1666 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1666 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1666 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LPAR <arg-expr-list> DELIM_RPAR 
M [ 1667 , DELIM_COMMA ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1667 , DELIM_LPAR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1667 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1667 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1667 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1667 , OP_ADD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1667 , OP_AND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1667 , OP_ARROW ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1667 , OP_DEC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1667 , OP_DIV ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1667 , OP_DOT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1667 , OP_EQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1667 , OP_GE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1667 , OP_GT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1667 , OP_INC ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1667 , OP_LAND ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1667 , OP_LE ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1667 , OP_LOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1667 , OP_LT ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1667 , OP_MOD ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1667 , OP_MUL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1667 , OP_NEQ ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1667 , OP_OR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1667 , OP_SHL ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1667 , OP_SHR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1667 , OP_SUB ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1667 , OP_XOR ] = REDUCE <postfix-expr> -> <postfix-expr> DELIM_LSQBRACKET <expr> DELIM_RSQBRACKET 
M [ 1668 , <additive-expr> ] = GOTO 412
M [ 1668 , <and-expr> ] = GOTO 413
M [ 1668 , <asn-expr> ] = GOTO 414
M [ 1668 , <cast-expr> ] = GOTO 415
M [ 1668 , <cond-expr> ] = GOTO 416
M [ 1668 , <constant> ] = GOTO 417
M [ 1668 , <designation> ] = GOTO 418
M [ 1668 , <designator-list> ] = GOTO 419
M [ 1668 , <designator> ] = GOTO 420
M [ 1668 , <eq-expr> ] = GOTO 421
M [ 1668 , <exc-or-expr> ] = GOTO 422
M [ 1668 , <inc-or-expr> ] = GOTO 423
M [ 1668 , <initializer-list> ] = GOTO 1701
M [ 1668 , <initializer> ] = GOTO 425
M [ 1668 , <land-expr> ] = GOTO 426
M [ 1668 , <lor-expr> ] = GOTO 427
M [ 1668 , <multiplicative-expr> ] = GOTO 428
M [ 1668 , <num-const> ] = GOTO 429
M [ 1668 , <postfix-expr> ] = GOTO 430
M [ 1668 , <prim-expr> ] = GOTO 431
M [ 1668 , <rel-expr> ] = GOTO 432
M [ 1668 , <shift-expr> ] = GOTO 433
M [ 1668 , <unary-expr> ] = GOTO 434
M [ 1668 , <unary-op> ] = GOTO 435
M [ 1668 , CHAR_CONST ] = SHIFT 436
M [ 1668 , DELIM_LCURBRACE ] = SHIFT 437
M [ 1668 , DELIM_LPAR ] = SHIFT 438
M [ 1668 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 1668 , FLOAT_CONST ] = SHIFT 440
M [ 1668 , IDENTIFIER ] = SHIFT 441
M [ 1668 , INT_CONST ] = SHIFT 442
M [ 1668 , OP_ADD ] = SHIFT 135
M [ 1668 , OP_AND ] = SHIFT 136
M [ 1668 , OP_DEC ] = SHIFT 443
M [ 1668 , OP_DOT ] = SHIFT 444
M [ 1668 , OP_INC ] = SHIFT 445
M [ 1668 , OP_LNOT ] = SHIFT 139
M [ 1668 , OP_MUL ] = SHIFT 140
M [ 1668 , OP_NOT ] = SHIFT 141
M [ 1668 , OP_SUB ] = SHIFT 142
M [ 1668 , STR_LITERAL ] = SHIFT 446
M [ 1668 , sizeof ] = SHIFT 447
M [ 1669 , DELIM_LCURBRACE ] = SHIFT 1668
M [ 1670 , DELIM_COMMA ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1670 , DELIM_LCURBRACE ] = SHIFT 1668
M [ 1670 , DELIM_QUESTION ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1670 , DELIM_RSQBRACKET ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1670 , OP_ADD ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1670 , OP_AND ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1670 , OP_DIV ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1670 , OP_EQ ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1670 , OP_GE ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1670 , OP_GT ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1670 , OP_LAND ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1670 , OP_LE ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1670 , OP_LOR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1670 , OP_LT ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1670 , OP_MOD ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1670 , OP_MUL ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1670 , OP_NEQ ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1670 , OP_OR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1670 , OP_SHL ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1670 , OP_SHR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1670 , OP_SUB ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1670 , OP_XOR ] = REDUCE <unary-expr> -> sizeof DELIM_LPAR <type-name> DELIM_RPAR 
M [ 1671 , <additive-expr> ] = GOTO 412
M [ 1671 , <and-expr> ] = GOTO 413
M [ 1671 , <asn-expr> ] = GOTO 414
M [ 1671 , <cast-expr> ] = GOTO 415
M [ 1671 , <cond-expr> ] = GOTO 416
M [ 1671 , <constant> ] = GOTO 417
M [ 1671 , <designation> ] = GOTO 1135
M [ 1671 , <designator-list> ] = GOTO 419
M [ 1671 , <designator> ] = GOTO 420
M [ 1671 , <eq-expr> ] = GOTO 421
M [ 1671 , <exc-or-expr> ] = GOTO 422
M [ 1671 , <inc-or-expr> ] = GOTO 423
M [ 1671 , <initializer> ] = GOTO 1136
M [ 1671 , <land-expr> ] = GOTO 426
M [ 1671 , <lor-expr> ] = GOTO 427
M [ 1671 , <multiplicative-expr> ] = GOTO 428
M [ 1671 , <num-const> ] = GOTO 429
M [ 1671 , <postfix-expr> ] = GOTO 430
M [ 1671 , <prim-expr> ] = GOTO 431
M [ 1671 , <rel-expr> ] = GOTO 432
M [ 1671 , <shift-expr> ] = GOTO 433
M [ 1671 , <unary-expr> ] = GOTO 434
M [ 1671 , <unary-op> ] = GOTO 435
M [ 1671 , CHAR_CONST ] = SHIFT 436
M [ 1671 , DELIM_LCURBRACE ] = SHIFT 437
M [ 1671 , DELIM_LPAR ] = SHIFT 438
M [ 1671 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 1671 , DELIM_RCURBRACE ] = SHIFT 1702
M [ 1671 , FLOAT_CONST ] = SHIFT 440
M [ 1671 , IDENTIFIER ] = SHIFT 441
M [ 1671 , INT_CONST ] = SHIFT 442
M [ 1671 , OP_ADD ] = SHIFT 135
M [ 1671 , OP_AND ] = SHIFT 136
M [ 1671 , OP_DEC ] = SHIFT 443
M [ 1671 , OP_DOT ] = SHIFT 444
M [ 1671 , OP_INC ] = SHIFT 445
M [ 1671 , OP_LNOT ] = SHIFT 139
M [ 1671 , OP_MUL ] = SHIFT 140
M [ 1671 , OP_NOT ] = SHIFT 141
M [ 1671 , OP_SUB ] = SHIFT 142
M [ 1671 , STR_LITERAL ] = SHIFT 446
M [ 1671 , sizeof ] = SHIFT 447
M [ 1672 , DELIM_COMMA ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , DELIM_LPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_ADD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_ADDASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_AND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_ANDASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_ARROW ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_ASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_DEC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_DIV ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_DIVASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_DOT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_EQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_GE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_GT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_INC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_LAND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_LE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_LOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_LT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_MOD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_MODASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_MUL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_MULASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_NEQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_OR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_ORASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_SHL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_SHLASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_SHR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_SHRASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_SUB ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_SUBASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_XOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1672 , OP_XORASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1673 , DELIM_COMMA ] = SHIFT 1703
M [ 1673 , DELIM_RCURBRACE ] = SHIFT 1704
M [ 1674 , DELIM_COMMA ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , DELIM_LPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , DELIM_RPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_ADD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_ADDASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_AND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_ANDASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_ARROW ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_ASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_DEC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_DIV ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_DIVASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_DOT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_EQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_GE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_GT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_INC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_LAND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_LE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_LOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_LT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_MOD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_MODASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_MUL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_MULASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_NEQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_OR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_ORASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_SHL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_SHLASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_SHR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_SHRASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_SUB ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_SUBASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_XOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1674 , OP_XORASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1675 , DELIM_COLON ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1675 , DELIM_LPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1675 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1675 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1675 , OP_ADD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1675 , OP_AND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1675 , OP_ARROW ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1675 , OP_DEC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1675 , OP_DIV ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1675 , OP_DOT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1675 , OP_EQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1675 , OP_GE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1675 , OP_GT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1675 , OP_INC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1675 , OP_LAND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1675 , OP_LE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1675 , OP_LOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1675 , OP_LT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1675 , OP_MOD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1675 , OP_MUL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1675 , OP_NEQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1675 , OP_OR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1675 , OP_SHL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1675 , OP_SHR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1675 , OP_SUB ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1675 , OP_XOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1676 , while ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1677 , while ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1678 , else ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1678 , while ] = REDUCE <comp-stmt> -> DELIM_LCURBRACE <blk-item-list> DELIM_RCURBRACE 
M [ 1679 , else ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1679 , while ] = REDUCE <labeled-stmt> -> IDENTIFIER DELIM_COLON <stmt> 
M [ 1680 , <additive-expr> ] = GOTO 96
M [ 1680 , <and-expr> ] = GOTO 97
M [ 1680 , <asn-expr> ] = GOTO 98
M [ 1680 , <cast-expr> ] = GOTO 101
M [ 1680 , <comp-stmt> ] = GOTO 1526
M [ 1680 , <cond-expr> ] = GOTO 103
M [ 1680 , <constant> ] = GOTO 104
M [ 1680 , <eq-expr> ] = GOTO 107
M [ 1680 , <exc-or-expr> ] = GOTO 108
M [ 1680 , <expr-stmt> ] = GOTO 1527
M [ 1680 , <expr> ] = GOTO 1528
M [ 1680 , <inc-or-expr> ] = GOTO 111
M [ 1680 , <iter-stmt> ] = GOTO 1529
M [ 1680 , <jump-stmt> ] = GOTO 1530
M [ 1680 , <labeled-stmt> ] = GOTO 1531
M [ 1680 , <land-expr> ] = GOTO 115
M [ 1680 , <lor-expr> ] = GOTO 116
M [ 1680 , <multiplicative-expr> ] = GOTO 117
M [ 1680 , <num-const> ] = GOTO 118
M [ 1680 , <postfix-expr> ] = GOTO 119
M [ 1680 , <prim-expr> ] = GOTO 120
M [ 1680 , <rel-expr> ] = GOTO 121
M [ 1680 , <sele-stmt> ] = GOTO 1532
M [ 1680 , <shift-expr> ] = GOTO 123
M [ 1680 , <stmt> ] = GOTO 1705
M [ 1680 , <unary-expr> ] = GOTO 125
M [ 1680 , <unary-op> ] = GOTO 126
M [ 1680 , CHAR_CONST ] = SHIFT 127
M [ 1680 , DELIM_LCURBRACE ] = SHIFT 1534
M [ 1680 , DELIM_LPAR ] = SHIFT 129
M [ 1680 , DELIM_SEMICOLON ] = SHIFT 1535
M [ 1680 , FLOAT_CONST ] = SHIFT 132
M [ 1680 , IDENTIFIER ] = SHIFT 1536
M [ 1680 , INT_CONST ] = SHIFT 134
M [ 1680 , OP_ADD ] = SHIFT 135
M [ 1680 , OP_AND ] = SHIFT 136
M [ 1680 , OP_DEC ] = SHIFT 137
M [ 1680 , OP_INC ] = SHIFT 138
M [ 1680 , OP_LNOT ] = SHIFT 139
M [ 1680 , OP_MUL ] = SHIFT 140
M [ 1680 , OP_NOT ] = SHIFT 141
M [ 1680 , OP_SUB ] = SHIFT 142
M [ 1680 , STR_LITERAL ] = SHIFT 143
M [ 1680 , break ] = SHIFT 1537
M [ 1680 , case ] = SHIFT 1538
M [ 1680 , continue ] = SHIFT 1539
M [ 1680 , default ] = SHIFT 1540
M [ 1680 , do ] = SHIFT 1541
M [ 1680 , for ] = SHIFT 1542
M [ 1680 , goto ] = SHIFT 1543
M [ 1680 , if ] = SHIFT 1544
M [ 1680 , return ] = SHIFT 1545
M [ 1680 , sizeof ] = SHIFT 153
M [ 1680 , switch ] = SHIFT 1546
M [ 1680 , while ] = SHIFT 1547
M [ 1681 , else ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1681 , while ] = REDUCE <labeled-stmt> -> default DELIM_COLON <stmt> 
M [ 1682 , DELIM_LPAR ] = SHIFT 1706
M [ 1683 , DELIM_RPAR ] = SHIFT 1707
M [ 1684 , DELIM_COMMA ] = SHIFT 661
M [ 1684 , DELIM_RPAR ] = SHIFT 1708
M [ 1685 , else ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1685 , while ] = REDUCE <jump-stmt> -> return <expr> DELIM_SEMICOLON 
M [ 1686 , DELIM_COMMA ] = SHIFT 661
M [ 1686 , DELIM_RPAR ] = SHIFT 1709
M [ 1687 , DELIM_COMMA ] = SHIFT 661
M [ 1687 , DELIM_RPAR ] = SHIFT 1710
M [ 1688 , CHAR_CONST ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , DELIM_LCURBRACE ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , DELIM_LPAR ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , DELIM_RCURBRACE ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , DELIM_SEMICOLON ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , FLOAT_CONST ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , IDENTIFIER ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , INT_CONST ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , OP_ADD ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , OP_AND ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , OP_DEC ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , OP_INC ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , OP_LNOT ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , OP_MUL ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , OP_NOT ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , OP_SUB ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , STR_LITERAL ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , break ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , case ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , char ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , const ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , continue ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , default ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , do ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , double ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , else ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , enum ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , float ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , for ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , goto ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , if ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , int ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , long ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , return ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , short ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , signed ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , sizeof ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , struct ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , switch ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , typedef ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , unsigned ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , void ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1688 , while ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1689 , <additive-expr> ] = GOTO 299
M [ 1689 , <and-expr> ] = GOTO 300
M [ 1689 , <asn-expr> ] = GOTO 301
M [ 1689 , <cast-expr> ] = GOTO 302
M [ 1689 , <cond-expr> ] = GOTO 303
M [ 1689 , <constant> ] = GOTO 304
M [ 1689 , <eq-expr> ] = GOTO 306
M [ 1689 , <exc-or-expr> ] = GOTO 307
M [ 1689 , <expr> ] = GOTO 1711
M [ 1689 , <inc-or-expr> ] = GOTO 309
M [ 1689 , <land-expr> ] = GOTO 310
M [ 1689 , <lor-expr> ] = GOTO 311
M [ 1689 , <multiplicative-expr> ] = GOTO 312
M [ 1689 , <num-const> ] = GOTO 313
M [ 1689 , <postfix-expr> ] = GOTO 314
M [ 1689 , <prim-expr> ] = GOTO 315
M [ 1689 , <rel-expr> ] = GOTO 316
M [ 1689 , <shift-expr> ] = GOTO 317
M [ 1689 , <unary-expr> ] = GOTO 324
M [ 1689 , <unary-op> ] = GOTO 325
M [ 1689 , CHAR_CONST ] = SHIFT 326
M [ 1689 , DELIM_LPAR ] = SHIFT 327
M [ 1689 , FLOAT_CONST ] = SHIFT 328
M [ 1689 , IDENTIFIER ] = SHIFT 329
M [ 1689 , INT_CONST ] = SHIFT 330
M [ 1689 , OP_ADD ] = SHIFT 135
M [ 1689 , OP_AND ] = SHIFT 136
M [ 1689 , OP_DEC ] = SHIFT 331
M [ 1689 , OP_INC ] = SHIFT 332
M [ 1689 , OP_LNOT ] = SHIFT 139
M [ 1689 , OP_MUL ] = SHIFT 140
M [ 1689 , OP_NOT ] = SHIFT 141
M [ 1689 , OP_SUB ] = SHIFT 142
M [ 1689 , STR_LITERAL ] = SHIFT 333
M [ 1689 , sizeof ] = SHIFT 343
M [ 1690 , <additive-expr> ] = GOTO 96
M [ 1690 , <and-expr> ] = GOTO 97
M [ 1690 , <asn-expr> ] = GOTO 98
M [ 1690 , <cast-expr> ] = GOTO 101
M [ 1690 , <comp-stmt> ] = GOTO 1388
M [ 1690 , <cond-expr> ] = GOTO 103
M [ 1690 , <constant> ] = GOTO 104
M [ 1690 , <eq-expr> ] = GOTO 107
M [ 1690 , <exc-or-expr> ] = GOTO 108
M [ 1690 , <expr-stmt> ] = GOTO 1389
M [ 1690 , <expr> ] = GOTO 1390
M [ 1690 , <inc-or-expr> ] = GOTO 111
M [ 1690 , <iter-stmt> ] = GOTO 1391
M [ 1690 , <jump-stmt> ] = GOTO 1392
M [ 1690 , <labeled-stmt> ] = GOTO 1393
M [ 1690 , <land-expr> ] = GOTO 115
M [ 1690 , <lor-expr> ] = GOTO 116
M [ 1690 , <multiplicative-expr> ] = GOTO 117
M [ 1690 , <num-const> ] = GOTO 118
M [ 1690 , <postfix-expr> ] = GOTO 119
M [ 1690 , <prim-expr> ] = GOTO 120
M [ 1690 , <rel-expr> ] = GOTO 121
M [ 1690 , <sele-stmt> ] = GOTO 1394
M [ 1690 , <shift-expr> ] = GOTO 123
M [ 1690 , <stmt> ] = GOTO 1712
M [ 1690 , <unary-expr> ] = GOTO 125
M [ 1690 , <unary-op> ] = GOTO 126
M [ 1690 , CHAR_CONST ] = SHIFT 127
M [ 1690 , DELIM_LCURBRACE ] = SHIFT 1396
M [ 1690 , DELIM_LPAR ] = SHIFT 129
M [ 1690 , DELIM_SEMICOLON ] = SHIFT 1397
M [ 1690 , FLOAT_CONST ] = SHIFT 132
M [ 1690 , IDENTIFIER ] = SHIFT 1398
M [ 1690 , INT_CONST ] = SHIFT 134
M [ 1690 , OP_ADD ] = SHIFT 135
M [ 1690 , OP_AND ] = SHIFT 136
M [ 1690 , OP_DEC ] = SHIFT 137
M [ 1690 , OP_INC ] = SHIFT 138
M [ 1690 , OP_LNOT ] = SHIFT 139
M [ 1690 , OP_MUL ] = SHIFT 140
M [ 1690 , OP_NOT ] = SHIFT 141
M [ 1690 , OP_SUB ] = SHIFT 142
M [ 1690 , STR_LITERAL ] = SHIFT 143
M [ 1690 , break ] = SHIFT 1399
M [ 1690 , case ] = SHIFT 1400
M [ 1690 , continue ] = SHIFT 1401
M [ 1690 , default ] = SHIFT 1402
M [ 1690 , do ] = SHIFT 1403
M [ 1690 , for ] = SHIFT 1404
M [ 1690 , goto ] = SHIFT 1405
M [ 1690 , if ] = SHIFT 1406
M [ 1690 , return ] = SHIFT 1407
M [ 1690 , sizeof ] = SHIFT 153
M [ 1690 , switch ] = SHIFT 1408
M [ 1690 , while ] = SHIFT 1409
M [ 1691 , <additive-expr> ] = GOTO 96
M [ 1691 , <and-expr> ] = GOTO 97
M [ 1691 , <asn-expr> ] = GOTO 98
M [ 1691 , <cast-expr> ] = GOTO 101
M [ 1691 , <comp-stmt> ] = GOTO 1388
M [ 1691 , <cond-expr> ] = GOTO 103
M [ 1691 , <constant> ] = GOTO 104
M [ 1691 , <eq-expr> ] = GOTO 107
M [ 1691 , <exc-or-expr> ] = GOTO 108
M [ 1691 , <expr-stmt> ] = GOTO 1389
M [ 1691 , <expr> ] = GOTO 1390
M [ 1691 , <inc-or-expr> ] = GOTO 111
M [ 1691 , <iter-stmt> ] = GOTO 1391
M [ 1691 , <jump-stmt> ] = GOTO 1392
M [ 1691 , <labeled-stmt> ] = GOTO 1393
M [ 1691 , <land-expr> ] = GOTO 115
M [ 1691 , <lor-expr> ] = GOTO 116
M [ 1691 , <multiplicative-expr> ] = GOTO 117
M [ 1691 , <num-const> ] = GOTO 118
M [ 1691 , <postfix-expr> ] = GOTO 119
M [ 1691 , <prim-expr> ] = GOTO 120
M [ 1691 , <rel-expr> ] = GOTO 121
M [ 1691 , <sele-stmt> ] = GOTO 1394
M [ 1691 , <shift-expr> ] = GOTO 123
M [ 1691 , <stmt> ] = GOTO 1713
M [ 1691 , <unary-expr> ] = GOTO 125
M [ 1691 , <unary-op> ] = GOTO 126
M [ 1691 , CHAR_CONST ] = SHIFT 127
M [ 1691 , DELIM_LCURBRACE ] = SHIFT 1396
M [ 1691 , DELIM_LPAR ] = SHIFT 129
M [ 1691 , DELIM_SEMICOLON ] = SHIFT 1397
M [ 1691 , FLOAT_CONST ] = SHIFT 132
M [ 1691 , IDENTIFIER ] = SHIFT 1398
M [ 1691 , INT_CONST ] = SHIFT 134
M [ 1691 , OP_ADD ] = SHIFT 135
M [ 1691 , OP_AND ] = SHIFT 136
M [ 1691 , OP_DEC ] = SHIFT 137
M [ 1691 , OP_INC ] = SHIFT 138
M [ 1691 , OP_LNOT ] = SHIFT 139
M [ 1691 , OP_MUL ] = SHIFT 140
M [ 1691 , OP_NOT ] = SHIFT 141
M [ 1691 , OP_SUB ] = SHIFT 142
M [ 1691 , STR_LITERAL ] = SHIFT 143
M [ 1691 , break ] = SHIFT 1399
M [ 1691 , case ] = SHIFT 1400
M [ 1691 , continue ] = SHIFT 1401
M [ 1691 , default ] = SHIFT 1402
M [ 1691 , do ] = SHIFT 1403
M [ 1691 , for ] = SHIFT 1404
M [ 1691 , goto ] = SHIFT 1405
M [ 1691 , if ] = SHIFT 1406
M [ 1691 , return ] = SHIFT 1407
M [ 1691 , sizeof ] = SHIFT 153
M [ 1691 , switch ] = SHIFT 1408
M [ 1691 , while ] = SHIFT 1409
M [ 1692 , <additive-expr> ] = GOTO 96
M [ 1692 , <and-expr> ] = GOTO 97
M [ 1692 , <asn-expr> ] = GOTO 98
M [ 1692 , <cast-expr> ] = GOTO 101
M [ 1692 , <comp-stmt> ] = GOTO 1388
M [ 1692 , <cond-expr> ] = GOTO 103
M [ 1692 , <constant> ] = GOTO 104
M [ 1692 , <eq-expr> ] = GOTO 107
M [ 1692 , <exc-or-expr> ] = GOTO 108
M [ 1692 , <expr-stmt> ] = GOTO 1389
M [ 1692 , <expr> ] = GOTO 1390
M [ 1692 , <inc-or-expr> ] = GOTO 111
M [ 1692 , <iter-stmt> ] = GOTO 1391
M [ 1692 , <jump-stmt> ] = GOTO 1392
M [ 1692 , <labeled-stmt> ] = GOTO 1393
M [ 1692 , <land-expr> ] = GOTO 115
M [ 1692 , <lor-expr> ] = GOTO 116
M [ 1692 , <multiplicative-expr> ] = GOTO 117
M [ 1692 , <num-const> ] = GOTO 118
M [ 1692 , <postfix-expr> ] = GOTO 119
M [ 1692 , <prim-expr> ] = GOTO 120
M [ 1692 , <rel-expr> ] = GOTO 121
M [ 1692 , <sele-stmt> ] = GOTO 1394
M [ 1692 , <shift-expr> ] = GOTO 123
M [ 1692 , <stmt> ] = GOTO 1714
M [ 1692 , <unary-expr> ] = GOTO 125
M [ 1692 , <unary-op> ] = GOTO 126
M [ 1692 , CHAR_CONST ] = SHIFT 127
M [ 1692 , DELIM_LCURBRACE ] = SHIFT 1396
M [ 1692 , DELIM_LPAR ] = SHIFT 129
M [ 1692 , DELIM_SEMICOLON ] = SHIFT 1397
M [ 1692 , FLOAT_CONST ] = SHIFT 132
M [ 1692 , IDENTIFIER ] = SHIFT 1398
M [ 1692 , INT_CONST ] = SHIFT 134
M [ 1692 , OP_ADD ] = SHIFT 135
M [ 1692 , OP_AND ] = SHIFT 136
M [ 1692 , OP_DEC ] = SHIFT 137
M [ 1692 , OP_INC ] = SHIFT 138
M [ 1692 , OP_LNOT ] = SHIFT 139
M [ 1692 , OP_MUL ] = SHIFT 140
M [ 1692 , OP_NOT ] = SHIFT 141
M [ 1692 , OP_SUB ] = SHIFT 142
M [ 1692 , STR_LITERAL ] = SHIFT 143
M [ 1692 , break ] = SHIFT 1399
M [ 1692 , case ] = SHIFT 1400
M [ 1692 , continue ] = SHIFT 1401
M [ 1692 , default ] = SHIFT 1402
M [ 1692 , do ] = SHIFT 1403
M [ 1692 , for ] = SHIFT 1404
M [ 1692 , goto ] = SHIFT 1405
M [ 1692 , if ] = SHIFT 1406
M [ 1692 , return ] = SHIFT 1407
M [ 1692 , sizeof ] = SHIFT 153
M [ 1692 , switch ] = SHIFT 1408
M [ 1692 , while ] = SHIFT 1409
M [ 1693 , <additive-expr> ] = GOTO 96
M [ 1693 , <and-expr> ] = GOTO 97
M [ 1693 , <asn-expr> ] = GOTO 98
M [ 1693 , <cast-expr> ] = GOTO 101
M [ 1693 , <comp-stmt> ] = GOTO 1388
M [ 1693 , <cond-expr> ] = GOTO 103
M [ 1693 , <constant> ] = GOTO 104
M [ 1693 , <eq-expr> ] = GOTO 107
M [ 1693 , <exc-or-expr> ] = GOTO 108
M [ 1693 , <expr-stmt> ] = GOTO 1389
M [ 1693 , <expr> ] = GOTO 1390
M [ 1693 , <inc-or-expr> ] = GOTO 111
M [ 1693 , <iter-stmt> ] = GOTO 1391
M [ 1693 , <jump-stmt> ] = GOTO 1392
M [ 1693 , <labeled-stmt> ] = GOTO 1393
M [ 1693 , <land-expr> ] = GOTO 115
M [ 1693 , <lor-expr> ] = GOTO 116
M [ 1693 , <multiplicative-expr> ] = GOTO 117
M [ 1693 , <num-const> ] = GOTO 118
M [ 1693 , <postfix-expr> ] = GOTO 119
M [ 1693 , <prim-expr> ] = GOTO 120
M [ 1693 , <rel-expr> ] = GOTO 121
M [ 1693 , <sele-stmt> ] = GOTO 1394
M [ 1693 , <shift-expr> ] = GOTO 123
M [ 1693 , <stmt> ] = GOTO 1715
M [ 1693 , <unary-expr> ] = GOTO 125
M [ 1693 , <unary-op> ] = GOTO 126
M [ 1693 , CHAR_CONST ] = SHIFT 127
M [ 1693 , DELIM_LCURBRACE ] = SHIFT 1396
M [ 1693 , DELIM_LPAR ] = SHIFT 129
M [ 1693 , DELIM_SEMICOLON ] = SHIFT 1397
M [ 1693 , FLOAT_CONST ] = SHIFT 132
M [ 1693 , IDENTIFIER ] = SHIFT 1398
M [ 1693 , INT_CONST ] = SHIFT 134
M [ 1693 , OP_ADD ] = SHIFT 135
M [ 1693 , OP_AND ] = SHIFT 136
M [ 1693 , OP_DEC ] = SHIFT 137
M [ 1693 , OP_INC ] = SHIFT 138
M [ 1693 , OP_LNOT ] = SHIFT 139
M [ 1693 , OP_MUL ] = SHIFT 140
M [ 1693 , OP_NOT ] = SHIFT 141
M [ 1693 , OP_SUB ] = SHIFT 142
M [ 1693 , STR_LITERAL ] = SHIFT 143
M [ 1693 , break ] = SHIFT 1399
M [ 1693 , case ] = SHIFT 1400
M [ 1693 , continue ] = SHIFT 1401
M [ 1693 , default ] = SHIFT 1402
M [ 1693 , do ] = SHIFT 1403
M [ 1693 , for ] = SHIFT 1404
M [ 1693 , goto ] = SHIFT 1405
M [ 1693 , if ] = SHIFT 1406
M [ 1693 , return ] = SHIFT 1407
M [ 1693 , sizeof ] = SHIFT 153
M [ 1693 , switch ] = SHIFT 1408
M [ 1693 , while ] = SHIFT 1409
M [ 1694 , DELIM_COMMA ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , DELIM_LPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , DELIM_RCURBRACE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_ADD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_ADDASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_AND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_ANDASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_ARROW ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_ASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_DEC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_DIV ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_DIVASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_DOT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_EQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_GE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_GT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_INC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_LAND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_LE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_LOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_LT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_MOD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_MODASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_MUL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_MULASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_NEQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_OR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_ORASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_SHL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_SHLASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_SHR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_SHRASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_SUB ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_SUBASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_XOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1694 , OP_XORASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1695 , <additive-expr> ] = GOTO 412
M [ 1695 , <and-expr> ] = GOTO 413
M [ 1695 , <asn-expr> ] = GOTO 414
M [ 1695 , <cast-expr> ] = GOTO 415
M [ 1695 , <cond-expr> ] = GOTO 416
M [ 1695 , <constant> ] = GOTO 417
M [ 1695 , <designation> ] = GOTO 1135
M [ 1695 , <designator-list> ] = GOTO 419
M [ 1695 , <designator> ] = GOTO 420
M [ 1695 , <eq-expr> ] = GOTO 421
M [ 1695 , <exc-or-expr> ] = GOTO 422
M [ 1695 , <inc-or-expr> ] = GOTO 423
M [ 1695 , <initializer> ] = GOTO 1136
M [ 1695 , <land-expr> ] = GOTO 426
M [ 1695 , <lor-expr> ] = GOTO 427
M [ 1695 , <multiplicative-expr> ] = GOTO 428
M [ 1695 , <num-const> ] = GOTO 429
M [ 1695 , <postfix-expr> ] = GOTO 430
M [ 1695 , <prim-expr> ] = GOTO 431
M [ 1695 , <rel-expr> ] = GOTO 432
M [ 1695 , <shift-expr> ] = GOTO 433
M [ 1695 , <unary-expr> ] = GOTO 434
M [ 1695 , <unary-op> ] = GOTO 435
M [ 1695 , CHAR_CONST ] = SHIFT 436
M [ 1695 , DELIM_LCURBRACE ] = SHIFT 437
M [ 1695 , DELIM_LPAR ] = SHIFT 438
M [ 1695 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 1695 , DELIM_RCURBRACE ] = SHIFT 1716
M [ 1695 , FLOAT_CONST ] = SHIFT 440
M [ 1695 , IDENTIFIER ] = SHIFT 441
M [ 1695 , INT_CONST ] = SHIFT 442
M [ 1695 , OP_ADD ] = SHIFT 135
M [ 1695 , OP_AND ] = SHIFT 136
M [ 1695 , OP_DEC ] = SHIFT 443
M [ 1695 , OP_DOT ] = SHIFT 444
M [ 1695 , OP_INC ] = SHIFT 445
M [ 1695 , OP_LNOT ] = SHIFT 139
M [ 1695 , OP_MUL ] = SHIFT 140
M [ 1695 , OP_NOT ] = SHIFT 141
M [ 1695 , OP_SUB ] = SHIFT 142
M [ 1695 , STR_LITERAL ] = SHIFT 446
M [ 1695 , sizeof ] = SHIFT 447
M [ 1696 , DELIM_LPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1696 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1696 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1696 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1696 , OP_ADD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1696 , OP_AND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1696 , OP_ARROW ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1696 , OP_DEC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1696 , OP_DIV ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1696 , OP_DOT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1696 , OP_EQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1696 , OP_GE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1696 , OP_GT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1696 , OP_INC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1696 , OP_LAND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1696 , OP_LE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1696 , OP_LOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1696 , OP_LT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1696 , OP_MOD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1696 , OP_MUL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1696 , OP_NEQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1696 , OP_OR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1696 , OP_SHL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1696 , OP_SHR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1696 , OP_SUB ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1696 , OP_XOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1697 , DELIM_COMMA ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1697 , DELIM_LPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1697 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1697 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1697 , DELIM_RCURBRACE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1697 , OP_ADD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1697 , OP_AND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1697 , OP_ARROW ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1697 , OP_DEC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1697 , OP_DIV ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1697 , OP_DOT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1697 , OP_EQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1697 , OP_GE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1697 , OP_GT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1697 , OP_INC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1697 , OP_LAND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1697 , OP_LE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1697 , OP_LOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1697 , OP_LT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1697 , OP_MOD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1697 , OP_MUL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1697 , OP_NEQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1697 , OP_OR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1697 , OP_SHL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1697 , OP_SHR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1697 , OP_SUB ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1697 , OP_XOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1698 , DELIM_COMMA ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1698 , DELIM_LPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1698 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1698 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1698 , DELIM_SEMICOLON ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1698 , OP_ADD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1698 , OP_AND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1698 , OP_ARROW ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1698 , OP_DEC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1698 , OP_DIV ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1698 , OP_DOT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1698 , OP_EQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1698 , OP_GE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1698 , OP_GT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1698 , OP_INC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1698 , OP_LAND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1698 , OP_LE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1698 , OP_LOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1698 , OP_LT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1698 , OP_MOD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1698 , OP_MUL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1698 , OP_NEQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1698 , OP_OR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1698 , OP_SHL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1698 , OP_SHR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1698 , OP_SUB ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1698 , OP_XOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1699 , DELIM_COMMA ] = SHIFT 1717
M [ 1699 , DELIM_RCURBRACE ] = SHIFT 1718
M [ 1700 , DELIM_COLON ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , DELIM_COMMA ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , DELIM_LPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_ADD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_ADDASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_AND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_ANDASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_ARROW ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_ASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_DEC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_DIV ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_DIVASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_DOT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_EQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_GE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_GT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_INC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_LAND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_LE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_LOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_LT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_MOD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_MODASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_MUL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_MULASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_NEQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_OR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_ORASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_SHL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_SHLASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_SHR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_SHRASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_SUB ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_SUBASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_XOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1700 , OP_XORASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1701 , DELIM_COMMA ] = SHIFT 1719
M [ 1701 , DELIM_RCURBRACE ] = SHIFT 1720
M [ 1702 , DELIM_COMMA ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , DELIM_LPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_ADD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_ADDASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_AND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_ANDASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_ARROW ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_ASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_DEC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_DIV ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_DIVASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_DOT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_EQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_GE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_GT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_INC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_LAND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_LE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_LOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_LT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_MOD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_MODASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_MUL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_MULASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_NEQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_OR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_ORASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_SHL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_SHLASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_SHR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_SHRASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_SUB ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_SUBASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_XOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1702 , OP_XORASN ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1703 , <additive-expr> ] = GOTO 412
M [ 1703 , <and-expr> ] = GOTO 413
M [ 1703 , <asn-expr> ] = GOTO 414
M [ 1703 , <cast-expr> ] = GOTO 415
M [ 1703 , <cond-expr> ] = GOTO 416
M [ 1703 , <constant> ] = GOTO 417
M [ 1703 , <designation> ] = GOTO 1135
M [ 1703 , <designator-list> ] = GOTO 419
M [ 1703 , <designator> ] = GOTO 420
M [ 1703 , <eq-expr> ] = GOTO 421
M [ 1703 , <exc-or-expr> ] = GOTO 422
M [ 1703 , <inc-or-expr> ] = GOTO 423
M [ 1703 , <initializer> ] = GOTO 1136
M [ 1703 , <land-expr> ] = GOTO 426
M [ 1703 , <lor-expr> ] = GOTO 427
M [ 1703 , <multiplicative-expr> ] = GOTO 428
M [ 1703 , <num-const> ] = GOTO 429
M [ 1703 , <postfix-expr> ] = GOTO 430
M [ 1703 , <prim-expr> ] = GOTO 431
M [ 1703 , <rel-expr> ] = GOTO 432
M [ 1703 , <shift-expr> ] = GOTO 433
M [ 1703 , <unary-expr> ] = GOTO 434
M [ 1703 , <unary-op> ] = GOTO 435
M [ 1703 , CHAR_CONST ] = SHIFT 436
M [ 1703 , DELIM_LCURBRACE ] = SHIFT 437
M [ 1703 , DELIM_LPAR ] = SHIFT 438
M [ 1703 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 1703 , DELIM_RCURBRACE ] = SHIFT 1721
M [ 1703 , FLOAT_CONST ] = SHIFT 440
M [ 1703 , IDENTIFIER ] = SHIFT 441
M [ 1703 , INT_CONST ] = SHIFT 442
M [ 1703 , OP_ADD ] = SHIFT 135
M [ 1703 , OP_AND ] = SHIFT 136
M [ 1703 , OP_DEC ] = SHIFT 443
M [ 1703 , OP_DOT ] = SHIFT 444
M [ 1703 , OP_INC ] = SHIFT 445
M [ 1703 , OP_LNOT ] = SHIFT 139
M [ 1703 , OP_MUL ] = SHIFT 140
M [ 1703 , OP_NOT ] = SHIFT 141
M [ 1703 , OP_SUB ] = SHIFT 142
M [ 1703 , STR_LITERAL ] = SHIFT 446
M [ 1703 , sizeof ] = SHIFT 447
M [ 1704 , DELIM_COMMA ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1704 , DELIM_LPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1704 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1704 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1704 , DELIM_RPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1704 , OP_ADD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1704 , OP_AND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1704 , OP_ARROW ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1704 , OP_DEC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1704 , OP_DIV ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1704 , OP_DOT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1704 , OP_EQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1704 , OP_GE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1704 , OP_GT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1704 , OP_INC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1704 , OP_LAND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1704 , OP_LE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1704 , OP_LOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1704 , OP_LT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1704 , OP_MOD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1704 , OP_MUL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1704 , OP_NEQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1704 , OP_OR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1704 , OP_SHL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1704 , OP_SHR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1704 , OP_SUB ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1704 , OP_XOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1705 , else ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1705 , while ] = REDUCE <labeled-stmt> -> case <const-expr> DELIM_COLON <stmt> 
M [ 1706 , <additive-expr> ] = GOTO 299
M [ 1706 , <and-expr> ] = GOTO 300
M [ 1706 , <asn-expr> ] = GOTO 301
M [ 1706 , <cast-expr> ] = GOTO 302
M [ 1706 , <cond-expr> ] = GOTO 303
M [ 1706 , <constant> ] = GOTO 304
M [ 1706 , <eq-expr> ] = GOTO 306
M [ 1706 , <exc-or-expr> ] = GOTO 307
M [ 1706 , <expr> ] = GOTO 1722
M [ 1706 , <inc-or-expr> ] = GOTO 309
M [ 1706 , <land-expr> ] = GOTO 310
M [ 1706 , <lor-expr> ] = GOTO 311
M [ 1706 , <multiplicative-expr> ] = GOTO 312
M [ 1706 , <num-const> ] = GOTO 313
M [ 1706 , <postfix-expr> ] = GOTO 314
M [ 1706 , <prim-expr> ] = GOTO 315
M [ 1706 , <rel-expr> ] = GOTO 316
M [ 1706 , <shift-expr> ] = GOTO 317
M [ 1706 , <unary-expr> ] = GOTO 324
M [ 1706 , <unary-op> ] = GOTO 325
M [ 1706 , CHAR_CONST ] = SHIFT 326
M [ 1706 , DELIM_LPAR ] = SHIFT 327
M [ 1706 , FLOAT_CONST ] = SHIFT 328
M [ 1706 , IDENTIFIER ] = SHIFT 329
M [ 1706 , INT_CONST ] = SHIFT 330
M [ 1706 , OP_ADD ] = SHIFT 135
M [ 1706 , OP_AND ] = SHIFT 136
M [ 1706 , OP_DEC ] = SHIFT 331
M [ 1706 , OP_INC ] = SHIFT 332
M [ 1706 , OP_LNOT ] = SHIFT 139
M [ 1706 , OP_MUL ] = SHIFT 140
M [ 1706 , OP_NOT ] = SHIFT 141
M [ 1706 , OP_SUB ] = SHIFT 142
M [ 1706 , STR_LITERAL ] = SHIFT 333
M [ 1706 , sizeof ] = SHIFT 343
M [ 1707 , <additive-expr> ] = GOTO 96
M [ 1707 , <and-expr> ] = GOTO 97
M [ 1707 , <asn-expr> ] = GOTO 98
M [ 1707 , <cast-expr> ] = GOTO 101
M [ 1707 , <comp-stmt> ] = GOTO 1526
M [ 1707 , <cond-expr> ] = GOTO 103
M [ 1707 , <constant> ] = GOTO 104
M [ 1707 , <eq-expr> ] = GOTO 107
M [ 1707 , <exc-or-expr> ] = GOTO 108
M [ 1707 , <expr-stmt> ] = GOTO 1527
M [ 1707 , <expr> ] = GOTO 1528
M [ 1707 , <inc-or-expr> ] = GOTO 111
M [ 1707 , <iter-stmt> ] = GOTO 1529
M [ 1707 , <jump-stmt> ] = GOTO 1530
M [ 1707 , <labeled-stmt> ] = GOTO 1531
M [ 1707 , <land-expr> ] = GOTO 115
M [ 1707 , <lor-expr> ] = GOTO 116
M [ 1707 , <multiplicative-expr> ] = GOTO 117
M [ 1707 , <num-const> ] = GOTO 118
M [ 1707 , <postfix-expr> ] = GOTO 119
M [ 1707 , <prim-expr> ] = GOTO 120
M [ 1707 , <rel-expr> ] = GOTO 121
M [ 1707 , <sele-stmt> ] = GOTO 1532
M [ 1707 , <shift-expr> ] = GOTO 123
M [ 1707 , <stmt> ] = GOTO 1723
M [ 1707 , <unary-expr> ] = GOTO 125
M [ 1707 , <unary-op> ] = GOTO 126
M [ 1707 , CHAR_CONST ] = SHIFT 127
M [ 1707 , DELIM_LCURBRACE ] = SHIFT 1534
M [ 1707 , DELIM_LPAR ] = SHIFT 129
M [ 1707 , DELIM_SEMICOLON ] = SHIFT 1535
M [ 1707 , FLOAT_CONST ] = SHIFT 132
M [ 1707 , IDENTIFIER ] = SHIFT 1536
M [ 1707 , INT_CONST ] = SHIFT 134
M [ 1707 , OP_ADD ] = SHIFT 135
M [ 1707 , OP_AND ] = SHIFT 136
M [ 1707 , OP_DEC ] = SHIFT 137
M [ 1707 , OP_INC ] = SHIFT 138
M [ 1707 , OP_LNOT ] = SHIFT 139
M [ 1707 , OP_MUL ] = SHIFT 140
M [ 1707 , OP_NOT ] = SHIFT 141
M [ 1707 , OP_SUB ] = SHIFT 142
M [ 1707 , STR_LITERAL ] = SHIFT 143
M [ 1707 , break ] = SHIFT 1537
M [ 1707 , case ] = SHIFT 1538
M [ 1707 , continue ] = SHIFT 1539
M [ 1707 , default ] = SHIFT 1540
M [ 1707 , do ] = SHIFT 1541
M [ 1707 , for ] = SHIFT 1542
M [ 1707 , goto ] = SHIFT 1543
M [ 1707 , if ] = SHIFT 1544
M [ 1707 , return ] = SHIFT 1545
M [ 1707 , sizeof ] = SHIFT 153
M [ 1707 , switch ] = SHIFT 1546
M [ 1707 , while ] = SHIFT 1547
M [ 1708 , <additive-expr> ] = GOTO 96
M [ 1708 , <and-expr> ] = GOTO 97
M [ 1708 , <asn-expr> ] = GOTO 98
M [ 1708 , <cast-expr> ] = GOTO 101
M [ 1708 , <comp-stmt> ] = GOTO 1526
M [ 1708 , <cond-expr> ] = GOTO 103
M [ 1708 , <constant> ] = GOTO 104
M [ 1708 , <eq-expr> ] = GOTO 107
M [ 1708 , <exc-or-expr> ] = GOTO 108
M [ 1708 , <expr-stmt> ] = GOTO 1527
M [ 1708 , <expr> ] = GOTO 1528
M [ 1708 , <inc-or-expr> ] = GOTO 111
M [ 1708 , <iter-stmt> ] = GOTO 1529
M [ 1708 , <jump-stmt> ] = GOTO 1530
M [ 1708 , <labeled-stmt> ] = GOTO 1531
M [ 1708 , <land-expr> ] = GOTO 115
M [ 1708 , <lor-expr> ] = GOTO 116
M [ 1708 , <multiplicative-expr> ] = GOTO 117
M [ 1708 , <num-const> ] = GOTO 118
M [ 1708 , <postfix-expr> ] = GOTO 119
M [ 1708 , <prim-expr> ] = GOTO 120
M [ 1708 , <rel-expr> ] = GOTO 121
M [ 1708 , <sele-stmt> ] = GOTO 1532
M [ 1708 , <shift-expr> ] = GOTO 123
M [ 1708 , <stmt> ] = GOTO 1724
M [ 1708 , <unary-expr> ] = GOTO 125
M [ 1708 , <unary-op> ] = GOTO 126
M [ 1708 , CHAR_CONST ] = SHIFT 127
M [ 1708 , DELIM_LCURBRACE ] = SHIFT 1534
M [ 1708 , DELIM_LPAR ] = SHIFT 129
M [ 1708 , DELIM_SEMICOLON ] = SHIFT 1535
M [ 1708 , FLOAT_CONST ] = SHIFT 132
M [ 1708 , IDENTIFIER ] = SHIFT 1536
M [ 1708 , INT_CONST ] = SHIFT 134
M [ 1708 , OP_ADD ] = SHIFT 135
M [ 1708 , OP_AND ] = SHIFT 136
M [ 1708 , OP_DEC ] = SHIFT 137
M [ 1708 , OP_INC ] = SHIFT 138
M [ 1708 , OP_LNOT ] = SHIFT 139
M [ 1708 , OP_MUL ] = SHIFT 140
M [ 1708 , OP_NOT ] = SHIFT 141
M [ 1708 , OP_SUB ] = SHIFT 142
M [ 1708 , STR_LITERAL ] = SHIFT 143
M [ 1708 , break ] = SHIFT 1537
M [ 1708 , case ] = SHIFT 1538
M [ 1708 , continue ] = SHIFT 1539
M [ 1708 , default ] = SHIFT 1540
M [ 1708 , do ] = SHIFT 1541
M [ 1708 , for ] = SHIFT 1542
M [ 1708 , goto ] = SHIFT 1543
M [ 1708 , if ] = SHIFT 1544
M [ 1708 , return ] = SHIFT 1545
M [ 1708 , sizeof ] = SHIFT 153
M [ 1708 , switch ] = SHIFT 1546
M [ 1708 , while ] = SHIFT 1547
M [ 1709 , <additive-expr> ] = GOTO 96
M [ 1709 , <and-expr> ] = GOTO 97
M [ 1709 , <asn-expr> ] = GOTO 98
M [ 1709 , <cast-expr> ] = GOTO 101
M [ 1709 , <comp-stmt> ] = GOTO 1526
M [ 1709 , <cond-expr> ] = GOTO 103
M [ 1709 , <constant> ] = GOTO 104
M [ 1709 , <eq-expr> ] = GOTO 107
M [ 1709 , <exc-or-expr> ] = GOTO 108
M [ 1709 , <expr-stmt> ] = GOTO 1527
M [ 1709 , <expr> ] = GOTO 1528
M [ 1709 , <inc-or-expr> ] = GOTO 111
M [ 1709 , <iter-stmt> ] = GOTO 1529
M [ 1709 , <jump-stmt> ] = GOTO 1530
M [ 1709 , <labeled-stmt> ] = GOTO 1531
M [ 1709 , <land-expr> ] = GOTO 115
M [ 1709 , <lor-expr> ] = GOTO 116
M [ 1709 , <multiplicative-expr> ] = GOTO 117
M [ 1709 , <num-const> ] = GOTO 118
M [ 1709 , <postfix-expr> ] = GOTO 119
M [ 1709 , <prim-expr> ] = GOTO 120
M [ 1709 , <rel-expr> ] = GOTO 121
M [ 1709 , <sele-stmt> ] = GOTO 1532
M [ 1709 , <shift-expr> ] = GOTO 123
M [ 1709 , <stmt> ] = GOTO 1725
M [ 1709 , <unary-expr> ] = GOTO 125
M [ 1709 , <unary-op> ] = GOTO 126
M [ 1709 , CHAR_CONST ] = SHIFT 127
M [ 1709 , DELIM_LCURBRACE ] = SHIFT 1534
M [ 1709 , DELIM_LPAR ] = SHIFT 129
M [ 1709 , DELIM_SEMICOLON ] = SHIFT 1535
M [ 1709 , FLOAT_CONST ] = SHIFT 132
M [ 1709 , IDENTIFIER ] = SHIFT 1536
M [ 1709 , INT_CONST ] = SHIFT 134
M [ 1709 , OP_ADD ] = SHIFT 135
M [ 1709 , OP_AND ] = SHIFT 136
M [ 1709 , OP_DEC ] = SHIFT 137
M [ 1709 , OP_INC ] = SHIFT 138
M [ 1709 , OP_LNOT ] = SHIFT 139
M [ 1709 , OP_MUL ] = SHIFT 140
M [ 1709 , OP_NOT ] = SHIFT 141
M [ 1709 , OP_SUB ] = SHIFT 142
M [ 1709 , STR_LITERAL ] = SHIFT 143
M [ 1709 , break ] = SHIFT 1537
M [ 1709 , case ] = SHIFT 1538
M [ 1709 , continue ] = SHIFT 1539
M [ 1709 , default ] = SHIFT 1540
M [ 1709 , do ] = SHIFT 1541
M [ 1709 , for ] = SHIFT 1542
M [ 1709 , goto ] = SHIFT 1543
M [ 1709 , if ] = SHIFT 1544
M [ 1709 , return ] = SHIFT 1545
M [ 1709 , sizeof ] = SHIFT 153
M [ 1709 , switch ] = SHIFT 1546
M [ 1709 , while ] = SHIFT 1547
M [ 1710 , <additive-expr> ] = GOTO 96
M [ 1710 , <and-expr> ] = GOTO 97
M [ 1710 , <asn-expr> ] = GOTO 98
M [ 1710 , <cast-expr> ] = GOTO 101
M [ 1710 , <comp-stmt> ] = GOTO 1526
M [ 1710 , <cond-expr> ] = GOTO 103
M [ 1710 , <constant> ] = GOTO 104
M [ 1710 , <eq-expr> ] = GOTO 107
M [ 1710 , <exc-or-expr> ] = GOTO 108
M [ 1710 , <expr-stmt> ] = GOTO 1527
M [ 1710 , <expr> ] = GOTO 1528
M [ 1710 , <inc-or-expr> ] = GOTO 111
M [ 1710 , <iter-stmt> ] = GOTO 1529
M [ 1710 , <jump-stmt> ] = GOTO 1530
M [ 1710 , <labeled-stmt> ] = GOTO 1531
M [ 1710 , <land-expr> ] = GOTO 115
M [ 1710 , <lor-expr> ] = GOTO 116
M [ 1710 , <multiplicative-expr> ] = GOTO 117
M [ 1710 , <num-const> ] = GOTO 118
M [ 1710 , <postfix-expr> ] = GOTO 119
M [ 1710 , <prim-expr> ] = GOTO 120
M [ 1710 , <rel-expr> ] = GOTO 121
M [ 1710 , <sele-stmt> ] = GOTO 1532
M [ 1710 , <shift-expr> ] = GOTO 123
M [ 1710 , <stmt> ] = GOTO 1726
M [ 1710 , <unary-expr> ] = GOTO 125
M [ 1710 , <unary-op> ] = GOTO 126
M [ 1710 , CHAR_CONST ] = SHIFT 127
M [ 1710 , DELIM_LCURBRACE ] = SHIFT 1534
M [ 1710 , DELIM_LPAR ] = SHIFT 129
M [ 1710 , DELIM_SEMICOLON ] = SHIFT 1535
M [ 1710 , FLOAT_CONST ] = SHIFT 132
M [ 1710 , IDENTIFIER ] = SHIFT 1536
M [ 1710 , INT_CONST ] = SHIFT 134
M [ 1710 , OP_ADD ] = SHIFT 135
M [ 1710 , OP_AND ] = SHIFT 136
M [ 1710 , OP_DEC ] = SHIFT 137
M [ 1710 , OP_INC ] = SHIFT 138
M [ 1710 , OP_LNOT ] = SHIFT 139
M [ 1710 , OP_MUL ] = SHIFT 140
M [ 1710 , OP_NOT ] = SHIFT 141
M [ 1710 , OP_SUB ] = SHIFT 142
M [ 1710 , STR_LITERAL ] = SHIFT 143
M [ 1710 , break ] = SHIFT 1537
M [ 1710 , case ] = SHIFT 1538
M [ 1710 , continue ] = SHIFT 1539
M [ 1710 , default ] = SHIFT 1540
M [ 1710 , do ] = SHIFT 1541
M [ 1710 , for ] = SHIFT 1542
M [ 1710 , goto ] = SHIFT 1543
M [ 1710 , if ] = SHIFT 1544
M [ 1710 , return ] = SHIFT 1545
M [ 1710 , sizeof ] = SHIFT 153
M [ 1710 , switch ] = SHIFT 1546
M [ 1710 , while ] = SHIFT 1547
M [ 1711 , DELIM_COMMA ] = SHIFT 661
M [ 1711 , DELIM_RPAR ] = SHIFT 1727
M [ 1712 , CHAR_CONST ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , DELIM_LCURBRACE ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , DELIM_LPAR ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , DELIM_RCURBRACE ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , DELIM_SEMICOLON ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , FLOAT_CONST ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , IDENTIFIER ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , INT_CONST ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , OP_ADD ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , OP_AND ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , OP_DEC ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , OP_INC ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , OP_LNOT ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , OP_MUL ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , OP_NOT ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , OP_SUB ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , STR_LITERAL ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , break ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , case ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , char ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , const ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , continue ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , default ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , do ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , double ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , else ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , enum ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , float ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , for ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , goto ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , if ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , int ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , long ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , return ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , short ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , signed ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , sizeof ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , struct ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , switch ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , typedef ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , unsigned ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , void ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1712 , while ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1713 , CHAR_CONST ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , DELIM_LCURBRACE ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , DELIM_LPAR ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , DELIM_RCURBRACE ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , DELIM_SEMICOLON ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , FLOAT_CONST ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , IDENTIFIER ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , INT_CONST ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , OP_ADD ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , OP_AND ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , OP_DEC ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , OP_INC ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , OP_LNOT ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , OP_MUL ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , OP_NOT ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , OP_SUB ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , STR_LITERAL ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , break ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , case ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , char ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , const ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , continue ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , default ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , do ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , double ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , else ] = SHIFT 1728
M [ 1713 , enum ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , float ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , for ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , goto ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , if ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , int ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , long ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , return ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , short ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , signed ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , sizeof ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , struct ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , switch ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , typedef ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , unsigned ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , void ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1713 , while ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , CHAR_CONST ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , DELIM_LCURBRACE ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , DELIM_LPAR ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , DELIM_RCURBRACE ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , DELIM_SEMICOLON ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , FLOAT_CONST ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , IDENTIFIER ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , INT_CONST ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , OP_ADD ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , OP_AND ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , OP_DEC ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , OP_INC ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , OP_LNOT ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , OP_MUL ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , OP_NOT ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , OP_SUB ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , STR_LITERAL ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , break ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , case ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , char ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , const ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , continue ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , default ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , do ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , double ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , else ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , enum ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , float ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , for ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , goto ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , if ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , int ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , long ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , return ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , short ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , signed ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , sizeof ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , struct ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , switch ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , typedef ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , unsigned ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , void ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1714 , while ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , CHAR_CONST ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , DELIM_LCURBRACE ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , DELIM_LPAR ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , DELIM_RCURBRACE ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , DELIM_SEMICOLON ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , FLOAT_CONST ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , IDENTIFIER ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , INT_CONST ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , OP_ADD ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , OP_AND ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , OP_DEC ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , OP_INC ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , OP_LNOT ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , OP_MUL ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , OP_NOT ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , OP_SUB ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , STR_LITERAL ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , break ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , case ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , char ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , const ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , continue ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , default ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , do ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , double ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , else ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , enum ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , float ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , for ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , goto ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , if ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , int ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , long ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , return ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , short ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , signed ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , sizeof ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , struct ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , switch ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , typedef ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , unsigned ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , void ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1715 , while ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1716 , DELIM_LPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1716 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1716 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1716 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1716 , OP_ADD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1716 , OP_AND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1716 , OP_ARROW ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1716 , OP_DEC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1716 , OP_DIV ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1716 , OP_DOT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1716 , OP_EQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1716 , OP_GE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1716 , OP_GT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1716 , OP_INC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1716 , OP_LAND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1716 , OP_LE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1716 , OP_LOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1716 , OP_LT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1716 , OP_MOD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1716 , OP_MUL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1716 , OP_NEQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1716 , OP_OR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1716 , OP_SHL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1716 , OP_SHR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1716 , OP_SUB ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1716 , OP_XOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1717 , <additive-expr> ] = GOTO 412
M [ 1717 , <and-expr> ] = GOTO 413
M [ 1717 , <asn-expr> ] = GOTO 414
M [ 1717 , <cast-expr> ] = GOTO 415
M [ 1717 , <cond-expr> ] = GOTO 416
M [ 1717 , <constant> ] = GOTO 417
M [ 1717 , <designation> ] = GOTO 1135
M [ 1717 , <designator-list> ] = GOTO 419
M [ 1717 , <designator> ] = GOTO 420
M [ 1717 , <eq-expr> ] = GOTO 421
M [ 1717 , <exc-or-expr> ] = GOTO 422
M [ 1717 , <inc-or-expr> ] = GOTO 423
M [ 1717 , <initializer> ] = GOTO 1136
M [ 1717 , <land-expr> ] = GOTO 426
M [ 1717 , <lor-expr> ] = GOTO 427
M [ 1717 , <multiplicative-expr> ] = GOTO 428
M [ 1717 , <num-const> ] = GOTO 429
M [ 1717 , <postfix-expr> ] = GOTO 430
M [ 1717 , <prim-expr> ] = GOTO 431
M [ 1717 , <rel-expr> ] = GOTO 432
M [ 1717 , <shift-expr> ] = GOTO 433
M [ 1717 , <unary-expr> ] = GOTO 434
M [ 1717 , <unary-op> ] = GOTO 435
M [ 1717 , CHAR_CONST ] = SHIFT 436
M [ 1717 , DELIM_LCURBRACE ] = SHIFT 437
M [ 1717 , DELIM_LPAR ] = SHIFT 438
M [ 1717 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 1717 , DELIM_RCURBRACE ] = SHIFT 1729
M [ 1717 , FLOAT_CONST ] = SHIFT 440
M [ 1717 , IDENTIFIER ] = SHIFT 441
M [ 1717 , INT_CONST ] = SHIFT 442
M [ 1717 , OP_ADD ] = SHIFT 135
M [ 1717 , OP_AND ] = SHIFT 136
M [ 1717 , OP_DEC ] = SHIFT 443
M [ 1717 , OP_DOT ] = SHIFT 444
M [ 1717 , OP_INC ] = SHIFT 445
M [ 1717 , OP_LNOT ] = SHIFT 139
M [ 1717 , OP_MUL ] = SHIFT 140
M [ 1717 , OP_NOT ] = SHIFT 141
M [ 1717 , OP_SUB ] = SHIFT 142
M [ 1717 , STR_LITERAL ] = SHIFT 446
M [ 1717 , sizeof ] = SHIFT 447
M [ 1718 , DELIM_COLON ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1718 , DELIM_COMMA ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1718 , DELIM_LPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1718 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1718 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1718 , OP_ADD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1718 , OP_AND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1718 , OP_ARROW ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1718 , OP_DEC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1718 , OP_DIV ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1718 , OP_DOT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1718 , OP_EQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1718 , OP_GE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1718 , OP_GT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1718 , OP_INC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1718 , OP_LAND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1718 , OP_LE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1718 , OP_LOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1718 , OP_LT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1718 , OP_MOD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1718 , OP_MUL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1718 , OP_NEQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1718 , OP_OR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1718 , OP_SHL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1718 , OP_SHR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1718 , OP_SUB ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1718 , OP_XOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1719 , <additive-expr> ] = GOTO 412
M [ 1719 , <and-expr> ] = GOTO 413
M [ 1719 , <asn-expr> ] = GOTO 414
M [ 1719 , <cast-expr> ] = GOTO 415
M [ 1719 , <cond-expr> ] = GOTO 416
M [ 1719 , <constant> ] = GOTO 417
M [ 1719 , <designation> ] = GOTO 1135
M [ 1719 , <designator-list> ] = GOTO 419
M [ 1719 , <designator> ] = GOTO 420
M [ 1719 , <eq-expr> ] = GOTO 421
M [ 1719 , <exc-or-expr> ] = GOTO 422
M [ 1719 , <inc-or-expr> ] = GOTO 423
M [ 1719 , <initializer> ] = GOTO 1136
M [ 1719 , <land-expr> ] = GOTO 426
M [ 1719 , <lor-expr> ] = GOTO 427
M [ 1719 , <multiplicative-expr> ] = GOTO 428
M [ 1719 , <num-const> ] = GOTO 429
M [ 1719 , <postfix-expr> ] = GOTO 430
M [ 1719 , <prim-expr> ] = GOTO 431
M [ 1719 , <rel-expr> ] = GOTO 432
M [ 1719 , <shift-expr> ] = GOTO 433
M [ 1719 , <unary-expr> ] = GOTO 434
M [ 1719 , <unary-op> ] = GOTO 435
M [ 1719 , CHAR_CONST ] = SHIFT 436
M [ 1719 , DELIM_LCURBRACE ] = SHIFT 437
M [ 1719 , DELIM_LPAR ] = SHIFT 438
M [ 1719 , DELIM_LSQBRACKET ] = SHIFT 439
M [ 1719 , DELIM_RCURBRACE ] = SHIFT 1730
M [ 1719 , FLOAT_CONST ] = SHIFT 440
M [ 1719 , IDENTIFIER ] = SHIFT 441
M [ 1719 , INT_CONST ] = SHIFT 442
M [ 1719 , OP_ADD ] = SHIFT 135
M [ 1719 , OP_AND ] = SHIFT 136
M [ 1719 , OP_DEC ] = SHIFT 443
M [ 1719 , OP_DOT ] = SHIFT 444
M [ 1719 , OP_INC ] = SHIFT 445
M [ 1719 , OP_LNOT ] = SHIFT 139
M [ 1719 , OP_MUL ] = SHIFT 140
M [ 1719 , OP_NOT ] = SHIFT 141
M [ 1719 , OP_SUB ] = SHIFT 142
M [ 1719 , STR_LITERAL ] = SHIFT 446
M [ 1719 , sizeof ] = SHIFT 447
M [ 1720 , DELIM_COMMA ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1720 , DELIM_LPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1720 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1720 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1720 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1720 , OP_ADD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1720 , OP_AND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1720 , OP_ARROW ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1720 , OP_DEC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1720 , OP_DIV ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1720 , OP_DOT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1720 , OP_EQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1720 , OP_GE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1720 , OP_GT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1720 , OP_INC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1720 , OP_LAND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1720 , OP_LE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1720 , OP_LOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1720 , OP_LT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1720 , OP_MOD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1720 , OP_MUL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1720 , OP_NEQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1720 , OP_OR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1720 , OP_SHL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1720 , OP_SHR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1720 , OP_SUB ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1720 , OP_XOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_RCURBRACE 
M [ 1721 , DELIM_COMMA ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1721 , DELIM_LPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1721 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1721 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1721 , DELIM_RPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1721 , OP_ADD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1721 , OP_AND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1721 , OP_ARROW ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1721 , OP_DEC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1721 , OP_DIV ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1721 , OP_DOT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1721 , OP_EQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1721 , OP_GE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1721 , OP_GT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1721 , OP_INC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1721 , OP_LAND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1721 , OP_LE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1721 , OP_LOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1721 , OP_LT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1721 , OP_MOD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1721 , OP_MUL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1721 , OP_NEQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1721 , OP_OR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1721 , OP_SHL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1721 , OP_SHR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1721 , OP_SUB ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1721 , OP_XOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1722 , DELIM_COMMA ] = SHIFT 661
M [ 1722 , DELIM_RPAR ] = SHIFT 1731
M [ 1723 , else ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1723 , while ] = REDUCE <iter-stmt> -> for DELIM_LPAR <for-cond> DELIM_RPAR <stmt> 
M [ 1724 , else ] = SHIFT 1732
M [ 1724 , while ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1725 , else ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1725 , while ] = REDUCE <sele-stmt> -> switch DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1726 , else ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1726 , while ] = REDUCE <iter-stmt> -> while DELIM_LPAR <expr> DELIM_RPAR <stmt> 
M [ 1727 , DELIM_SEMICOLON ] = SHIFT 1733
M [ 1728 , <additive-expr> ] = GOTO 96
M [ 1728 , <and-expr> ] = GOTO 97
M [ 1728 , <asn-expr> ] = GOTO 98
M [ 1728 , <cast-expr> ] = GOTO 101
M [ 1728 , <comp-stmt> ] = GOTO 1388
M [ 1728 , <cond-expr> ] = GOTO 103
M [ 1728 , <constant> ] = GOTO 104
M [ 1728 , <eq-expr> ] = GOTO 107
M [ 1728 , <exc-or-expr> ] = GOTO 108
M [ 1728 , <expr-stmt> ] = GOTO 1389
M [ 1728 , <expr> ] = GOTO 1390
M [ 1728 , <inc-or-expr> ] = GOTO 111
M [ 1728 , <iter-stmt> ] = GOTO 1391
M [ 1728 , <jump-stmt> ] = GOTO 1392
M [ 1728 , <labeled-stmt> ] = GOTO 1393
M [ 1728 , <land-expr> ] = GOTO 115
M [ 1728 , <lor-expr> ] = GOTO 116
M [ 1728 , <multiplicative-expr> ] = GOTO 117
M [ 1728 , <num-const> ] = GOTO 118
M [ 1728 , <postfix-expr> ] = GOTO 119
M [ 1728 , <prim-expr> ] = GOTO 120
M [ 1728 , <rel-expr> ] = GOTO 121
M [ 1728 , <sele-stmt> ] = GOTO 1394
M [ 1728 , <shift-expr> ] = GOTO 123
M [ 1728 , <stmt> ] = GOTO 1734
M [ 1728 , <unary-expr> ] = GOTO 125
M [ 1728 , <unary-op> ] = GOTO 126
M [ 1728 , CHAR_CONST ] = SHIFT 127
M [ 1728 , DELIM_LCURBRACE ] = SHIFT 1396
M [ 1728 , DELIM_LPAR ] = SHIFT 129
M [ 1728 , DELIM_SEMICOLON ] = SHIFT 1397
M [ 1728 , FLOAT_CONST ] = SHIFT 132
M [ 1728 , IDENTIFIER ] = SHIFT 1398
M [ 1728 , INT_CONST ] = SHIFT 134
M [ 1728 , OP_ADD ] = SHIFT 135
M [ 1728 , OP_AND ] = SHIFT 136
M [ 1728 , OP_DEC ] = SHIFT 137
M [ 1728 , OP_INC ] = SHIFT 138
M [ 1728 , OP_LNOT ] = SHIFT 139
M [ 1728 , OP_MUL ] = SHIFT 140
M [ 1728 , OP_NOT ] = SHIFT 141
M [ 1728 , OP_SUB ] = SHIFT 142
M [ 1728 , STR_LITERAL ] = SHIFT 143
M [ 1728 , break ] = SHIFT 1399
M [ 1728 , case ] = SHIFT 1400
M [ 1728 , continue ] = SHIFT 1401
M [ 1728 , default ] = SHIFT 1402
M [ 1728 , do ] = SHIFT 1403
M [ 1728 , for ] = SHIFT 1404
M [ 1728 , goto ] = SHIFT 1405
M [ 1728 , if ] = SHIFT 1406
M [ 1728 , return ] = SHIFT 1407
M [ 1728 , sizeof ] = SHIFT 153
M [ 1728 , switch ] = SHIFT 1408
M [ 1728 , while ] = SHIFT 1409
M [ 1729 , DELIM_COLON ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1729 , DELIM_COMMA ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1729 , DELIM_LPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1729 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1729 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1729 , OP_ADD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1729 , OP_AND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1729 , OP_ARROW ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1729 , OP_DEC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1729 , OP_DIV ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1729 , OP_DOT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1729 , OP_EQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1729 , OP_GE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1729 , OP_GT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1729 , OP_INC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1729 , OP_LAND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1729 , OP_LE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1729 , OP_LOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1729 , OP_LT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1729 , OP_MOD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1729 , OP_MUL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1729 , OP_NEQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1729 , OP_OR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1729 , OP_SHL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1729 , OP_SHR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1729 , OP_SUB ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1729 , OP_XOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1730 , DELIM_COMMA ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1730 , DELIM_LPAR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1730 , DELIM_LSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1730 , DELIM_QUESTION ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1730 , DELIM_RSQBRACKET ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1730 , OP_ADD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1730 , OP_AND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1730 , OP_ARROW ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1730 , OP_DEC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1730 , OP_DIV ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1730 , OP_DOT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1730 , OP_EQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1730 , OP_GE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1730 , OP_GT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1730 , OP_INC ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1730 , OP_LAND ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1730 , OP_LE ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1730 , OP_LOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1730 , OP_LT ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1730 , OP_MOD ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1730 , OP_MUL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1730 , OP_NEQ ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1730 , OP_OR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1730 , OP_SHL ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1730 , OP_SHR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1730 , OP_SUB ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1730 , OP_XOR ] = REDUCE <postfix-expr> -> DELIM_LPAR <type-name> DELIM_RPAR DELIM_LCURBRACE <initializer-list> DELIM_COMMA DELIM_RCURBRACE 
M [ 1731 , DELIM_SEMICOLON ] = SHIFT 1735
M [ 1732 , <additive-expr> ] = GOTO 96
M [ 1732 , <and-expr> ] = GOTO 97
M [ 1732 , <asn-expr> ] = GOTO 98
M [ 1732 , <cast-expr> ] = GOTO 101
M [ 1732 , <comp-stmt> ] = GOTO 1526
M [ 1732 , <cond-expr> ] = GOTO 103
M [ 1732 , <constant> ] = GOTO 104
M [ 1732 , <eq-expr> ] = GOTO 107
M [ 1732 , <exc-or-expr> ] = GOTO 108
M [ 1732 , <expr-stmt> ] = GOTO 1527
M [ 1732 , <expr> ] = GOTO 1528
M [ 1732 , <inc-or-expr> ] = GOTO 111
M [ 1732 , <iter-stmt> ] = GOTO 1529
M [ 1732 , <jump-stmt> ] = GOTO 1530
M [ 1732 , <labeled-stmt> ] = GOTO 1531
M [ 1732 , <land-expr> ] = GOTO 115
M [ 1732 , <lor-expr> ] = GOTO 116
M [ 1732 , <multiplicative-expr> ] = GOTO 117
M [ 1732 , <num-const> ] = GOTO 118
M [ 1732 , <postfix-expr> ] = GOTO 119
M [ 1732 , <prim-expr> ] = GOTO 120
M [ 1732 , <rel-expr> ] = GOTO 121
M [ 1732 , <sele-stmt> ] = GOTO 1532
M [ 1732 , <shift-expr> ] = GOTO 123
M [ 1732 , <stmt> ] = GOTO 1736
M [ 1732 , <unary-expr> ] = GOTO 125
M [ 1732 , <unary-op> ] = GOTO 126
M [ 1732 , CHAR_CONST ] = SHIFT 127
M [ 1732 , DELIM_LCURBRACE ] = SHIFT 1534
M [ 1732 , DELIM_LPAR ] = SHIFT 129
M [ 1732 , DELIM_SEMICOLON ] = SHIFT 1535
M [ 1732 , FLOAT_CONST ] = SHIFT 132
M [ 1732 , IDENTIFIER ] = SHIFT 1536
M [ 1732 , INT_CONST ] = SHIFT 134
M [ 1732 , OP_ADD ] = SHIFT 135
M [ 1732 , OP_AND ] = SHIFT 136
M [ 1732 , OP_DEC ] = SHIFT 137
M [ 1732 , OP_INC ] = SHIFT 138
M [ 1732 , OP_LNOT ] = SHIFT 139
M [ 1732 , OP_MUL ] = SHIFT 140
M [ 1732 , OP_NOT ] = SHIFT 141
M [ 1732 , OP_SUB ] = SHIFT 142
M [ 1732 , STR_LITERAL ] = SHIFT 143
M [ 1732 , break ] = SHIFT 1537
M [ 1732 , case ] = SHIFT 1538
M [ 1732 , continue ] = SHIFT 1539
M [ 1732 , default ] = SHIFT 1540
M [ 1732 , do ] = SHIFT 1541
M [ 1732 , for ] = SHIFT 1542
M [ 1732 , goto ] = SHIFT 1543
M [ 1732 , if ] = SHIFT 1544
M [ 1732 , return ] = SHIFT 1545
M [ 1732 , sizeof ] = SHIFT 153
M [ 1732 , switch ] = SHIFT 1546
M [ 1732 , while ] = SHIFT 1547
M [ 1733 , CHAR_CONST ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , DELIM_LCURBRACE ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , DELIM_LPAR ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , DELIM_RCURBRACE ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , DELIM_SEMICOLON ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , FLOAT_CONST ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , IDENTIFIER ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , INT_CONST ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , OP_ADD ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , OP_AND ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , OP_DEC ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , OP_INC ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , OP_LNOT ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , OP_MUL ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , OP_NOT ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , OP_SUB ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , STR_LITERAL ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , break ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , case ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , char ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , const ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , continue ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , default ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , do ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , double ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , else ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , enum ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , float ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , for ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , goto ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , if ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , int ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , long ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , return ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , short ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , signed ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , sizeof ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , struct ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , switch ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , typedef ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , unsigned ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , void ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1733 , while ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1734 , CHAR_CONST ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , DELIM_LCURBRACE ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , DELIM_LPAR ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , DELIM_RCURBRACE ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , DELIM_SEMICOLON ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , FLOAT_CONST ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , IDENTIFIER ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , INT_CONST ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , OP_ADD ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , OP_AND ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , OP_DEC ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , OP_INC ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , OP_LNOT ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , OP_MUL ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , OP_NOT ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , OP_SUB ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , STR_LITERAL ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , break ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , case ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , char ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , const ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , continue ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , default ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , do ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , double ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , else ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , enum ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , float ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , for ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , goto ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , if ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , int ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , long ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , return ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , short ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , signed ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , sizeof ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , struct ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , switch ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , typedef ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , unsigned ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , void ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1734 , while ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1735 , else ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1735 , while ] = REDUCE <iter-stmt> -> do <stmt> while DELIM_LPAR <expr> DELIM_RPAR DELIM_SEMICOLON 
M [ 1736 , else ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
M [ 1736 , while ] = REDUCE <sele-stmt> -> if DELIM_LPAR <expr> DELIM_RPAR <stmt> else <stmt> 
